(self["webpackChunkKlineCoreUI"] = self["webpackChunkKlineCoreUI"] || []).push([["main"],{

/***/ 21003:
/*!*****************************!*\
  !*** ./src/app/Constant.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Constants": () => (/* binding */ Constants)
/* harmony export */ });
var _a;
class Constants {
}
_a = Constants;
Constants.environment = '-uat'; // dev -> -dev, uat -> -uat, prod -> ''
Constants.serverEndpoint = `https://klinecorewebapi${_a.environment}.azurewebsites.net`;
// Localhost
//public static serverEndpoint: string = "https://localhost:5001";
// UAT -> https://klinecorewebapi-uat.azurewebsites.net
// DEV -> https://klinecorewebapi-dev.azurewebsites.net
// PROD -> https://klinecorewebapi.azurewebsites.net
Constants.apiEndpoint = `${_a.serverEndpoint}/api`;
// store user data in the local storage
Constants.userDataKey = '7d70cb2c-bf6a-42dd-9c0b-b0d78df47391';
Constants.userDetailKey = '8a6f42b7-0162-41e3-b353-fa1c6e1f2167';
Constants.MSAL_CLIENT_ID = '26ce7496-7c7e-4f8d-adef-e99f6a80a6c4';


/***/ }),

/***/ 54000:
/*!*******************************!*\
  !*** ./src/app/animations.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SlideInOutAnimation": () => (/* binding */ SlideInOutAnimation)
/* harmony export */ });
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ 31631);

const SlideInOutAnimation = [
    (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.trigger)('slideInOut', [
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.state)('in', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
            'opacity': '1', 'visibility': 'visible'
        })),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.state)('out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
            'opacity': '0', 'visibility': 'hidden'
        })),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.transition)('in => out', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.group)([
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('200ms ease-in-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    'opacity': '0'
                })),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('500ms ease-in-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    'visibility': 'hidden'
                }))
            ])]),
        (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.transition)('out => in', [(0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.group)([
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('1ms ease-in-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    'visibility': 'visible'
                })),
                (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.animate)('200ms ease-in-out', (0,_angular_animations__WEBPACK_IMPORTED_MODULE_0__.style)({
                    'opacity': '1'
                }))
            ])])
    ]),
];


/***/ }),

/***/ 90158:
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppRoutingModule": () => (/* binding */ AppRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/guard/auth.guard */ 9324);
/* harmony import */ var _data_grids_configuration_data_grids_configuration_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data-grids-configuration/data-grids-configuration.component */ 10215);
/* harmony import */ var _initial_setup_initial_setup_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./initial-setup/initial-setup.component */ 55634);
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./login/login.component */ 98458);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);







const routes = [
    {
        path: 'initial-setup',
        component: _initial_setup_initial_setup_component__WEBPACK_IMPORTED_MODULE_2__.InitialSetupComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
        data: {
            role: 'MANAGER',
        },
    },
    {
        path: 'app-data-grids-configuration',
        component: _data_grids_configuration_data_grids_configuration_component__WEBPACK_IMPORTED_MODULE_1__.DataGridsConfigurationComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
        data: {
            role: 'MANAGER',
        },
    },
    // {
    //   path: 'study-summary',
    //   component: StudyAreaSummaryComponent,
    //   canActivate: [AuthGuard],
    // },
    {
        path: 'login',
        component: _login_login_component__WEBPACK_IMPORTED_MODULE_3__.LoginComponent,
    },
    {
        path: '',
        redirectTo: 'study-summary',
        pathMatch: 'full',
    },
];
class AppRoutingModule {
}
AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) { return new (t || AppRoutingModule)(); };
AppRoutingModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({ type: AppRoutingModule });
AppRoutingModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterModule.forRoot(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](AppRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterModule], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_5__.RouterModule] }); })();


/***/ }),

/***/ 55041:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppComponent": () => (/* binding */ AppComponent)
/* harmony export */ });
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _azure_msal_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-angular */ 14084);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/user.service */ 72996);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);











function AppComponent_div_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "img", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](4, "img", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
  }
}

class AppComponent {
  constructor(authService, localStorageService, route, userService, isLoadingService) {
    this.authService = authService;
    this.localStorageService = localStorageService;
    this.route = route;
    this.userService = userService;
    this.isLoadingService = isLoadingService;
    this.title = 'KlineCoreUI'; // this.isLoading = this.isLoadingService.isLoading$();
  }

  ngOnInit() {
    setTimeout(() => {
      this.isLoading = this.isLoadingService.isLoading$();
    }, 0);
    const currentUser = this.localStorageService.getData(_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDataKey);
    const currentUserData = this.localStorageService.getData(_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey);

    if (typeof currentUser.idToken === 'undefined' || typeof currentUserData.EmailAddress === 'undefined') {
      this.authService.instance.handleRedirectPromise().then(res => {
        if (res != null && res.account != null) {
          this.authService.instance.setActiveAccount(res.account); // console.log(res);

          this.localStorageService.setData({
            userName: res.account.username,
            token: res.accessToken,
            idToken: res.idToken
          }, _Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDataKey);
          this.getUserDetail(res.account.username);
        } else {
          this.route.navigate(['login']);
        }
      });
    }
  }

  isLoggedIn() {
    return this.authService.instance.getActiveAccount() != null;
  }

  login() {
    this.authService.loginRedirect();
  }

  logout() {
    this.authService.logout();
  }

  getUserDetail(emailAddress) {
    this.userService.getUserDetail(emailAddress).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__.UserDetail().deserialize(res.Data);
        this.localStorageService.setData(userDetail, _Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey);
        this.route.navigate(['study-summary']);
      }
    }, err => {
      console.log(err);
    });
  }

}

AppComponent.ɵfac = function AppComponent_Factory(t) {
  return new (t || AppComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_azure_msal_angular__WEBPACK_IMPORTED_MODULE_5__.MsalService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_2__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_user_service__WEBPACK_IMPORTED_MODULE_3__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_7__.IsLoadingService));
};

AppComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: AppComponent,
  selectors: [["app-root"]],
  decls: 4,
  vars: 3,
  consts: [["class", "d-flex justify-content-center align-items-center isload", 4, "ngIf"], [1, "d-flex", "justify-content-center", "align-items-center", "isload"], [1, "centerKlinePreloader"], [1, "spinner-container"], ["id", "logoOut", "src", "../../images/KlineLogoOut.png"], ["id", "logoIn", "src", "../../images/KlineLogoIn.png"]],
  template: function AppComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, AppComponent_div_0_Template, 5, 0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](1, "async");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](2, "router-outlet");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "ff-alerts");
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind1"](1, 1, ctx.isLoading));
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _angular_router__WEBPACK_IMPORTED_MODULE_6__.RouterOutlet, _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_9__.AlertComponent],
  pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.AsyncPipe],
  styles: ["#logoOut[_ngcontent-%COMP%] {\r\n  position: absolute;\r\n  animation: spin 6s linear infinite;\r\n}\r\n\r\n#logoIn[_ngcontent-%COMP%] {\r\n  position: absolute;\r\n}\r\n\r\n@keyframes spin {\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.centerKlinePreloader[_ngcontent-%COMP%] {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.7);\r\n  z-index: 99999;\r\n}\r\n\r\n.centerKlinePreloader[_ngcontent-%COMP%]   .spinner-container[_ngcontent-%COMP%] {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;  \r\n  transform: translate(-50%, -50%); \r\n  width: 150px;\r\n  height: 150px;\r\n}\r\n\r\n.preloaderText[_ngcontent-%COMP%] {\r\n  width: 300px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  margin: 95px 0 0 -150px;\r\n  z-index: 99999;\r\n}\r\n\r\n\r\n\r\n.lineLoader[_ngcontent-%COMP%] {\r\n  height: 4px;\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n  background-color: #ddd;\r\n}\r\n\r\n.lineLoader[_ngcontent-%COMP%]:before {\r\n  display: block;\r\n  position: absolute;\r\n  content: \"\";\r\n  left: -200px;\r\n  width: 200px;\r\n  height: 4px;\r\n  background-color: #2980b9;\r\n  animation: loading 2s linear infinite;\r\n}\r\n\r\n@keyframes loading {\r\n  from {\r\n    left: -200px;\r\n    width: 30%;\r\n  }\r\n\r\n  50% {\r\n    width: 30%;\r\n  }\r\n\r\n  70% {\r\n    width: 70%;\r\n  }\r\n\r\n  80% {\r\n    left: 50%;\r\n  }\r\n\r\n  95% {\r\n    left: 120%;\r\n  }\r\n\r\n  to {\r\n    left: 100%;\r\n  }\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGVBQWU7O0FBRWY7RUFDRSxrQkFBa0I7RUFHbEIsa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQWNBO0VBQ0U7SUFFRSx5QkFBeUI7RUFDM0I7QUFDRjs7QUFFQTtFQUNFLGVBQWU7RUFDZixNQUFNO0VBQ04sT0FBTztFQUNQLFdBQVc7RUFDWCxZQUFZO0VBQ1osb0NBQW9DO0VBQ3BDLGNBQWM7QUFDaEI7O0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVMsRUFDNkIsU0FBUyxFQUNMLFdBQVc7RUFDckQsZ0NBQWdDLEVBQUUsb0JBQW9CO0VBQ3RELFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLFFBQVE7RUFDUixTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZix1QkFBdUI7RUFDdkIsY0FBYztBQUNoQjs7QUFDQSxpQkFBaUI7O0FBQ2pCO0VBQ0UsV0FBVztFQUNYLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixZQUFZO0VBQ1osV0FBVztFQUNYLHlCQUF5QjtFQUN6QixxQ0FBcUM7QUFDdkM7O0FBNkJBO0VBQ0U7SUFDRSxZQUFZO0lBQ1osVUFBVTtFQUNaOztFQUVBO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0UsU0FBUztFQUNYOztFQUVBO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0UsVUFBVTtFQUNaO0FBQ0YiLCJmaWxlIjoiYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKnJvdGF0ZWQgbG9nbyovXHJcblxyXG4jbG9nb091dCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIC13ZWJraXQtYW5pbWF0aW9uOiBzcGluIDZzIGxpbmVhciBpbmZpbml0ZTtcclxuICAtbW96LWFuaW1hdGlvbjogc3BpbiA2cyBsaW5lYXIgaW5maW5pdGU7XHJcbiAgYW5pbWF0aW9uOiBzcGluIDZzIGxpbmVhciBpbmZpbml0ZTtcclxufVxyXG5cclxuI2xvZ29JbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG59XHJcblxyXG5ALW1vei1rZXlmcmFtZXMgc3BpbiB7XHJcbiAgMTAwJSB7XHJcbiAgICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgfVxyXG59XHJcblxyXG5ALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XHJcbiAgMTAwJSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHNwaW4ge1xyXG4gIDEwMCUge1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcclxuICB9XHJcbn1cclxuXHJcbi5jZW50ZXJLbGluZVByZWxvYWRlciB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XHJcbiAgei1pbmRleDogOTk5OTk7XHJcbn1cclxuLmNlbnRlcktsaW5lUHJlbG9hZGVyIC5zcGlubmVyLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IC8qIElFIDkgKi9cclxuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyAvKiBTYWZhcmkgKi9cclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgLyogU3RhbmRhcmQgc3ludGF4ICovXHJcbiAgd2lkdGg6IDE1MHB4O1xyXG4gIGhlaWdodDogMTUwcHg7XHJcbn1cclxuXHJcbi5wcmVsb2FkZXJUZXh0IHtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIG1hcmdpbjogOTVweCAwIDAgLTE1MHB4O1xyXG4gIHotaW5kZXg6IDk5OTk5O1xyXG59XHJcbi8qbGluZSBwcmVsb2FkZXIqL1xyXG4ubGluZUxvYWRlciB7XHJcbiAgaGVpZ2h0OiA0cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDtcclxufVxyXG5cclxuLmxpbmVMb2FkZXI6YmVmb3JlIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBsZWZ0OiAtMjAwcHg7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGhlaWdodDogNHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyOTgwYjk7XHJcbiAgYW5pbWF0aW9uOiBsb2FkaW5nIDJzIGxpbmVhciBpbmZpbml0ZTtcclxufVxyXG5cclxuQC13ZWJraXQta2V5ZnJhbWVzIGxvYWRpbmcge1xyXG4gIGZyb20ge1xyXG4gICAgbGVmdDogLTIwMHB4O1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICB9XHJcblxyXG4gIDUwJSB7XHJcbiAgICB3aWR0aDogMzAlO1xyXG4gIH1cclxuXHJcbiAgNzAlIHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgfVxyXG5cclxuICA4MCUge1xyXG4gICAgbGVmdDogNTAlO1xyXG4gIH1cclxuXHJcbiAgOTUlIHtcclxuICAgIGxlZnQ6IDEyMCU7XHJcbiAgfVxyXG5cclxuICB0byB7XHJcbiAgICBsZWZ0OiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuQGtleWZyYW1lcyBsb2FkaW5nIHtcclxuICBmcm9tIHtcclxuICAgIGxlZnQ6IC0yMDBweDtcclxuICAgIHdpZHRoOiAzMCU7XHJcbiAgfVxyXG5cclxuICA1MCUge1xyXG4gICAgd2lkdGg6IDMwJTtcclxuICB9XHJcblxyXG4gIDcwJSB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgODAlIHtcclxuICAgIGxlZnQ6IDUwJTtcclxuICB9XHJcblxyXG4gIDk1JSB7XHJcbiAgICBsZWZ0OiAxMjAlO1xyXG4gIH1cclxuXHJcbiAgdG8ge1xyXG4gICAgbGVmdDogMTAwJTtcclxuICB9XHJcbn1cclxuIl19 */"]
});

/***/ }),

/***/ 36747:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppModule": () => (/* binding */ AppModule),
/* harmony export */   "MSALInstanceFactory": () => (/* binding */ MSALInstanceFactory)
/* harmony export */ });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/platform-browser */ 50318);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app-routing.module */ 90158);
/* harmony import */ var _azure_msal_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @azure/msal-angular */ 14084);
/* harmony import */ var _azure_msal_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-browser */ 19790);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.component */ 55041);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 97544);
/* harmony import */ var _initial_setup_initial_setup_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./initial-setup/initial-setup.component */ 55634);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/platform-browser/animations */ 73598);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ngx-bootstrap/modal */ 84712);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var _pages_pages_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/pages.module */ 18950);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shared/shared.module */ 44466);
/* harmony import */ var src_guard_jwt_interceptor__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/guard/jwt.interceptor */ 16082);
/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Constant */ 21003);
/* harmony import */ var src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/guard/auth.guard */ 9324);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var src_guard_error_interceptor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/guard/error.interceptor */ 49516);
/* harmony import */ var _login_login_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./login/login.component */ 98458);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);


























function MSALInstanceFactory() {
    return new _azure_msal_browser__WEBPACK_IMPORTED_MODULE_11__.PublicClientApplication({
        auth: {
            // clientId: '26ce7496-7c7e-4f8d-adef-e99f6a80a6c4',
            clientId: _Constant__WEBPACK_IMPORTED_MODULE_7__.Constants.MSAL_CLIENT_ID,
            redirectUri: window.location.origin,
        },
    });
}
class AppModule {
}
AppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };
AppModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineNgModule"]({ type: AppModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_1__.AppComponent] });
AppModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjector"]({ providers: [
        {
            provide: _azure_msal_angular__WEBPACK_IMPORTED_MODULE_13__.MSAL_INSTANCE,
            useFactory: MSALInstanceFactory,
        },
        _azure_msal_angular__WEBPACK_IMPORTED_MODULE_13__.MsalService,
        src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_8__.AuthGuard,
        src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_3__.LocalStorageService,
        { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_14__.HTTP_INTERCEPTORS, useClass: src_guard_jwt_interceptor__WEBPACK_IMPORTED_MODULE_6__.JwtInterceptor, multi: true },
        { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_14__.HTTP_INTERCEPTORS, useClass: src_guard_error_interceptor__WEBPACK_IMPORTED_MODULE_9__.ErrorInterceptor, multi: true },
        { provide: _angular_common__WEBPACK_IMPORTED_MODULE_15__.LocationStrategy, useClass: _angular_common__WEBPACK_IMPORTED_MODULE_15__.HashLocationStrategy },
    ], imports: [[
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.BrowserModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_17__.ReactiveFormsModule,
            _pages_pages_module__WEBPACK_IMPORTED_MODULE_4__.PagesModule,
            _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__.NgbModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_14__.HttpClientModule,
            _azure_msal_angular__WEBPACK_IMPORTED_MODULE_13__.MsalModule,
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_19__.BrowserAnimationsModule,
            ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_20__.ModalModule.forRoot(),
            _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__.NgSelectModule,
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_5__.SharedModule,
            _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__.AlertModule.forRoot({
                maxMessages: 1,
                timeout: 5000,
                positionX: 'right',
                positionY: 'top',
            }),
            devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxDataGridModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵsetNgModuleScope"](AppModule, { declarations: [_app_component__WEBPACK_IMPORTED_MODULE_1__.AppComponent, _initial_setup_initial_setup_component__WEBPACK_IMPORTED_MODULE_2__.InitialSetupComponent, _login_login_component__WEBPACK_IMPORTED_MODULE_10__.LoginComponent], imports: [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.BrowserModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_17__.ReactiveFormsModule,
        _pages_pages_module__WEBPACK_IMPORTED_MODULE_4__.PagesModule,
        _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_18__.NgbModule,
        _angular_common_http__WEBPACK_IMPORTED_MODULE_14__.HttpClientModule,
        _azure_msal_angular__WEBPACK_IMPORTED_MODULE_13__.MsalModule,
        _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_19__.BrowserAnimationsModule, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_20__.ModalModule, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__.NgSelectModule,
        _shared_shared_module__WEBPACK_IMPORTED_MODULE_5__.SharedModule, _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__.AlertModule, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxDataGridModule] }); })();


/***/ }),

/***/ 10215:
/*!********************************************************************************!*\
  !*** ./src/app/data-grids-configuration/data-grids-configuration.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataGridsConfigurationComponent": () => (/* binding */ DataGridsConfigurationComponent)
/* harmony export */ });
/* harmony import */ var _extensions_common_extension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../extensions/common.extension */ 9936);
/* harmony import */ var _model_dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../model/dataGridConfiguration.model */ 48168);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _services_settings_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/settings.service */ 64796);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _shared_header_header_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../shared/header/header.component */ 89470);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 72766);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! devextreme-angular */ 57487);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);









function DataGridsConfigurationComponent_div_5_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", ctx_r3.parsingJsonSettingsErrorMessage, " ");
} }
function DataGridsConfigurationComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "h3", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](4, "dx-button", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClick", function DataGridsConfigurationComponent_div_5_Template_dx_button_onClick_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r4.saveDataGridSettings(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](5, DataGridsConfigurationComponent_div_5_div_5_Template, 2, 1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "dx-text-area", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("valueChange", function DataGridsConfigurationComponent_div_5_Template_dx_text_area_valueChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r6.currentlyLoadedSettingsJson = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](ctx_r1.selectedDataItemCategory.text);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx_r1.parsingJsonSettingsErrorMessage);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("autoResizeEnabled", true)("minHeight", 100)("value", ctx_r1.currentlyLoadedSettingsJson);
} }
function DataGridsConfigurationComponent_div_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](3, " Please select category ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
class DataGridsConfigurationComponent {
    constructor(settingsService, alertService, isLoadingService) {
        this.settingsService = settingsService;
        this.alertService = alertService;
        this.isLoadingService = isLoadingService;
        this.parsingJsonSettingsErrorMessage = "";
        this.currentlyLoadedSettingsJson = "";
    }
    ngOnInit() {
        this.getStudyDatasetAndCategories();
    }
    getStudyDatasetAndCategories() {
        this.isLoadingService.add();
        this.settingsService.getStudyDatasetAndCategories().subscribe((data) => {
            if ((data === null || data === void 0 ? void 0 : data.HttpStatusCode) === 200) {
                this.createStudyDatasetAndCategoriesTreeSource(data.Data);
                this.isLoadingService.remove();
            }
        });
    }
    createStudyDatasetAndCategoriesTreeSource(studyDatasetAndCategories) {
        let id = 1;
        let studyDatasetAndCategoriesTree = [];
        for (let category of studyDatasetAndCategories) {
            let dataset = studyDatasetAndCategoriesTree.find(f => f.dataSetId === category.DataSetId);
            if (dataset) {
                dataset.items.push({
                    id: id++,
                    dataItemCategoryId: category.DataItemCategoryId,
                    text: category.DataItemCategoryName,
                    isRoot: false
                });
            }
            else {
                studyDatasetAndCategoriesTree.push({
                    id: id++,
                    dataSetId: category.DataSetId,
                    text: category.DataSetName,
                    isRoot: true,
                    items: [
                        {
                            id: id++,
                            dataItemCategoryId: category.DataItemCategoryId,
                            text: category.DataItemCategoryName,
                            isRoot: false
                        }
                    ]
                });
            }
        }
        console.log(studyDatasetAndCategoriesTree);
        this.studyDatasetAndCategoriesTree = studyDatasetAndCategoriesTree;
    }
    onCategoryClick(e) {
        if (e.itemData.isRoot === false) {
            this.selectedDataItemCategory = e.itemData;
            this.getDataGridSettings(e.itemData.dataItemCategoryId);
        }
    }
    getDataGridSettings(dataItemCategoryId) {
        this.isLoadingService.add();
        this.settingsService.getDataGridSettings(dataItemCategoryId).subscribe((data) => {
            var _a;
            if ((data === null || data === void 0 ? void 0 : data.HttpStatusCode) === 200) {
                try {
                    console.log(data.Data);
                    const settingsObj = _extensions_common_extension__WEBPACK_IMPORTED_MODULE_0__.Common.realMerge(new _model_dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_1__.DataGridConfiguration(), JSON.parse(((_a = data.Data[0]) === null || _a === void 0 ? void 0 : _a.DataJson) || "{}"));
                    this.currentlyLoadedSettingsObj = settingsObj;
                    this.currentlyLoadedSettingsJson = JSON.stringify(settingsObj, null, 2);
                }
                catch (e) {
                    this.parsingJsonSettingsErrorMessage = e;
                }
                finally {
                    this.isLoadingService.remove();
                }
            }
            else {
                this.alertService.danger(data === null || data === void 0 ? void 0 : data.Data);
                this.isLoadingService.remove();
            }
        });
    }
    saveDataGridSettings() {
        this.parsingJsonSettingsErrorMessage = "";
        let settingsJson = this.currentlyLoadedSettingsJson;
        try {
            //try to parse and check if JSON is valid and stringify it to make it minimized
            const parsedJson = JSON.parse(settingsJson);
            settingsJson = JSON.stringify(parsedJson);
        }
        catch (e) {
            console.log(e);
            this.parsingJsonSettingsErrorMessage = e;
        }
        if (this.parsingJsonSettingsErrorMessage.length === 0) {
            this.isLoadingService.add();
            this.settingsService.saveDataGridSettings(this.selectedDataItemCategory.dataItemCategoryId, settingsJson).subscribe((data) => {
                if ((data === null || data === void 0 ? void 0 : data.HttpStatusCode) === 200) {
                    this.alertService.success(data === null || data === void 0 ? void 0 : data.Data);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(data === null || data === void 0 ? void 0 : data.Data);
                    this.isLoadingService.remove();
                }
            });
        }
    }
}
DataGridsConfigurationComponent.ɵfac = function DataGridsConfigurationComponent_Factory(t) { return new (t || DataGridsConfigurationComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_services_settings_service__WEBPACK_IMPORTED_MODULE_2__.SettingsService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_5__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_6__.IsLoadingService)); };
DataGridsConfigurationComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: DataGridsConfigurationComponent, selectors: [["app-data-grids-configuration"]], decls: 7, vars: 5, consts: [[1, "row"], [1, "col"], ["expandEvent", "click", "selectionMode", "single", "searchMode", "contains", 3, "items", "selectByClick", "searchEnabled", "onItemClick"], ["treeview", ""], ["class", "row", 4, "ngIf"], [1, "marginHeader"], ["stylingMode", "contained", "text", "Save settings JSON", "type", "normal", 1, "marginBtn", 3, "onClick"], ["class", "alert alert-danger", "role", "alert", 4, "ngIf"], [1, "marginTextbox", 3, "autoResizeEnabled", "minHeight", "value", "valueChange"], ["role", "alert", 1, "alert", "alert-danger"], [1, "marginTextbox"]], template: function DataGridsConfigurationComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "app-header");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "dx-tree-view", 2, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onItemClick", function DataGridsConfigurationComponent_Template_dx_tree_view_onItemClick_3_listener($event) { return ctx.onCategoryClick($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](5, DataGridsConfigurationComponent_div_5_Template, 7, 5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](6, DataGridsConfigurationComponent_div_6_Template, 4, 0, "div", 4);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("items", ctx.studyDatasetAndCategoriesTree)("selectByClick", true)("searchEnabled", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.currentlyLoadedSettingsJson);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx.currentlyLoadedSettingsJson);
    } }, directives: [_shared_header_header_component__WEBPACK_IMPORTED_MODULE_3__.HeaderComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxTreeViewComponent, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_9__.DxButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_10__.DxTextAreaComponent], styles: [".marginBtn[_ngcontent-%COMP%] {\r\n  margin: 5px;\r\n}\r\n\r\n.marginTextbox[_ngcontent-%COMP%] {\r\n  margin: 5px;\r\n}\r\n\r\n.marginHeader[_ngcontent-%COMP%] {\r\n  margin: 15px;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEtZ3JpZHMtY29uZmlndXJhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6ImRhdGEtZ3JpZHMtY29uZmlndXJhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcmdpbkJ0biB7XHJcbiAgbWFyZ2luOiA1cHg7XHJcbn1cclxuXHJcbi5tYXJnaW5UZXh0Ym94IHtcclxuICBtYXJnaW46IDVweDtcclxufVxyXG5cclxuLm1hcmdpbkhlYWRlciB7XHJcbiAgbWFyZ2luOiAxNXB4O1xyXG59XHJcbiJdfQ== */"] });


/***/ }),

/***/ 55634:
/*!**********************************************************!*\
  !*** ./src/app/initial-setup/initial-setup.component.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InitialSetupComponent": () => (/* binding */ InitialSetupComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _shared_header_header_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../shared/header/header.component */ 89470);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-bootstrap/modal */ 84712);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
















const _c0 = ["prefillFromModel"];
function InitialSetupComponent_ng_container_9_ng_option_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r12 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r12)("disabled", !item_r12.IsActive);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](item_r12.Name);
} }
function InitialSetupComponent_ng_container_9_ng_option_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r13 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r13);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](item_r13);
} }
function InitialSetupComponent_ng_container_9_ng_option_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r14 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r14);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](item_r14.Name);
} }
function InitialSetupComponent_ng_container_9_ng_option_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r15 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r15.Id)("disabled", !item_r15.IsActive);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate2"]("", item_r15.Name, " (", item_r15.EmailAddress, ")");
} }
function InitialSetupComponent_ng_container_9_ng_option_30_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r16 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("disabled", !item_r16.Active)("value", item_r16);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](item_r16.OfficialName);
} }
function InitialSetupComponent_ng_container_9_ng_option_36_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r17 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r17)("disabled", !item_r17.IsActive);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](item_r17.Name);
} }
function InitialSetupComponent_ng_container_9_ng_option_42_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "ng-option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r18 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("value", item_r18)("disabled", !item_r18.IsActive);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate2"]("", item_r18.Name, " (", item_r18.EmailAddress, ")");
} }
function InitialSetupComponent_ng_container_9_div_53_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "button", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function InitialSetupComponent_ng_container_9_div_53_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2); return ctx_r19.getStudyAreaSummaryByMarketYearId(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](2, " Show Form ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
function InitialSetupComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "label", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3, "Study DataSet");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "ng-select", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("change", function InitialSetupComponent_ng_container_9_Template_ng_select_change_5_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r21.changeDataSet(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](6, InitialSetupComponent_ng_container_9_ng_option_6_Template, 2, 3, "ng-option", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](9, "Study Year");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "ng-select", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("change", function InitialSetupComponent_ng_container_9_Template_ng_select_change_11_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r22); const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r23.changeStudyYear(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](12, InitialSetupComponent_ng_container_9_ng_option_12_Template, 2, 2, "ng-option", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](14, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](15, "Project #");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](17, "ng-select", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](18, InitialSetupComponent_ng_container_9_ng_option_18_Template, 2, 2, "ng-option", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](19, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](20, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](21, "Project Lead");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](22, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](23, "ng-select", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](24, InitialSetupComponent_ng_container_9_ng_option_24_Template, 2, 4, "ng-option", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](25, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](26, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](27, "Market");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](28, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](29, "ng-select", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("change", function InitialSetupComponent_ng_container_9_Template_ng_select_change_29_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r22); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r24.onMarketChange(); })("clear", function InitialSetupComponent_ng_container_9_Template_ng_select_clear_29_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r22); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r25.onMarketClear(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](30, InitialSetupComponent_ng_container_9_ng_option_30_Template, 2, 3, "ng-option", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](31, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](32, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](33, "Study Area");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](34, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](35, "ng-select", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("change", function InitialSetupComponent_ng_container_9_Template_ng_select_change_35_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r22); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r26.onStudyAreaChange(); })("clear", function InitialSetupComponent_ng_container_9_Template_ng_select_clear_35_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r22); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r27.onMarketClear(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](36, InitialSetupComponent_ng_container_9_ng_option_36_Template, 2, 3, "ng-option", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](37, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](38, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](39, "Analyst");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](40, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](41, "ng-select", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](42, InitialSetupComponent_ng_container_9_ng_option_42_Template, 2, 4, "ng-option", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](43, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](44, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](45, "Description");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](46, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](47, "textarea", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](48, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](49, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](50, "Pre-Fill From");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](51, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](52, "ng-select", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](53, InitialSetupComponent_ng_container_9_div_53_Template, 3, 0, "div", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](54, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](55, "label", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](56, "Study Name");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](57, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](58, "input", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](59, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](60, "div", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](61, "button", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](62, "Set it up!");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](20, _c1, ctx_r0.submitted && ctx_r0.f["studyDataSetId"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.studyAreas);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](22, _c1, ctx_r0.submitted && ctx_r0.f["studyYear"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.studyYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("items", ctx_r0.projects)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](24, _c1, ctx_r0.submitted && ctx_r0.f["studyProjectId"].errors))("readonly", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.projects);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](26, _c1, ctx_r0.submitted && ctx_r0.f["projectLeadId"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.projectLeads);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](28, _c1, ctx_r0.submitted && ctx_r0.f["marketId"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.markets);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.studyAreaCategories);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](30, _c1, ctx_r0.submitted && ctx_r0.f["analystId"].errors))("multiple", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r0.analyst);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](32, _c1, ctx_r0.submitted && ctx_r0.f["description"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("items", ctx_r0.preFillFormData);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r0.f["preFillForm"].value);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction1"](34, _c1, ctx_r0.submitted && ctx_r0.f["name"].errors));
} }
const _c2 = function () { return ["/study-summary"]; };
function InitialSetupComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](2, " Your Initial setup is created successfully in database. The notification email is sent to the Business Analyst.");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "a", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](5, "Click here");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](6, " to go to the Study Area Summary. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpureFunction0"](1, _c2));
} }
function InitialSetupComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](4, "Study Name:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](9, "Data Set:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](10, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](14, "Category:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](17, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](19, "Study Year:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](20, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](21);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](22, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](23, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](24, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](25, "Project:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](26, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](27);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](28, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](29, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](30, "Project Lead:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](31, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](32);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](33, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](34, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](35, "Analyst:");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](36, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](37);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r3.initialSetupData.Name);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx_r3.initialSetupData.StudyDataSetName, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" ", ctx_r3.initialSetupData.StudyAreaName, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r3.initialSetupData.StudyYear);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r3.initialSetupData.ProjectName);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r3.initialSetupData.ProjectLead);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r3.initialSetupData.AnalystName);
} }
class InitialSetupComponent {
    constructor(sharedService, formBuilder, alertService, isLoadingService, localStorageService) {
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.alertService = alertService;
        this.isLoadingService = isLoadingService;
        this.localStorageService = localStorageService;
        this.studyAreas = [];
        this.studyAreaCategories = [];
        this.projects = [];
        this.studyYears = [];
        this.projectLeads = [];
        this.markets = [];
        this.analyst = [];
        this.preFillFormData = [];
        this.initialSetupData = null;
        this.submitted = false;
        this.showSuccessMsg = false;
        this.studyAreaSummary = [];
        if (this.isLoadingService.isLoading$()) {
            this.isLoadingService.remove();
        }
        const currentYear = new Date().getFullYear();
        // for (var i = currentYear + 1; i >= currentYear - 10; i--) {
        //   this.studyYears.push(i);
        // }
        this.userDetail = this.localStorageService.getData(_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey);
        // this.initialSetupForm = this.initialSetupForm.patchValue({
        this.initialSetupForm = this.formBuilder.group({
            studyDataSetId: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            studyProjectId: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            projectLeadId: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            analystId: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            studyAreaId: [null],
            studyYear: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            marketId: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__.Validators.required],
            preFillForm: [null],
        });
    }
    ngOnInit() {
        this.getStudyArea();
        this.getProjectLeads();
        this.getAnalyst();
    }
    get f() {
        return this.initialSetupForm.controls;
    }
    getStudyArea() {
        this.sharedService.getStudyArea().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyAreas = res.Data;
                // this.getProjects();
            }
        });
    }
    changeDataSet() {
        var _a, _b, _c, _d, _e, _f;
        const dataSet = (_a = this.initialSetupForm.get('studyDataSetId')) === null || _a === void 0 ? void 0 : _a.value;
        let studyYear = (_b = this.initialSetupForm.get('studyYear')) === null || _b === void 0 ? void 0 : _b.value;
        this.studyYears = [];
        if (dataSet !== null) {
            studyYear = studyYear > 0 ? studyYear : 0;
            dataSet.Years.map((year) => {
                this.studyYears.push(year);
            });
            // console.log(this.studyYears);
            // this.getProjects(dataSet.Id, studyYear);
            this.getStudyAreaCategory(dataSet.Id);
            // this.getMarket(dataSet.Id, studyYear);
        }
        else {
            this.studyAreaCategories = [];
        }
        (_c = this.initialSetupForm.get('studyYear')) === null || _c === void 0 ? void 0 : _c.setValue(null);
        (_d = this.initialSetupForm.get('studyProjectId')) === null || _d === void 0 ? void 0 : _d.setValue(null);
        (_e = this.initialSetupForm.get('studyAreaId')) === null || _e === void 0 ? void 0 : _e.setValue(null);
        (_f = this.initialSetupForm.get('marketId')) === null || _f === void 0 ? void 0 : _f.setValue(null);
        this.initialSetupForm.updateValueAndValidity();
        this.generateStudyName();
    }
    changeStudyYear() {
        var _a, _b, _c, _d;
        const dataSet = (_a = this.initialSetupForm.get('studyDataSetId')) === null || _a === void 0 ? void 0 : _a.value;
        let studyYear = (_b = this.initialSetupForm.get('studyYear')) === null || _b === void 0 ? void 0 : _b.value;
        if (dataSet !== null) {
            studyYear = studyYear > 0 ? studyYear : 0;
            this.getProjects(dataSet.Id, studyYear);
            this.getMarket(dataSet.Id, studyYear);
        }
        (_c = this.initialSetupForm.get('studyProjectId')) === null || _c === void 0 ? void 0 : _c.setValue(null);
        (_d = this.initialSetupForm.get('marketId')) === null || _d === void 0 ? void 0 : _d.setValue(null);
        this.initialSetupForm.updateValueAndValidity();
        this.generateStudyName();
    }
    getStudyAreaCategory(dataSetId) {
        this.sharedService
            .getStudyAreaCategory(dataSetId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyAreaCategories = res.Data;
                if (dataSetId == 4) {
                    const lastIndex = this.studyAreaCategories.length - 1;
                    if (lastIndex > 0) {
                        this.studyAreaCategories[lastIndex - 1] = this.studyAreaCategories.splice(lastIndex, 1, this.studyAreaCategories[lastIndex - 1])[0];
                    }
                }
                // this.getProjects(dataSetId);
            }
        });
    }
    getProjects(dataSetId, year) {
        this.sharedService
            .getProject(dataSetId, year)
            .subscribe((res) => {
            var _a;
            if (res.HttpStatusCode === 200) {
                this.projects = res.Data;
                const firstProject = typeof this.projects[0] !== 'undefined' ? this.projects[0] : {};
                if (firstProject) {
                    (_a = this.initialSetupForm.get('studyProjectId')) === null || _a === void 0 ? void 0 : _a.setValue(firstProject);
                }
            }
        });
    }
    getProjectLeads() {
        this.sharedService.getProjectLead().subscribe((res) => {
            var _a;
            if (res.HttpStatusCode === 200) {
                this.projectLeads = res.Data;
                (_a = this.initialSetupForm
                    .get('projectLeadId')) === null || _a === void 0 ? void 0 : _a.setValue(this.userDetail.Id);
            }
        });
    }
    getMarket(dataSetId, year) {
        this.sharedService
            .getMarket(dataSetId, year)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.markets = res.Data;
            }
        });
    }
    getAnalyst() {
        this.sharedService.getAnalyst().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.analyst = res.Data;
            }
        });
    }
    getInitialSetupByMarketId(marketId, studyArea) {
        this.sharedService
            .getInitialSetupByMarketId(marketId, studyArea)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.preFillFormData = res.Data.map((list) => new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(list));
            }
        });
    }
    onMarketChange() {
        var _a, _b, _c;
        const selectedMarket = (_a = this.initialSetupForm.get('marketId')) === null || _a === void 0 ? void 0 : _a.value;
        const selectedStudyArea = (_b = this.initialSetupForm.get('studyAreaId')) === null || _b === void 0 ? void 0 : _b.value;
        (_c = this.initialSetupForm.get('preFillForm')) === null || _c === void 0 ? void 0 : _c.setValue(null);
        if (selectedMarket && selectedStudyArea) {
            this.getInitialSetupByMarketId(selectedMarket.Id, selectedStudyArea.Id);
        }
        this.generateStudyName();
    }
    onStudyAreaChange() {
        var _a, _b, _c, _d, _e, _f;
        const selectedStudyArea = (_a = this.initialSetupForm.get('studyAreaId')) === null || _a === void 0 ? void 0 : _a.value;
        if (selectedStudyArea &&
            selectedStudyArea.Id === 26 &&
            selectedStudyArea.DataSetStudyId === 3) {
            (_b = this.initialSetupForm.get('marketId')) === null || _b === void 0 ? void 0 : _b.setValue(null);
            (_c = this.initialSetupForm.get('marketId')) === null || _c === void 0 ? void 0 : _c.disable();
        }
        else {
            (_d = this.initialSetupForm.get('marketId')) === null || _d === void 0 ? void 0 : _d.enable();
        }
        const selectedMarket = (_e = this.initialSetupForm.get('marketId')) === null || _e === void 0 ? void 0 : _e.value;
        (_f = this.initialSetupForm.get('preFillForm')) === null || _f === void 0 ? void 0 : _f.setValue(null);
        if (selectedMarket && selectedStudyArea) {
            this.getInitialSetupByMarketId(selectedMarket.Id, selectedStudyArea.Id);
        }
        this.generateStudyName();
    }
    onMarketClear() {
        var _a, _b;
        (_a = this.initialSetupForm.get('marketId')) === null || _a === void 0 ? void 0 : _a.enable();
        this.preFillFormData = [];
        (_b = this.initialSetupForm.get('preFillForm')) === null || _b === void 0 ? void 0 : _b.setValue(null);
    }
    generateStudyName() {
        var _a, _b, _c, _d, _e;
        const studyDataSet = (_a = this.initialSetupForm.get('studyDataSetId')) === null || _a === void 0 ? void 0 : _a.value;
        const studyDataYear = (_b = this.initialSetupForm.get('studyYear')) === null || _b === void 0 ? void 0 : _b.value;
        const studyDataMarket = (_c = this.initialSetupForm.get('marketId')) === null || _c === void 0 ? void 0 : _c.value;
        const studyArea = (_d = this.initialSetupForm.get('studyAreaId')) === null || _d === void 0 ? void 0 : _d.value;
        const studyAreaId = studyArea !== null ? studyArea.Description : '';
        const givenRef = this.convertDateToHexCode();
        //Abbrivating DataSet Name 
        var originalDataSetName = studyDataSet ? studyDataSet.Name : '';
        var matches = originalDataSetName.match(/\b(\w)/g);
        const studyDataSetName = matches.join('');
        const studyDataMarketName = studyDataMarket
            ? studyDataMarket.ShortName.replace('All Other', 'AO')
            : '';
        let studyName = '';
        if (studyDataSetName &&
            studyDataYear &&
            studyDataMarketName &&
            studyAreaId) {
            studyName = `${studyDataSetName}-${studyDataYear}-${studyDataMarketName}-${studyAreaId}-${givenRef}`;
        }
        else if (studyDataSetName && studyDataMarketName && studyAreaId) {
            studyName = `${studyDataSetName}-${studyDataMarketName}-${studyAreaId}-${givenRef}`;
        }
        else if (studyDataSetName && studyDataYear && studyAreaId) {
            studyName = `${studyDataSetName}-${studyDataYear}-${studyAreaId}-${givenRef}`;
        }
        else if (studyDataSetName && studyAreaId) {
            studyName = `${studyDataSetName}-${studyAreaId}-${givenRef}`;
        }
        else if (studyAreaId) {
            studyName = `${studyAreaId}-${givenRef}`;
        }
        (_e = this.initialSetupForm.get('name')) === null || _e === void 0 ? void 0 : _e.setValue(studyName);
    }
    convertDateToHexCode() {
        const date = new Date();
        const year = date.getFullYear();
        const mm = date.getMonth() + 1;
        const day = date.getDate();
        const hh = date.getHours();
        const min = date.getMinutes();
        const sec = date.getSeconds();
        const dateString = parseInt("" + mm + day + hh + min + sec);
        return (dateString.toString(16));
    }
    getStudyAreaSummaryByMarketYearId() {
        var _a;
        const preFillForm = (_a = this.initialSetupForm.get('preFillForm')) === null || _a === void 0 ? void 0 : _a.value;
        this.isLoadingService.add();
        this.sharedService
            .getStudyAreaSummaryByStudyMarketYearId(preFillForm.Id)
            .subscribe((res) => {
            var _a;
            if (res.HttpStatusCode === 200) {
                this.studyAreaSummary = res.Data;
                const selectedStudyArea = (_a = this.initialSetupForm.get('studyAreaId')) === null || _a === void 0 ? void 0 : _a.value;
                this.sharedService
                    .getInitialSetupById(preFillForm.Id, selectedStudyArea.Id)
                    .subscribe((response) => {
                    var _a;
                    if (response.HttpStatusCode === 200) {
                        const initialSetupData = response.Data.map((item) => new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(item));
                        this.initialSetupData = initialSetupData[0];
                        this.isLoadingService.remove();
                        (_a = this.prefillFromModel) === null || _a === void 0 ? void 0 : _a.show();
                    }
                });
            }
        });
    }
    onFromSubmit() {
        this.submitted = true;
        if (this.initialSetupForm.invalid) {
            return;
        }
        const projectLead = this.projectLeads.find((item) => item.Id === this.initialSetupForm.value.projectLeadId);
        const studyData = this.initialSetupForm.value.studyAreaId;
        let marketId = typeof this.initialSetupForm.value.marketId !== 'undefined' &&
            this.initialSetupForm.value.marketId !== null
            ? this.initialSetupForm.value.marketId.Id
            : 0;
        let marketName = typeof this.initialSetupForm.value.marketId !== 'undefined' &&
            this.initialSetupForm.value.marketId !== null
            ? this.initialSetupForm.value.marketId.OfficialName
            : '';
        if (studyData && studyData.DataSetStudyId === 3 && studyData.Id === 26) {
            marketId = 21;
            marketName = 'Europe';
        }
        let analystId = [];
        let analystName = [];
        if (this.initialSetupForm.value.analystId.length > 0) {
            this.initialSetupForm.value.analystId.map((single) => {
                analystId.push(single.Id);
                analystName.push(single.Name);
            });
        }
        const formData = {
            analystIdList: analystId,
            analystNameList: analystName,
            analystId: 0,
            analystName: '',
            description: this.initialSetupForm.value.description,
            marketId: marketId,
            marketName: marketName,
            name: this.initialSetupForm.value.name,
            projectLeadId: projectLead === null || projectLead === void 0 ? void 0 : projectLead.Id,
            projectLead: projectLead === null || projectLead === void 0 ? void 0 : projectLead.Name,
            studyDataSetId: this.initialSetupForm.value.studyDataSetId.Id,
            studyDataSetName: this.initialSetupForm.value.studyDataSetId.Name,
            studyProjectId: this.initialSetupForm.value.studyProjectId.Id,
            projectName: this.initialSetupForm.value.studyProjectId.Name,
            studyYear: this.initialSetupForm.value.studyYear,
            prefillFromId: this.initialSetupForm.value.preFillForm !== null
                ? this.initialSetupForm.value.preFillForm.Id
                : 0,
            studyAreaId: this.initialSetupForm.value.studyAreaId.Id,
            studyAreaName: this.initialSetupForm.value.studyAreaId.Name,
            id: 0,
            isSignOff: false,
            isMidYear: false,
            lockedForEditBy: 0,
            lockedForEditByName: '',
            csvAnalystIds: '',
            csvAnalystNames: '',
        };
        this.isLoadingService.add();
        this.sharedService.saveInitialSetupData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                // this.alertService.success(res.Data);
                this.submitted = false;
                this.initialSetupForm.reset();
                this.initialSetupForm.updateValueAndValidity();
                this.showSuccessMsg = true;
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.message !== 'undefined'
                ? err.message
                : 'Something went wrong.';
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
}
InitialSetupComponent.ɵfac = function InitialSetupComponent_Factory(t) { return new (t || InitialSetupComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_2__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_3__.LocalStorageService)); };
InitialSetupComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: InitialSetupComponent, selectors: [["app-initial-setup"]], viewQuery: function InitialSetupComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.prefillFromModel = _t.first);
    } }, decls: 30, vars: 11, consts: [[1, "container", "my-4"], [3, "formGroup", "submit"], [1, "row", "justify-content-center"], [1, "col-md-8"], [1, "card"], [1, "card-body"], [4, "ngIf"], ["class", "mb-3 mt-4 row", 4, "ngIf"], ["bsModal", "", "tabindex", "-1", "role", "dialog", "aria-labelledby", "dialog-static-name", 1, "modal", "fade"], ["prefillFromModel", "bs-modal"], [1, "modal-dialog", "modal-lg"], [1, "modal-content"], [1, "modal-header", "py-2"], ["type", "button", "aria-label", "Close", 1, "btn-close", "close", "pull-right", 3, "click"], ["aria-hidden", "true", 1, "visually-hidden"], [1, "modal-body"], ["class", "row small mb-3", 4, "ngIf"], ["id", "dataGrid", 3, "dataSource", "showBorders", "allowColumnResizing", "columnHidingEnabled"], ["caption", "Study Area", "dataField", "StudyName", 3, "width"], ["dataField", "StudyAreaName", 3, "visible"], ["dataField", "Total", 3, "width"], ["dataField", "LastComment"], ["dataField", "LastModified", "dataType", "date"], ["dataField", "ModifiedBy"], [1, "mb-3", "row"], ["for", "staticEmail", 1, "col-sm-5", "col-form-label"], [1, "col-sm-7"], ["bindLabel", "Name", "formControlName", "studyDataSetId", "placeholder", "Select Study DataSet...", 3, "ngClass", "change"], [3, "value", "disabled", 4, "ngFor", "ngForOf"], ["for", "inputPassword", 1, "col-sm-5", "col-form-label"], ["formControlName", "studyYear", "placeholder", "Select Study Year...", 3, "ngClass", "change"], [3, "value", 4, "ngFor", "ngForOf"], ["bindLabel", "Name", "formControlName", "studyProjectId", "placeholder", "Select Project #...", 3, "items", "ngClass", "readonly"], ["formControlName", "projectLeadId", "placeholder", "Select Project Lead...", 3, "ngClass"], ["formControlName", "marketId", "placeholder", "Select Market...", 3, "ngClass", "change", "clear"], [3, "disabled", "value", 4, "ngFor", "ngForOf"], ["formControlName", "studyAreaId", "placeholder", "Select Study Area...", 3, "change", "clear"], ["formControlName", "analystId", "placeholder", "Select Analyst...", 3, "ngClass", "multiple"], ["id", "exampleFormControlTextarea1", "rows", "3", "maxlength", "250", "formControlName", "description", 1, "form-control", 3, "ngClass"], ["bindLabel", "Name", "placeholder", "Select Pre-Fill From...", "formControlName", "preFillForm", 3, "items"], ["class", "text-right", 4, "ngIf"], ["type", "text", "formControlName", "name", "maxlength", "50", 1, "form-control", 3, "ngClass"], [1, "mb-3", "mt-4", "row"], [1, "offset-sm-5", "col-sm-7", "text-right"], [1, "btn", "btn-primary"], [3, "value", "disabled"], [3, "value"], [3, "disabled", "value"], [1, "text-right"], ["type", "button", 1, "btn", "btn-link", "btn-sm", "p-0", 3, "click"], [1, "alert", "alert-success", "small"], [1, "alert-link", 3, "routerLink"], [1, "row", "small", "mb-3"], [1, "col"], [1, "row", "mb-2"], [1, "col-md-4", "text-secondary"]], template: function InitialSetupComponent_Template(rf, ctx) { if (rf & 1) {
        const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "app-header");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "form", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("submit", function InitialSetupComponent_Template_form_submit_2_listener() { return ctx.onFromSubmit(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](3, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](4, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "h4");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](6, "Initial Setup");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](7, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](9, InitialSetupComponent_ng_container_9_Template, 63, 36, "ng-container", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](10, InitialSetupComponent_div_10_Template, 7, 2, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](11, "div", 8, 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](13, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](14, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](15, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "h5");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](17, "Study Area Summary");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "button", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function InitialSetupComponent_Template_button_click_18_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r28); const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵreference"](12); return _r2.hide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](19, "span", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](20, "\u00D7");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](21, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](22, InitialSetupComponent_div_22_Template, 38, 7, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](23, "dx-data-grid", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](24, "dxi-column", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](25, "dxi-column", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](26, "dxi-column", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](27, "dxi-column", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](28, "dxi-column", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](29, "dxi-column", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("formGroup", ctx.initialSetupForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx.showSuccessMsg);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.showSuccessMsg);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](12);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.initialSetupData);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("dataSource", ctx.studyAreaSummary)("showBorders", true)("allowColumnResizing", false)("columnHidingEnabled", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("width", 210);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("visible", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("width", 50);
    } }, directives: [_shared_header_header_component__WEBPACK_IMPORTED_MODULE_4__.HeaderComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_6__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_10__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_10__.NgOptionComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.MaxLengthValidator, _angular_router__WEBPACK_IMPORTED_MODULE_11__.RouterLinkWithHref, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_12__.ModalDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_13__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_14__.DxiColumnComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbml0aWFsLXNldHVwLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 98458:
/*!******************************************!*\
  !*** ./src/app/login/login.component.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LoginComponent": () => (/* binding */ LoginComponent)
/* harmony export */ });
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _azure_msal_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-angular */ 14084);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/user.service */ 72996);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);









function LoginComponent_p_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "p", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1, " Redirecting... Please wait...\n");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
function LoginComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "h5");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2, "Sorry,");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, " You have no permission to access this application. Please contact administrator. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
class LoginComponent {
    constructor(authService, localStorageService, route, userService, isLoadingService) {
        this.authService = authService;
        this.localStorageService = localStorageService;
        this.route = route;
        this.userService = userService;
        this.isLoadingService = isLoadingService;
        this.errorMessage = false;
    }
    ngOnInit() {
        this.isLoadingService.add();
        this.authService.instance.handleRedirectPromise().then((res) => {
            if (res != null && res.account != null) {
                this.authService.instance.setActiveAccount(res.account);
                // console.log(res);
                this.localStorageService.setData({
                    userName: res.account.username,
                    token: res.accessToken,
                    idToken: res.idToken,
                }, _Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDataKey);
                this.getUserDetail(res.account.username);
            }
            else {
                this.login();
            }
        });
    }
    isLoggedIn() {
        return this.authService.instance.getActiveAccount() != null;
    }
    login() {
        this.localStorageService.deleteData(_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDataKey);
        this.localStorageService.deleteData(_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey);
        this.authService.loginRedirect();
    }
    getUserDetail(emailAddress) {
        this.userService.getUserDetail(emailAddress).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__.UserDetail().deserialize(res.Data);
                this.localStorageService.setData(userDetail, _Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey);
                const url = this.localStorageService.getData("URL");
                if (typeof (url) == 'string' && !url.includes('login')) {
                    this.route.navigateByUrl('/', { skipLocationChange: true }).then(() => {
                        this.route.navigate([url]);
                    });
                }
                else {
                    this.route.navigate(['study-summary']);
                }
            }
        }, (err) => {
            // this.errorMessage = true;
            // this.isLoadingService.remove();
            this.login();
        });
    }
}
LoginComponent.ɵfac = function LoginComponent_Factory(t) { return new (t || LoginComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_azure_msal_angular__WEBPACK_IMPORTED_MODULE_5__.MsalService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_2__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_user_service__WEBPACK_IMPORTED_MODULE_3__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_7__.IsLoadingService)); };
LoginComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: LoginComponent, selectors: [["app-login"]], decls: 2, vars: 2, consts: [["class", "text-italic text-center", 4, "ngIf"], [1, "text-italic", "text-center"]], template: function LoginComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, LoginComponent_p_0_Template, 2, 0, "p", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, LoginComponent_div_1_Template, 5, 0, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx.errorMessage);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.errorMessage);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 6087:
/*!**********************************************************!*\
  !*** ./src/app/pages/calculator/calculator.component.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalculatorComponent": () => (/* binding */ CalculatorComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _shared_header_header_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/header/header.component */ 89470);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _components_input_selector_input_selector_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/input-selector/input-selector.component */ 89721);
/* harmony import */ var _components_calculator_preview_calculator_preview_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/calculator-preview/calculator-preview.component */ 44022);










function CalculatorComponent_app_input_selector_4_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "app-input-selector", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("calculatedData", function CalculatorComponent_app_input_selector_4_Template_app_input_selector_calculatedData_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r2.onComputed($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("calculatorId", ctx_r0.calculatorId)("restart", ctx_r0.restartInputComponent)("SetCurrency", ctx_r0.Currency)("SetVolume", ctx_r0.Volume);
} }
function CalculatorComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "app-calculator-preview", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("exportData", function CalculatorComponent_div_5_Template_app_calculator_preview_exportData_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r5); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](); return ctx_r4.onExportSpecialtyExcipientData($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("setCalculatedData", ctx_r1.calculatedData)("setStudyInitialSetup", ctx_r1.studyInitialSetup)("setCalculatorId", ctx_r1.calculatorId)("setStudySpecialtyExcipientData", ctx_r1.studySpecialtyExcipientData);
} }
class CalculatorComponent {
    constructor(activeRoute, route, studyService, alertService, isLoadingService) {
        this.activeRoute = activeRoute;
        this.route = route;
        this.studyService = studyService;
        this.alertService = alertService;
        this.isLoadingService = isLoadingService;
        this.calculatorId = 0;
        this.marketYearCategoryId = 0;
        this.StudyProjectMarketYearId = 0;
        this.restartInputComponent = false;
        this.studyInitialSetup = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.studySpecialtyExcipientData = null;
        this.Currency = {};
        this.Volume = {};
        const params = this.activeRoute.snapshot.params;
        this.calculatorId =
            typeof params['calculatorId'] !== 'undefined'
                ? params['calculatorId']
                : 0;
        this.marketYearCategoryId =
            typeof params['marketYearCategoryId'] !== 'undefined'
                ? params['marketYearCategoryId']
                : 0;
        this.StudyProjectMarketYearId =
            typeof params['studyProjectMarketYearId'] !== 'undefined'
                ? params['studyProjectMarketYearId']
                : 0;
    }
    ngOnInit() {
        this.getSalesData();
    }
    startOver() {
        this.restartInputComponent = true;
        this.calculatedData = undefined;
        // prevent double click call for input data
        setTimeout(() => {
            this.restartInputComponent = false;
        }, 1000);
    }
    onComputed(calculatedData) {
        this.calculatedData = calculatedData;
    }
    onCalculatorTemplateReturned(calculatorOutputTemplateData) {
        this.calculatorOutputTemplateData = calculatorOutputTemplateData;
        // this.industryId = calculatorOutputTemplateData.IndustryId;
    }
    getSalesData() {
        this.studyService
            .getSalesData(this.marketYearCategoryId, this.StudyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                // console.log(res.Data);
                const studyData = res.Data;
                this.studySpecialtyExcipientData = studyData;
                this.studyInitialSetup = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(studyData.InitialSetup);
                studyData.SpecialtyExcipientsSales.map((singleItem) => {
                    this.Currency = {
                        Name: singleItem.CurrencyName,
                        Code: singleItem.CurrencyCode,
                        Id: singleItem.CurrencyId,
                    };
                    this.Volume = {
                        Name: singleItem.VolumeUnitName,
                        Code: singleItem.VolumeUnitId,
                    };
                });
            }
        });
    }
    onExportSpecialtyExcipientData(specialtyExcipientData) {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studyInitialSetup,
            specialtyExcipientsSales: specialtyExcipientData,
        };
        this.isLoadingService.add();
        this.studyService.saveSESData(studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                // this.reloadCurrentRoute();
                // this.isLoadingService.remove();
                this.route.navigateByUrl(this.getStudyUrl());
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            const msg = typeof err.message !== 'undefined'
                ? err.message
                : 'Something went wrong.';
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    getStudyUrl() {
        const url = `/study-area/${this.studyInitialSetup.StudyAreaId}/${this.StudyProjectMarketYearId}/${this.marketYearCategoryId}/${this.studyInitialSetup.StudyDataSetId}`;
        return url;
    }
}
CalculatorComponent.ɵfac = function CalculatorComponent_Factory(t) { return new (t || CalculatorComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_1__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__.IsLoadingService)); };
CalculatorComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: CalculatorComponent, selectors: [["app-calculator"]], decls: 6, vars: 2, consts: [["setTitle", "Calculator"], [1, "container", "my-4"], ["type", "button", "data-dismiss", "modal", 1, "btn", "btn-light1", "btn-outline-dark", "mb-3", "margin5", 3, "click"], [3, "calculatorId", "restart", "SetCurrency", "SetVolume", "calculatedData", 4, "ngIf"], [4, "ngIf"], [3, "calculatorId", "restart", "SetCurrency", "SetVolume", "calculatedData"], [3, "setCalculatedData", "setStudyInitialSetup", "setCalculatorId", "setStudySpecialtyExcipientData", "exportData"]], template: function CalculatorComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "app-header", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](2, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function CalculatorComponent_Template_button_click_2_listener() { return ctx.startOver(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](3, " Start Over ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](4, CalculatorComponent_app_input_selector_4_Template, 1, 4, "app-input-selector", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](5, CalculatorComponent_div_5_Template, 2, 4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx.calculatedData && ctx.calculatorId);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.calculatedData);
    } }, directives: [_shared_header_header_component__WEBPACK_IMPORTED_MODULE_2__.HeaderComponent, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _components_input_selector_input_selector_component__WEBPACK_IMPORTED_MODULE_3__.InputSelectorComponent, _components_calculator_preview_calculator_preview_component__WEBPACK_IMPORTED_MODULE_4__.CalculatorPreviewComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYWxjdWxhdG9yLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 44022:
/*!************************************************************************************************!*\
  !*** ./src/app/pages/calculator/components/calculator-preview/calculator-preview.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalculatorPreviewComponent": () => (/* binding */ CalculatorPreviewComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 36362);



const _c0 = ["printThis"];
function CalculatorPreviewComponent_table_6_tr_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "td", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](11, "number");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "td", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](14, "number");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const value_r5 = ctx.$implicit;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r4.getRowValue(value_r5.Value, "ExcipientCategory"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r4.getRowValue(value_r5.Value, "ExcipientGroup"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r4.getRowValue(value_r5.Value, "Excipient"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r4.getRowValue(value_r5.Value, "Supplier"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](11, 6, ctx_r4.getRowValue(value_r5.Value, "Volume"), "1.1-1"), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind2"](14, 9, ctx_r4.getRowValue(value_r5.Value, "Sales"), "1.1-1"), " ");
} }
function CalculatorPreviewComponent_table_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "table", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "th");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Excipient Category");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "th");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Excipient Group");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "th");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7, "Excipient");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "th");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Supplier");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "th");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Volume");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "th");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Sales");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](14, CalculatorPreviewComponent_table_6_tr_14_Template, 15, 12, "tr", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r2.productData);
} }
class CalculatorPreviewComponent {
    constructor() {
        this.currentYear = new Date().getFullYear().toString();
        this.title = '';
        this.exportData = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
        this.latestDataYear = 0;
        this.calculatorId = 0;
        this.unitOfMeasures = {
            mass: 'kg',
            electric: 'KwH',
        };
    }
    set setCalculatedData(data) {
        if (data) {
            this.calculatedData = data;
        }
    }
    set setTitle(title) {
        if (title) {
            this.title = title;
        }
    }
    set setStudyInitialSetup(initialSetup) {
        if (initialSetup) {
            this.studyInitialSetup = initialSetup;
        }
    }
    set setStudySpecialtyExcipientData(data) {
        if (data) {
            this.studySpecialtyExcipientData = data;
        }
    }
    set setCalculatorId(id) {
        if (id) {
            this.calculatorId = id;
        }
    }
    ngOnInit() {
        this.productData = this.calculatedData;
        this.getComputedData();
    }
    getRowHide(value) {
        // let hide = false;
        const data = this.productData.find((element) => element.Tag == value);
        if (data.Hide) {
            return data.Hide;
        }
        else {
            return false;
        }
    }
    getRowValue(value, name) {
        let data = value.find((element) => element.Tag == name);
        if (data) {
            return data.Value;
        }
        else {
            return '';
        }
    }
    getComputedData() {
        const studyDataItems = this.studySpecialtyExcipientData.SpecialtyExcipientsSales;
        const singleStudyItem = studyDataItems.find((item, i) => i === 0);
        if (singleStudyItem) {
            this.currency = {
                CurrencyCode: singleStudyItem.CurrencyCode,
                CurrencyId: singleStudyItem.CurrencyId,
                CurrencyName: singleStudyItem.CurrencyName,
            };
            this.volume = {
                VolumeUnitId: singleStudyItem.VolumeUnitId,
                VolumeUnitName: singleStudyItem.VolumeUnitName,
                VolumeUnitRate: singleStudyItem.VolumeUnitRate,
            };
            this.dosageForm = {
                DosageFormId: singleStudyItem.DosageFormId,
                DosageFormName: singleStudyItem.DosageFormName,
            };
            this.latestDataYear = singleStudyItem.LatestDataYear;
        }
    }
    /**
     * print function
     * @param e event
     */
    print(e) {
        // let printContents, popupWin;
        // // printContents = document.getElementById('printThis').innerHTML;
        // printContents = this.printThis.nativeElement.innerHTML;
        // popupWin = window.open('', '_blank', 'top=0,left=0')?.focus();
        // popupWin?.document.open();
        // popupWin.document.write(`
        //         <!DOCTYPE html>
        //         <html>
        //             <head>
        //                 <meta http-equiv="X-UA-Compatible" content="IE=edge">
        //                 <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" type="text/css" media="print">
        //                 <style>
        //                     body * {
        //                         visibility: visible;
        //                     }
        //                     #titlePrint {
        //                         font-size: 20px;
        //                     }
        //                     #printSection {
        //                         width: 100%;
        //                         height:100%;
        //                         top:0px;
        //                         bottom:0px;
        //                         margin: auto;
        //                         margin-top: 0px !important;
        //                         -webkit-print-color-adjust: exact !important;
        //                     }
        //                     .trdarkblue {
        //                         background-color: #01649B !important;
        //                     }
        //                     .trblue {
        //                         background-color: #66CBFF;
        //                     }
        //                     .trlightblue {
        //                         background-color: #9ECDEB;
        //                     }
        //                     .trdarkgray {
        //                         background-color: #A5A5A5;
        //                     }
        //                     .trgray {
        //                         background-color: #C8C8C8;
        //                     }
        //                     .trorange {
        //                         background-color: #F8A704;
        //                     }
        //                     @media print {
        //                         .table-bordered th,
        //                         .table-bordered td {
        //                             border: 1px solid #ddd !important;
        //                         }
        //                         .table tr.trdarkblue > th {
        //                             background-color: #01649B !important;
        //                             border: 1px solid #ddd !important;
        //                             -webkit-print-color-adjust: exact !important;
        //                         }
        //                         .table tr.trblue > th {
        //                             background-color: #66CBFF !important;
        //                             -webkit-print-color-adjust: exact !important;
        //                         }
        //                         .table tr.trblue > td {
        //                             background-color: #66CBFF !important;
        //                         }
        //                         .table tr.trlightblue > th {
        //                             background-color: #9ECDEB !important;
        //                         }
        //                         .table tr.trdarkgray > th {
        //                             background-color: #A5A5A5 !important;
        //                         }
        //                         .table tr.trgray > th {
        //                             background-color: #C8C8C8 !important;
        //                         }
        //                         .table tr.trorange > th {
        //                             background-color: #F8A704 !important;
        //                         }
        //                         .table tr.trorange > td {
        //                             background-color: #F8A704 !important;
        //                         }
        //                         .div {
        //                             overflow:visible;
        //                         }
        //                     }
        //                 </style>
        //             </head>
        //             <body onload="window.print();">
        //                 <div id="printSection" #printSection> ${printContents}</div>
        //             </body>
        //         </html>`);
        // popupWin.document.close();
        // window.close()
        // let print = document.getElementById('printThis');
        // var domClone = print.cloneNode(true);
        // var $printSection = document.getElementById("printSection");
        // if (!$printSection) {
        //   $printSection = document.createElement("div");
        //   $printSection.id = "printSection";
        //   document.body.appendChild($printSection);
        // }
        // $printSection.innerHTML = "";
        // $printSection.appendChild(domClone);
        // window.print();
    }
    onImportDataClick() {
        const studyJson = [];
        this.productData.map((item) => {
            studyJson.push({
                CAGR1: 0,
                CAGR2: 0,
                CalculatorId: this.calculatorId,
                CurrencyCode: this.currency.CurrencyCode,
                CurrencyId: this.currency.CurrencyId,
                CurrencyName: this.currency.CurrencyName,
                DataRelationId: null,
                DataRowId: null,
                DosageFormId: this.dosageForm.DosageFormId,
                DosageFormName: this.dosageForm.DosageFormName,
                ExcipientCategoryId: 0,
                ExcipientCategoryName: this.getRowValue(item.Value, 'ExcipientCategory'),
                ExcipientGroupId: 0,
                ExcipientGroupName: this.getRowValue(item.Value, 'ExcipientGroup'),
                ExcipientId: 0,
                ExcipientName: this.getRowValue(item.Value, 'Excipient'),
                LatestDataYear: this.latestDataYear,
                Notes: null,
                SupplierId: 0,
                SupplierName: this.getRowValue(item.Value, 'Supplier'),
                Value1: null,
                Value2: this.getRowValue(item.Value, 'Sales'),
                Volume1: null,
                Volume2: this.getRowValue(item.Value, 'Volume'),
                VolumeUnitId: this.volume.VolumeUnitId,
                VolumeUnitName: this.volume.VolumeUnitName,
                VolumeUnitRate: this.volume.VolumeUnitRate,
            });
        });
        this.exportData.emit(studyJson);
        // console.log(studyJson);
    }
}
CalculatorPreviewComponent.ɵfac = function CalculatorPreviewComponent_Factory(t) { return new (t || CalculatorPreviewComponent)(); };
CalculatorPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: CalculatorPreviewComponent, selectors: [["app-calculator-preview"]], viewQuery: function CalculatorPreviewComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.printThis = _t.first);
    } }, inputs: { setCalculatedData: "setCalculatedData", setTitle: "setTitle", setStudyInitialSetup: "setStudyInitialSetup", setStudySpecialtyExcipientData: "setStudySpecialtyExcipientData", setCalculatorId: "setCalculatorId" }, outputs: { exportData: "exportData" }, decls: 16, vars: 2, consts: [[1, "col-xs-12", "col-sm-12", "col-md-12"], ["id", "printThis", 2, "-webkit-print-color-adjust", "exact !important"], ["printThis", ""], ["id", "titlePrint"], ["titlePrint", ""], ["class", "table table-bordered", 4, "ngIf"], ["id", "footerPrint", 1, "container-fluid", "footer", 2, "padding", "2em"], ["footerPrint", ""], [1, "text-center"], [1, "text-muted"], [1, "col-lg-6", "col-xl-6", "col-md-6", "col-sm-12"], [1, "right"], ["type", "button", 1, "btn", "btn-primary", "buttonMargin", 3, "click"], [1, "table", "table-bordered"], [4, "ngFor", "ngForOf"], [1, "text-right"]], template: function CalculatorPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "h2", 3, 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5, "Specialty Excipient");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, CalculatorPreviewComponent_table_6_Template, 15, 1, "table", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 6, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "small", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "span", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "button", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CalculatorPreviewComponent_Template_button_click_14_listener() { return ctx.onImportDataClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, " Import Data to Study ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.productData);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("\u00A9 ", ctx.currentYear, " Kline & Company, all rights reserved.");
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DecimalPipe], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYWxjdWxhdG9yLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 89721:
/*!****************************************************************************************!*\
  !*** ./src/app/pages/calculator/components/input-selector/input-selector.component.ts ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InputSelectorComponent": () => (/* binding */ InputSelectorComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/notify */ 38700);
/* harmony import */ var src_services_calculator_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/calculator.service */ 57337);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! devextreme-angular */ 20783);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 62163);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular */ 59331);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 90587);









function InputSelectorComponent_div_0_div_4_h5_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "h5");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const group_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate"](ctx_r3.getGroupTitle(group_r2));
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_1_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_1_span_5_Template, 2, 0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "dx-text-box", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_1_Template_dx_text_box_valueChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r19); const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit; return calculatorInput_r9.DefaultValueText = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", calculatorInput_r9.Name, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.IsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("value", calculatorInput_r9.DefaultValueText);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_2_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_2_span_5_Template, 2, 0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "dx-select-box", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_2_Template_dx_select_box_valueChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r24); const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit; return calculatorInput_r9.DefaultValue = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", calculatorInput_r9.Name, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.IsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("dataSource", calculatorInput_r9.InputValues)("value", calculatorInput_r9.DefaultValue);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "dx-slider", 23, 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_ng_container_7_Template_dx_slider_valueChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r32); const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4).$implicit; return calculatorInput_r9.DefaultValue = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](3, "dxo-label", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](4, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "dx-number-box", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_ng_container_7_Template_dx_number_box_valueChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r32); const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2); return _r29.value = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵreference"](2);
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4).$implicit;
    const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("min", calculatorInput_r9.MinimumValue)("max", calculatorInput_r9.MaximumValue)("value", calculatorInput_r9.DefaultValue)("step", ctx_r27.getStep(calculatorInput_r9))("rtlEnabled", false)("disabled", calculatorInput_r9.Volume > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpropertyInterpolate"]("format", calculatorInput_r9.DxFormat);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("min", calculatorInput_r9.MinimumValue)("max", calculatorInput_r9.MaximumValue)("showSpinButtons", true)("step", ctx_r27.getStep(calculatorInput_r9))("value", _r29.value)("disabled", calculatorInput_r9.Volume > 0);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r37 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "dx-text-box", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_div_8_Template_dx_text_box_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r37); const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4).$implicit; return calculatorInput_r9.Volume = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", calculatorInput_r9.Volume)("disabled", calculatorInput_r9.DefaultValue > 0);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_span_5_Template, 2, 0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](7, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_ng_container_7_Template, 6, 14, "ng-container", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](8, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_div_8_Template, 2, 2, "div", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", calculatorInput_r9.Name, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.IsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", !calculatorInput_r9.IsDecimalValue);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.IsDecimalValue);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_4_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r43 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_4_span_5_Template, 2, 0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "dx-text-box", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_4_Template_dx_text_box_ngModelChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r43); const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit; return calculatorInput_r9.DefaultValue = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", calculatorInput_r9.Name, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.IsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", calculatorInput_r9.DefaultValue)("disabled", true);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_1_Template, 8, 3, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](2, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_2_Template, 8, 4, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_3_Template, 9, 4, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](4, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_div_4_Template, 8, 4, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.InputStyleId == 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.InputStyleId == 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.InputStyleId == 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.InputStyleId == 0);
} }
function InputSelectorComponent_div_0_div_4_div_3_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_3_div_1_div_1_Template, 5, 4, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r9.GroupName != "SupplierCount" && calculatorInput_r9.GroupName != "Suppliers");
} }
function InputSelectorComponent_div_0_div_4_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_3_div_1_Template, 2, 1, "div", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r9 = ctx.$implicit;
    const group_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", (ctx_r4.inputGroups.length == 1 || group_r2 == calculatorInput_r9.GroupName) && calculatorInput_r9.IsVisible);
} }
function InputSelectorComponent_div_0_div_4_div_4_div_1_div_1_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function InputSelectorComponent_div_0_div_4_div_4_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_4_div_1_div_1_span_5_Template, 2, 0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "dx-select-box", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_4_div_1_div_1_Template_dx_select_box_valueChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r54); const calculatorInput_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit; return calculatorInput_r49.SupplierCount = $event; })("onValueChanged", function InputSelectorComponent_div_0_div_4_div_4_div_1_div_1_Template_dx_select_box_onValueChanged_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r54); const calculatorInput_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit; const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4); return ctx_r55.onChangeSupplierCount($event, calculatorInput_r49); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", calculatorInput_r49.Name, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r49.IsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("dataSource", ctx_r50.supplierCountDpValues)("value", calculatorInput_r49.SupplierCount)("disabled", calculatorInput_r49.Value == 0 && calculatorInput_r49.Volume == 0);
} }
function InputSelectorComponent_div_0_div_4_div_4_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_4_div_1_div_1_Template, 8, 5, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r49 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r49.Value > 0 || calculatorInput_r49.Volume > 0);
} }
function InputSelectorComponent_div_0_div_4_div_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_4_div_1_Template, 2, 1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r5.getComputedExcipient());
} }
function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_div_18_Template(rf, ctx) { if (rf & 1) {
    const _r69 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](2, "OR");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "dx-text-box", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_div_18_Template_dx_text_box_ngModelChange_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r69); const i_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; return calculatorInput_r59.Suppliers[i_r63].Volume = $event; })("onValueChanged", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_div_18_Template_dx_text_box_onValueChanged_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r69); const i_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; const ctx_r71 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4); return ctx_r71.setValueOrVolume($event, calculatorInput_r59, i_r63, "volume"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const i_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().index;
    const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", calculatorInput_r59.Suppliers[i_r63].Volume);
} }
function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r77 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_span_5_Template, 2, 0, "span", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](8, "Name");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](9, "dx-select-box", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("onCustomItemCreating", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_select_box_onCustomItemCreating_9_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; const ctx_r76 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4); return ctx_r76.addNewSupplier($event, i_r63, calculatorInput_r59); })("valueChange", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_select_box_valueChange_9_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; const ctx_r79 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4); return ctx_r79.onChangeSupplier($event, i_r63, calculatorInput_r59, ctx_r79.suppliers); })("valueChange", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_select_box_valueChange_9_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; return calculatorInput_r59.Suppliers[i_r63].SupplierId = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](11, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](12, "Volume");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "dx-slider", 39, 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_slider_valueChange_13_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; return calculatorInput_r59.Suppliers[i_r63].Value = $event; })("onValueChanged", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_slider_onValueChanged_13_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; const ctx_r85 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4); return ctx_r85.setValueOrVolume($event, calculatorInput_r59, i_r63, "value"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](15, "dxo-label", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](16, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](17, "dx-number-box", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("valueChange", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_number_box_valueChange_17_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; return calculatorInput_r59.Suppliers[i_r63].Value = $event; })("change", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_number_box_change_17_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; const ctx_r89 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4); return ctx_r89.setValueOrVolume($event, calculatorInput_r59, i_r63, "value"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](18, InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_div_18_Template, 4, 1, "div", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](19, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](20, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](21);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](22, "span", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](23, "*");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](24, "dx-text-box", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template_dx_text_box_ngModelChange_24_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r77); const i_r63 = restoredCtx.index; const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit; return calculatorInput_r59.Suppliers[i_r63].AvgPrice = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const i_r63 = ctx.index;
    const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2).$implicit;
    const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" Supplier ", i_r63 + 1, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r59.IsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("dataSource", ctx_r61.suppliers)("acceptCustomValue", true)("minSearchLength", 2)("searchEnabled", true)("showDataBeforeSearch", true)("value", calculatorInput_r59.Suppliers[i_r63].SupplierId);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("min", 0)("max", 100)("value", calculatorInput_r59.Suppliers[i_r63].Value)("step", ctx_r61.getStep(calculatorInput_r59))("rtlEnabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpropertyInterpolate"]("format", calculatorInput_r59.DxFormat);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("min", 0)("max", 100)("showSpinButtons", true)("step", ctx_r61.getStep(calculatorInput_r59))("value", calculatorInput_r59.Suppliers[i_r63].Value);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r59.IsDecimalValue);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"]("Avg. Price (", ctx_r61.getCurrencyAndUnit(), ") ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", calculatorInput_r59.Suppliers[i_r63].AvgPrice);
} }
function InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](6, InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_div_6_Template, 25, 23, "div", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]().$implicit;
    const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate"](calculatorInput_r59.Name);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r60.createRange(calculatorInput_r59.SupplierCount));
} }
function InputSelectorComponent_div_0_div_4_div_5_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_5_div_1_div_1_Template, 7, 2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const calculatorInput_r59 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", calculatorInput_r59.Value > 0 || calculatorInput_r59.Volume > 0);
} }
function InputSelectorComponent_div_0_div_4_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_div_5_div_1_Template, 2, 1, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r6.getComputedExcipient());
} }
function InputSelectorComponent_div_0_div_4_span_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "span", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "*denotes a required value!");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
const _c0 = function (a0) { return { "d-none": a0 }; };
function InputSelectorComponent_div_0_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r96 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](1, InputSelectorComponent_div_0_div_4_h5_1_Template, 2, 1, "h5", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](3, InputSelectorComponent_div_0_div_4_div_3_Template, 2, 1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](4, InputSelectorComponent_div_0_div_4_div_4_Template, 2, 1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](5, InputSelectorComponent_div_0_div_4_div_5_Template, 2, 1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](8, InputSelectorComponent_div_0_div_4_span_8_Template, 2, 0, "span", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](9, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "span", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](11, "button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function InputSelectorComponent_div_0_div_4_Template_button_click_11_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r96); const ctx_r95 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2); return ctx_r95.goToPage(-1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](12, " Prev ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function InputSelectorComponent_div_0_div_4_Template_button_click_13_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r96); const ctx_r97 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2); return ctx_r97.goToPage(1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](14, " Next ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](15, "button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function InputSelectorComponent_div_0_div_4_Template_button_click_15_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r96); const ctx_r98 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2); return ctx_r98.goToPage(0); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](16, " Calculate ");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const group_r2 = ctx.$implicit;
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx_r1.isGroupVisible(group_r2));
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r1.calculatorInputsData);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", group_r2 == "SupplierCount" && ctx_r1.getComputedExcipient().length > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", group_r2 == "Suppliers" && ctx_r1.getComputedExcipient().length > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx_r1.isDataContainsRequired);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("disabled", !ctx_r1.prewPageButtonAllowed);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("disabled", !ctx_r1.nextPageButtonAllowed)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](10, _c0, ctx_r1.buttonCalculateAllowed));
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](12, _c0, !ctx_r1.buttonCalculateAllowed))("disabled", !ctx_r1.buttonCalculateAllowed);
} }
function InputSelectorComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "h4");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](4, InputSelectorComponent_div_0_div_4_Template, 17, 14, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate3"]("Page ", ctx_r0.pageNumber, " of ", ctx_r0.countOfPages, " (", ctx_r0.getNoteText(), ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx_r0.inputGroups);
} }
class InputSelectorComponent {
    constructor(calculatorService, sharedService) {
        this.calculatorService = calculatorService;
        this.sharedService = sharedService;
        this.inputGroups = [];
        this.countOfPages = 0;
        this.pageNumber = 1;
        this.prewPageButtonAllowed = false;
        this.nextPageButtonAllowed = true;
        this.buttonCalculateAllowed = false;
        this.isDependentValue = false;
        this.isDataContainsRequired = false;
        this.selectedCalculator = 0;
        this.computedExcipients = [];
        this.supplierCountDpValues = [];
        this.suppliers = [];
        this.calculatedData = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
        this.calculatorTemplateReturnedData = new _angular_core__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();
    }
    set calculatorId(id) {
        if (id) {
            this.selectedCalculator = id;
        }
    }
    set restart(canRestart) {
        if (canRestart) {
            this.restartInputComponent();
        }
    }
    set SetCurrency(item) {
        if (item) {
            this.Currency = item;
        }
    }
    set SetVolume(item) {
        if (item) {
            this.Volume = item;
        }
    }
    ngOnInit() {
        this.getAllInputsByCalculatorId();
        // this.getCalculatorDataById();
        this.getSupplierCountValues();
        this.getSuppliers();
    }
    getAllInputsByCalculatorId() {
        this.calculatorService
            .getAllInputsByCalculatorId(this.selectedCalculator)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                const items = typeof data.Data.CalculatorInputs !== 'undefined'
                    ? data.Data.CalculatorInputs
                    : [];
                this.calculatorInputsDataFull = items;
            }
            else {
                throw new Error('Something went wrong.');
            }
        }, (error) => {
            throw new Error(error);
        }, () => {
            this.calculatorInputsData = this.calculatorInputsDataFull.filter((input) => input.PageNumber == 1);
            this.distinctGroups();
            this.canDisplayDependentInfo();
            this.dataContainsRequired();
            this.countOfPages = Math.max.apply(this, this.calculatorInputsDataFull.map((c) => c.PageNumber));
        });
    }
    getSuppliers() {
        this.sharedService.getSEDataEntryData('Suppliers').subscribe((data) => (this.suppliers = data.Data), (error) => {
            throw new Error(error);
        });
    }
    distinctGroups() {
        this.inputGroups = Array.from(new Set(this.calculatorInputsData.map((input) => input.GroupName)));
    }
    canDisplayDependentInfo() {
        this.isDependentValue =
            this.calculatorInputsData.filter((input) => input.IsDependentDefaultValue && input.DefaultValueEngineTypeId).length > 0
                ? true
                : false;
    }
    dataContainsRequired() {
        this.isDataContainsRequired =
            this.calculatorInputsData.filter((input) => input.IsRequired && input.IsVisible).length > 0
                ? true
                : false;
    }
    getNoteText() {
        if (this.calculatorInputsData.filter((input) => !input.IsDependentDefaultValue).length > 0) {
            return 'independent variables';
        }
        else if (this.calculatorInputsData.filter((input) => input.IsDependentDefaultValue && !input.DefaultValueEngineTypeId).length > 0) {
            return 'dependent variables';
        }
        else if (this.calculatorInputsData.filter((input) => input.IsDependentDefaultValue && input.DefaultValueEngineTypeId).length > 0) {
            return 'precalculated dependent variables';
        }
        else {
            return '';
        }
    }
    isGroupVisible(group) {
        return this.calculatorInputsData.filter((input) => input.IsVisible && input.GroupName == group).length > 0
            ? true
            : false;
    }
    getStep(calculatorInput) {
        if (calculatorInput.IsDecimalValue) {
            if (calculatorInput.DecimalScale == 1) {
                return 0.1;
            }
            else if (calculatorInput.DecimalScale == 2) {
                return 0.01;
            }
            else {
                return 0.001;
            }
        }
        else {
            return 1;
        }
    }
    goToPage(direction) {
        for (let input of this.calculatorInputsData) {
            input.Value = input.DefaultValue;
            input.ValueText = input.DefaultValueText;
        }
        if (direction == 1) {
            let filterInputsWithoutValues = this.calculatorInputsData.filter((c) => c.IsRequired && !c.Value && !c.DefaultValueText);
            if (filterInputsWithoutValues.length > 0) {
                (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])('*denotes a required value!', 'warning', 3000);
                return;
            }
            const isValidPer = this.validateCalculatorInputs();
            if (isValidPer !== true) {
                (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])(isValidPer, 'error', 3000);
                return;
            }
        }
        let valuesForValidation = this.calculatorInputsData.filter((inp) => inp.ValidatorEngineName && inp.ValidatorMethodName);
        if (direction == -1) {
            this.goToPageAction(direction);
        }
        else if (direction == 1 && valuesForValidation.length == 0) {
            this.goToPageAction(direction);
        }
        else {
            let validationResult;
            // this.calculatorService
            //   .validateValues(this.calculatorInputsDataFull, this.pageNumber)
            //   .subscribe(
            //     (data: any) => (validationResult = data),
            //     (error: any) => {
            //       throw new Error(error);
            //     },
            //     () => {
            //       if (
            //         validationResult &&
            //         validationResult.filter((res) => res.IsValid == false).length > 0
            //       ) {
            //         notify(
            //           validationResult.filter((res) => res.IsValid == false)[0]
            //             .Message,
            //           'error',
            //           3000
            //         );
            //         return;
            //       } else {
            //         this.goToPageAction(direction);
            //       }
            //     }
            //   );
            this.goToPageAction(direction);
        }
    }
    goToPageAction(direction) {
        // On last page call for data
        if (this.pageNumber == this.countOfPages && direction == 0) {
            const isValidPer = this.validateCalculatorInputs();
            if (isValidPer !== true) {
                (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])(isValidPer, 'error', 3000);
                return;
            }
            this.callServiceForCalculatedData();
            return;
        }
        this.pageNumber = this.validatePageNumber(this.pageNumber, direction);
        if (this.pageNumber > 1) {
            this.getComputedDefaultValues(this.calculatorInputsDataFull, this.pageNumber);
        }
        else {
            this.calculatorInputsData = this.calculatorInputsDataFull.filter((input) => input.PageNumber == 1);
            this.distinctGroups();
            this.canDisplayDependentInfo();
            this.dataContainsRequired();
            this.updateNavigationVisibility(this.pageNumber);
        }
        window.scrollTo(0, 0);
    }
    callServiceForCalculatedData() {
        let d;
        // const totalVolumeObj = this.calculatorInputsDataFull.find(
        //   (c: any) => c.GroupName === 'TotalVolume'
        // );
        // const totalVolume = totalVolumeObj.ValueText;
        const totalVolume = 0;
        // const totalSalesObj = this.calculatorInputsDataFull.find(
        //   (c: any) => c.GroupName === 'Sales'
        // );
        // const totalSales = totalSalesObj.ValueText;
        const totalSales = 0;
        this.calculatorService
            .getComponentDataByInputs(this.calculatorInputsDataFull, totalVolume, totalSales)
            .subscribe((data) => (d = data.Data), (error) => {
            const msg = typeof error.error !== 'undefined'
                ? error.error
                : 'Invalid input value';
            // throw new Error(error);
            (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])(msg, 'error', 3000);
        }, () => {
            if (d) {
                this.calculatedData.emit(d);
            }
            else {
                this.restartInputComponent();
                (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])('Data Not Found, restarting workflow...', 'error', 7000);
            }
        });
    }
    validatePageNumber(currentPageNumber, direction) {
        let pageNumber = currentPageNumber + direction;
        if (pageNumber >= 1 && pageNumber <= this.countOfPages) {
            return pageNumber;
        }
        else {
            return currentPageNumber;
        }
    }
    updateNavigationVisibility(pageNumber) {
        if (pageNumber == 1) {
            this.prewPageButtonAllowed = false;
            this.nextPageButtonAllowed = true;
        }
        if (pageNumber > 1 && pageNumber <= this.countOfPages) {
            this.prewPageButtonAllowed = true;
            this.nextPageButtonAllowed = true;
        }
        if (pageNumber == this.countOfPages) {
            this.prewPageButtonAllowed = true;
            this.nextPageButtonAllowed = false;
        }
        if (pageNumber == this.countOfPages) {
            this.buttonCalculateAllowed = true;
        }
        else {
            this.buttonCalculateAllowed = false;
        }
    }
    getSupplierCountValues() {
        for (let i = 1; i <= 15; i++) {
            this.supplierCountDpValues.push(i);
        }
    }
    getComputedExcipient() {
        return this.calculatorInputsDataFull.filter((input) => input.GroupName == 'Excipient' && input.IsVisible);
    }
    getCalculatorDataById() {
        this.calculatorService
            .getCalculatorDataById(this.selectedCalculator)
            .subscribe((data) => (this.calculatorData = data), (error) => {
            throw new Error(error);
        }, () => {
            this.calculatorTemplateReturnedData.emit(this.calculatorData);
        });
    }
    getComputedDefaultValues(calculatorInputsDataFull, pageNumber) {
        for (let input of calculatorInputsDataFull) {
            input.Value = input.DefaultValue;
        }
        this.calculatorService
            .getComputedDefaultValues(calculatorInputsDataFull, pageNumber)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                const items = typeof data.Data.CalculatorInputs !== 'undefined'
                    ? data.Data.CalculatorInputs
                    : [];
                this.calculatorInputsDataFull = items;
            }
            else {
                throw new Error('Something went wrong.');
            }
            // (this.calculatorInputsDataFull = data)
        }, (error) => {
            throw new Error(error);
        }, () => {
            if (this.calculatorInputsDataFull) {
                this.calculatorInputsData = this.calculatorInputsDataFull.filter((input) => input.PageNumber == pageNumber);
                if (pageNumber === 4) {
                    // console.log(this.calculatorInputsData);
                    // this.calculatorInputsData.map(
                    //   (item: any) => (item.IsVisible = true)
                    // );
                }
                if (this.validateIfVisibleItemOrNot()) {
                    this.distinctGroups();
                    this.canDisplayDependentInfo();
                    this.dataContainsRequired();
                    this.updateNavigationVisibility(pageNumber);
                    this.calculatorInputsData.map((item) => {
                        if (item.IsDecimalValue) {
                            item.DxFormat = "#0.# '%'";
                        }
                    });
                    // this.updateSuppliers();
                }
            }
            else {
                this.restartInputComponent();
                (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])('Data Not Found, restarting workflow...', 'error', 7000);
            }
        });
    }
    createRange(number) {
        // var items: number[] = [];
        // for(var i = 1; i <= number; i++){
        //   items.push(i);
        // }
        // return items;
        return new Array(number);
    }
    updateSuppliers() {
        this.inputGroups.map((group) => {
            if (group === 'Suppliers') {
                this.getComputedExcipient().map((item) => {
                    if (item.SupplierCount > 0) {
                        const suppliers = [];
                        for (let i = 0; i < item.SupplierCount; i++) {
                            suppliers.push({
                                SupplierId: 0,
                                SupplierName: null,
                                Value: 0,
                                Volume: 0,
                                AvgPrice: 0,
                            });
                        }
                        item.Suppliers = suppliers;
                    }
                });
            }
        });
    }
    onChangeSupplier(e, index, calculatorInput, suppliers) {
        const selectedSupplier = suppliers.find((item) => item.Id === e);
        calculatorInput.Suppliers[index].SupplierName = selectedSupplier.Name;
        // calculatorInput.Suppliers[index].SupplierId = e.Id;
        return calculatorInput;
    }
    validateCalculatorInputs() {
        let group = '';
        this.inputGroups.map((item) => {
            group = item;
        });
        if (this.calculatorInputsData.filter((c) => c.IsVisible).length == 0) {
            return true;
        }
        if (group !== 'Excipient' &&
            group !== 'SupplierCount' &&
            group !== 'Suppliers' &&
            group !== 'TotalVolume') {
            return true;
        }
        if (group === 'Excipient') {
            const totalPer = this.calculatorInputsData
                .filter((c) => c.GroupName == group && c.IsVisible && c.Volume <= 0)
                .map((val) => val.DefaultValue)
                .reduce((sum, current) => sum + current, 0);
            const totalSelectedData = this.calculatorInputsData
                .filter((c) => c.GroupName == group && c.IsVisible)
                .map((val) => +val.Volume).length;
            const totalSelLength = this.calculatorInputsData
                .filter((c) => c.GroupName == group &&
                c.IsVisible &&
                c.Volume <= 0 &&
                c.DefaultValue <= 0)
                .map((val) => +val.Volume).length;
            return (totalSelLength != totalSelectedData && totalPer == 0) ||
                totalPer === 100
                ? true
                : 'You need to add excipient volume.';
            // : 'You need to set 100% for combinations.';
        }
        else if (group === 'SupplierCount') {
            const noSelectedCount = this.getComputedExcipient().filter((c) => c.Value > 0 && c.SupplierCount === 0);
            return noSelectedCount.length === 0
                ? true
                : 'Please select supplier count.';
        }
        else if (group === 'Suppliers') {
            let supplierError = 0;
            let avgPriceError = 0;
            let totalPerError = 0;
            this.getComputedExcipient().map((val) => {
                const selectedSuppliers = [];
                for (let i = 0; i < val.SupplierCount; i++) {
                    selectedSuppliers.push(val.Suppliers[i]);
                }
                const emptySuppliers = selectedSuppliers.filter((v) => v.SupplierName === null || v.SupplierName === '');
                const emptyAvgPrice = selectedSuppliers.filter((v) => v.AvgPrice === null || v.AvgPrice === '' || v.AvgPrice === 0);
                const totalPer = selectedSuppliers
                    .map((v) => v.Value)
                    .reduce((sum, current) => sum + current);
                const totalSelLength = selectedSuppliers
                    .filter((c) => c.Value <= 0 && c.Volume <= 0)
                    .map((val) => +val.Volume).length;
                if (emptySuppliers.length > 0) {
                    supplierError++;
                    // return 'Please select supplier.';
                }
                if ((totalSelLength == 0 && totalPer == 0) || totalPer == 100) {
                    // return 'You need to set 100% for combinations of suppliers.';
                }
                else {
                    totalPerError++;
                }
                if (emptyAvgPrice.length > 0) {
                    avgPriceError++;
                }
            });
            if (supplierError > 0) {
                return 'Please select supplier.';
            }
            else if (totalPerError > 0) {
                return 'You need to set 100% for combinations of suppliers.';
            }
            else if (avgPriceError > 0) {
                return 'Please enter avg. price.';
            }
            else {
                return true;
            }
        }
        else if (group === 'TotalVolume') {
            const totalPer = this.getComputedExcipient()
                .map((val) => val.DefaultValue)
                .reduce((sum, current) => sum + current, 0);
            const totalVolume = this.getComputedExcipient()
                .map((val) => val.Volume)
                .reduce((sum, current) => sum + current, 0);
            const totalVolumeEnter = this.calculatorInputsData
                .filter((c) => c.GroupName == group && c.IsVisible)
                .map((val) => +val.ValueText)
                .reduce((sum, current) => sum + current, 0);
            if (totalPer === 0 && totalVolume !== totalVolumeEnter) {
                return `Total Volume should be same as sum of volumes of excipient's taken from page #3`;
            }
            else if (totalPer > 0 && totalVolume >= totalVolumeEnter) {
                return `Please enter volume greater than the total excipient volume.`;
            }
            else {
                return true;
            }
        }
        else {
            return true;
        }
    }
    restartInputComponent() {
        this.calculatorInputsDataFull = undefined;
        this.calculatorInputsData = undefined;
        this.calculatorData = undefined;
        this.inputGroups = [];
        this.countOfPages = 0;
        this.pageNumber = 1;
        this.prewPageButtonAllowed = false;
        this.nextPageButtonAllowed = true;
        this.buttonCalculateAllowed = false;
        this.isDependentValue = false;
        this.isDataContainsRequired = false;
        this.getAllInputsByCalculatorId();
        // this.getCalculatorDataById();
    }
    addNewSupplier(data, index, calculatorInput) {
        if (!data.text) {
            data.customItem = null;
            return;
        }
        const newItem = {
            Name: data.text,
            ID: 0,
        };
        data.customItem = newItem;
        calculatorInput.Suppliers[index].SupplierName = data.text;
        calculatorInput.Suppliers[index].SupplierId = 0;
        return calculatorInput;
    }
    validateIfVisibleItemOrNot() {
        const isVisibleItems = this.calculatorInputsData.filter((item) => item.IsVisible);
        if (isVisibleItems.length === 0) {
            this.restartInputComponent();
            (0,devextreme_ui_notify__WEBPACK_IMPORTED_MODULE_0__["default"])('Data Not Found, restarting workflow...', 'error', 7000);
            return false;
        }
        return true;
    }
    getGroupTitle(group) {
        if (group === 'Excipient' || group === 'TotalVolume') {
            return `${group} (${this.Volume.Name})`;
        }
        return group.replace(/([A-Z])/g, ' $1').trim();
    }
    setValueOrVolume(e, excipient, i, type) {
        const totalVolume = +excipient.Volume;
        const singleSupplier = excipient.Suppliers[i];
        const enterValue = +e.value;
        // const ValuePer = +singleSupplier.Value;
        // const Volume = +singleSupplier.Volume;
        if (type == 'value' && enterValue > 0) {
            const calVolume = ((totalVolume * enterValue) / 100).toFixed(1);
            excipient.Suppliers[i].Volume = +calVolume;
        }
        if (type == 'volume' && enterValue > 0) {
            const calPer = ((enterValue / totalVolume) * 100).toFixed(0);
            excipient.Suppliers[i].Value = +calPer;
        }
    }
    getCurrencyAndUnit() {
        const CurrencyCode = this.Currency.CurrencyCode || 'USD';
        const VolumeName = this.Volume.Name || 'Kg';
        return `${CurrencyCode}/${VolumeName}`;
    }
    onChangeSupplierCount(selectedObject, calculatorInput) {
        const currentValue = selectedObject.value;
        const previousValue = selectedObject.previousValue;
        if (currentValue !== previousValue) {
            calculatorInput.Suppliers.map((item) => {
                item['SupplierId'] = null;
                item['SupplierName'] = null;
                item['AvgPrice'] = 0;
                item['Value'] = 0;
                item['Volume'] = 0;
            });
        }
    }
}
InputSelectorComponent.ɵfac = function InputSelectorComponent_Factory(t) { return new (t || InputSelectorComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_services_calculator_service__WEBPACK_IMPORTED_MODULE_1__.CalculatorService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_2__.SharedService)); };
InputSelectorComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: InputSelectorComponent, selectors: [["app-input-selector"]], inputs: { calculatorId: "calculatorId", restart: "restart", SetCurrency: "SetCurrency", SetVolume: "SetVolume" }, outputs: { calculatedData: "calculatedData", calculatorTemplateReturnedData: "calculatorTemplateReturnedData" }, decls: 1, vars: 1, consts: [[4, "ngIf"], [1, "container"], [4, "ngFor", "ngForOf"], [1, "row"], ["class", "hideIfEmpty col-lg-4 col-xl-4 col-md-6 col-sm-12", 4, "ngFor", "ngForOf"], ["class", "row", 4, "ngIf"], [1, "col-lg-6", "col-xl-6", "col-md-6", "col-sm-12"], ["class", "redText left", 4, "ngIf"], [1, "right"], ["type", "button", 1, "btn", "btn-outline-dark", "buttonMargin", 3, "disabled", "click"], ["type", "button", 1, "btn", "btn-outline-dark", "buttonMargin", 3, "disabled", "ngClass", "click"], ["type", "button", 1, "btn", "btn-primary", "buttonMargin", 3, "ngClass", "disabled", "click"], [1, "hideIfEmpty", "col-lg-4", "col-xl-4", "col-md-6", "col-sm-12"], ["class", "card margin6TopBottom", 4, "ngIf"], [1, "card", "margin6TopBottom"], [1, "card-body"], [1, "card-title"], ["class", "redText", 4, "ngIf"], [1, "card-text"], [3, "value", "valueChange"], [1, "redText"], ["displayExpr", "Name", "valueExpr", "Id", 3, "dataSource", "value", "valueChange"], ["class", "mt-2", 4, "ngIf"], [3, "min", "max", "value", "step", "rtlEnabled", "disabled", "valueChange"], ["slider", ""], ["position", "top", 3, "visible"], [1, "horizontalSpace"], [3, "format", "min", "max", "showSpinButtons", "step", "value", "disabled", "valueChange"], [1, "mt-2"], ["type", "text", 3, "ngModel", "disabled", "ngModelChange"], [3, "dataSource", "value", "disabled", "valueChange", "onValueChanged"], ["class", "hideIfEmpty col-md-12 col-sm-12", 4, "ngFor", "ngForOf"], [1, "hideIfEmpty", "col-md-12", "col-sm-12"], [1, "card-header"], ["class", "col-md-4", 4, "ngFor", "ngForOf"], [1, "col-md-4"], [1, "border", "p-2"], [1, "card-text1", "form-group"], ["displayExpr", "Name", "valueExpr", "Id", 3, "dataSource", "acceptCustomValue", "minSearchLength", "searchEnabled", "showDataBeforeSearch", "value", "onCustomItemCreating", "valueChange"], [3, "min", "max", "value", "step", "rtlEnabled", "valueChange", "onValueChanged"], ["valueChangeEvent", "keyup", 3, "format", "min", "max", "showSpinButtons", "step", "value", "valueChange", "change"], ["type", "text", 3, "ngModel", "ngModelChange"], [1, "mb-2", "text-center", "text-secondary"], ["type", "text", 3, "ngModel", "ngModelChange", "onValueChanged"], [1, "redText", "left"]], template: function InputSelectorComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](0, InputSelectorComponent_div_0_Template, 5, 4, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx.calculatorInputsData);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_5__.DxTextBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_6__.DxSelectBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxSliderComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_8__.DxoLabelComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_9__.DxNumberBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgModel, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgClass], styles: ["h4[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%] {\r\n    color: #4B3961;\r\n}\r\n\r\n.horizontalSpace[_ngcontent-%COMP%] {\r\n    margin-top: 5px !important;\r\n}\r\n\r\n.buttonMargin[_ngcontent-%COMP%] {\r\n    margin: 5px;\r\n}\r\n\r\n.h5Color[_ngcontent-%COMP%] {\r\n    color: #333 !important;\r\n}\r\n\r\n.redText[_ngcontent-%COMP%] {\r\n    color: red;\r\n}\r\n\r\n.hideIfEmpty[_ngcontent-%COMP%]:empty {\r\n    display: none;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0LXNlbGVjdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJpbnB1dC1zZWxlY3Rvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDQgaDUge1xyXG4gICAgY29sb3I6ICM0QjM5NjE7XHJcbn1cclxuXHJcbi5ob3Jpem9udGFsU3BhY2Uge1xyXG4gICAgbWFyZ2luLXRvcDogNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5idXR0b25NYXJnaW4ge1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbn1cclxuXHJcbi5oNUNvbG9yIHtcclxuICAgIGNvbG9yOiAjMzMzICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5yZWRUZXh0IHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5oaWRlSWZFbXB0eTplbXB0eSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59Il19 */"] });


/***/ }),

/***/ 39730:
/*!***********************************************!*\
  !*** ./src/app/pages/pages-routing.module.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PagesRoutingModule": () => (/* binding */ PagesRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/guard/auth.guard */ 9324);
/* harmony import */ var src_services_pending_changes_guard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/pending-changes.guard */ 34235);
/* harmony import */ var _calculator_calculator_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./calculator/calculator.component */ 6087);
/* harmony import */ var _share_share_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./share/share.component */ 88766);
/* harmony import */ var _study_area_preview_study_area_preview_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./study-area-preview/study-area-preview.component */ 31333);
/* harmony import */ var _study_area_summary_study_area_summary_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./study-area-summary/study-area-summary.component */ 71369);
/* harmony import */ var _study_area_study_area_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./study-area/study-area.component */ 4441);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);










const routes = [
    {
        path: 'study-summary',
        component: _study_area_summary_study_area_summary_component__WEBPACK_IMPORTED_MODULE_5__.StudyAreaSummaryComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
    },
    {
        path: 'study-area/:studyArea/:spmId/:mycId/:dataSetId',
        component: _study_area_study_area_component__WEBPACK_IMPORTED_MODULE_6__.StudyAreaComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
        canDeactivate: [src_services_pending_changes_guard__WEBPACK_IMPORTED_MODULE_1__.PendingChangesGuard]
    },
    {
        path: 'study-area-preview/:spmId/:mycId',
        component: _study_area_preview_study_area_preview_component__WEBPACK_IMPORTED_MODULE_4__.StudyAreaPreviewComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
    },
    {
        path: 'calculator/:calculatorId/:marketYearCategoryId/:studyProjectMarketYearId',
        component: _calculator_calculator_component__WEBPACK_IMPORTED_MODULE_2__.CalculatorComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
    },
    {
        path: 'share',
        component: _share_share_component__WEBPACK_IMPORTED_MODULE_3__.ShareComponent,
        canActivate: [src_guard_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard],
    },
];
class PagesRoutingModule {
}
PagesRoutingModule.ɵfac = function PagesRoutingModule_Factory(t) { return new (t || PagesRoutingModule)(); };
PagesRoutingModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({ type: PagesRoutingModule });
PagesRoutingModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterModule.forChild(routes)], _angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](PagesRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterModule], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_8__.RouterModule] }); })();


/***/ }),

/***/ 18950:
/*!***************************************!*\
  !*** ./src/app/pages/pages.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PagesModule": () => (/* binding */ PagesModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @angular/platform-browser */ 50318);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! @angular/platform-browser/animations */ 73598);
/* harmony import */ var _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shared/shared.module */ 44466);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! devextreme-angular */ 20783);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! devextreme-angular */ 62163);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! devextreme-angular */ 59331);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! devextreme-angular */ 85915);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! devextreme-angular */ 21856);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! devextreme-angular */ 38772);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! devextreme-angular */ 57487);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! devextreme-angular */ 37546);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! devextreme-angular */ 42473);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! devextreme-angular */ 72766);
/* harmony import */ var _study_area_summary_study_area_summary_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./study-area-summary/study-area-summary.component */ 71369);
/* harmony import */ var _study_area_study_area_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./study-area/study-area.component */ 4441);
/* harmony import */ var _pages_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages-routing.module */ 39730);
/* harmony import */ var _study_area_preview_study_area_preview_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./study-area-preview/study-area-preview.component */ 31333);
/* harmony import */ var _share_share_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./share/share.component */ 88766);
/* harmony import */ var _study_area_components_supplier_market_share_supplier_market_share_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./study-area/components/supplier-market-share/supplier-market-share.component */ 51491);
/* harmony import */ var _study_area_components_lubricant_demand_lubricant_demand_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./study-area/components/lubricant-demand/lubricant-demand.component */ 19532);
/* harmony import */ var _study_area_components_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./study-area/components/show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var _study_area_preview_components_lubricant_demand_preview_lubricant_demand_preview_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component */ 80533);
/* harmony import */ var _study_area_preview_components_supplier_market_share_preview_supplier_market_share_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component */ 36958);
/* harmony import */ var _study_area_components_synthetic_penetration_synthetic_penetration_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./study-area/components/synthetic-penetration/synthetic-penetration.component */ 50004);
/* harmony import */ var _study_area_preview_components_synthetic_penetration_preview_synthetic_penetration_preview_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component */ 17763);
/* harmony import */ var _study_area_components_vehicle_parc_statistics_vehicle_parc_statistics_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./study-area/components/vehicle-parc-statistics/vehicle-parc-statistics.component */ 13818);
/* harmony import */ var _study_area_preview_components_vehicle_parc_statistics_preview_vehicle_parc_statistics_preview_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component */ 52864);
/* harmony import */ var _study_area_components_service_category_consumption_service_category_consumption_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./study-area/components/service-category-consumption/service-category-consumption.component */ 84815);
/* harmony import */ var _study_area_preview_components_service_category_consumption_preview_service_category_consumption_preview_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./study-area-preview/components/service-category-consumption-preview/service-category-consumption-preview.component */ 77898);
/* harmony import */ var _study_area_components_average_price_average_price_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./study-area/components/average-price/average-price.component */ 63957);
/* harmony import */ var _study_area_components_average_price_average_price_preview_average_price_preview_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./study-area/components/average-price/average-price-preview/average-price-preview.component */ 61022);
/* harmony import */ var _study_area_components_specialty_excipient_sales_specialty_excipient_sales_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./study-area/components/specialty-excipient-sales/specialty-excipient-sales.component */ 16281);
/* harmony import */ var _study_area_components_specialty_excipient_sales_specialty_excipient_sales_preview_specialty_excipient_sales_preview_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./study-area/components/specialty-excipient-sales/specialty-excipient-sales-preview/specialty-excipient-sales-preview.component */ 69193);
/* harmony import */ var _calculator_calculator_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./calculator/calculator.component */ 6087);
/* harmony import */ var _calculator_components_input_selector_input_selector_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./calculator/components/input-selector/input-selector.component */ 89721);
/* harmony import */ var _calculator_components_calculator_preview_calculator_preview_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./calculator/components/calculator-preview/calculator-preview.component */ 44022);
/* harmony import */ var _study_area_components_psc_psc_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./study-area/components/psc/psc.component */ 92390);
/* harmony import */ var _study_area_components_psc_sub_product_type_sales_product_type_sales_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./study-area/components/psc/sub/product-type-sales/product-type-sales.component */ 40333);
/* harmony import */ var _study_area_components_psc_sub_product_type_sales_product_type_sale_preview_product_type_sale_preview_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./study-area/components/psc/sub/product-type-sales/product-type-sale-preview/product-type-sale-preview.component */ 12642);
/* harmony import */ var _study_area_components_psc_sub_brand_sales_brand_sales_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./study-area/components/psc/sub/brand-sales/brand-sales.component */ 62711);
/* harmony import */ var _study_area_components_psc_sub_brand_sales_brand_sales_preview_brand_sales_preview_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./study-area/components/psc/sub/brand-sales/brand-sales-preview/brand-sales-preview.component */ 36657);
/* harmony import */ var _study_area_components_psc_sub_segment_sales_segment_sales_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./study-area/components/psc/sub/segment-sales/segment-sales.component */ 86991);
/* harmony import */ var _study_area_components_psc_sub_segment_sales_segment_sales_preview_segment_sales_preview_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./study-area/components/psc/sub/segment-sales/segment-sales-preview/segment-sales-preview.component */ 51542);
/* harmony import */ var _study_area_components_psc_sub_european_country_sales_european_country_sales_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./study-area/components/psc/sub/european-country-sales/european-country-sales.component */ 50411);
/* harmony import */ var _study_area_components_psc_sub_european_country_sales_european_country_sales_preview_european_country_sales_preview_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./study-area/components/psc/sub/european-country-sales/european-country-sales-preview/european-country-sales-preview.component */ 34343);
/* harmony import */ var _study_area_components_shc_shc_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./study-area/components/shc/shc.component */ 34642);
/* harmony import */ var _study_area_components_shc_sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./study-area/components/shc/sub/pts/pts.component */ 83469);
/* harmony import */ var _study_area_components_shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./study-area/components/shc/sub/shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _study_area_components_shc_sub_pcs_pcs_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./study-area/components/shc/sub/pcs/pcs.component */ 77047);
/* harmony import */ var _study_area_components_shc_sub_ir_ir_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./study-area/components/shc/sub/ir/ir.component */ 34344);
/* harmony import */ var _study_area_components_shc_sub_cbs_cbs_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./study-area/components/shc/sub/cbs/cbs.component */ 5493);
/* harmony import */ var _study_area_components_shc_sub_fs_fs_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./study-area/components/shc/sub/fs/fs.component */ 14936);
/* harmony import */ var _study_area_components_shc_sub_os_os_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./study-area/components/shc/sub/os/os.component */ 91823);
/* harmony import */ var _study_area_components_shc_sub_sc_sc_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./study-area/components/shc/sub/sc/sc.component */ 37527);
/* harmony import */ var _study_area_components_shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./study-area/components/shc/sub/shc-preview/preview-top-menu/preview-top-menu.component */ 57952);
/* harmony import */ var _study_area_components_ehc_ehc_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./study-area/components/ehc/ehc.component */ 11005);
/* harmony import */ var _study_area_components_ehc_sub_ehc_sales_ehc_sales_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./study-area/components/ehc/sub/ehc-sales/ehc-sales.component */ 71082);
/* harmony import */ var _study_area_components_ehc_sub_market_consumption_market_consumption_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./study-area/components/ehc/sub/market-consumption/market-consumption.component */ 5492);
/* harmony import */ var _study_area_components_ehc_sub_market_consumption_market_consumption_preview_market_consumption_preview_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./study-area/components/ehc/sub/market-consumption/market-consumption-preview/market-consumption-preview.component */ 33249);
/* harmony import */ var _study_area_components_ehc_sub_ehc_sales_ehc_sales_preview_ehc_sales_preview_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./study-area/components/ehc/sub/ehc-sales/ehc-sales-preview/ehc-sales-preview.component */ 33723);
/* harmony import */ var _study_area_components_ivm_ivm_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./study-area/components/ivm/ivm.component */ 32343);
/* harmony import */ var _study_area_components_ivm_sub_product_composition_product_composition_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./study-area/components/ivm/sub/product-composition/product-composition.component */ 4445);
/* harmony import */ var _study_area_components_ivm_sub_ps_ps_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./study-area/components/ivm/sub/ps/ps.component */ 85237);
/* harmony import */ var _study_area_components_ivm_sub_product_composition_product_composition_preview_product_composition_preview_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./study-area/components/ivm/sub/product-composition/product-composition-preview/product-composition-preview.component */ 59634);
/* harmony import */ var _study_area_components_pnc_pnc_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./study-area/components/pnc/pnc.component */ 64817);
/* harmony import */ var _study_area_components_pnc_sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./study-area/components/pnc/sub/pts/pts.component */ 66966);
/* harmony import */ var _handsontable_angular__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! @handsontable/angular */ 14766);
/* harmony import */ var handsontable_registry__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! handsontable/registry */ 56084);
/* harmony import */ var _data_grids_configuration_data_grids_configuration_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../data-grids-configuration/data-grids-configuration.component */ 10215);
/* harmony import */ var _study_area_components_study_study_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./study-area/components/study/study.component */ 90542);
/* harmony import */ var _shared_pivot_grid_preview_pivot_grid_preview_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../shared/pivot-grid-preview/pivot-grid-preview.component */ 99361);
/* harmony import */ var _shared_pivot_grid_preview_pivot_grid_preview_top_menu_pivot_grid_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../shared/pivot-grid-preview/pivot-grid-preview-top-menu/pivot-grid-preview-top-menu.component */ 71146);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @angular/core */ 3184);



































































(0,handsontable_registry__WEBPACK_IMPORTED_MODULE_58__.registerAllModules)();
class PagesModule {
}
PagesModule.ɵfac = function PagesModule_Factory(t) { return new (t || PagesModule)(); };
PagesModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_59__["ɵɵdefineNgModule"]({ type: PagesModule });
PagesModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_59__["ɵɵdefineInjector"]({ imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_60__.CommonModule,
            _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_61__.BrowserModule,
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_62__.BrowserAnimationsModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_63__.DxDataGridModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_64__.DxPivotGridModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_65__.DxSelectBoxModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_66__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_66__.ReactiveFormsModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_67__.DxButtonModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_68__.DxTextBoxModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_69__.DxSliderModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_70__.DxNumberBoxModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_71__.DxTabPanelModule,
            _pages_routing_module__WEBPACK_IMPORTED_MODULE_3__.PagesRoutingModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_72__.DxPopupModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_73__.DxTemplateModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_74__.DxTooltipModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_75__.DxListModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_76__.DxRadioGroupModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_77__.DxLoadIndicatorModule,
            _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_78__.NgSelectModule,
            _handsontable_angular__WEBPACK_IMPORTED_MODULE_79__.HotTableModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_80__.DxTextAreaModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_81__.DxFormModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_82__.DxDropDownButtonModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_83__.DxTreeViewModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_59__["ɵɵsetNgModuleScope"](PagesModule, { declarations: [_study_area_summary_study_area_summary_component__WEBPACK_IMPORTED_MODULE_1__.StudyAreaSummaryComponent,
        _study_area_study_area_component__WEBPACK_IMPORTED_MODULE_2__.StudyAreaComponent,
        _study_area_preview_study_area_preview_component__WEBPACK_IMPORTED_MODULE_4__.StudyAreaPreviewComponent,
        _share_share_component__WEBPACK_IMPORTED_MODULE_5__.ShareComponent,
        _study_area_components_supplier_market_share_supplier_market_share_component__WEBPACK_IMPORTED_MODULE_6__.SupplierMarketShareComponent,
        _study_area_components_lubricant_demand_lubricant_demand_component__WEBPACK_IMPORTED_MODULE_7__.LubricantDemandComponent,
        _study_area_components_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_8__.ShowInitialSetupComponent,
        _study_area_preview_components_lubricant_demand_preview_lubricant_demand_preview_component__WEBPACK_IMPORTED_MODULE_9__.LubricantDemandPreviewComponent,
        _study_area_preview_components_supplier_market_share_preview_supplier_market_share_preview_component__WEBPACK_IMPORTED_MODULE_10__.SupplierMarketSharePreviewComponent,
        _study_area_components_synthetic_penetration_synthetic_penetration_component__WEBPACK_IMPORTED_MODULE_11__.SyntheticPenetrationComponent,
        _study_area_preview_components_synthetic_penetration_preview_synthetic_penetration_preview_component__WEBPACK_IMPORTED_MODULE_12__.SyntheticPenetrationPreviewComponent,
        _study_area_components_vehicle_parc_statistics_vehicle_parc_statistics_component__WEBPACK_IMPORTED_MODULE_13__.VehicleParcStatisticsComponent,
        _study_area_preview_components_vehicle_parc_statistics_preview_vehicle_parc_statistics_preview_component__WEBPACK_IMPORTED_MODULE_14__.VehicleParcStatisticsPreviewComponent,
        _study_area_components_service_category_consumption_service_category_consumption_component__WEBPACK_IMPORTED_MODULE_15__.ServiceCategoryConsumptionComponent,
        _study_area_preview_components_service_category_consumption_preview_service_category_consumption_preview_component__WEBPACK_IMPORTED_MODULE_16__.ServiceCategoryConsumptionPreviewComponent,
        _study_area_components_average_price_average_price_component__WEBPACK_IMPORTED_MODULE_17__.AveragePriceComponent,
        _study_area_components_average_price_average_price_preview_average_price_preview_component__WEBPACK_IMPORTED_MODULE_18__.AveragePricePreviewComponent,
        _study_area_components_specialty_excipient_sales_specialty_excipient_sales_component__WEBPACK_IMPORTED_MODULE_19__.SpecialtyExcipientSalesComponent,
        _study_area_components_specialty_excipient_sales_specialty_excipient_sales_preview_specialty_excipient_sales_preview_component__WEBPACK_IMPORTED_MODULE_20__.SpecialtyExcipientSalesPreviewComponent,
        _calculator_calculator_component__WEBPACK_IMPORTED_MODULE_21__.CalculatorComponent,
        _calculator_components_input_selector_input_selector_component__WEBPACK_IMPORTED_MODULE_22__.InputSelectorComponent,
        _calculator_components_calculator_preview_calculator_preview_component__WEBPACK_IMPORTED_MODULE_23__.CalculatorPreviewComponent,
        _study_area_components_psc_psc_component__WEBPACK_IMPORTED_MODULE_24__.PSCComponent,
        _study_area_components_psc_sub_product_type_sales_product_type_sales_component__WEBPACK_IMPORTED_MODULE_25__.ProductTypeSalesComponent,
        _study_area_components_psc_sub_product_type_sales_product_type_sale_preview_product_type_sale_preview_component__WEBPACK_IMPORTED_MODULE_26__.ProductTypeSalePreviewComponent,
        _study_area_components_psc_sub_brand_sales_brand_sales_component__WEBPACK_IMPORTED_MODULE_27__.BrandSalesComponent,
        _study_area_components_psc_sub_brand_sales_brand_sales_preview_brand_sales_preview_component__WEBPACK_IMPORTED_MODULE_28__.BrandSalesPreviewComponent,
        _study_area_components_psc_sub_segment_sales_segment_sales_component__WEBPACK_IMPORTED_MODULE_29__.SegmentSalesComponent,
        _study_area_components_psc_sub_segment_sales_segment_sales_preview_segment_sales_preview_component__WEBPACK_IMPORTED_MODULE_30__.SegmentSalesPreviewComponent,
        _study_area_components_psc_sub_european_country_sales_european_country_sales_component__WEBPACK_IMPORTED_MODULE_31__.EuropeanCountrySalesComponent,
        _study_area_components_psc_sub_european_country_sales_european_country_sales_preview_european_country_sales_preview_component__WEBPACK_IMPORTED_MODULE_32__.EuropeanCountrySalesPreviewComponent,
        _study_area_components_shc_shc_component__WEBPACK_IMPORTED_MODULE_33__.SHCComponent,
        _study_area_components_shc_sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_34__.PtsComponent,
        _study_area_components_shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_35__.ShcPreviewComponent,
        _study_area_components_shc_sub_pcs_pcs_component__WEBPACK_IMPORTED_MODULE_36__.PcsComponent,
        _study_area_components_shc_sub_ir_ir_component__WEBPACK_IMPORTED_MODULE_37__.IrComponent,
        _study_area_components_shc_sub_cbs_cbs_component__WEBPACK_IMPORTED_MODULE_38__.CbsComponent,
        _study_area_components_shc_sub_fs_fs_component__WEBPACK_IMPORTED_MODULE_39__.FsComponent,
        _study_area_components_shc_sub_os_os_component__WEBPACK_IMPORTED_MODULE_40__.OsComponent,
        _study_area_components_shc_sub_sc_sc_component__WEBPACK_IMPORTED_MODULE_41__.ScComponent,
        _study_area_components_shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_42__.PreviewTopMenuComponent,
        _study_area_components_ehc_ehc_component__WEBPACK_IMPORTED_MODULE_43__.EhcComponent,
        _study_area_components_ehc_sub_ehc_sales_ehc_sales_component__WEBPACK_IMPORTED_MODULE_44__.EhcSalesComponent,
        _study_area_components_ehc_sub_market_consumption_market_consumption_component__WEBPACK_IMPORTED_MODULE_45__.MarketConsumptionComponent,
        _study_area_components_ehc_sub_market_consumption_market_consumption_preview_market_consumption_preview_component__WEBPACK_IMPORTED_MODULE_46__.MarketConsumptionPreviewComponent,
        _study_area_components_ehc_sub_ehc_sales_ehc_sales_preview_ehc_sales_preview_component__WEBPACK_IMPORTED_MODULE_47__.EhcSalesPreviewComponent,
        _study_area_components_ivm_ivm_component__WEBPACK_IMPORTED_MODULE_48__.IvmComponent,
        _study_area_components_ivm_sub_product_composition_product_composition_component__WEBPACK_IMPORTED_MODULE_49__.ProductCompositionComponent,
        _study_area_components_ivm_sub_ps_ps_component__WEBPACK_IMPORTED_MODULE_50__.PsComponent,
        _study_area_components_ivm_sub_product_composition_product_composition_preview_product_composition_preview_component__WEBPACK_IMPORTED_MODULE_51__.ProductCompositionPreviewComponent,
        _study_area_components_pnc_pnc_component__WEBPACK_IMPORTED_MODULE_52__.PncComponent,
        _study_area_components_pnc_sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_53__.PncPtsComponent,
        _data_grids_configuration_data_grids_configuration_component__WEBPACK_IMPORTED_MODULE_54__.DataGridsConfigurationComponent,
        _study_area_components_study_study_component__WEBPACK_IMPORTED_MODULE_55__.StudyComponent,
        _shared_pivot_grid_preview_pivot_grid_preview_component__WEBPACK_IMPORTED_MODULE_56__.PivotGridPreviewComponent,
        _shared_pivot_grid_preview_pivot_grid_preview_top_menu_pivot_grid_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_57__.PivotGridPreviewTopMenuComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_60__.CommonModule,
        _shared_shared_module__WEBPACK_IMPORTED_MODULE_0__.SharedModule,
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_61__.BrowserModule,
        _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_62__.BrowserAnimationsModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_63__.DxDataGridModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_64__.DxPivotGridModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_65__.DxSelectBoxModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_66__.FormsModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_66__.ReactiveFormsModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_67__.DxButtonModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_68__.DxTextBoxModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_69__.DxSliderModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_70__.DxNumberBoxModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_71__.DxTabPanelModule,
        _pages_routing_module__WEBPACK_IMPORTED_MODULE_3__.PagesRoutingModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_72__.DxPopupModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_73__.DxTemplateModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_74__.DxTooltipModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_75__.DxListModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_76__.DxRadioGroupModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_77__.DxLoadIndicatorModule,
        _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_78__.NgSelectModule,
        _handsontable_angular__WEBPACK_IMPORTED_MODULE_79__.HotTableModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_80__.DxTextAreaModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_81__.DxFormModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_82__.DxDropDownButtonModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_83__.DxTreeViewModule] }); })();


/***/ }),

/***/ 88766:
/*!************************************************!*\
  !*** ./src/app/pages/share/share.component.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShareComponent": () => (/* binding */ ShareComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _shared_header_header_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/header/header.component */ 89470);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! devextreme-angular/core */ 85915);





function ShareComponent_div_46_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](2, "dx-button", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "a", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](data_r2.value);
} }
function ShareComponent_div_47_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "input", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r3 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("value", data_r3.value > 0 ? data_r3.value : "");
} }
class ShareComponent {
    constructor() {
        this.shareData = [
            {
                Country: 'Bahrain',
                Supplier: 'Venoco',
                MarketSegment: 'Commercial',
                PreviousYearConsumer: 1.3,
                PreviousYearPerConsumer: 5.3,
                BaseYearConsumer: '',
                BaseYearPerConsumer: '',
                PreviousYearIndustrial: 1.6,
                PreviousYearPerIndustrial: 7.0,
                BaseYearIndustrial: '',
                BaseYearPerIndustrial: '',
                PreviousYearCommercial: 0.7,
                PreviousYearPerCommercial: 5.8,
                BaseYearCommercial: '',
                BaseYearPerCommercial: '',
            },
            {
                Country: 'Bahrain',
                Supplier: 'Shell',
                MarketSegment: 'Consumer',
                PreviousYearConsumer: 1.3,
                PreviousYearPerConsumer: 5.3,
                BaseYearConsumer: '',
                BaseYearPerConsumer: '',
                PreviousYearIndustrial: 1.6,
                PreviousYearPerIndustrial: 7.0,
                BaseYearIndustrial: '',
                BaseYearPerIndustrial: '',
                PreviousYearCommercial: 0.7,
                PreviousYearPerCommercial: 5.8,
                BaseYearCommercial: '',
                BaseYearPerCommercial: '',
            },
        ];
    }
    ngOnInit() { }
}
ShareComponent.ɵfac = function ShareComponent_Factory(t) { return new (t || ShareComponent)(); };
ShareComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ShareComponent, selectors: [["app-share"]], decls: 48, vars: 12, consts: [["setTitle", "Lubricant Demand"], [1, "container-fluid", "my-4"], [1, "row", "justify-content-center"], [1, "col"], [1, "card"], [1, "card-body", "p-2", "small"], [1, "row"], [1, "text-secondary"], [1, "field-value"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled"], ["caption", "Market Segment", "dataField", "MarketSegment"], ["caption", "Supplier", "dataField", "Supplier"], ["caption", "2020", "dataField", "PreviousYearCommercial", 3, "width"], ["caption", "% Of Total", "width", "100", "dataField", "PreviousYearPerCommercial"], ["caption", "2021", "dataField", "BaseYearCommercial", "cellTemplate", "baseYearCellTemplate", 3, "width"], ["caption", "% Of Total", "dataField", "BaseYearPerCommercial", 3, "width"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], [4, "dxTemplate", "dxTemplateOf"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);"], ["type", "text", 1, "form-control", "form-control-sm", 3, "value"]], template: function ShareComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "app-header", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](9, "Study Name:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](11, "Lubesnet-2022-India-001-DEV");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](13, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](14, "Data Set:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](15, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](16, "Lubesnet");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](17, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](18, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](19, "Study Year:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](21, "2022");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](24, "Project:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](25, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](26, "LBN-PRJ-2022-001");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](28, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](29, "Project Lead:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](30, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](31, "pranav gandhi");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](32, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](33, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](34, "Analyst:");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](35, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](36, "Sachin Patidar");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](37, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](38, "dx-data-grid", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](39, "dxi-column", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](40, "dxi-column", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](41, "dxi-column", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](42, "dxi-column", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](43, "dxi-column", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](44, "dxi-column", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](45, "dxi-column", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](46, ShareComponent_div_46_Template, 6, 1, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](47, ShareComponent_div_47_Template, 2, 1, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](38);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dataSource", ctx.shareData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("width", 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("width", 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("width", 100);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowEditing", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("dxTemplateOf", "baseYearCellTemplate");
    } }, directives: [_shared_header_header_component__WEBPACK_IMPORTED_MODULE_0__.HeaderComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_2__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__.DxiColumnComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_4__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_5__.DxButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaGFyZS5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 80533:
/*!********************************************************************************************************************!*\
  !*** ./src/app/pages/study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LubricantDemandPreviewComponent": () => (/* binding */ LubricantDemandPreviewComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);









const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class LubricantDemandPreviewComponent {
    constructor(studyService, isLoadingService, alertService, route, router) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        // studyData: LubricantDemandDataItem[] = [];
        this._studyData = [];
        this.currentYear = 0;
        // currentYear: number = 0;
        this.previousYear1 = 0;
        this.previousYear2 = 0;
        this.foreCastYear1 = 0;
        this.foreCastYear2 = 0;
        this.volumeYears = [];
        this.cagr1 = '';
        this.cagr2 = '';
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.gridFields = [];
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    }
    set studyData(v) {
        // console.log(v);
        this._studyData = v;
    }
    get studyData() {
        return this._studyData;
    }
    ngOnInit() {
        // this.getLubricantDemandData();
    }
    ngOnChanges(changes) {
        //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.
        //Add '${implements OnChanges}' to the class.
        // this.foreCastYear1 = changes['foreCastYear1'].currentValue;
        this.getPreviewData(this.studyData);
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'MarketSegment',
                area: 'row',
                caption: 'Market Segment',
                dataType: 'string',
                width: 110,
            },
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                width: 150,
                dataType: 'string',
            },
            {
                dataField: 'SubProduct',
                caption: 'Sub Product',
                area: 'filter',
                width: 90,
                summaryDisplayMode: 'none',
                dataType: 'string',
            },
            {
                dataField: 'ViscosityGrade',
                area: 'filter',
                caption: 'Viscosity Grade',
                width: 150,
                dataType: 'string',
                summaryDisplayMode: 'none',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Lubricant Demand, KTonnes',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 80,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
    getPreviewData(studyData) {
        const currentYear = this.currentYear;
        // this.foreCastYear1 = currentYear + 4;
        // this.foreCastYear2 = currentYear + 10;
        // this.foreCastYear2 = this.foreCastYear1 + 5;
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: currentYear - 5,
                Volume: +item.PreviousYear5,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: currentYear - 4,
                Volume: +item.PreviousYear4,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: currentYear - 3,
                Volume: +item.PreviousYear3,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: currentYear - 2,
                Volume: +item.PreviousYear2,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: currentYear - 1,
                Volume: +item.PreviousYear1,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: currentYear,
                Volume: +item.CurrentYear,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: this.foreCastYear1,
                Volume: +item.Forecast1,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                ProductCategory: item.ProductCategory,
                SubProduct: item.SubProduct,
                ViscosityGrade: item.ViscosityGrade,
                Year: this.foreCastYear2,
                Volume: +item.Forecast2,
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    changeStudyData(studyData) {
        this.studyData = studyData;
        this.getPreviewData(this.studyData);
    }
    // not in use
    getLubricantDemandData() {
        this.isLoadingService.add();
        this.studyService
            .getLubricantDemandData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyData =
                    studyData.LubricantDemandDataItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(studyData.InitialSetup);
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - 1;
                this.volumeYears = [];
                const myYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    myYears[j] = i;
                }
                this.currentYear = currentYear;
                // this.foreCastYear1 = currentYear + 5;
                this.foreCastYear1 = currentYear + 4;
                // this.foreCastYear2 = currentYear + 10;
                this.foreCastYear2 = this.foreCastYear1 + 5;
                const previewData = [];
                this.studyData.map((item) => {
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 5,
                        Volume: item.PreviousYear5,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 4,
                        Volume: item.PreviousYear4,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 3,
                        Volume: item.PreviousYear3,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 2,
                        Volume: item.PreviousYear2,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 1,
                        Volume: item.PreviousYear1,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear,
                        Volume: item.CurrentYear,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: this.foreCastYear1,
                        Volume: item.Forecast1,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: this.foreCastYear2,
                        Volume: item.Forecast2,
                    });
                });
                this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]({
                    store: previewData,
                    fields: this.getGridFields(),
                });
                this.currentYear = currentYear;
                // this.foreCastYear1 = currentYear + 5;
                this.foreCastYear1 = currentYear + 4;
                // this.foreCastYear2 = currentYear + 10;
                this.foreCastYear2 = this.foreCastYear1 + 5;
                this.cagr1 = `${currentYear}-${this.foreCastYear1}`;
                this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;
                this.volumeYears.push({ field: `CurrentYear`, year: currentYear });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
}
LubricantDemandPreviewComponent.ɵfac = function LubricantDemandPreviewComponent_Factory(t) { return new (t || LubricantDemandPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_2__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_4__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_5__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_6__.Router)); };
LubricantDemandPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: LubricantDemandPreviewComponent, selectors: [["app-lubricant-demand-preview"]], inputs: { studyData: "studyData", currentYear: "currentYear", foreCastYear1: "foreCastYear1", foreCastYear2: "foreCastYear2" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function LubricantDemandPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_8__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsdWJyaWNhbnQtZGVtYW5kLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 77898:
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area-preview/components/service-category-consumption-preview/service-category-consumption-preview.component.ts ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ServiceCategoryConsumptionPreviewComponent": () => (/* binding */ ServiceCategoryConsumptionPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);




const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class ServiceCategoryConsumptionPreviewComponent {
    constructor() {
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear = 0;
        this.gridFields = [];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            let prevPer = 0;
            if (item.PreviousYear1 > 0) {
                prevPer = 0;
            }
            let currPer = 0;
            if (item.CurrentYear > 0) {
                currPer = 0;
            }
            previewData.push({
                EngineOilTypeName: item.EngineOilTypeName,
                SourceTypeCode: item.SourceTypeCode,
                ServiceCategoryCode: item.ServiceCategoryCode,
                Year: this.previousYear,
                Volume: item.PreviousYear1,
                perOfTotal: parseFloat(prevPer.toFixed(1)),
            });
            previewData.push({
                EngineOilTypeName: item.EngineOilTypeName,
                SourceTypeCode: item.SourceTypeCode,
                ServiceCategoryCode: item.ServiceCategoryCode,
                Year: this.currentYear,
                Volume: item.CurrentYear,
                perOfTotal: parseFloat(currPer.toFixed(1)),
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'EngineOilTypeName',
                area: 'column',
                caption: 'Engine Oil Type',
                dataType: 'string',
            },
            {
                dataField: 'SourceTypeCode',
                area: 'row',
                caption: 'Source Type',
                dataType: 'string',
                width: 110,
            },
            {
                dataField: 'ServiceCategoryCode',
                area: 'row',
                caption: 'Service Category',
                width: 150,
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Lubricant Demand, KTonnes',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: '% of Total',
                dataField: 'perOfTotal',
                dataFieldType: 'perOfTotal',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
ServiceCategoryConsumptionPreviewComponent.ɵfac = function ServiceCategoryConsumptionPreviewComponent_Factory(t) { return new (t || ServiceCategoryConsumptionPreviewComponent)(); };
ServiceCategoryConsumptionPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ServiceCategoryConsumptionPreviewComponent, selectors: [["app-service-category-consumption-preview"]], inputs: { studyData: "studyData", currentYear: "currentYear", previousYear: "previousYear" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function ServiceCategoryConsumptionPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_2__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJ2aWNlLWNhdGVnb3J5LWNvbnN1bXB0aW9uLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 36958:
/*!******************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component.ts ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SupplierMarketSharePreviewComponent": () => (/* binding */ SupplierMarketSharePreviewComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);










const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class SupplierMarketSharePreviewComponent {
    constructor(studyService, isLoadingService, alertService, route, sharedService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        // studyData: SupplierMarketShareItem[] = [];
        this.studyData = [];
        // get studyData(): SupplierMarketShareItem[] {
        //   return this._studyData;
        // }
        this.currentYear = 0;
        this.previousYear1 = 0;
        // currentYear: number = 0;
        // previousYear1: number = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.gridFields = [];
        this.marketSegments = [];
        this.marketSegmentVisePreviousYearTotal = {};
        this.marketSegmentViseCurrentYearTotal = {};
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
        this.getMarketSegment();
    }
    set setStudyData(v) {
        // console.log(v);
        this.studyData = v;
    }
    ngOnInit() {
        // this.getSupplierMarketShareData();
    }
    ngOnChanges(changes) {
        //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.
        //Add '${implements OnChanges}' to the class.
        // console.log(changes);
        this.getPreviewData(this.studyData);
    }
    changeStudyData(studyData) {
        this.setStudyData = studyData;
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const currentYear = this.currentYear;
        // this.foreCastYear1 = currentYear + 4;
        // this.foreCastYear2 = currentYear + 10;
        // this.foreCastYear2 = this.foreCastYear1 + 5;
        this.marketSegments.map((segmentData) => {
            this.marketSegmentVisePreviousYearTotal[segmentData.Name] = this.studyData
                .filter((data) => data.MarketSegmentId === segmentData.Id)
                .reduce((prev, curr) => prev + curr.PreviousYear1, 0);
            this.marketSegmentViseCurrentYearTotal[segmentData.Name] = this.studyData
                .filter((data) => data.MarketSegmentId === segmentData.Id)
                .reduce((prev, curr) => prev + curr.CurrentYear, 0);
        });
        const previewData = [];
        studyData.map((item) => {
            let prevPer = 0;
            if (item.PreviousYear1 > 0) {
                prevPer = this.calculatePerVolume(item.PreviousYear1, this.marketSegmentVisePreviousYearTotal[item.MarketSegment]);
            }
            let currPer = 0;
            if (item.CurrentYear > 0) {
                currPer = this.calculatePerVolume(item.CurrentYear, this.marketSegmentViseCurrentYearTotal[item.MarketSegment]);
            }
            previewData.push({
                MarketSegment: item.MarketSegment,
                SupplierName: item.SupplierName,
                Year: this.previousYear1,
                Volume: item.PreviousYear1,
                perOfTotal: prevPer,
            });
            previewData.push({
                MarketSegment: item.MarketSegment,
                SupplierName: item.SupplierName,
                Year: this.currentYear,
                Volume: item.CurrentYear,
                perOfTotal: currPer,
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    getSupplierMarketShareData() {
        this.isLoadingService.add();
        this.studyService
            .getSupplierMarketShareData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyData =
                    studyData.SupplierMarketShareItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(studyData.InitialSetup);
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - 2;
                this.currentYear = currentYear;
                this.previousYear1 = currentYear - 1;
                this.marketSegments.map((segmentData) => {
                    this.marketSegmentVisePreviousYearTotal[segmentData.Name] =
                        this.studyData
                            .filter((data) => data.MarketSegmentId === segmentData.Id)
                            .reduce((prev, curr) => prev + curr.PreviousYear1, 0);
                    this.marketSegmentViseCurrentYearTotal[segmentData.Name] =
                        this.studyData
                            .filter((data) => data.MarketSegmentId === segmentData.Id)
                            .reduce((prev, curr) => prev + curr.CurrentYear, 0);
                });
                // const totalPreviousVolume = this.studyData.reduce(
                //   (prev: number, curr: any) => prev + curr.PreviousYear1,
                //   0
                // );
                // const totalCurrentVolume = this.studyData.reduce(
                //   (prev: number, curr: any) => prev + curr.CurrentYear,
                //   0
                // );
                const previewData = [];
                this.studyData.map((item) => {
                    let prevPer = 0;
                    if (item.PreviousYear1 > 0) {
                        prevPer = this.calculatePerVolume(item.PreviousYear1, this.marketSegmentVisePreviousYearTotal[item.MarketSegment]);
                    }
                    let currPer = 0;
                    if (item.CurrentYear > 0) {
                        currPer = this.calculatePerVolume(item.CurrentYear, this.marketSegmentViseCurrentYearTotal[item.MarketSegment]);
                    }
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        SupplierName: item.SupplierName,
                        Year: this.previousYear1,
                        Volume: item.PreviousYear1,
                        perOfTotal: prevPer,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        SupplierName: item.SupplierName,
                        Year: this.currentYear,
                        Volume: item.CurrentYear,
                        perOfTotal: currPer,
                    });
                });
                this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]({
                    store: previewData,
                    fields: this.getGridFields(),
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    getMarketSegment() {
        this.sharedService.getMarketSegment().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.marketSegments = res.Data;
            }
        });
    }
    calculatePerVolume(colValue, totalColValue) {
        return parseFloat(((colValue * 100) / totalColValue).toFixed(1));
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'MarketSegment',
                area: 'column',
                caption: 'Market Segment',
                dataType: 'string',
                summaryDisplayMode: 'none',
            },
            {
                dataField: 'SupplierName',
                area: 'row',
                caption: 'Supplier',
                width: 150,
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Lubricant Demand, KTonnes',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: '% of Total',
                dataField: 'perOfTotal',
                dataFieldType: 'perOfTotal',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 80,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
SupplierMarketSharePreviewComponent.ɵfac = function SupplierMarketSharePreviewComponent_Factory(t) { return new (t || SupplierMarketSharePreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_2__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__.SharedService)); };
SupplierMarketSharePreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: SupplierMarketSharePreviewComponent, selectors: [["app-supplier-market-share-preview"]], inputs: { setStudyData: "setStudyData", currentYear: "currentYear", previousYear1: "previousYear1" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function SupplierMarketSharePreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", true)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", true)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_8__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_9__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdXBwbGllci1tYXJrZXQtc2hhcmUtcHJldmlldy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 17763:
/*!******************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component.ts ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SyntheticPenetrationPreviewComponent": () => (/* binding */ SyntheticPenetrationPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);





const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class SyntheticPenetrationPreviewComponent {
    constructor(route) {
        this.route = route;
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.gridFields = [];
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                Segment: item.Segment,
                SyntheticType: item.SyntheticType,
                Year: this.previousYear,
                Volume: item.PreviousYear1,
            });
            previewData.push({
                Segment: item.Segment,
                SyntheticType: item.SyntheticType,
                Year: this.currentYear,
                Volume: item.CurrentYear,
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
                summaryDisplayMode: 'none',
                width: 200,
            },
            {
                dataField: 'SyntheticType',
                area: 'column',
                caption: 'Synthetic Type',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Market Penetration',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 30,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
    changeStudyData(studyData) {
        this.studyData = studyData;
        this.getPreviewData(this.studyData);
    }
}
SyntheticPenetrationPreviewComponent.ɵfac = function SyntheticPenetrationPreviewComponent_Factory(t) { return new (t || SyntheticPenetrationPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__.ActivatedRoute)); };
SyntheticPenetrationPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: SyntheticPenetrationPreviewComponent, selectors: [["app-synthetic-penetration-preview"]], inputs: { studyData: "studyData", currentYear: "currentYear", previousYear: "previousYear" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function SyntheticPenetrationPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_3__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzeW50aGV0aWMtcGVuZXRyYXRpb24tcHJldmlldy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 52864:
/*!**********************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component.ts ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VehicleParcStatisticsPreviewComponent": () => (/* binding */ VehicleParcStatisticsPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);





const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class VehicleParcStatisticsPreviewComponent {
    constructor(route) {
        this.route = route;
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.gridFields = [];
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        // console.log(studyData);
        const { totalCurrentYear, totalPreviousYear1 } = studyData.reduce(({ totalCurrentYear, totalPreviousYear1 }, currentYear) => ({
            totalCurrentYear: totalCurrentYear + currentYear.CurrentYear,
            totalPreviousYear1: totalPreviousYear1 + currentYear.PreviousYear1,
        }), { totalCurrentYear: 0, totalPreviousYear1: 0 });
        const previewData = [];
        studyData.map((item) => {
            let prevPer = 0;
            if (item.PreviousYear1 > 0) {
                prevPer = this.calculatePerVolume(item.PreviousYear1, totalPreviousYear1);
            }
            let currPer = 0;
            if (item.CurrentYear > 0) {
                currPer = this.calculatePerVolume(item.CurrentYear, totalCurrentYear);
            }
            previewData.push({
                VehicleType: item.VehicleType,
                Year: this.previousYear,
                Volume: item.PreviousYear1,
                perOfTotal: parseFloat(prevPer.toFixed(1)),
            });
            previewData.push({
                VehicleType: item.VehicleType,
                Year: this.currentYear,
                Volume: item.CurrentYear,
                perOfTotal: parseFloat(currPer.toFixed(1)),
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'VehicleType',
                area: 'row',
                caption: 'Vehicle Type',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Mil Unit',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: '% of Total',
                dataField: 'perOfTotal',
                dataFieldType: 'perOfTotal',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
    calculatePerVolume(colValue, totalColValue) {
        return parseFloat(((colValue * 100) / totalColValue).toFixed(1));
    }
    changeStudyData(studyData) {
        this.studyData = studyData;
        this.getPreviewData(this.studyData);
    }
}
VehicleParcStatisticsPreviewComponent.ɵfac = function VehicleParcStatisticsPreviewComponent_Factory(t) { return new (t || VehicleParcStatisticsPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_2__.ActivatedRoute)); };
VehicleParcStatisticsPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: VehicleParcStatisticsPreviewComponent, selectors: [["app-vehicle-parc-statistics-preview"]], inputs: { studyData: "studyData", currentYear: "currentYear", previousYear: "previousYear" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function VehicleParcStatisticsPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_3__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_4__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZWhpY2xlLXBhcmMtc3RhdGlzdGljcy1wcmV2aWV3LmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 31333:
/*!**************************************************************************!*\
  !*** ./src/app/pages/study-area-preview/study-area-preview.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyAreaPreviewComponent": () => (/* binding */ StudyAreaPreviewComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _components_lubricant_demand_preview_lubricant_demand_preview_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/lubricant-demand-preview/lubricant-demand-preview.component */ 80533);
/* harmony import */ var _components_supplier_market_share_preview_supplier_market_share_preview_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/supplier-market-share-preview/supplier-market-share-preview.component */ 36958);












function StudyAreaPreviewComponent_app_lubricant_demand_preview_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](0, "app-lubricant-demand-preview");
} }
function StudyAreaPreviewComponent_app_supplier_market_share_preview_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](0, "app-supplier-market-share-preview");
} }
class StudyAreaPreviewComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.localStorageService = localStorageService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear1 = 0;
        this.previousYear2 = 0;
        this.foreCastYear1 = 0;
        this.foreCastYear2 = 0;
        this.volumeYears = [];
        this.cagr1 = '';
        this.cagr2 = '';
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.gridFields = [];
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    }
    ngOnInit() {
        // this.getLubricantDemandData();
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'MarketSegment',
                area: 'row',
                caption: 'Market Segment',
                dataType: 'string',
                width: 110,
            },
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                width: 150,
                dataType: 'string',
            },
            {
                dataField: 'SubProduct',
                caption: 'Sub Product',
                area: 'filter',
                width: 90,
                summaryDisplayMode: 'none',
                dataType: 'string',
            },
            {
                dataField: 'ViscosityGrade',
                area: 'filter',
                caption: 'Viscosity Grade',
                width: 150,
                dataType: 'string',
                summaryDisplayMode: 'none',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Lubricant Demand, KTonnes',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 80,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
    getLubricantDemandData() {
        this.isLoadingService.add();
        this.studyService
            .getLubricantDemandData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyData =
                    studyData.LubricantDemandDataItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(studyData.InitialSetup);
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - 1;
                this.volumeYears = [];
                const myYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    myYears[j] = i;
                }
                this.currentYear = currentYear;
                // this.foreCastYear1 = currentYear + 5;
                this.foreCastYear1 = currentYear + 4;
                // this.foreCastYear2 = currentYear + 10;
                this.foreCastYear2 = this.foreCastYear1 + 5;
                const previewData = [];
                this.studyData.map((item) => {
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 5,
                        Volume: item.PreviousYear5,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 4,
                        Volume: item.PreviousYear4,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 3,
                        Volume: item.PreviousYear3,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 2,
                        Volume: item.PreviousYear2,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear - 1,
                        Volume: item.PreviousYear1,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: currentYear,
                        Volume: item.CurrentYear,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: this.foreCastYear1,
                        Volume: item.Forecast1,
                    });
                    previewData.push({
                        MarketSegment: item.MarketSegment,
                        ProductCategory: item.ProductCategory,
                        SubProduct: item.SubProduct,
                        ViscosityGrade: item.ViscosityGrade,
                        Year: this.foreCastYear2,
                        Volume: item.Forecast2,
                    });
                });
                this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]({
                    store: previewData,
                    fields: this.getGridFields(),
                });
                this.currentYear = currentYear;
                // this.foreCastYear1 = currentYear + 5;
                this.foreCastYear1 = currentYear + 4;
                // this.foreCastYear2 = currentYear + 10;
                this.foreCastYear2 = this.foreCastYear1 + 5;
                this.cagr1 = `${currentYear}-${this.foreCastYear1}`;
                this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;
                this.volumeYears.push({ field: `CurrentYear`, year: currentYear });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    goBack() {
        this.router.navigate([
            '/',
            'study-area',
            this.studyProjectMarketYearId,
            this.marketYearCategoryId,
        ]);
    }
}
StudyAreaPreviewComponent.ɵfac = function StudyAreaPreviewComponent_Factory(t) { return new (t || StudyAreaPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_2__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_9__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_4__.LocalStorageService)); };
StudyAreaPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: StudyAreaPreviewComponent, selectors: [["app-study-area-preview"]], decls: 3, vars: 2, consts: [[1, "container-fluid", "my-4", "text-right"], [4, "ngIf"]], template: function StudyAreaPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](1, StudyAreaPreviewComponent_app_lubricant_demand_preview_1_Template, 1, 0, "app-lubricant-demand-preview", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](2, StudyAreaPreviewComponent_app_supplier_market_share_preview_2_Template, 1, 0, "app-supplier-market-share-preview", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 2);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _components_lubricant_demand_preview_lubricant_demand_preview_component__WEBPACK_IMPORTED_MODULE_5__.LubricantDemandPreviewComponent, _components_supplier_market_share_preview_supplier_market_share_preview_component__WEBPACK_IMPORTED_MODULE_6__.SupplierMarketSharePreviewComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdHVkeS1hcmVhLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 71369:
/*!**************************************************************************!*\
  !*** ./src/app/pages/study-area-summary/study-area-summary.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyAreaSummaryComponent": () => (/* binding */ StudyAreaSummaryComponent)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_studyAreaSummary_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/studyAreaSummary.model */ 58101);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _shared_header_header_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/header/header.component */ 89470);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 52816);














function StudyAreaSummaryComponent_dx_data_grid_9_dxi_column_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "dxi-column", 37);
} }
const _c0 = function (a1, a2, a3, a4) { return ["/study-area", a1, a2, a3, a4]; };
function StudyAreaSummaryComponent_dx_data_grid_9_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "a", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r13 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](3, _c0, d_r13.data.StudyAreaId, d_r13.data.StudyProjectMarketYearId, d_r13.data.MarketYearCategoryId, d_r13.data.DataSetId));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("data-col", d_r13.data.Total);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](d_r13.value);
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_18_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_9_div_18_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r19); const d_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit; const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r17.deleteRow(d_r14.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_18_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "span", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, "SignedOff");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_9_div_18_dx_button_1_Template, 1, 0, "dx-button", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, StudyAreaSummaryComponent_dx_data_grid_9_div_18_span_2_Template, 2, 0, "span", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r14 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r14.data.IsSignOff && d_r14.data.IsProjectLead && !d_r14.data.IsLocked);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r14.data.IsSignOff);
} }
const _c1 = function () { return { title: "Lock Study" }; };
function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r27); const d_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit; const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r25.onUnlockStudy(d_r20.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("elementAttr", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](1, _c1));
} }
const _c2 = function () { return { title: "Unlock Study" }; };
function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r30); const d_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit; const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r28.onLockStudy(d_r20.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("elementAttr", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](1, _c2));
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_3_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r33); const d_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit; const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r31.onUnlockStudy(d_r20.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_1_Template, 1, 2, "dx-button", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_2_Template, 1, 2, "dx-button", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](3, StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_dx_button_3_Template, 1, 0, "dx-button", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const d_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r20.data.IsLocked && d_r20.data.LockedForEditBy !== ctx_r21.currentUserId);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r20.data.IsLocked && d_r20.data.LockedForEditBy !== ctx_r21.currentUserId);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r20.data.IsLocked && d_r20.data.LockedForEditBy === ctx_r21.currentUserId);
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_9_div_19_ng_container_1_Template, 4, 3, "ng-container", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r20 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r20.data.IsSignOff);
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_20_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "span", 51);
} if (rf & 2) {
    const d_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("innerText", d_r35.data.LockedForEditByName);
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_20_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_9_div_20_ng_container_1_span_1_Template, 1, 1, "span", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const d_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r35.data.LockedForEditByName != null);
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_9_div_20_ng_container_1_Template, 2, 1, "ng-container", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r35.data.IsSignOff);
} }
function StudyAreaSummaryComponent_dx_data_grid_9_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r40 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](data_r40.value ? data_r40.value : "");
} }
const _c3 = function () { return { "text-success": true }; };
function StudyAreaSummaryComponent_dx_data_grid_9_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipe"](3, "json");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r41 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](5, _c3));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate2"]("", d_r41.value, " - ", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipeBind1"](3, 3, d_r41.data), "");
} }
const _c4 = function (a0) { return { "badge badge-success": a0 }; };
function StudyAreaSummaryComponent_dx_data_grid_9_div_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "span", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "New");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const cell_r42 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" ", cell_r42.value, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](2, _c4, cell_r42.data.IsLatestStudy));
} }
function StudyAreaSummaryComponent_dx_data_grid_9_Template(rf, ctx) { if (rf & 1) {
    const _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-data-grid", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onContentReady", function StudyAreaSummaryComponent_dx_data_grid_9_Template_dx_data_grid_onContentReady_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r44); const ctx_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r43.onContentReady($event); })("onRowCollapsing", function StudyAreaSummaryComponent_dx_data_grid_9_Template_dx_data_grid_onRowCollapsing_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r44); const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r45.onCollapseRow($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "dxo-header-filter", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](2, "dxo-search-panel", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](3, "dxo-paging", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](4, "dxo-grouping", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](5, "dxi-column", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](6, "dxi-column", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](7, "dxi-column", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "dxi-column", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](9, "dxo-header-filter", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](10, "dxi-column", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](11, "dxi-column", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](12, "dxi-column", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](13, "dxi-column", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](14, StudyAreaSummaryComponent_dx_data_grid_9_dxi_column_14_Template, 1, 0, "dxi-column", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](15, "dxi-column", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](16, "dxi-column", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](17, StudyAreaSummaryComponent_dx_data_grid_9_div_17_Template, 3, 8, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](18, StudyAreaSummaryComponent_dx_data_grid_9_div_18_Template, 3, 2, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](19, StudyAreaSummaryComponent_dx_data_grid_9_div_19_Template, 2, 1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](20, StudyAreaSummaryComponent_dx_data_grid_9_div_20_Template, 2, 1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](21, StudyAreaSummaryComponent_dx_data_grid_9_div_21_Template, 3, 1, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](22, StudyAreaSummaryComponent_dx_data_grid_9_div_22_Template, 4, 6, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](23, StudyAreaSummaryComponent_dx_data_grid_9_div_23_Template, 5, 4, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx_r0.summaryData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("visible", true)("allowSearch", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("autoExpandAll", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 350);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 150);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx_r0.isManager);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "linkCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "lockUnlockCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "lockByUserCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "totalTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "highlightCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "studyCellTemplate");
} }
function StudyAreaSummaryComponent_dx_data_grid_15_dxi_column_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "dxi-column", 37);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "a", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r54 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](3, _c0, d_r54.data.StudyAreaId, d_r54.data.StudyProjectMarketYearId, d_r54.data.MarketYearCategoryId, d_r54.data.DataSetId));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("data-col", d_r54.data.Total);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](d_r54.value);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_18_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r60 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_15_div_18_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r60); const d_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit; const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r58.deleteRow(d_r55.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_18_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "span", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, "SignedOff");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_15_div_18_dx_button_1_Template, 1, 0, "dx-button", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, StudyAreaSummaryComponent_dx_data_grid_15_div_18_span_2_Template, 2, 0, "span", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r55 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r55.data.IsSignOff && d_r55.data.IsProjectLead && !d_r55.data.IsLocked);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r55.data.IsSignOff);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r68 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r68); const d_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit; const ctx_r66 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r66.onUnlockStudy(d_r61.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("elementAttr", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](1, _c1));
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r71 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r71); const d_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit; const ctx_r69 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r69.onLockStudy(d_r61.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("elementAttr", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](1, _c2));
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r74 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-button", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_3_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r74); const d_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit; const ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r72.onUnlockStudy(d_r61.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_1_Template, 1, 2, "dx-button", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_2_Template, 1, 2, "dx-button", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](3, StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_dx_button_3_Template, 1, 0, "dx-button", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const d_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r61.data.IsLocked && d_r61.data.LockedForEditBy !== ctx_r62.currentUserId);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r61.data.IsLocked && d_r61.data.LockedForEditBy !== ctx_r62.currentUserId);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r61.data.IsLocked && d_r61.data.LockedForEditBy === ctx_r62.currentUserId);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_15_div_19_ng_container_1_Template, 4, 3, "ng-container", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r61.data.IsSignOff);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_20_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "span", 51);
} if (rf & 2) {
    const d_r76 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("innerText", d_r76.data.LockedForEditByName);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_20_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_15_div_20_ng_container_1_span_1_Template, 1, 1, "span", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const d_r76 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", d_r76.data.LockedForEditByName != null);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, StudyAreaSummaryComponent_dx_data_grid_15_div_20_ng_container_1_Template, 2, 1, "ng-container", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r76 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !d_r76.data.IsSignOff);
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r81 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](data_r81.value ? data_r81.value : "");
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipe"](3, "json");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r82 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](5, _c3));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate2"]("", d_r82.value, " - ", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipeBind1"](3, 3, d_r82.data), "");
} }
function StudyAreaSummaryComponent_dx_data_grid_15_div_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "span", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "New");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const cell_r83 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" ", cell_r83.value, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](2, _c4, cell_r83.data.IsLatestStudy));
} }
function StudyAreaSummaryComponent_dx_data_grid_15_Template(rf, ctx) { if (rf & 1) {
    const _r85 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "dx-data-grid", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onContentReady", function StudyAreaSummaryComponent_dx_data_grid_15_Template_dx_data_grid_onContentReady_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r85); const ctx_r84 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r84.onContentReady($event); })("onRowCollapsing", function StudyAreaSummaryComponent_dx_data_grid_15_Template_dx_data_grid_onRowCollapsing_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r85); const ctx_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r86.onCollapseRow($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "dxo-header-filter", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](2, "dxo-search-panel", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](3, "dxo-paging", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](4, "dxo-grouping", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](5, "dxi-column", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](6, "dxi-column", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](7, "dxi-column", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "dxi-column", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](9, "dxo-header-filter", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](10, "dxi-column", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](11, "dxi-column", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](12, "dxi-column", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](13, "dxi-column", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](14, StudyAreaSummaryComponent_dx_data_grid_15_dxi_column_14_Template, 1, 0, "dxi-column", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](15, "dxi-column", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](16, "dxi-column", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](17, StudyAreaSummaryComponent_dx_data_grid_15_div_17_Template, 3, 8, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](18, StudyAreaSummaryComponent_dx_data_grid_15_div_18_Template, 3, 2, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](19, StudyAreaSummaryComponent_dx_data_grid_15_div_19_Template, 2, 1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](20, StudyAreaSummaryComponent_dx_data_grid_15_div_20_Template, 2, 1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](21, StudyAreaSummaryComponent_dx_data_grid_15_div_21_Template, 3, 1, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](22, StudyAreaSummaryComponent_dx_data_grid_15_div_22_Template, 4, 6, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](23, StudyAreaSummaryComponent_dx_data_grid_15_div_23_Template, 5, 4, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx_r1.signedOffSummaryData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("visible", true)("allowSearch", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("autoExpandAll", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 350);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 150);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx_r1.isManager);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "linkCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "lockUnlockCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "lockByUserCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "totalTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "highlightCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "studyCellTemplate");
} }
function StudyAreaSummaryComponent_p_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, " Are you sure you want to delete this study? ");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2, "This study has some changes.");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "Still you want to delete this study?");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function StudyAreaSummaryComponent_div_29_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "p", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "Still you want to unlock this study?");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" This study has locked by ", ctx_r4.selectedStudyRowData.LockedForEditByName, ". ");
} }
class StudyAreaSummaryComponent {
    constructor(sharedService, alertService, isLoadingService, localStorageService) {
        this.sharedService = sharedService;
        this.alertService = alertService;
        this.isLoadingService = isLoadingService;
        this.localStorageService = localStorageService;
        this.summaryData = [];
        this.signedOffSummaryData = [];
        this.confirmPopup = false;
        this.isManager = false;
        this.newSummaryData = [];
        this.confirmUnlockPopup = false;
        this.selectedDataSetId = 0;
        this.selectedStudyAreaId = 0;
        this.selectedItemCategoryId = 0;
        this.selectedMarketYearCategoryId = 0;
        this.isStudyDataChanged = false;
        if (this.isLoadingService.isLoading()) {
            this.isLoadingService.remove();
        }
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.currentUserId = this.userDetail.Id || 0;
        this.isManager = this.userDetail.IsManager == true ? true : false;
    }
    ngOnInit() {
        this.getStudySummary();
    }
    getStudySummary() {
        this.isLoadingService.add();
        this.sharedService.getStudyAreaSummary().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                // res.Data.sort((a,b) => b-a)
                this.summaryData = res.Data.map((item) => new src_model_studyAreaSummary_model__WEBPACK_IMPORTED_MODULE_1__.StudyAreaSummary().deserialize(item));
                this.summaryData.reverse();
                this.newSummaryData = [];
                this.summaryData.map((item) => {
                    if (item.IsLatestStudy) {
                        this.newSummaryData.push(item);
                    }
                    if (item.IsSignOff) {
                        this.signedOffSummaryData.push(item);
                    }
                    if (item.LastModified) {
                        item.LastModified = this.formatLastModifiedDate(item.LastModified);
                    }
                });
                this.summaryData = this.summaryData.filter(item => !item.IsSignOff);
                this.summaryData.sort((a, b) => a.StudyAreaName.localeCompare(b.StudyAreaName));
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            if (err.status === 401) {
                this.isLoadingService.remove();
            }
        });
    }
    formatLastModifiedDate(date) {
        const [month, day, year] = date.split(' ');
        const monthNumber = this.getMonthNumberFromName(month);
        return new Date(+year, +monthNumber, +day);
    }
    getMonthNumberFromName(monthName) {
        return new Date(`${monthName} 1, 2022`).getMonth();
    }
    make_hyperlink_calculateCellValue(rowData) {
        return `<a href="#">${rowData.StudyAreaName}</a>`;
    }
    deleteRow(studyRowData) {
        this.selectedDataSetId = studyRowData.DataSetId || 0;
        this.selectedStudyAreaId = studyRowData.StudyAreaId || 0;
        this.selectedItemCategoryId = studyRowData.DataItemCategoryId || 0;
        this.selectedMarketYearCategoryId = studyRowData.MarketYearCategoryId || 0;
        this.isStudyDataChanged = studyRowData.IsChanged;
        this.confirmPopup = true;
    }
    confirmDeleteRow() {
        this.isLoadingService.add();
        this.sharedService
            .removeStudyAreaMaster(this.selectedDataSetId, this.selectedItemCategoryId, this.selectedMarketYearCategoryId, this.selectedStudyAreaId)
            .subscribe((res) => {
            this.onConfirmPopupHide();
            if (res.Data === true) {
                this.alertService.success('Your study has been removed successfully.');
                this.getStudySummary();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Study can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onConfirmPopupHide() {
        this.selectedDataSetId = 0;
        this.selectedItemCategoryId = 0;
        this.selectedMarketYearCategoryId = 0;
        this.selectedStudyAreaId = 0;
        this.confirmPopup = false;
        this.confirmUnlockPopup = false;
        this.selectedStudyRowData;
    }
    onRowPrepared(e) {
        if (e.rowType == 'data' && e.data.IsSignOff === true) {
            e.rowElement.style.backgroundColor = '#cdffcd';
        }
        // if (e.rowType == 'group') {
        //   this.getRowDataItems(e).map((item: any) => {
        //     if (typeof item.items !== 'undefined') {
        //       item.items.map((summaryItem: any) => {
        //         if (summaryItem.IsLatestStudy) {
        //           e.rowElement.classList.add('text-success');
        //         }
        //       });
        //     } else {
        //       if (item.IsLatestStudy) {
        //         e.rowElement.classList.add('text-success');
        //       }
        //     }
        //     console.log(item);
        //   });
        // }
    }
    getRowDataItems(data) {
        console.log(data);
        // if (typeof data.items !== 'undefined' && data.items !== null) {
        //   return data.items;
        // } else {
        //   return data.collapsedItems;
        // }
    }
    onCellPrepared(column, data, component, displayValue) {
        const groupRowData = data.data;
        let items = [];
        if (typeof groupRowData.items !== 'undefined' &&
            groupRowData.items !== null) {
            items = groupRowData.items;
        }
        else {
            items = groupRowData.collapsedItems;
        }
        console.log(groupRowData);
        return 'sdds';
        // if (e.rowType == 'group') {
        //   console.log(e);
        // this.getRowDataItems(e).map((item: any) => {
        //   if (typeof item.items !== 'undefined') {
        //     item.items.map((summaryItem: any) => {
        //       if (summaryItem.IsLatestStudy) {
        //         e.rowElement.classList.add('text-success');
        //       }
        //     });
        //   } else {
        //     if (item.IsLatestStudy) {
        //       e.rowElement.classList.add('text-success');
        //     }
        //   }
        // });
        // }
    }
    onLockStudy(data) {
        this.isLoadingService.add();
        this.sharedService
            .setLockUnlockStudy(data.MarketYearCategoryId, true)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.getStudySummary();
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            if (err.status === 401) {
                this.isLoadingService.remove();
            }
        });
    }
    onUnlockStudy(data) {
        if (data.IsProjectLead && data.ProjectLeadId !== data.LockedForEditBy) {
            this.selectedStudyRowData = data;
            this.confirmUnlockPopup = true;
        }
        else {
            this.unlockStudy(data);
        }
    }
    unlockStudy(data) {
        this.confirmUnlockPopup = false;
        this.isLoadingService.add();
        this.sharedService
            .setLockUnlockStudy(data.MarketYearCategoryId, false)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.getStudySummary();
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
            this.selectedStudyRowData;
        }, (err) => {
            if (err.status === 401) {
                this.isLoadingService.remove();
            }
        });
    }
    onContentReady(e) {
        if (e.component.getCombinedFilter()) {
            if (e.component.__needExpand) {
                e.component.__needExpand = false;
                return;
            }
            e.component.__needExpand = true;
            e.component.expandAll();
        }
    }
    onCollapseRow(e) {
        if (e.expanded) {
            e.component.__needExpand = true;
        }
    }
}
StudyAreaSummaryComponent.ɵfac = function StudyAreaSummaryComponent_Factory(t) { return new (t || StudyAreaSummaryComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_4__.LocalStorageService)); };
StudyAreaSummaryComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: StudyAreaSummaryComponent, selectors: [["app-study-area-summary"]], decls: 33, vars: 19, consts: [[1, "container-fluid", "my-4"], [1, "row", "justify-content-center"], [1, "col"], [1, "card"], [1, "card-header"], [1, "card-body"], [1, "table-responsive"], [3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContentReady", "onRowCollapsing", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "text-centerx-0"], ["class", "mb-1", 4, "ngIf"], [4, "ngIf"], [1, "form-group", "text-center"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["title", "Unlock Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "mb-1"], [3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContentReady", "onRowCollapsing"], [3, "visible", "allowSearch"], [3, "visible"], [3, "enabled"], [3, "autoExpandAll"], ["dataField", "MarketName", "caption", "Market", "groupIndex", "1", 3, "width"], ["dataField", "DataSetName", "caption", "Project", "groupIndex", "0", 3, "width"], ["dataField", "StudyAreaName", "caption", "Study Name", 3, "width"], ["dataField", "StudyName", "caption", "Study Area Name", "cellTemplate", "linkCellTemplate", 3, "width"], ["width", "400"], ["dataField", "Total", "cellTemplate", "totalTemplate", 3, "width"], ["dataField", "LastComment"], ["dataField", "LastModified", "dataType", "date"], ["dataField", "ModifiedBy"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 4, "ngIf"], ["caption", "", "cellTemplate", "lockUnlockCellTemplate", 1, "text-center"], ["caption", "Locked By", "cellTemplate", "lockByUserCellTemplate", 1, "text-center"], [4, "dxTemplate", "dxTemplateOf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center"], [3, "routerLink"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["class", "badge badge-success", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], [1, "badge", "badge-success"], ["icon", "fas fa-lock", "stylingMode", "text", "type", "default", "hint", "Click for Unlock Study", 3, "elementAttr", "onClick", 4, "ngIf"], ["icon", "fas fa-unlock", "stylingMode", "text", "type", "default", "hint", "Click for Lock Study", 3, "elementAttr", "onClick", 4, "ngIf"], ["icon", "fas fa-lock", "stylingMode", "text", "type", "default", "hint", "Click for Unlock Study", 3, "onClick", 4, "ngIf"], ["icon", "fas fa-lock", "stylingMode", "text", "type", "default", "hint", "Click for Unlock Study", 3, "elementAttr", "onClick"], ["icon", "fas fa-unlock", "stylingMode", "text", "type", "default", "hint", "Click for Lock Study", 3, "elementAttr", "onClick"], ["icon", "fas fa-lock", "stylingMode", "text", "type", "default", "hint", "Click for Unlock Study", 3, "onClick"], ["class", "badge badge-success", 3, "innerText", 4, "ngIf"], [1, "badge", "badge-success", 3, "innerText"], [3, "ngClass"]], template: function StudyAreaSummaryComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "app-header");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](6, "In Progress Studies");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](7, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](9, StudyAreaSummaryComponent_dx_data_grid_9_Template, 24, 24, "dx-data-grid", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](10, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](11, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](12, "Signed Off Studies");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](13, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](14, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](15, StudyAreaSummaryComponent_dx_data_grid_15_Template, 24, 24, "dx-data-grid", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](16, "dx-popup", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("visibleChange", function StudyAreaSummaryComponent_Template_dx_popup_visibleChange_16_listener($event) { return ctx.confirmPopup && (ctx.isManager = $event); })("onHidden", function StudyAreaSummaryComponent_Template_dx_popup_onHidden_16_listener() { return ctx.onConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](17, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](18, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](19, StudyAreaSummaryComponent_p_19_Template, 2, 0, "p", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](20, StudyAreaSummaryComponent_div_20_Template, 5, 0, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](21, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](22, "dx-button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_Template_dx_button_onClick_22_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](23, "dx-button", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_Template_dx_button_onClick_23_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](24, "dx-popup", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("visibleChange", function StudyAreaSummaryComponent_Template_dx_popup_visibleChange_24_listener($event) { return ctx.confirmUnlockPopup && (ctx.isManager = $event); })("onHidden", function StudyAreaSummaryComponent_Template_dx_popup_onHidden_24_listener() { return ctx.onConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](25, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](26, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](27, "p", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](28, "Are you sure you want to Unlock this study?");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](29, StudyAreaSummaryComponent_div_29_Template, 5, 1, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](30, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](31, "dx-button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_Template_dx_button_onClick_31_listener() { return ctx.unlockStudy(ctx.selectedStudyRowData); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](32, "dx-button", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function StudyAreaSummaryComponent_Template_dx_button_onClick_32_listener() { return ctx.confirmUnlockPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.summaryData);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.signedOffSummaryData);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 350)("height", ctx.isStudyDataChanged ? 185 : 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.confirmPopup && ctx.isManager);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !ctx.isStudyDataChanged);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.isStudyDataChanged);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 350)("height", 185)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.confirmUnlockPopup && ctx.isManager);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.isStudyDataChanged);
    } }, directives: [_shared_header_header_component__WEBPACK_IMPORTED_MODULE_5__.HeaderComponent, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_10__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__.DxoSearchPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__.DxiColumnComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_12__.DxTemplateDirective, _angular_router__WEBPACK_IMPORTED_MODULE_13__.RouterLinkWithHref, devextreme_angular__WEBPACK_IMPORTED_MODULE_14__.DxButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgClass, devextreme_angular__WEBPACK_IMPORTED_MODULE_15__.DxPopupComponent], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.JsonPipe], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdHVkeS1hcmVhLXN1bW1hcnkuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 61022:
/*!********************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/average-price/average-price-preview/average-price-preview.component.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AveragePricePreviewComponent": () => (/* binding */ AveragePricePreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);




const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class AveragePricePreviewComponent {
    constructor() {
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear = 0;
        this.gridFields = [];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                ExcipientCategory: item.ExcipientCategoryName,
                ExcipientGroup: item.ExcipientGroupName,
                Excipient: item.ExcipientName,
                Year: this.previousYear,
                AvgMinPrice: item.AveragePriceMin1,
                AvgMaxPrice: item.AveragePriceMax1,
            });
            previewData.push({
                ExcipientCategory: item.ExcipientCategoryName,
                ExcipientGroup: item.ExcipientGroupName,
                Excipient: item.ExcipientName,
                Year: this.currentYear,
                AvgMinPrice: item.AveragePriceMin2,
                AvgMaxPrice: item.AveragePriceMax2,
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'ExcipientCategory',
                area: 'row',
                caption: 'Excipient Category',
                dataType: 'string',
            },
            {
                dataField: 'ExcipientGroup',
                area: 'row',
                caption: 'Excipient Group',
                dataType: 'string',
            },
            {
                dataField: 'Excipient',
                area: 'row',
                caption: 'Excipient',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Avg. Min Price',
                dataField: 'AvgMinPrice',
                dataFieldType: 'AvgMinPrice',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Avg. Max Price',
                dataField: 'AvgMaxPrice',
                dataFieldType: 'AvgMaxPrice',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
AveragePricePreviewComponent.ɵfac = function AveragePricePreviewComponent_Factory(t) { return new (t || AveragePricePreviewComponent)(); };
AveragePricePreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: AveragePricePreviewComponent, selectors: [["app-average-price-preview"]], inputs: { studyData: "studyData", currentYear: "currentYear", previousYear: "previousYear" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function AveragePricePreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_2__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdmVyYWdlLXByaWNlLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 63957:
/*!**************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/average-price/average-price.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AveragePriceComponent": () => (/* binding */ AveragePriceComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _average_price_preview_average_price_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./average-price-preview/average-price-preview.component */ 61022);
























function AveragePriceComponent_dx_data_grid_6_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r4.studyTitle);
} }
function AveragePriceComponent_dx_data_grid_6_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "ng-select", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("ngModelChange", function AveragePriceComponent_dx_data_grid_6_div_9_Template_ng_select_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r14); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r13.selectedCurrency = $event; })("clear", function AveragePriceComponent_dx_data_grid_6_div_9_Template_ng_select_clear_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r14); const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r15.onCurrencyChange($event); })("change", function AveragePriceComponent_dx_data_grid_6_div_9_Template_ng_select_change_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r14); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r16.onCurrencyChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r5.currencies)("ngModel", ctx_r5.selectedCurrency)("clearable", false);
} }
function AveragePriceComponent_dx_data_grid_6_div_11_Template(rf, ctx) { if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "ng-select", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("ngModelChange", function AveragePriceComponent_dx_data_grid_6_div_11_Template_ng_select_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r17.selectedVolumeUnitObj = $event; })("change", function AveragePriceComponent_dx_data_grid_6_div_11_Template_ng_select_change_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r19.onVolumeUnitChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r6.volumeUnits)("clearable", false)("ngModel", ctx_r6.selectedVolumeUnitObj);
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_ng_container_12_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r26.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_ng_container_12_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r28.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_5_div_1_Template, 2, 0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_6_div_1_Template, 2, 0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r38); const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r37.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r36.disabledSignOffButton);
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_7_div_1_Template, 2, 1, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r40.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_8_div_1_Template, 2, 0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, AveragePriceComponent_dx_data_grid_6_ng_container_12_div_2_Template, 2, 0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, AveragePriceComponent_dx_data_grid_6_ng_container_12_div_4_Template, 2, 0, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_5_Template, 2, 0, "dxi-item", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_6_Template, 2, 0, "dxi-item", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_7_Template, 2, 0, "dxi-item", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, AveragePriceComponent_dx_data_grid_6_ng_container_12_dxi_item_8_Template, 2, 0, "dxi-item", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r7.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r7.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r7.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r7.isLockedStudy);
} }
function AveragePriceComponent_dx_data_grid_6_dxi_column_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 65);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function AveragePriceComponent_dx_data_grid_6_div_26_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r46 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_div_26_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r46); const d_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r44.deleteRow(d_r42.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_div_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, AveragePriceComponent_dx_data_grid_6_div_26_dx_button_1_Template, 1, 0, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r42 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r42.data.DataRowId !== null);
} }
function AveragePriceComponent_dx_data_grid_6_div_27_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value > 0 ? data_r47.value.toFixed(1) : "");
} }
function AveragePriceComponent_dx_data_grid_6_div_28_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 70);
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r48.value > 0 ? (data_r48.value * 1).toFixed(1) : "");
} }
function AveragePriceComponent_dx_data_grid_6_div_28_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value > 0 ? (data_r48.value * 1).toFixed(1) : "");
} }
function AveragePriceComponent_dx_data_grid_6_div_28_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, AveragePriceComponent_dx_data_grid_6_div_28_input_1_Template, 1, 1, "input", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, AveragePriceComponent_dx_data_grid_6_div_28_span_2_Template, 2, 1, "span", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isStudyEditable);
} }
function AveragePriceComponent_dx_data_grid_6_div_29_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_data_grid_6_div_29_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const data_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r55.addNotes(data_r53); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function AveragePriceComponent_dx_data_grid_6_div_29_Template(rf, ctx) { if (rf & 1) {
    const _r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, AveragePriceComponent_dx_data_grid_6_div_29_dx_button_2_Template, 1, 0, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function AveragePriceComponent_dx_data_grid_6_div_29_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r59); const data_r53 = restoredCtx.$implicit; const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r58.showNotePopup(data_r53); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r53 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r53.value);
} }
function AveragePriceComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function AveragePriceComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r60.onRowSaved($event); })("onCellPrepared", function AveragePriceComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.onCellPreparedHighlighter($event); })("onCellHoverChanged", function AveragePriceComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r63.onCellHoverChanged($event); })("onRowPrepared", function AveragePriceComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r64.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-paging", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-editing", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-filter-row", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-header-filter", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxi-item", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, AveragePriceComponent_dx_data_grid_6_div_7_Template, 3, 1, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, AveragePriceComponent_dx_data_grid_6_div_9_Template, 2, 3, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxi-item", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, AveragePriceComponent_dx_data_grid_6_div_11_Template, 2, 3, "div", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, AveragePriceComponent_dx_data_grid_6_ng_container_12_Template, 9, 4, "ng-container", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](22, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, AveragePriceComponent_dx_data_grid_6_dxi_column_25_Template, 1, 1, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](26, AveragePriceComponent_dx_data_grid_6_div_26_Template, 2, 1, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](27, AveragePriceComponent_dx_data_grid_6_div_27_Template, 3, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](28, AveragePriceComponent_dx_data_grid_6_div_28_Template, 3, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](29, AveragePriceComponent_dx_data_grid_6_div_29_Template, 6, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate2"]("caption", "Year: ", ctx_r0.previousYear1, " (", ctx_r0.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 110)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 110)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate2"]("caption", "Year: ", ctx_r0.currentYear, " (", ctx_r0.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 110)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 110)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function AveragePriceComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 76);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function AveragePriceComponent_dx_data_grid_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r2.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
function AveragePriceComponent_dx_popup_24_Template(rf, ctx) { if (rf & 1) {
    const _r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function AveragePriceComponent_dx_popup_24_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r67); const ctx_r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r66.popupVisible = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6, "Excipient Category");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "ng-select", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10, "Excipient Group");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "ng-select", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](14, "Excipient");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "ng-select", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "input", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "div", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "span", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](23);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](26);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](28, "input", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "div", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "span", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "dx-button", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_dx_popup_24_Template_dx_button_onClick_33_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r67); const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r68.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("width", 300)("height", 540)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r3.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r3.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r3.excipientCategories)("addTag", ctx_r3.createNewDataEntry.bind(ctx_r3, ctx_r3.dataRelationsEnum.ExcipientCategory));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r3.excipientGroups)("addTag", ctx_r3.createNewDataEntry.bind(ctx_r3, ctx_r3.dataRelationsEnum.ExcipientGroup));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r3.excipients)("addTag", ctx_r3.createNewDataEntry.bind(ctx_r3, ctx_r3.dataRelationsEnum.Excipient));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Avg. Min Price (", ctx_r3.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("/ ", ctx_r3.selectedVolumeUnitDefault, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Avg. Max Price (", ctx_r3.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("/ ", ctx_r3.selectedVolumeUnitDefault, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r3.newRowForm.invalid);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class AveragePriceComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyTitle = '';
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize({});
        this.currentYear = 0;
        this.previousYear1 = 0;
        this.selectedCurrencyCode = '';
        this.selectedCurrency = {};
        this.selectedCurrencyCodeDefault = '';
        this.selectedVolumeUnit = '';
        this.selectedVolumeUnitDefault = '';
        this.selectedVolumeUnitId = 0;
        this.selectedVolumeUnitIdDefault = 0;
        this.selectedVolumeUnitObj = {};
        this.selectedDosageFormId = 0;
        this.selectedDosageFormName = '';
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.isStudyEditable = false;
        this.isManage = false;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.disabledButtons = false;
        this.errorMessages = [];
        this.yearReduce = 1;
        this.excipientCategories = [];
        this.excipientGroups = [];
        this.excipients = [];
        this.currencies = [];
        this.volumeUnits = [];
        this.currencyRates = {};
        this.previousSelectedCurrencyCode = '';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.previewGridStorageKey = '';
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.previewGridData = [];
        this.volumeYears = [];
        this.currentCurrency = {};
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.allowedCols = ['AveragePriceMin2', 'AveragePriceMax2'];
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            ExcipientCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ExcipientGroup: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Excipient: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Currency: [null],
            VolumeUnit: [null],
            DosageForm: [null],
            AvgMinPrice: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            AvgMaxPrice: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getDataRelations();
        this.getExcipientCategory();
        this.getExcipientGroups();
        this.getExcipients();
        this.getCurrencies();
        this.getVolumeUnits();
    }
    ngOnInit() {
        this.getSEAPData();
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
                this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
                if (this.studyDataRelations) {
                    this.studyDataViewId = this.studyDataRelations.ViewId;
                }
            }
        });
    }
    getExcipientCategory() {
        this.sharedService
            .getSEDataEntryData('ExcipientCategories')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.excipientCategories = res.Data;
            }
        });
    }
    getExcipientGroups() {
        this.sharedService
            .getSEDataEntryData('ExcipientGroups')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.excipientGroups = res.Data;
            }
        });
    }
    getExcipients() {
        this.sharedService
            .getSEDataEntryData('Excipients')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.excipients = res.Data;
            }
        });
    }
    getCurrencies() {
        this.sharedService
            .getSEDataEntryData('Currencies')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.currencies = res.Data;
            }
        });
    }
    getCurrencyConversionRate(years) {
        // const p = [{ key: 'CurrencyId', value: currency.Id }];
        const p = [];
        if (years.length > 0) {
            years.map((year) => {
                p.push({ key: 'Years', value: year });
            });
        }
        this.sharedService
            .getSEDataEntryData('CurrencyRates', p)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                res.Data.map((item) => {
                    if (typeof this.currencyRates[item.CurrencyCode] === 'undefined') {
                        this.currencyRates[item.CurrencyCode] = [];
                    }
                    this.currencyRates[item.CurrencyCode].push({
                        currencyCode: item.CurrencyCode,
                        Rate: item.Rate,
                        Year: item.Year,
                    });
                });
            }
        });
    }
    getVolumeUnits() {
        this.sharedService
            .getSEDataEntryData('VolumeUnits')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.volumeUnits = res.Data;
            }
        });
    }
    getSEAPData() {
        this.isLoadingService.add();
        this.studyService
            .getSEAPData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData =
                    studyData.SpecialtyExcipients;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize(studyData.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.previousYear1 = 0;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                changelogObj[colValueArray[4]] = {};
                                changelogObj[colValueArray[4]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.previewGridData.push({
                        ExcipientCategoryName: item.ExcipientCategoryName,
                        ExcipientGroupName: item.ExcipientGroupName,
                        ExcipientName: item.ExcipientName,
                        SupplierName: item.SupplierName,
                        Year: this.previousYear1,
                        Value: item.Value1,
                        VolumeValue: item.Volume1,
                        CagrPer: item.CAGR1,
                    });
                    this.previewGridData.push({
                        ExcipientCategoryName: item.ExcipientCategoryName,
                        ExcipientGroupName: item.ExcipientGroupName,
                        ExcipientName: item.ExcipientName,
                        SupplierName: item.SupplierName,
                        Year: this.currentYear,
                        Value: item.Value2,
                        VolumeValue: item.Volume2,
                        CagrPer: item.CAGR2,
                    });
                    this.previousYear1 = item.LatestDataYear;
                    this.selectedCurrencyCode = item.CurrencyCode;
                    this.selectedCurrencyCodeDefault = item.CurrencyCode;
                    this.previousSelectedCurrencyCode = item.CurrencyCode;
                    this.selectedVolumeUnit = item.VolumeUnitName;
                    this.selectedVolumeUnitDefault = item.VolumeUnitName;
                    this.selectedVolumeUnitId = item.VolumeUnitId;
                    this.selectedVolumeUnitIdDefault = item.VolumeUnitId;
                    this.selectedDosageFormId = item.DosageFormId;
                    this.selectedDosageFormName = item.DosageFormName;
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.getCurrencyConversionRate([
                    this.previousYear1,
                    this.currentYear,
                ]);
                this.selectedCurrency = this.currencies.find((item) => item.CurrencyCode === this.selectedCurrencyCode);
                this.selectedVolumeUnitObj = this.volumeUnits.find((item) => item.Id === this.selectedVolumeUnitId);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'ExcipientCategoryName',
                area: 'row',
                caption: 'Excipient Category',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'ExcipientGroupName',
                area: 'row',
                caption: 'Excipient Group',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'ExcipientName',
                area: 'row',
                caption: 'Excipient',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'SupplierName',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
                id: 3,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 4,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 5,
                caption: 'Volume',
                dataField: 'VolumeValue',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'CAGR(%)',
                dataField: 'CagrPer',
                dataFieldType: 'CAGR',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    addNewRowPopup() {
        var _a, _b, _c;
        const selectedCurrency = this.currencies.find((item) => item.CurrencyCode === this.selectedCurrencyCode);
        (_a = this.newRowForm.get('Currency')) === null || _a === void 0 ? void 0 : _a.setValue(selectedCurrency);
        const selectedVolumeUnit = this.volumeUnits.find((item) => item.Id === this.selectedVolumeUnitId);
        (_b = this.newRowForm.get('Currency')) === null || _b === void 0 ? void 0 : _b.setValue(selectedCurrency);
        (_c = this.newRowForm.get('VolumeUnit')) === null || _c === void 0 ? void 0 : _c.setValue(selectedVolumeUnit);
        this.popupVisible = true;
    }
    onNotePopupHide() {
        // this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: 0,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            AveragePriceMax1: 0,
            AveragePriceMax2: +newRowData.AvgMaxPrice,
            AveragePriceMin1: 0,
            AveragePriceMin2: +newRowData.AvgMinPrice,
            CurrencyCode: newRowData.Currency.CurrencyCode,
            CurrencyId: newRowData.Currency.Id,
            CurrencyName: newRowData.Currency.Name,
            DosageFormId: this.selectedDosageFormId,
            DosageFormName: this.selectedDosageFormName,
            ExcipientCategoryId: newRowData.ExcipientCategory.Id,
            ExcipientCategoryName: newRowData.ExcipientCategory.Name,
            ExcipientGroupId: newRowData.ExcipientGroup.Id,
            ExcipientGroupName: newRowData.ExcipientGroup.Name,
            ExcipientId: newRowData.Excipient.Id,
            ExcipientName: newRowData.Excipient.Name,
            LatestDataYear: this.previousYear1,
            VolumeUnitId: newRowData.VolumeUnit.Id,
            VolumeUnitName: newRowData.VolumeUnit.Name,
            VolumeUnitRate: newRowData.VolumeUnit.Rate,
            ChangeLog: '',
            ChangeLogObj: [],
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ExcipientCategoryId == newRow.ExcipientCategoryId &&
            item.ExcipientGroupId === newRow.ExcipientGroupId &&
            item.ExcipientId === newRow.ExcipientId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => a.ExcipientCategoryId - b.ExcipientCategoryId ||
                a.ExcipientGroupId - b.ExcipientGroupId ||
                a.ExcipientId - b.ExcipientId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.AveragePriceMax1 = +data.AveragePriceMax1;
            data.AveragePriceMax2 = +data.AveragePriceMax2;
            data.AveragePriceMin1 = +data.AveragePriceMin1;
            data.AveragePriceMin2 = +data.AveragePriceMin2;
            //   this.studyData.map((item: any, i) => {
            //     this.studyData[i].AveragePriceMin2 = parseFloat(
            //       data.AveragePriceMin2.toFixed(1)
            //     );
            //     this.studyData[i].AveragePriceMax2 = parseFloat(
            //       data.AveragePriceMax2.toFixed(1)
            //     );
            //   });
        }
        // console.log(this.studyData);
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        // console.log(e.data.ChangeLogObj);
        if (e.rowType === 'data' && isFound) {
            if (typeof e.data.ChangeLogObj !== 'undefined') {
                const cellValue = typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.dataField]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (typeof event.data.ChangeLogObj !== 'undefined') {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.dataField] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.dataField]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    saveStudyData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            specialtyExcipients: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveSEAPData(studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onCurrencyChange(e) {
        const defaultCurrency = this.currencies.find((item) => item.CurrencyCode === this.selectedCurrencyCodeDefault);
        const currency = typeof e !== 'undefined' ? e : defaultCurrency;
        this.selectedCurrencyCode = currency.CurrencyCode || '';
        this.selectedCurrency = currency;
        const previousSelectedRates = this.currencyRates[this.previousSelectedCurrencyCode];
        const rates = this.currencyRates[this.selectedCurrencyCode];
        const previousSelectedRate = previousSelectedRates.find((rate) => rate.Year === this.previousYear1).Rate;
        const currentSelectedRate = previousSelectedRates.find((rate) => rate.Year === this.currentYear).Rate;
        let previousRate = rates.find((rate) => rate.Year === this.previousYear1).Rate;
        let currentRate = rates.find((rate) => rate.Year === this.previousYear1).Rate;
        this.previousSelectedCurrencyCode = currency.CurrencyCode || '';
        this.studyData.map((item, i) => {
            const convertUSDPreviousPrice = item.AveragePriceMin1 / previousSelectedRate;
            const finalMinValue = convertUSDPreviousPrice * previousRate;
            const convertUSDMaxPrice = item.AveragePriceMax1 / previousSelectedRate;
            const finalMaxValue = convertUSDMaxPrice * previousRate;
            let finalMin2Value = 0;
            if (this.studyData[i].AveragePriceMin2 > 0) {
                const convertUSDMin1Price = item.AveragePriceMin2 / currentSelectedRate;
                finalMin2Value = convertUSDMin1Price * currentRate;
            }
            let finalMax2Value = 0;
            if (this.studyData[i].AveragePriceMin2 > 0) {
                const convertUSDMax2Price = item.AveragePriceMax2 / currentSelectedRate;
                finalMax2Value = convertUSDMax2Price * currentRate;
            }
            this.studyData[i].AveragePriceMin1 = +finalMinValue.toFixed(1);
            this.studyData[i].AveragePriceMax1 = +finalMaxValue.toFixed(1);
            this.studyData[i].AveragePriceMin2 = +finalMin2Value.toFixed(1);
            this.studyData[i].AveragePriceMax2 = +finalMax2Value.toFixed(1);
            this.studyData[i].CurrencyCode = currency.CurrencyCode || '';
            this.studyData[i].CurrencyId = currency.Id;
            this.studyData[i].CurrencyName = currency.Name;
        });
    }
    onVolumeUnitChange(e) {
        const defaultUnit = this.volumeUnits.find((item) => item.Id === this.selectedVolumeUnitIdDefault);
        const volumeUnit = typeof e !== 'undefined' ? e : defaultUnit;
        this.selectedVolumeUnit = volumeUnit.Name || '';
        this.selectedVolumeUnitId = volumeUnit.Id || 0;
        this.selectedVolumeUnitObj = volumeUnit;
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSEAPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSEAPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            specialtyExcipients: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService
            .signOffSEAPData(formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSEAPData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ExcipientCategory:
                this.getExcipientCategory();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ExcipientGroup:
                this.getExcipientGroups();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.Excipient:
                this.getExcipients();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
AveragePriceComponent.ɵfac = function AveragePriceComponent_Factory(t) { return new (t || AveragePriceComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService)); };
AveragePriceComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: AveragePriceComponent, selectors: [["app-average-price"]], viewQuery: function AveragePriceComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 43, vars: 45, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "previousYear", "studyData"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], ["location", "after"], ["style", "width: 150px", 4, "dxTemplate"], [4, "ngIf"], ["caption", "Excipient Category", "dataField", "ExcipientCategoryName", 3, "allowEditing"], ["caption", "Excipient Group", "dataField", "ExcipientGroupName", 3, "allowEditing"], ["dataField", "ExcipientName", "caption", "Excipient", 3, "allowEditing"], [3, "caption"], ["dataField", "AveragePriceMin1", "caption", "Avg. Min Price", "cellTemplate", "previousYear1CellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Avg. Max Price", "dataField", "AveragePriceMax1", "cellTemplate", "previousYear1CellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["dataField", "AveragePriceMin2", "caption", "Avg. Min Price", "cellTemplate", "volumeYearCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Avg. Max Price", "dataField", "AveragePriceMax2", "cellTemplate", "volumeYearCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], [2, "width", "150px"], ["bindLabel", "Name", "placeholder", "Select Currency", 3, "items", "ngModel", "clearable", "ngModelChange", "clear", "change"], ["bindLabel", "Name", "placeholder", "Select Volume Unit", 3, "items", "clearable", "ngModel", "ngModelChange", "change"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body"], ["bindLabel", "Name", "formControlName", "ExcipientCategory", "placeholder", "Select Excipient Category", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ExcipientGroup", "placeholder", "Select Excipient Group", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Excipient", "placeholder", "Select Excipient", "addTagText", "Create New", 3, "items", "addTag"], [1, "input-group"], ["type", "text", "formControlName", "AvgMinPrice", 1, "form-control"], [1, "input-group-append"], ["id", "basic-addon2", 1, "input-group-text"], ["type", "text", "formControlName", "AvgMaxPrice", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "onClick"]], template: function AveragePriceComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, AveragePriceComponent_dx_data_grid_6_Template, 30, 46, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, AveragePriceComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-average-price-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function AveragePriceComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function AveragePriceComponent_Template_dx_popup_onHidden_12_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "textarea", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "dx-button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_Template_dx_button_onClick_19_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "dx-popup", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function AveragePriceComponent_Template_dx_popup_visibleChange_20_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function AveragePriceComponent_Template_dx_popup_onHidden_20_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, AveragePriceComponent_dx_data_grid_23_Template, 4, 8, "dx-data-grid", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, AveragePriceComponent_dx_popup_24_Template, 34, 19, "dx-popup", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function AveragePriceComponent_Template_dx_popup_visibleChange_25_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](29, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_Template_dx_button_onClick_33_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_Template_dx_button_onClick_34_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-popup", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function AveragePriceComponent_Template_dx_popup_visibleChange_35_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function AveragePriceComponent_Template_dx_popup_onHidden_35_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](39, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "dx-button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_Template_dx_button_onClick_41_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function AveragePriceComponent_Template_dx_button_onClick_42_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("previousYear", ctx.previousYear1)("studyData", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](43, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgModel, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxTooltipComponent, _average_price_preview_average_price_preview_component__WEBPACK_IMPORTED_MODULE_10__.AveragePricePreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhdmVyYWdlLXByaWNlLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 11005:
/*!******************************************************************!*\
  !*** ./src/app/pages/study-area/components/ehc/ehc.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EhcComponent": () => (/* binding */ EhcComponent)
/* harmony export */ });
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _sub_market_consumption_market_consumption_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sub/market-consumption/market-consumption.component */ 5492);
/* harmony import */ var _sub_ehc_sales_ehc_sales_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub/ehc-sales/ehc-sales.component */ 71082);







function EhcComponent_app_market_consumption_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "app-market-consumption", 1);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("setDataRelationsData", ctx_r0.datRelationsData);
} }
function EhcComponent_app_ehc_sales_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "app-ehc-sales", 1);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("setDataRelationsData", ctx_r1.datRelationsData);
} }
class EhcComponent {
    constructor(route, sharedService) {
        this.route = route;
        this.sharedService = sharedService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__.DataRelationsEnum;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getDataRelations();
    }
    ngOnInit() { }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
}
EhcComponent.ɵfac = function EhcComponent_Factory(t) { return new (t || EhcComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__.SharedService)); };
EhcComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: EhcComponent, selectors: [["app-ehc"]], decls: 2, vars: 2, consts: [[3, "setDataRelationsData", 4, "ngIf"], [3, "setDataRelationsData"]], template: function EhcComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, EhcComponent_app_market_consumption_0_Template, 1, 1, "app-market-consumption", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, EhcComponent_app_ehc_sales_1_Template, 1, 1, "app-ehc-sales", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 36);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.NgIf, _sub_market_consumption_market_consumption_component__WEBPACK_IMPORTED_MODULE_2__.MarketConsumptionComponent, _sub_ehc_sales_ehc_sales_component__WEBPACK_IMPORTED_MODULE_3__.EhcSalesComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlaGMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 33723:
/*!****************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ehc/sub/ehc-sales/ehc-sales-preview/ehc-sales-preview.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EhcSalesPreviewComponent": () => (/* binding */ EhcSalesPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);










const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class EhcSalesPreviewComponent {
    constructor(route, isLoadingService, studyService, alertService) {
        this.route = route;
        this.isLoadingService = isLoadingService;
        this.studyService = studyService;
        this.alertService = alertService;
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear = 0;
        this.previewData = [];
        this.saveStateEnabled = false;
        this.gridFields = [];
        this.previewGridKey = '';
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studyType = '';
        this.isPercentOfTotalPopup = false;
        this.isPercentOfChangePopup = false;
        this.isCagrPopup = false;
        this.yearDataFieldName = '';
        this.isHeaderFilterLoading = false;
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_1__.PivotGridOptions();
    }
    set setPreviewData(data) {
        if (data) {
            this.previewData = data;
        }
    }
    set setGridFields(data) {
        if (data) {
            this.gridFields = data;
        }
    }
    set setPreviewGridKey(data) {
        if (data) {
            this.previewGridKey = data;
        }
    }
    set setStudyType(data) {
        if (data) {
            this.studyType = data;
        }
    }
    ngOnInit() {
        if (typeof this.pivotGridOptions !== 'undefined') {
            this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
            this.pivotGridOptions.pivotGridSource.store = this.previewData;
            this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"](this.pivotGridOptions.pivotGridSource);
        }
    }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                Channel: item.Channel,
                Segment: item.Segment,
                Sector: item.Sector,
                CustomerType: item.CustomerType,
                Year: this.previousYear,
                CAGR: item.Cagr1,
                Unit: item.Unit1,
                ProductType: item.ProductType,
                Polymer: item.Polymer,
                Supplier: item.SupplierName,
                Functionality: item.FunctionalityName,
                Sales: item.Value1,
                Avg: item.AvgPrice1,
            });
            previewData.push({
                Channel: item.Channel,
                Segment: item.Segment,
                Sector: item.Sector,
                CustomerType: item.CustomerType,
                Year: this.currentYear,
                CAGR: item.Cagr2,
                Unit: item.Unit2,
                ProductType: item.ProductType,
                Polymer: item.Polymer,
                Supplier: item.Supplier,
                Functionality: item.Functionality,
                Sales: item.Value2,
                Avg: item.AvgPrice2,
            });
        });
        this.previewData = previewData;
        if (typeof this.pivotGridOptions !== 'undefined') {
            this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
            this.pivotGridOptions.pivotGridSource.store = this.previewData;
            this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"](this.pivotGridOptions.pivotGridSource);
        }
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'Channel',
                area: 'row',
                caption: 'Channel',
                dataType: 'string',
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
            },
            {
                dataField: 'Sector',
                area: 'row',
                caption: 'Sector',
                dataType: 'string',
            },
            {
                dataField: 'ProductType',
                area: 'row',
                caption: 'ProductType',
                dataType: 'string',
            },
            {
                dataField: 'CustomerType',
                area: 'row',
                caption: 'CustomerType',
                dataType: 'string',
            },
            {
                dataField: 'Polymer',
                area: 'row',
                caption: 'Polymer',
                dataType: 'string',
            },
            {
                dataField: 'Supplier',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
            },
            {
                dataField: 'Functionality',
                area: 'row',
                caption: 'Functionality',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Unit',
                dataField: 'Unit',
                dataFieldType: 'Unit',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Sales',
                dataField: 'Sales',
                dataFieldType: 'Sales',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Avg. Price',
                dataField: 'Avg',
                dataFieldType: 'Avg',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'CAGR(%)',
                dataField: 'CAGR',
                dataFieldType: 'CAGR',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
EhcSalesPreviewComponent.ɵfac = function EhcSalesPreviewComponent_Factory(t) { return new (t || EhcSalesPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_2__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__.AlertService)); };
EhcSalesPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: EhcSalesPreviewComponent, selectors: [["app-ehc-sales-preview"]], viewQuery: function EhcSalesPreviewComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxPivotGridComponent, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    } }, inputs: { studyData: "studyData", currentYear: "currentYear", previousYear: "previousYear", setPreviewData: "setPreviewData", setGridFields: "setGridFields", setPreviewGridKey: "setPreviewGridKey", setStudyType: "setStudyType" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function EhcSalesPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_8__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlaGMtc2FsZXMtcHJldmlldy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 71082:
/*!**************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ehc/sub/ehc-sales/ehc-sales.component.ts ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EhcSalesComponent": () => (/* binding */ EhcSalesComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var hyperformula__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hyperformula */ 22431);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var handsontable__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! handsontable */ 58110);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var _shared_handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../shared/handsontable/handsontable.component */ 92315);


// import { ColDef, CellEditingStartedEvent,
//   CellEditingStoppedEvent,
//   ICellEditorParams, } from 'ag-grid-community';

// import { Field } from 'devextreme/ui/pivot_grid/data_source';
















// import Handsontable from 'handsontable';
// import { ConsoleLogger } from '@angular/compiler-cli/private/localize';
class EhcSalesComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        // data1 = [
        //   ['10.26', null, 'Sum', '=SUM(A:A)'],
        //   ['20.12', null, 'Average', '=AVERAGE(A:A)'],
        //   ['30.01', null, 'Median', '=MEDIAN(A:A)'],
        //   ['40.29', null, 'MAX', '=MAX(A:A)'],
        //   ['50.18', null, 'MIN', '=MIN(A1:A5)'],
        // ];
        this.hyperformulaInstance = hyperformula__WEBPACK_IMPORTED_MODULE_0__.HyperFormula.buildEmpty({
            // to use an external HyperFormula instance,
            // initialize it with the `'internal-use-in-handsontable'` license key
            licenseKey: 'internal-use-in-handsontable',
        });
        this.data3 = handsontable__WEBPACK_IMPORTED_MODULE_10__["default"].helper.createSpreadsheetData(15, 10);
        this.settings = {
            colHeaders: true,
            rowHeaders: true,
            height: 'auto',
            formulas: {
                engine: this.hyperformulaInstance,
                sheetName: 'Sheet1'
            },
            licenseKey: 'non-commercial-and-evaluation'
        };
        this.formulas = {
            engine: hyperformula__WEBPACK_IMPORTED_MODULE_0__.HyperFormula,
            sheet: 'sheet1'
        };
        this.formulasArray = [];
        this.previousYear = 0;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.newRowForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroup({});
        this.newNoteForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormGroup({});
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize({});
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            SalesEHCItems: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.currentCurrency = {};
        this.previewGridData = [];
        this.previewGridStorageKey = '';
        this.allowedCols = ['AvgPrice2', 'Cagr2', 'Unit2', 'Value2'];
        this.studyAreaType = 'Sales';
        this.dataRelationsData = [];
        this.dataRelationsForEntry = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum;
        this.customerTypeLists = [];
        this.productTypeLists = [];
        this.sectorLists = [];
        this.channelLists = [];
        this.segmentLists = [];
        this.polymerLists = [];
        this.supplierLists = [];
        this.functionalityLists = [];
        this.selectedCurrency = {
            CurrencyCode: 'USD',
            Id: 27,
            IsActive: true,
            Name: 'United States Dollar',
        };
        this.dataRowChanges = [];
        this.deleteRowConfirmPopup = false;
        handsontable__WEBPACK_IMPORTED_MODULE_10__["default"].renderers.registerRenderer('cellHighLighting', (hotInstance, TD, ...rest) => {
            handsontable__WEBPACK_IMPORTED_MODULE_10__["default"].renderers.getRenderer('text')(hotInstance, TD, ...rest);
            TD.style.fontWeight = 'bold';
            TD.style.color = 'green';
            TD.style.background = '#d7f1e1';
        });
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            Channel: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            Sector: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            CustomerType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            Polymer: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            SupplierName: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            FunctionalityName: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            Unit: [null],
            Sales: [null],
            AvgPrice: [null],
            Cagr: [null],
        });
        this.previewGridStorageKey = `EHC-SALES-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setDataRelationsData(data) {
        if (data) {
            this.dataRelationsData = data;
            this.dataRelationsForEntry = this.dataRelationsData.filter((item) => item.ViewId === 0);
            this.getDataEntryDropDown(this.dataRelationsEnum.Polymer);
            this.getDataEntryDropDown(this.dataRelationsEnum.CustomerType);
            this.getDataEntryDropDown(this.dataRelationsEnum.Sector);
            this.getDataEntryDropDown(this.dataRelationsEnum.ProductType);
            this.getDataEntryDropDown(this.dataRelationsEnum.Supplier);
            this.getDataEntryDropDown(this.dataRelationsEnum.Functionality);
            this.getDataEntryDropDown(this.dataRelationsEnum.Channel);
            this.getDataEntryDropDown(this.dataRelationsEnum.Segment);
        }
    }
    ngOnInit() {
        this.getSalesData();
    }
    getDataEntryDropDown(masterEntryField) {
        const dataRelationData = this.dataRelationsForEntry.find((item) => item.TableName === masterEntryField);
        if (dataRelationData) {
            this.sharedService
                .getDataEntryDropDowns(dataRelationData.DataRelationId)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    switch (masterEntryField) {
                        case this.dataRelationsEnum.Polymer:
                            this.polymerLists = res.Data;
                            break;
                        case this.dataRelationsEnum.CustomerType:
                            this.customerTypeLists = res.Data;
                            break;
                        case this.dataRelationsEnum.Sector:
                            this.sectorLists = res.Data;
                            break;
                        case this.dataRelationsEnum.ProductType:
                            this.productTypeLists = res.Data;
                            break;
                        case this.dataRelationsEnum.Supplier:
                            this.supplierLists = res.Data;
                            break;
                        case this.dataRelationsEnum.Functionality:
                            this.functionalityLists = res.Data;
                            break;
                        case this.dataRelationsEnum.Channel:
                            this.channelLists = res.Data;
                            break;
                        case this.dataRelationsEnum.Segment:
                            this.segmentLists = res.Data;
                            break;
                        default:
                            break;
                    }
                }
            });
        }
    }
    getEHCSegmentList(sectorId) {
        this.studyService.getEHCSalesSegment(sectorId).subscribe((res) => {
            this.segmentLists = res.Data;
        });
    }
    onSectorChange(evt) {
        this.getEHCSegmentList(evt.Id);
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getEHCStudyData(this.studyAreaType, this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj.SalesEHCItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.previousYear = 0;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[4]] = {};
                                changelogObj[colValueArray[4]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    // this.onCellPreparedHighlighter(item)
                    // console.log(changelogObj);
                    this.selectedCurrency = {
                        CurrencyCode: item.CurrencyCode,
                        Id: item.CurrencyId,
                        IsActive: true,
                        Name: item.CurrencyName,
                    };
                    this.previousYear = item.LatestDataYear;
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                    this.studyData[i].DataRowKey =
                        item.DataRowId !== null ? item.DataRowId : i;
                });
                console.log('data', this.studyData);
                this.studyData.map((data) => {
                    data.sum = "=SUM(J:J)";
                });
                //  this.studyData = this.studyData.map(Object.values)
                this.setColumnHeaders();
                this.setUpColumnsToShow();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    onCellPreparedHighlighter(e) {
        // const isFound = this.allowedCols.some(
        //   (item) => item === e.column.dataField
        // );
        // if (e.rowType === 'data' && isFound) {
        if (e.ChangeLogObj) {
            // console.log(e.data.ChangeLogObj);
            const cellValue = typeof e.ChangeLogObj[e.column.dataField] !== 'undefined'
                ? e.ChangeLogObj[e.column.dataField]
                : null;
            if (cellValue !== null) {
                // console.log('highlight');
                // e.cellElement.bgColor = '#FFFF00';
                e.cellElement.className = 'highlighter-td';
            }
        }
        // }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.dataField] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.dataField]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    addNotes(data) {
        var _a, _b;
        console.log(data);
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        // this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            DataRowId: '',
            DataRowKey: this.studyData.length.toString(),
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            CurrencyCode: this.selectedCurrency.CurrencyCode,
            CurrencyId: this.selectedCurrency.Id,
            CurrencyName: this.selectedCurrency.Name,
            ChannelId: newRowData.Channel.Id,
            Channel: newRowData.Channel.Name,
            SegmentId: newRowData.Segment.Id,
            Segment: newRowData.Segment.Name,
            SectorId: newRowData.Sector.Id,
            Sector: newRowData.Sector.Name,
            ProductTypeId: newRowData.ProductType.Id,
            ProductType: newRowData.ProductType.Name,
            CustomerTypeId: newRowData.CustomerType.Id,
            CustomerType: newRowData.CustomerType.Name,
            PolymerId: newRowData.Polymer.Id,
            Polymer: newRowData.Polymer.Name,
            SupplierId: newRowData.SupplierName.Id,
            SupplierName: newRowData.SupplierName.Name,
            FunctionalityId: newRowData.FunctionalityName.Id,
            FunctionalityName: newRowData.FunctionalityName.Name,
            Unit1: 0,
            Unit2: newRowData.Unit,
            Value1: 0,
            Value2: newRowData.Sales,
            AvgPrice1: 0,
            AvgPrice2: newRowData.AvgPrice,
            Cagr1: 0,
            Cagr2: newRowData.Cagr,
            DataRelationId: '0',
            LatestDataYear: 0,
            CalculatorId: 0,
            CurrentYear: 0,
            OldCurrentYear: 0,
            ChangeLog: '',
            ChangeLogObj: [],
        };
        const isFound = this.studyData.find((item) => item.ChannelId == newRow.ChannelId &&
            item.SectorId === newRow.SectorId &&
            item.SegmentId === newRow.SegmentId &&
            item.ProductTypeId === newRow.ProductTypeId &&
            item.CustomerTypeId === newRow.CustomerTypeId &&
            item.PolymerId === newRow.PolymerId &&
            item.FunctionalityId === newRow.FunctionalityId &&
            item.SupplierId === newRow.SupplierId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => a.ChannelId - b.ChannelId ||
                a.SectorId - b.SectorId ||
                a.SegmentId - b.SegmentId ||
                a.ProductTypeId - b.ProductTypeId ||
                a.CustomerTypeId - b.CustomerTypeId ||
                a.PolymerId - b.PolymerId ||
                a.FunctionalityId - b.FunctionalityId ||
                a.SupplierId - b.SupplierId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    saveStudyData() {
        // if (this.dataRowChanges) {
        //   this.dataRowChanges.map((change) => {
        //     const dataChange = change.data;
        //     const changeKey = change.key.DataRowKey
        //       ? change.key.DataRowKey
        //       : undefined;
        //     if (changeKey) {
        //       const currentIndex = this.studyData.findIndex(
        //         (study) => study.DataRowKey === changeKey
        //       );
        //       if (
        //         currentIndex &&
        //         typeof this.studyData[currentIndex] !== 'undefined'
        //       ) {
        //         if (typeof dataChange.AvgPrice2 !== 'undefined') {
        //           this.studyData[currentIndex].AvgPrice2 = +dataChange.AvgPrice2;
        //         }
        //         if (typeof dataChange.Value2 !== 'undefined') {
        //           this.studyData[currentIndex].Value2 = dataChange.Value2;
        //         }
        //         if (typeof dataChange.Cagr2 !== 'undefined') {
        //           this.studyData[currentIndex].Cagr2 = dataChange.Cagr2;
        //         }
        //         if (typeof dataChange.Unit2 !== 'undefined') {
        //           this.studyData[currentIndex].Unit2 = dataChange.Unit2;
        //         }
        //       }
        //     }
        //   });
        // }
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { AvgPrice2: item.AvgPrice2 > 0 ? item.AvgPrice2 : null, Value2: item.Value2 > 0 ? item.Value2 : null, Cagr2: item.Cagr2 > 0 ? item.Cagr2 : null, Unit2: item.Unit2 > 0 ? item.Unit2 : null })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            salesEHCItems: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveEHCData(this.studyAreaType, studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                console.log(this.hyperformulaInstance);
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            salesEHCItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService
            .signOffEHCData(this.studyAreaType, formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSalesData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.dataRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        this.getDataEntryDropDown(type);
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    setColumnHeaders() {
        this.columnHeaders = [
            [
                'Channel',
                'Segment',
                'Sector',
                'Product Type',
                'Customer Type',
                'Polymer',
                'Supplier Name',
                'Functionality',
                { label: `Year: ${this.previousYear.toString()}`, colspan: 4 },
                { label: `Year: ${this.currentYear.toString()}`, colspan: 4 },
                '',
            ],
            [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                { label: 'Unit' },
                { label: 'Sales' },
                { label: 'Avg.Price' },
                { label: 'CAGR' },
                { label: 'Unit' },
                { label: 'Sales' },
                { label: 'Avg.Price' },
                { label: 'CAGR' },
                null,
            ]
        ];
    }
    setUpColumnsToShow() {
        this.columns = [
            { data: 'Channel', readOnly: true },
            { data: 'Segment', readOnly: true },
            { data: 'Sector', readOnly: true },
            { data: 'ProductType', readOnly: true },
            { data: 'CustomerType', readOnly: true },
            { data: 'Polymer', readOnly: true },
            { data: 'SupplierName', readOnly: true },
            { data: 'FunctionalityName', readOnly: true },
            { data: 'Unit1', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'Value1', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'AvgPrice1', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'Cagr1', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'Unit2', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'Value2', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'AvgPrice2', type: 'numeric', numericFormat: { pattern: '0.00' } },
            { data: 'Cagr2', type: 'numeric', numericFormat: { pattern: '0.00' } },
            // {data:'sum'},
        ];
    }
    // cellEditorSelector(params: ICellEditorParams<IRow>) {
    //   if (params.data.type === 'age') {
    //     return {
    //       component: NumericCellEditor,
    //     };
    //   }
    //   if (params.data.type === 'gender') {
    //     return {
    //       component: 'agRichSelectCellEditor',
    //       params: {
    //         values: ['Male', 'Female'],
    //       },
    //       popup: true,
    //     };
    //   }
    //   if (params.data.type === 'mood') {
    //     return {
    //       component: MoodEditor,
    //       popup: true,
    //       popupPosition: 'under',
    //     };
    //   }
    //   return undefined;
    // }
    renderNotesButtons(instance, td, row, col, prop, value, cellProperties) {
        // td.innerHTML = "<dx-button  stylingMode='text' icon='plus' type='default' class='small floating-note-button' (onClick)='addNotes(data)' > </dx-button>";
        //  const test = Handsontable.helper.stringify(value);
        //  let btn = document.createElement('button')
        //  btn.textContent = 'Notes';
        console.log('Top', instance, row, value);
        handsontable__WEBPACK_IMPORTED_MODULE_10__["default"].renderers.TextRenderer.apply(this, [instance, td, row, col, prop, value, cellProperties]);
        let btn = document.createElement('button');
        btn.innerHTML = 'Delete';
        btn.addEventListener('click', event => {
            //event.preventDefault();
            console.log('hi', row);
            this.addNotes(value);
        });
        td.innerText = '';
        td.appendChild(btn);
        return td;
    }
    cellHighighting() {
        console.log("========After lOAD fIRED =======");
    }
    firstRowRenderer(instance, td, row, col, prop, value, cellProperties) {
        handsontable__WEBPACK_IMPORTED_MODULE_10__["default"].renderers.TextRenderer.apply(this, [instance, td, row, col, prop, value, cellProperties]);
        td.style.fontWeight = 'bold';
        td.style.color = 'green';
        td.style.background = '#CEC';
    }
}
EhcSalesComponent.ɵfac = function EhcSalesComponent_Factory(t) { return new (t || EhcSalesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_7__.StudyService)); };
EhcSalesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: EhcSalesComponent, selectors: [["app-ehc-sales"]], viewQuery: function EhcSalesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.formulas = _t.first);
    } }, inputs: { setDataRelationsData: "setDataRelationsData" }, decls: 8, vars: 5, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], [1, "mb-3", 2, "float", "right"], ["icon", "plus", "text", "Add New Row", 1, "ml-2", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 1, "ml-2", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 1, "ml-2", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 1, "ml-2", 3, "onClick"], ["cell", "[\n    {\n      row: 0,\n      col: 0,\n      renderer: 'firstRowRenderer',\n    },\n  ]", 3, "nestedHeaders", "data", "columns", "settings", "afterRender"]], template: function EhcSalesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "dx-button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function EhcSalesComponent_Template_dx_button_onClick_3_listener() { return ctx.addNewRowPopup(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "dx-button", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function EhcSalesComponent_Template_dx_button_onClick_4_listener() { return ctx.saveStudyData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "dx-button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function EhcSalesComponent_Template_dx_button_onClick_5_listener() { return ctx.onRequestForSignOffClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "dx-button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function EhcSalesComponent_Template_dx_button_onClick_6_listener() { return ctx.onRequestForChangeDataClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "app-handsontable", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("afterRender", function EhcSalesComponent_Template_app_handsontable_afterRender_7_listener() { return ctx.cellHighighting(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("nestedHeaders", ctx.columnHeaders)("data", ctx.studyData)("columns", ctx.columns)("settings", ctx.settings);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_8__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxButtonComponent, _shared_handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_9__.HandsontableComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlaGMtc2FsZXMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 33249:
/*!*******************************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ehc/sub/market-consumption/market-consumption-preview/market-consumption-preview.component.ts ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MarketConsumptionPreviewComponent": () => (/* binding */ MarketConsumptionPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);








const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class MarketConsumptionPreviewComponent {
    constructor(route, isLoadingService) {
        this.route = route;
        this.isLoadingService = isLoadingService;
        this.studyData = [];
        this.currentYear = 0;
        this.latestDataYear = 0;
        this.previewData = [];
        this.saveStateEnabled = false;
        this.gridFields = [];
        this.previewGridKey = '';
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studyType = '';
        this.isPercentOfTotalPopup = false;
        this.isPercentOfChangePopup = false;
        this.isCagrPopup = false;
        this.yearDataFieldName = '';
        this.isHeaderFilterLoading = false;
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_1__.PivotGridOptions();
    }
    set setPreviewData(data) {
        if (data) {
            this.previewData = data;
        }
    }
    set setGridFields(data) {
        if (data) {
            this.gridFields = data;
        }
    }
    set setPreviewGridKey(data) {
        if (data) {
            this.previewGridKey = data;
        }
    }
    set setStudyType(data) {
        if (data) {
            this.studyType = data;
        }
    }
    ngOnInit() {
        if (typeof this.pivotGridOptions !== 'undefined') {
            this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
            this.pivotGridOptions.pivotGridSource.store = this.previewData;
            this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"](this.pivotGridOptions.pivotGridSource);
        }
    }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                CustomerType: item.CustomerType,
                Sector: item.Sector,
                Segment: item.Segment,
                DosageForm: item.DosageForm,
                Year: this.latestDataYear,
                CAGR: item.Cagr1,
                Unit: item.Unit1
            });
            previewData.push({
                CustomerType: item.CustomerType,
                Sector: item.Sector,
                Segment: item.Segment,
                DosageForm: item.DosageForm,
                Year: this.currentYear,
                CAGR: item.Cagr2,
                Unit: item.Unit2
            });
        });
        this.previewData = previewData;
        if (typeof this.pivotGridOptions !== 'undefined') {
            this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
            this.pivotGridOptions.pivotGridSource.store = this.previewData;
            this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"](this.pivotGridOptions.pivotGridSource);
        }
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'CustomerType',
                area: 'row',
                caption: 'CustomerType',
                dataType: 'string',
            },
            {
                dataField: 'Sector',
                area: 'row',
                caption: 'Sector',
                dataType: 'string',
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
            },
            {
                dataField: 'DosageForm',
                area: 'row',
                caption: 'DosageForm',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Unit',
                dataField: 'Unit',
                dataFieldType: 'Unit',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'CAGR(%)',
                dataField: 'CAGR',
                dataFieldType: 'CAGR',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
MarketConsumptionPreviewComponent.ɵfac = function MarketConsumptionPreviewComponent_Factory(t) { return new (t || MarketConsumptionPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_4__.IsLoadingService)); };
MarketConsumptionPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: MarketConsumptionPreviewComponent, selectors: [["app-market-consumption-preview"]], viewQuery: function MarketConsumptionPreviewComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_5__.DxPivotGridComponent, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    } }, inputs: { studyData: "studyData", currentYear: "currentYear", latestDataYear: "latestDataYear", setPreviewData: "setPreviewData", setGridFields: "setGridFields", setPreviewGridKey: "setPreviewGridKey", setStudyType: "setStudyType" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function MarketConsumptionPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_5__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_6__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYXJrZXQtY29uc3VtcHRpb24tcHJldmlldy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 5492:
/*!********************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ehc/sub/market-consumption/market-consumption.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MarketConsumptionComponent": () => (/* binding */ MarketConsumptionComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shc/sub/shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function MarketConsumptionComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r4.studyTitle);
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isLockedStudy);
} }
function MarketConsumptionComponent_dx_data_grid_6_dxi_column_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 73);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function MarketConsumptionComponent_dx_data_grid_6_div_24_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_div_24_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r40); const d_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r38.deleteRow(d_r36.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_div_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_div_24_dx_button_1_Template, 1, 0, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r36 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r36.data.DataRowId !== null);
} }
function MarketConsumptionComponent_dx_data_grid_6_div_25_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 78);
} if (rf & 2) {
    const data_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r41.value > 0 ? data_r41.value.toFixed(1) : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_25_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r41.value > 0 ? data_r41.value.toFixed(1) : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_div_25_input_1_Template, 1, 1, "input", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, MarketConsumptionComponent_dx_data_grid_6_div_25_span_2_Template, 2, 1, "span", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r8.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r8.isStudyEditable);
} }
function MarketConsumptionComponent_dx_data_grid_6_div_26_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 80);
} if (rf & 2) {
    const d_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", d_r46.data.Cagr2 > 0 ? d_r46.data.Cagr2.toFixed(1) : "")("ngClass", d_r46.data.IsCagr2Required ? "mark-input-border" : "")("title", d_r46.data.IsCagr2Required ? "This field is required" : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_26_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](d_r46.data.Cagr2 > 0 ? d_r46.data.Cagr2.toFixed(1) : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_div_26_input_1_Template, 1, 3, "input", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, MarketConsumptionComponent_dx_data_grid_6_div_26_span_2_Template, 2, 1, "span", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r9.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r9.isStudyEditable);
} }
function MarketConsumptionComponent_dx_data_grid_6_div_27_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r51 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r51.value > 0 ? data_r51.value.toFixed(1) : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_28_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r52 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r52.value > 0 ? data_r52.value : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_29_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 78);
} if (rf & 2) {
    const data_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r53.value > 0 ? (data_r53.value * 1).toFixed(1) : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_29_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r53.value > 0 ? (data_r53.value * 1).toFixed(1) : "");
} }
function MarketConsumptionComponent_dx_data_grid_6_div_29_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, MarketConsumptionComponent_dx_data_grid_6_div_29_input_1_Template, 1, 1, "input", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, MarketConsumptionComponent_dx_data_grid_6_div_29_span_2_Template, 2, 1, "span", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r12.isStudyEditable);
} }
function MarketConsumptionComponent_dx_data_grid_6_div_30_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_dx_data_grid_6_div_30_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r62); const data_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r60.addNotes(data_r58); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function MarketConsumptionComponent_dx_data_grid_6_div_30_Template(rf, ctx) { if (rf & 1) {
    const _r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, MarketConsumptionComponent_dx_data_grid_6_div_30_dx_button_2_Template, 1, 0, "dx-button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function MarketConsumptionComponent_dx_data_grid_6_div_30_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const data_r58 = restoredCtx.$implicit; const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r63.showNotePopup(data_r58); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r58 = ctx.$implicit;
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r13.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r58.value);
} }
function MarketConsumptionComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function MarketConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.onRowSaved($event); })("onCellPrepared", function MarketConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r67.onCellPreparedHighlighter($event); })("onCellHoverChanged", function MarketConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r68.onCellHoverChanged($event); })("onRowPrepared", function MarketConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r69 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r69.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, MarketConsumptionComponent_dx_data_grid_6_div_8_Template, 3, 1, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, MarketConsumptionComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "dxi-column", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "dxi-column", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](22, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, MarketConsumptionComponent_dx_data_grid_6_dxi_column_23_Template, 1, 1, "dxi-column", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, MarketConsumptionComponent_dx_data_grid_6_div_24_Template, 2, 1, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, MarketConsumptionComponent_dx_data_grid_6_div_25_Template, 3, 2, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](26, MarketConsumptionComponent_dx_data_grid_6_div_26_Template, 3, 2, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](27, MarketConsumptionComponent_dx_data_grid_6_div_27_Template, 3, 1, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](28, MarketConsumptionComponent_dx_data_grid_6_div_28_Template, 3, 1, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](29, MarketConsumptionComponent_dx_data_grid_6_div_29_Template, 3, 2, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](30, MarketConsumptionComponent_dx_data_grid_6_div_30_Template, 6, 2, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("caption", ctx_r0.latestDataYear);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowFiltering", false)("width", 80)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("caption", ctx_r0.currentYear);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellCagr2Template");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "lastYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "perCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function MarketConsumptionComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 86);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function MarketConsumptionComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 87);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.EHC_MC)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function MarketConsumptionComponent_dx_data_grid_60_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r3.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class MarketConsumptionComponent {
    constructor(route, studyService, isLoadingService, formBuilder, alertService, localStorageService, sharedService, router) {
        this.route = route;
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.formBuilder = formBuilder;
        this.alertService = alertService;
        this.localStorageService = localStorageService;
        this.sharedService = sharedService;
        this.router = router;
        this.studyTitle = '';
        this.currentYear = 0;
        this.latestDataYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.dataRelationsForEntry = [];
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup(),
            MarketConsumptionEHCItems: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.customerTypeLists = [];
        this.sectorLists = [];
        this.dosageFormLists = [];
        this.segmentLists = [];
        this.isCagr2Required = false;
        this.currentCurrency = {};
        this.previewGridData = [];
        this.previewGridStorageKey = '';
        this.volumeYears = [];
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.previewGridStorageKey = `EHC-MarketConsumption-${this.studyAreaId}`;
        this.newRowForm = this.formBuilder.group({
            CustomerType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Sector: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            DosageForm: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Unit2: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Cagr2: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_2__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setDataRelationsData(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getConsumptionMarketData();
        this.getCustomerTypeLists();
        this.getSectorLists();
        this.getSegmentLists();
        this.getDosageFormLists();
    }
    getCustomerTypeLists() {
        this.sharedService
            .getDataEntryDropDowns(33)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.customerTypeLists = res.Data;
            }
        });
    }
    getSectorLists() {
        this.sharedService
            .getDataEntryDropDowns(35)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.sectorLists = res.Data;
            }
        });
    }
    getDosageFormLists() {
        this.sharedService
            .getDataEntryDropDowns(38)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.dosageFormLists = res.Data;
            }
        });
    }
    getSegmentLists() {
        this.sharedService
            .getDataEntryDropDowns(37)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.segmentLists = res.Data;
            }
        });
    }
    getConsumptionMarketData() {
        this.isLoadingService.add();
        this.studyService
            .getMarketConsumptionStudyData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .MarketConsumptionEHCItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.latestDataYear =
                    typeof this.studyData[0] !== 'undefined'
                        ? this.studyData[0].LatestDataYear
                        : 0;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                changelogObj[colValueArray[4]] = {};
                                changelogObj[colValueArray[4]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.previewGridData.push({
                        CustomerType: item.CustomerType,
                        Sector: item.Sector,
                        Segment: item.Segment,
                        DosageForm: item.DosageForm,
                        Year: this.latestDataYear,
                        Unit: item.Unit1,
                        CagrPer: item.Cagr1,
                    });
                    this.previewGridData.push({
                        CustomerType: item.CustomerType,
                        Sector: item.Sector,
                        Segment: item.Segment,
                        DosageForm: item.DosageForm,
                        Year: this.currentYear,
                        Unit: item.Unit2,
                        CagrPer: item.Cagr2,
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.volumeYears.push({
                    field: 'Value1',
                    unitField: 'Unit1',
                    avgPriceField: 'AvgPrice1',
                    cagrField: 'Cagr1',
                    year: this.latestDataYear,
                });
                this.volumeYears.push({
                    field: 'Value2',
                    unitField: 'Unit2',
                    avgPriceField: 'AvgPrice2',
                    cagrField: 'Cagr2',
                    year: this.currentYear,
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'CustomerType',
                area: 'row',
                caption: 'Customer Type',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'Sector',
                area: 'row',
                caption: 'Sector',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'DosageForm',
                area: 'row',
                caption: 'Dosage Form',
                dataType: 'string',
                id: 3,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 4,
                caption: 'Unit',
                dataField: 'Unit',
                dataFieldType: 'Unit',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 5,
                caption: 'CAGR(%)',
                dataField: 'CagrPer',
                dataFieldType: 'CagrPer',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            ChangeLog: '',
            ChangeLogObj: [],
            Cagr1: 0,
            CustomerType: newRowData.CustomerType.Name,
            CustomerTypeId: +newRowData.CustomerType.Id,
            DosageForm: newRowData.DosageForm.Name,
            DosageFormId: +newRowData.DosageForm.Id,
            MarketId: +newRowData.MarketId,
            Sector: newRowData.Sector.Name,
            SectorId: +newRowData.Sector.Id,
            Segment: newRowData.Segment.Name,
            SegmentId: +newRowData.Segment.Id,
            Cagr2: +newRowData.Cagr2,
            LatestDataYear: this.latestDataYear,
            Unit1: 0,
            Unit2: +newRowData.Unit2,
            IsCagr2Required: false,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.DosageFormId === newRow.DosageFormId &&
            item.CustomerTypeId === newRow.CustomerTypeId &&
            item.SectorId === newRow.SectorId &&
            item.SegmentId === newRow.SegmentId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.DosageFormId || 0) - (b.DosageFormId || 0) ||
                (a.CustomerTypeId || 0) - (b.CustomerTypeId || 0) ||
                (a.SectorId || 0) - (b.SectorId || 0) ||
                (a.SegmentId || 0) - (b.SegmentId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.Unit2 = +data.Unit2;
            data.Cagr2 = +data.Cagr2;
            if ((data.Unit2 != 0 || data.Unit2 != null) &&
                (data.Cagr2 === 0 || data.Cagr2 === null))
                data.IsCagr2Required = true;
            else {
                data.IsCagr2Required = false;
            }
        }
    }
    onCellPreparedHighlighter(e) {
        const allowedCols = ['Unit2', 'Cagr2'];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.dataField]
                    : null;
                if (cellValue !== null) {
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = ['Unit2', 'Cagr2'];
        const isFound = allowedCols.some((item) => item === event.column.dataField);
        if (event.rowType === 'data' && isFound) {
            this.TooltipTarget = event.cellElement;
            if (event.eventType === 'mouseover') {
                if (event.data.ChangeLogObj) {
                    const cellValue = typeof event.data.ChangeLogObj[event.column.dataField] !==
                        'undefined'
                        ? event.data.ChangeLogObj[event.column.dataField]
                        : null;
                    if (cellValue !== null) {
                        const oldValue = !isNaN(cellValue.oldValue)
                            ? +cellValue.oldValue
                            : 0;
                        const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                        this.TooltipText = html;
                        this.isTooltipVisible = true;
                    }
                }
            }
            if (event.eventType === 'mouseout') {
                this.isTooltipVisible = false;
            }
        }
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { Unit2: item.Unit2 > 0 ? item.Unit2 : 0, Cagr2: item.Cagr2 > 0 ? item.Cagr2 : 0, Unit1: item.Unit1 > 0 ? item.Unit1 : 0, Cagr1: item.Cagr1 > 0 ? item.Cagr1 : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: this.studySummary,
            marketConsumptionEHCItems: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveMaketConsumptionData(studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                // this.getConsumptionMarketData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: this.studySummary,
            marketConsumptionEHCItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffMaketConsumptionData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                this.getConsumptionMarketData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            const error = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try after sometimes.';
            this.alertService.danger(error);
            this.isLoadingService.remove();
        });
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.CustomerType:
                this.getCustomerTypeLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.Segment:
                this.getSegmentLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.DosageForm:
                this.getDosageFormLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.Sector:
                this.getSectorLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
MarketConsumptionComponent.ɵfac = function MarketConsumptionComponent_Factory(t) { return new (t || MarketConsumptionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_8__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.Router)); };
MarketConsumptionComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: MarketConsumptionComponent, selectors: [["app-market-consumption"]], viewQuery: function MarketConsumptionComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setDataRelationsData: "setDataRelationsData" }, decls: 79, vars: 61, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "currentYear", "setVolumeYears", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "width", "height", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col-md-6"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "CustomerType", "placeholder", "Select Customer Type", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Sector", "placeholder", "Select Sector", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "DosageForm", "placeholder", "Select Dosage Form", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", 3, "items", "addTag"], ["type", "text", "formControlName", "Unit2", 1, "form-control"], ["type", "text", "formControlName", "Cagr2", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "CustomerType", 3, "allowEditing"], ["dataField", "Sector", 3, "allowEditing"], ["dataField", "Segment", 3, "allowEditing"], ["dataField", "DosageForm", 3, "allowEditing"], [3, "caption"], ["caption", "Unit", "dataField", "Unit1", "cellTemplate", "lastYearCellTemplate", 3, "allowFiltering", "width", "allowEditing"], ["caption", "Cagr (%)", "dataField", "Cagr1", "cellTemplate", "lastYearCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Unit", "dataField", "Unit2", "cellTemplate", "EditCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["dataField", "Cagr2", "caption", "Cagr (%)", "cellTemplate", "EditCellCagr2Template", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", "ngClass", "title", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value", "ngClass", "title"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "currentYear", "setVolumeYears", "setViewId"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function MarketConsumptionComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, MarketConsumptionComponent_dx_data_grid_6_Template, 31, 46, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, MarketConsumptionComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, MarketConsumptionComponent_app_shc_preview_11_Template, 1, 9, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function MarketConsumptionComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Customer Type");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Sector");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Dosage Form");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](35, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](36, "ng-select", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](41, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](45);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](46, "input", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function MarketConsumptionComponent_Template_dx_button_click_48_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function MarketConsumptionComponent_Template_dx_popup_visibleChange_49_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function MarketConsumptionComponent_Template_dx_popup_onHidden_49_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](54, "textarea", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_Template_dx_button_onClick_56_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "dx-popup", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function MarketConsumptionComponent_Template_dx_popup_visibleChange_57_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function MarketConsumptionComponent_Template_dx_popup_onHidden_57_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](60, MarketConsumptionComponent_dx_data_grid_60_Template, 4, 8, "dx-data-grid", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-popup", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function MarketConsumptionComponent_Template_dx_popup_visibleChange_61_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "p", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](65, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](66, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](67, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](68, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_Template_dx_button_onClick_69_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "dx-button", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_Template_dx_button_onClick_70_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "dx-popup", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function MarketConsumptionComponent_Template_dx_popup_visibleChange_71_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function MarketConsumptionComponent_Template_dx_popup_onHidden_71_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](72, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "p", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](75, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](76, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "dx-button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_Template_dx_button_onClick_77_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function MarketConsumptionComponent_Template_dx_button_onClick_78_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("width", 600)("height", 400)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.customerTypeLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.CustomerType));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.sectorLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Sector));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.dosageFormLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.DosageForm));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.segmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("", ctx.currentYear, " Unit");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("", ctx.currentYear, " Cagr (%)");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](59, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator], styles: [".mark-input-border[_ngcontent-%COMP%] {\r\n    border-color: red;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hcmtldC1jb25zdW1wdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCIiwiZmlsZSI6Im1hcmtldC1jb25zdW1wdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcmstaW5wdXQtYm9yZGVyIHtcclxuICAgIGJvcmRlci1jb2xvcjogcmVkO1xyXG59Il19 */"] });


/***/ }),

/***/ 32343:
/*!******************************************************************!*\
  !*** ./src/app/pages/study-area/components/ivm/ivm.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IvmComponent": () => (/* binding */ IvmComponent)
/* harmony export */ });
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _sub_product_composition_product_composition_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sub/product-composition/product-composition.component */ 4445);
/* harmony import */ var _sub_ps_ps_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub/ps/ps.component */ 85237);







function IvmComponent_app_product_composition_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "app-product-composition", 1);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("setDataRelationsData", ctx_r0.datRelationsData);
} }
function IvmComponent_app_ps_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "app-ps", 1);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("setDataRelationsData", ctx_r1.datRelationsData);
} }
class IvmComponent {
    constructor(route, sharedService) {
        this.route = route;
        this.sharedService = sharedService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__.DataRelationsEnum;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getDataRelations();
    }
    ngOnInit() { }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
}
IvmComponent.ɵfac = function IvmComponent_Factory(t) { return new (t || IvmComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__.SharedService)); };
IvmComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: IvmComponent, selectors: [["app-ivm"]], decls: 2, vars: 2, consts: [[3, "setDataRelationsData", 4, "ngIf"], [3, "setDataRelationsData"]], template: function IvmComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, IvmComponent_app_product_composition_0_Template, 1, 1, "app-product-composition", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, IvmComponent_app_ps_1_Template, 1, 1, "app-ps", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 39);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.NgIf, _sub_product_composition_product_composition_component__WEBPACK_IMPORTED_MODULE_2__.ProductCompositionComponent, _sub_ps_ps_component__WEBPACK_IMPORTED_MODULE_3__.PsComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpdm0uY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 59634:
/*!**********************************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ivm/sub/product-composition/product-composition-preview/product-composition-preview.component.ts ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductCompositionPreviewComponent": () => (/* binding */ ProductCompositionPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);









const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class ProductCompositionPreviewComponent {
    constructor(route, isLoadingService, studyService) {
        this.route = route;
        this.isLoadingService = isLoadingService;
        this.studyService = studyService;
        this.studyData = [];
        this.currentYear = 0;
        this.latestDataYear = 0;
        this.previewData = [];
        this.saveStateEnabled = false;
        this.gridFields = [];
        this.previewGridKey = '';
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studyType = '';
        this.currencyConversionTypeSelected = 1;
        this.isPercentOfTotalPopup = false;
        this.isPercentOfChangePopup = false;
        this.isCagrPopup = false;
        this.yearDataFieldName = '';
        this.isHeaderFilterLoading = false;
        this.selectedCurrency = {
            Id: 0,
            IsActive: false,
            Name: '',
        };
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_0__.PivotGridOptions();
    }
    set setPreviewData(data) {
        if (data) {
            this.previewData = data;
        }
    }
    set setGridFields(data) {
        if (data) {
            this.gridFields = data;
        }
    }
    set setPreviewGridKey(data) {
        if (data) {
            this.previewGridKey = data;
        }
    }
    set setStudyType(data) {
        if (data) {
            this.studyType = data;
        }
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.selectedCurrency = {
                Id: data.CurrencyId,
                IsActive: true,
                Name: data.CurrencyName,
                CurrencyCode: data.CurrencyCode,
                CurrencyName: data.CurrencyName,
            };
            this.currencyDropdownSelected = this.selectedCurrency;
        }
    }
    ngOnInit() {
        if (typeof this.pivotGridOptions !== 'undefined') {
            this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
            this.pivotGridOptions.pivotGridSource.store = this.previewData;
            this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }
    }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                Market: item.Market,
                ActiveIngredient: item.ActiveIngredient,
                Brand: item.Brand,
                ProductClassification: item.ProductClassification,
                Year: this.latestDataYear,
                CAGR: item.Cagr1,
                Measure: item.Measure1,
                Concentration: item.ActiveIngredientConcentration1,
                ProductForm: item.ProductForm,
                ProductType: item.ProductType,
                Segment: item.Segment,
                Supplier: item.Supplier,
                UnitOfMeasureName: item.UnitOfMeasureName
            });
            previewData.push({
                Market: item.Market,
                ActiveIngredient: item.ActiveIngredient,
                Brand: item.Brand,
                ProductClassification: item.ProductClassification,
                Year: this.currentYear,
                CAGR: item.Cagr2,
                Measure: item.Measure2,
                Concentration: item.ActiveIngredientConcentration2,
                ProductForm: item.ProductForm,
                ProductType: item.ProductType,
                Segment: item.Segment,
                Supplier: item.Supplier,
                UnitOfMeasureName: item.UnitOfMeasureName
            });
        });
        this.previewData = previewData;
        if (typeof this.pivotGridOptions !== 'undefined') {
            this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
            this.pivotGridOptions.pivotGridSource.store = this.previewData;
            this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'Market',
                area: 'row',
                caption: 'Market',
                dataType: 'string',
            },
            {
                dataField: 'ActiveIngredient',
                area: 'row',
                caption: 'Active Ingredient',
                dataType: 'string',
            },
            {
                dataField: 'Brand',
                area: 'row',
                caption: 'Brand',
                dataType: 'string',
            },
            {
                dataField: 'ProductClassification',
                area: 'row',
                caption: 'Product Classification',
                dataType: 'string',
            },
            {
                dataField: 'ProductForm',
                area: 'row',
                caption: 'Product Form',
                dataType: 'string',
            },
            {
                dataField: 'ProductType',
                area: 'row',
                caption: 'Product Type',
                dataType: 'string',
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
            },
            {
                dataField: 'Supplier',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
            },
            {
                dataField: 'UnitOfMeasureName',
                area: 'row',
                caption: 'Unit Of MeasureName',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Measure',
                dataField: 'Measure',
                dataFieldType: 'Measure',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Concentration',
                dataField: 'Concentration',
                dataFieldType: 'Concentration',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'CAGR(%)',
                dataField: 'CAGR',
                dataFieldType: 'CAGR',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
ProductCompositionPreviewComponent.ɵfac = function ProductCompositionPreviewComponent_Factory(t) { return new (t || ProductCompositionPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_2__.StudyService)); };
ProductCompositionPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: ProductCompositionPreviewComponent, selectors: [["app-product-composition-preview"]], viewQuery: function ProductCompositionPreviewComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_6__.DxPivotGridComponent, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    } }, inputs: { studyData: "studyData", currentYear: "currentYear", latestDataYear: "latestDataYear", setPreviewData: "setPreviewData", setGridFields: "setGridFields", setPreviewGridKey: "setPreviewGridKey", setStudyType: "setStudyType", setSelectedCurrency: "setSelectedCurrency" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function ProductCompositionPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_6__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_7__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kdWN0LWNvbXBvc2l0aW9uLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 4445:
/*!**********************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ivm/sub/product-composition/product-composition.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductCompositionComponent": () => (/* binding */ ProductCompositionComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shc/sub/shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function ProductCompositionComponent_dx_data_grid_6_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r4.studyTitle);
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_ng_container_10_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r19.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_ng_container_10_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r21.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r24.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_5_div_1_Template, 2, 0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r28); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r27.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_6_div_1_Template, 2, 0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r31); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r30.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r29.disabledSignOffButton);
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_7_div_1_Template, 2, 1, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r34); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r33.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_8_div_1_Template, 2, 0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductCompositionComponent_dx_data_grid_6_ng_container_10_div_2_Template, 2, 0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, ProductCompositionComponent_dx_data_grid_6_ng_container_10_div_4_Template, 2, 0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_5_Template, 2, 0, "dxi-item", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_6_Template, 2, 0, "dxi-item", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_7_Template, 2, 0, "dxi-item", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, ProductCompositionComponent_dx_data_grid_6_ng_container_10_dxi_item_8_Template, 2, 0, "dxi-item", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isLockedStudy);
} }
function ProductCompositionComponent_dx_data_grid_6_div_31_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 88);
} if (rf & 2) {
    const data_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r35.value > 0 ? data_r35.value.toFixed(1) : "");
} }
function ProductCompositionComponent_dx_data_grid_6_div_31_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r35.value > 0 ? data_r35.value.toFixed(1) : "");
} }
function ProductCompositionComponent_dx_data_grid_6_div_31_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_div_31_input_1_Template, 1, 1, "input", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductCompositionComponent_dx_data_grid_6_div_31_span_2_Template, 2, 1, "span", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isStudyEditable);
} }
function ProductCompositionComponent_dx_data_grid_6_dxi_column_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 89);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function ProductCompositionComponent_dx_data_grid_6_div_33_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_div_33_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r44); const d_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r42.deleteRow(d_r40.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_div_33_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_div_33_dx_button_1_Template, 1, 0, "dx-button", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r40 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r40.data.DataRowId !== null);
} }
function ProductCompositionComponent_dx_data_grid_6_div_34_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 94);
} if (rf & 2) {
    const d_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", d_r45.data.Cagr2 > 0 ? d_r45.data.Cagr2.toFixed(1) : "")("ngClass", d_r45.data.IsCagr2Required ? "mark-input-border" : "")("title", d_r45.data.IsCagr2Required ? "This field is required" : "");
} }
function ProductCompositionComponent_dx_data_grid_6_div_34_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](d_r45.data.Cagr2 > 0 ? d_r45.data.Cagr2.toFixed(1) : "");
} }
function ProductCompositionComponent_dx_data_grid_6_div_34_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductCompositionComponent_dx_data_grid_6_div_34_input_1_Template, 1, 3, "input", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductCompositionComponent_dx_data_grid_6_div_34_span_2_Template, 2, 1, "span", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r9.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r9.isStudyEditable);
} }
function ProductCompositionComponent_dx_data_grid_6_div_35_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r50 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r50.value > 0 ? data_r50.value.toFixed(1) : "");
} }
function ProductCompositionComponent_dx_data_grid_6_div_36_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r51 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r51.value > 0 ? data_r51.value : "");
} }
function ProductCompositionComponent_dx_data_grid_6_div_37_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 99);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_dx_data_grid_6_div_37_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const data_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r54.addNotes(data_r52); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductCompositionComponent_dx_data_grid_6_div_37_Template(rf, ctx) { if (rf & 1) {
    const _r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductCompositionComponent_dx_data_grid_6_div_37_dx_button_2_Template, 1, 0, "dx-button", 96);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 97);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 98);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function ProductCompositionComponent_dx_data_grid_6_div_37_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r58); const data_r52 = restoredCtx.$implicit; const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r57.showNotePopup(data_r52); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r52 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r52.value);
} }
function ProductCompositionComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function ProductCompositionComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowSaved($event); })("onCellPrepared", function ProductCompositionComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r61.onCellPreparedHighlighter($event); })("onCellHoverChanged", function ProductCompositionComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.onCellHoverChanged($event); })("onRowPrepared", function ProductCompositionComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r63.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-scrolling", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-filter-row", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-header-filter", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-paging", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "dxo-editing", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "dxi-item", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, ProductCompositionComponent_dx_data_grid_6_div_9_Template, 3, 1, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, ProductCompositionComponent_dx_data_grid_6_ng_container_10_Template, 9, 4, "ng-container", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "dxi-column", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "dxi-column", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](22, "dxi-column", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "dxi-column", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "dxi-column", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](25, "dxi-column", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "dxi-column", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](27, "dxi-column", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](28, "dxi-column", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](29, "dxi-column", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](30, "dxi-column", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](31, ProductCompositionComponent_dx_data_grid_6_div_31_Template, 3, 2, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](32, ProductCompositionComponent_dx_data_grid_6_dxi_column_32_Template, 1, 1, "dxi-column", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](33, ProductCompositionComponent_dx_data_grid_6_div_33_Template, 2, 1, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](34, ProductCompositionComponent_dx_data_grid_6_div_34_Template, 3, 2, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](35, ProductCompositionComponent_dx_data_grid_6_div_35_Template, 3, 1, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](36, ProductCompositionComponent_dx_data_grid_6_div_36_Template, 3, 1, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](37, ProductCompositionComponent_dx_data_grid_6_div_37_Template, 6, 2, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("caption", ctx_r0.latestDataYear);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("caption", ctx_r0.currentYear);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowFiltering", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowFiltering", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellCagr2Template");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "lastYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "perCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function ProductCompositionComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 100);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function ProductCompositionComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 101);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.IVM_MarketConsumption)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setViewId", ctx_r2.studyDataViewId);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function ProductCompositionComponent_dx_data_grid_90_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 102);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 103);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 104);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 105);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r3.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class ProductCompositionComponent {
    constructor(route, router, studyService, isLoadingService, formBuilder, alertService, localStorageService, sharedService) {
        this.route = route;
        this.router = router;
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.formBuilder = formBuilder;
        this.alertService = alertService;
        this.localStorageService = localStorageService;
        this.sharedService = sharedService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.latestDataYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            dataItems: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.volumeYears = [];
        this.previewGridData = [];
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.studyDataViewId = 0;
        this.marketLists = [];
        this.activeIngredientLists = [];
        this.brandLists = [];
        this.productClassificationLists = [];
        this.productFormLists = [];
        this.productTypeLists = [];
        this.segmentLists = [];
        this.supplierLists = [];
        this.unitOfMeasureLists = []; //[{Id: 2, Name: 'Gram', IsActive: true, Description: 'Gram'}]
        this.dropDownsId = [71, 67, 70, 69, 66, 65, 68];
        this.currentCurrency = {};
        this.dataSetId = 0;
        this.dataRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newRowForm = this.formBuilder.group({
            Market: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ActiveIngredient: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Brand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductClassification: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductForm: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Supplier: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            UnitOfMeasureName: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Measure2: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ActiveIngredientConcentration2: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Cagr2: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setDataRelationsData(data) {
        if (data) {
            this.dataRelationsData = data;
            this.studyDataRelations = this.dataRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getProductCompositionData();
        this.dropDownsId.forEach((id) => {
            this.getDataEntryDropDown(id);
        });
        this.getMarketLists();
        this.getUnitOfMeasureLists();
    }
    getDataEntryDropDown(dataRelationId) {
        this.sharedService
            .getDataEntryDropDowns(dataRelationId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                if (dataRelationId === this.dropDownsId[0])
                    this.activeIngredientLists = res.Data;
                else if (dataRelationId === this.dropDownsId[1])
                    this.brandLists = res.Data;
                else if (dataRelationId === this.dropDownsId[2])
                    this.productClassificationLists = res.Data;
                else if (dataRelationId === this.dropDownsId[3])
                    this.productFormLists = res.Data;
                else if (dataRelationId === this.dropDownsId[4])
                    this.productTypeLists = res.Data;
                else if (dataRelationId === this.dropDownsId[5])
                    this.segmentLists = res.Data;
                else if (dataRelationId === this.dropDownsId[6])
                    this.supplierLists = res.Data;
            }
        });
    }
    getMarketLists() {
        this.sharedService.getSubMarkets(this.dataSetId, 113).subscribe((res) => {
            if (res.HttpStatusCode === 200)
                this.marketLists = res.Data;
        });
    }
    getUnitOfMeasureLists() {
        this.sharedService.getUnitOfMeasure().subscribe((res) => {
            if (res.HttpStatusCode === 200)
                this.unitOfMeasureLists = res.Data;
        });
    }
    getProductCompositionData() {
        this.isLoadingService.add();
        this.studyService
            .getIVMProductCompositionStudyData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .dataItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.latestDataYear = this.studyData[0].LatestDataYear;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                changelogObj[colValueArray[4]] = {};
                                changelogObj[colValueArray[4]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.latestDataYear = item.LatestDataYear;
                    this.previewGridData.push({
                        Market: item.Market,
                        Segment: item.Segment,
                        ProductType: item.ProductType,
                        Brand: item.Brand,
                        Supplier: item.Supplier,
                        ProductForm: item.ProductForm,
                        ProductClassification: item.ProductClassification,
                        UnitOfMeasureName: item.UnitOfMeasureName,
                        ActiveIngredient: item.ActiveIngredient,
                        Year: this.latestDataYear,
                        Value: item.ActiveIngredientConcentration1,
                    });
                    this.previewGridData.push({
                        Market: item.Market,
                        Segment: item.Segment,
                        ProductType: item.ProductType,
                        Brand: item.Brand,
                        Supplier: item.Supplier,
                        ProductForm: item.ProductForm,
                        ProductClassification: item.ProductClassification,
                        UnitOfMeasureName: item.UnitOfMeasureName,
                        ActiveIngredient: item.ActiveIngredient,
                        Year: this.currentYear,
                        Value: item.ActiveIngredientConcentration2,
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.volumeYears.push({
                    field: 'ActiveIngredientConcentration1',
                    year: this.latestDataYear,
                });
                this.volumeYears.push({
                    field: 'ActiveIngredientConcentration2',
                    year: this.currentYear,
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            ChangeLog: '',
            ChangeLogObj: [],
            Cagr1: 0,
            IsCagr2Required: false,
            ActiveIngredient: newRowData.ActiveIngredient.Name,
            ActiveIngredientConcentration1: +newRowData.ActiveIngredientConcentration1,
            ActiveIngredientConcentration2: +newRowData.ActiveIngredientConcentration2,
            ActiveIngredientId: +newRowData.ActiveIngredient.Id,
            Brand: newRowData.Brand.Name,
            BrandId: +newRowData.Brand.Id,
            Cagr2: +newRowData.Cagr2,
            CalculatorId: 0,
            DataRelationId: 0,
            LatestDataYear: this.latestDataYear,
            Market: newRowData.Market.OfficialName,
            MarketId: +newRowData.Market.Id,
            Measure1: 0,
            Measure2: +newRowData.Measure2,
            ProductClassification: newRowData.ProductClassification.Name,
            ProductClassificationId: +newRowData.ProductClassification.Id,
            ProductForm: newRowData.ProductForm.Name,
            ProductFormId: +newRowData.ProductForm.Id,
            ProductType: newRowData.ProductType.Name,
            ProductTypeId: +newRowData.ProductType.Id,
            Segment: newRowData.Segment.Name,
            SegmentId: +newRowData.Segment.Id,
            Supplier: newRowData.Supplier.Name,
            SupplierId: +newRowData.Supplier.Id,
            UnitOfMeasureId: +newRowData.UnitOfMeasureName.Id,
            UnitOfMeasureName: newRowData.UnitOfMeasureName.Name,
            UnitOfMeasureSymbol: newRowData.UnitOfMeasureName.symbol,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.MarketId == newRow.MarketId &&
            item.BrandId == newRow.BrandId &&
            item.ProductClassificationId == newRow.ProductClassificationId &&
            item.ProductFormId == newRow.ProductFormId &&
            item.ProductTypeId == newRow.ProductTypeId &&
            item.SegmentId == newRow.SegmentId &&
            item.SupplierId == newRow.SupplierId &&
            item.ActiveIngredientId == newRow.ActiveIngredientId &&
            item.UnitOfMeasureId == newRow.UnitOfMeasureId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.MarketId || 0) - (b.MarketId || 0) ||
                (a.BrandId || 0) - (b.BrandId || 0) ||
                (a.ProductClassificationId || 0) - (b.ProductClassificationId || 0) ||
                (a.SegmentId || 0) - (b.SegmentId || 0) ||
                (a.SupplierId || 0) - (b.SupplierId || 0) ||
                (a.ActiveIngredientId || 0) - (b.ActiveIngredientId || 0) ||
                (a.ProductFormId || 0) - (b.ProductFormId || 0) ||
                (a.ProductTypeId || 0) - (b.ProductTypeId || 0) ||
                (a.UnitOfMeasureId || 0) - (b.UnitOfMeasureId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.ActiveIngredientConcentration2 =
                +data.ActiveIngredientConcentration2;
            data.Measure2 = +data.Measure2;
            data.Cagr2 = +data.Cagr2;
            if ((data.ActiveIngredientConcentration2 != 0 ||
                data.ActiveIngredientConcentration2 != null ||
                data.Measure2 != 0 ||
                data.Measure2 != null) &&
                (data.Cagr2 === 0 || data.Cagr2 === null))
                data.IsCagr2Required = true;
            else {
                data.IsCagr2Required = false;
            }
        }
    }
    onCellPreparedHighlighter(e) {
        const allowedCols = ['ActiveIngredientConcentration2', 'Measure2', 'Cagr2'];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.dataField]
                    : null;
                if (cellValue !== null) {
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = ['ActiveIngredientConcentration2', 'Measure2', 'Cagr2'];
        const isFound = allowedCols.some((item) => item === event.column.dataField);
        if (event.rowType === 'data' && isFound) {
            this.TooltipTarget = event.cellElement;
            if (event.eventType === 'mouseover') {
                if (event.data.ChangeLogObj) {
                    const cellValue = typeof event.data.ChangeLogObj[event.column.dataField] !==
                        'undefined'
                        ? event.data.ChangeLogObj[event.column.dataField]
                        : null;
                    if (cellValue !== null) {
                        const oldValue = !isNaN(cellValue.oldValue)
                            ? +cellValue.oldValue
                            : 0;
                        const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                        this.TooltipText = html;
                        this.isTooltipVisible = true;
                    }
                }
            }
            if (event.eventType === 'mouseout') {
                this.isTooltipVisible = false;
            }
        }
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { Measure2: item.Measure2 > 0 ? item.Measure2 : null, ActiveIngredientConcentration2: item.ActiveIngredientConcentration2 > 0
                ? item.ActiveIngredientConcentration2
                : null, Cagr2: item.Cagr2 > 0 ? item.Cagr2 : null, Cagr1: item.Cagr1 > 0 ? item.Cagr1 : null, Measure1: item.Measure1 > 0 ? item.Measure1 : null, ActiveIngredientConcentration1: item.ActiveIngredientConcentration1 > 0
                ? item.ActiveIngredientConcentration1
                : null })));
        const studyDataInfo = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: this.studySummary,
            dataItems: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveIVMProductCompositionData(studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                // this.getProductCompositionData();
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: this.studySummary,
            iVMProductCompositionItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffIVMProductCompositionData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                this.getProductCompositionData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            const error = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try after sometimes.';
            this.alertService.danger(error);
            this.isLoadingService.remove();
        });
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.dataRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        this.dropDownsId.forEach((id) => {
            this.getDataEntryDropDown(id);
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'Market',
                area: 'row',
                caption: 'Market',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'ActiveIngredient',
                area: 'row',
                caption: 'Active Ingredient',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'Brand',
                area: 'row',
                caption: 'Brand',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'ProductClassification',
                area: 'row',
                caption: 'Product Classification',
                dataType: 'string',
                id: 3,
            },
            {
                dataField: 'ProductForm',
                area: 'filter',
                caption: 'Product Form',
                dataType: 'string',
                id: 4,
            },
            {
                dataField: 'ProductType',
                area: 'filter',
                caption: 'Product Type',
                dataType: 'string',
                id: 5,
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
                id: 6,
            },
            {
                dataField: 'Supplier',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
                id: 7,
            },
            {
                dataField: 'UnitOfMeasureName',
                area: 'row',
                caption: 'Unit Of Measure',
                dataType: 'string',
                id: 8,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 9,
                caption: 'Concentration',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 10,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
ProductCompositionComponent.ɵfac = function ProductCompositionComponent_Factory(t) { return new (t || ProductCompositionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_13__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_8__.SharedService)); };
ProductCompositionComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: ProductCompositionComponent, selectors: [["app-product-composition"]], viewQuery: function ProductCompositionComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setDataRelationsData: "setDataRelationsData" }, decls: 109, vars: 68, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col-md-6"], [1, "form-group"], ["bindLabel", "OfficialName", "formControlName", "Market", "placeholder", "Select Market", 3, "items"], ["bindLabel", "Name", "formControlName", "ActiveIngredient", "placeholder", "Select Active Ingredient", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Brand", "placeholder", "Select Brand", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductClassification", "placeholder", "Select Product Classification", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductForm", "placeholder", "Select Product Form", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductType", "placeholder", "Select Product Type", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Supplier", "placeholder", "Select Supplier", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "UnitOfMeasureName", "placeholder", "Select Unit of Measure", 3, "items"], ["type", "text", "formControlName", "Measure2", 1, "form-control"], ["type", "text", "formControlName", "ActiveIngredientConcentration2", 1, "form-control"], ["type", "text", "formControlName", "Cagr2", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["mode", "virtual", "columnRenderingMode", "virtual"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Market", 3, "allowEditing"], ["dataField", "ActiveIngredient", 3, "allowEditing"], ["dataField", "Brand", 3, "width", "allowEditing"], ["dataField", "ProductClassification", 3, "allowEditing"], ["dataField", "ProductForm", 3, "allowEditing"], ["dataField", "ProductType", 3, "allowEditing"], ["dataField", "Segment", 3, "allowEditing"], ["dataField", "Supplier", 3, "allowEditing"], ["dataField", "UnitOfMeasureName", "caption", "Unit", 3, "width", "allowEditing"], [3, "caption"], ["caption", "Measure", "dataField", "Measure1", "cellTemplate", "lastYearCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Concentration", "dataField", "ActiveIngredientConcentration1", "cellTemplate", "lastYearCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Cagr (%)", "dataField", "Cagr1", "cellTemplate", "lastYearCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Measure", "dataField", "Measure2", "cellTemplate", "EditCellTemplate", 3, "allowFiltering"], ["caption", "Concentration", "dataField", "ActiveIngredientConcentration2", "cellTemplate", "EditCellTemplate", 3, "allowFiltering"], ["dataField", "Cagr2", "caption", "Cagr (%)", "cellTemplate", "EditCellCagr2Template", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], [4, "dxTemplate", "dxTemplateOf"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", "ngClass", "title", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value", "ngClass", "title"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function ProductCompositionComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, ProductCompositionComponent_dx_data_grid_6_Template, 38, 56, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, ProductCompositionComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, ProductCompositionComponent_app_shc_preview_11_Template, 1, 9, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductCompositionComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Market");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Active Ingredient");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Brand");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](35, "Product Classification");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](36, "ng-select", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](40, "Product Form");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](41, "ng-select", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](45, "Product Type");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](46, "ng-select", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](50, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](51, "ng-select", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](55, "Supplier");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](56, "ng-select", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](60, "Unit of Measure");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](61, "ng-select", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](65);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](66, "input", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](68, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](70);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](71, "input", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](72, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](75);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](76, "input", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "dx-button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function ProductCompositionComponent_Template_dx_button_click_78_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](79, "dx-popup", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductCompositionComponent_Template_dx_popup_visibleChange_79_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function ProductCompositionComponent_Template_dx_popup_onHidden_79_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](80, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](81, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](82, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](83, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](84, "textarea", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](85, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](86, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_Template_dx_button_onClick_86_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](87, "dx-popup", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductCompositionComponent_Template_dx_popup_visibleChange_87_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function ProductCompositionComponent_Template_dx_popup_onHidden_87_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](88, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](89, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](90, ProductCompositionComponent_dx_data_grid_90_Template, 4, 8, "dx-data-grid", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](91, "dx-popup", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductCompositionComponent_Template_dx_popup_visibleChange_91_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](92, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](93, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](94, "p", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](95, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](96, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](97, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](98, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](99, "dx-button", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_Template_dx_button_onClick_99_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](100, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_Template_dx_button_onClick_100_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](101, "dx-popup", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductCompositionComponent_Template_dx_popup_visibleChange_101_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function ProductCompositionComponent_Template_dx_popup_onHidden_101_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](102, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](103, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](104, "p", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](105, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](106, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](107, "dx-button", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_Template_dx_button_onClick_107_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](108, "dx-button", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductCompositionComponent_Template_dx_button_onClick_108_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.marketLists);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.activeIngredientLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ActiveIngredient));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.brandLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Brand));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productClassificationLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductClassification));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productFormLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductForm));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productTypeLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductType));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.segmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.supplierLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Supplier));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.unitOfMeasureLists);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("", ctx.currentYear, " Measure");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("", ctx.currentYear, " Concentration");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("", ctx.currentYear, " Cagr (%)");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](66, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator], styles: [".mark-input-border[_ngcontent-%COMP%] {\r\n    border-color: red;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QtY29tcG9zaXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJwcm9kdWN0LWNvbXBvc2l0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWFyay1pbnB1dC1ib3JkZXIge1xyXG4gICAgYm9yZGVyLWNvbG9yOiByZWQ7XHJcbn0iXX0= */"] });


/***/ }),

/***/ 85237:
/*!************************************************************************!*\
  !*** ./src/app/pages/study-area/components/ivm/sub/ps/ps.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PsComponent": () => (/* binding */ PsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shc/sub/shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function PsComponent_dx_data_grid_6_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r12.currentCurrency.CurrencyName, " (", ctx_r12.currentCurrency.CurrencyCode, ") ");
} }
function PsComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, PsComponent_dx_data_grid_6_div_8_div_3_Template, 2, 2, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function PsComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r19.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r21.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r24.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r28); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r27.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r31); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r30.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r29.disabledSignOffButton);
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r34); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r33.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PsComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, PsComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function PsComponent_dx_data_grid_6_dxi_column_29_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 70);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function PsComponent_dx_data_grid_6_div_30_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_div_30_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r39); const d_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r37.deleteRow(d_r35.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_div_30_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PsComponent_dx_data_grid_6_div_30_dx_button_1_Template, 1, 0, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r35.data.DataRowId !== null);
} }
function PsComponent_dx_data_grid_6_div_31_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 75);
} if (rf & 2) {
    const data_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    const ctx_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r40.value > 0 ? ctx_r41.toFloatValue(data_r40.value).toFixed(1) : "");
} }
function PsComponent_dx_data_grid_6_div_31_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r40.value > 0 ? data_r40.value.toFixed(1) : "");
} }
function PsComponent_dx_data_grid_6_div_31_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PsComponent_dx_data_grid_6_div_31_input_1_Template, 1, 1, "input", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PsComponent_dx_data_grid_6_div_31_span_2_Template, 2, 1, "span", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r9.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r9.isStudyEditable);
} }
function PsComponent_dx_data_grid_6_div_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r45 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r45.value > 0 ? data_r45.value.toFixed(1) : "");
} }
function PsComponent_dx_data_grid_6_div_33_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_data_grid_6_div_33_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r50); const data_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r48.addNotes(data_r46); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PsComponent_dx_data_grid_6_div_33_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PsComponent_dx_data_grid_6_div_33_dx_button_2_Template, 1, 0, "dx-button", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function PsComponent_dx_data_grid_6_div_33_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r46 = restoredCtx.$implicit; const ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r51.showNotePopup(data_r46); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r46 = ctx.$implicit;
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r46.value);
} }
function PsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onCellPrepared", function PsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r53.onCellPreparedHighlighter($event); })("onCellHoverChanged", function PsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onCellHoverChanged($event); })("onRowPrepared", function PsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r56.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-scrolling", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-load-panel", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxo-editing", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("changesChange", function PsComponent_dx_data_grid_6_Template_dxo_editing_changesChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.dataRowChanges = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PsComponent_dx_data_grid_6_div_8_Template, 4, 2, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, PsComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](25, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "dxi-column", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](27, "dxi-column", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](28, "dxi-column", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](29, PsComponent_dx_data_grid_6_dxi_column_29_Template, 1, 1, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](30, PsComponent_dx_data_grid_6_div_30_Template, 2, 1, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](31, PsComponent_dx_data_grid_6_div_31_Template, 3, 2, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](32, PsComponent_dx_data_grid_6_div_32_Template, 3, 1, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](33, PsComponent_dx_data_grid_6_div_33_Template, 6, 2, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true)("changes", ctx_r0.dataRowChanges);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("width", 120)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("width", 150)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("width", 120)("calculateCellValue", ctx_r0.calculateCellValueUnitOfMeasure)("fixed", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate2"]("caption", "", ctx_r0.latestDataYear, " (", ctx_r0.currentCurrency.CurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate2"]("caption", "", ctx_r0.currentYear, " (", ctx_r0.currentCurrency.CurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "numberCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function PsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 81);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function PsComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 82);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.IVM_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function PsComponent_dx_data_grid_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r3.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
function PsComponent_dx_popup_24_ng_select_49_ng_option_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "ng-option", 107);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", item_r61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"]("", item_r61.Name, " (", item_r61.symbol, ")");
} }
function PsComponent_dx_popup_24_ng_select_49_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "ng-select", 104);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "ng-option", 105);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2, "Select Unit of Measure");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, PsComponent_dx_popup_24_ng_select_49_ng_option_3_Template, 2, 3, "ng-option", 106);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r59.UnitOfMeasureList);
} }
function PsComponent_dx_popup_24_Template(rf, ctx) { if (rf & 1) {
    const _r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PsComponent_dx_popup_24_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r63); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.popupVisible = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](8, "Market");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "ng-select", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](13, "Segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "ng-select", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](18, "Product Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "ng-select", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](23, "Brand");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "ng-select", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](28, "Supplier");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](29, "ng-select", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](33, "Product Form");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](34, "ng-select", 96);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](38, "Product Classification");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](39, "ng-select", 97);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](44, "input", 98);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](48, "Unit of Measure");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](49, PsComponent_dx_popup_24_ng_select_49_Template, 4, 1, "ng-select", 99);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](53, "Measure");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](54, "input", 100);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](58, "CAGR(%)");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](59, "input", 101);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "div", 102);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-button", 103);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_dx_popup_24_Template_dx_button_onClick_61_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r63); const ctx_r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r64.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r4.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r4.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.MarketList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.Channel));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.SegmentList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.Segment));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.ProductTypeList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.ProductType));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.BrandList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.Brand));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.SupplierList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.Supplier));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.ProductFormList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.ProductForm));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.ProductClassificationList)("addTag", ctx_r4.createNewDataEntry.bind(ctx_r4, ctx_r4.dataRelationsEnum.ProductClassification));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Value (", ctx_r4.currentCurrency.CurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r4.UnitOfMeasureList);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r4.newRowForm.invalid);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class PsComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            dataItems: undefined,
        };
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = ['Value2', 'Measure2', 'Cagr2'];
        this.studyTypeValue = 'Sales';
        this.dataRelationsData = [];
        this.dataRelationsForEntry = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.latestDataYear = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.dataRowChanges = [];
        this.MarketList = [];
        this.SegmentList = [];
        this.ProductTypeList = [];
        this.BrandList = [];
        this.SupplierList = [];
        this.ProductFormList = [];
        this.ProductClassificationList = [];
        this.UnitOfMeasureList = [];
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            Market: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Brand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Supplier: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductForm: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductClassification: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Value: [null],
            Measure: [null],
            UnitOfMeasure: [null],
            Cagr: [null],
        });
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setDataRelationsData(data) {
        if (data) {
            this.dataRelationsData = data;
            this.dataRelationsForEntry = this.dataRelationsData.filter((item) => item.ViewId === 0);
            this.studyDataRelations = this.dataRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
            this.getMasterEntryList();
        }
    }
    ngOnInit() {
        this.getUnitOfMeasureLists();
        this.getSalesData();
    }
    getMarketLists(dataSetId, marketId) {
        this.sharedService
            .getSubMarketDropDowns(dataSetId, marketId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.MarketList = res.Data;
            }
        });
    }
    getUnitOfMeasureLists() {
        this.sharedService
            .getUnitsOfMeasureDropDowns()
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.UnitOfMeasureList = res.Data;
            }
        });
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getIVMStudyData(this.studyTypeValue, this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj.dataItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.getMarketLists(this.studySummary.StudyDataSetId || 0, this.studySummary.MarketId || 0);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[4]] = {};
                                changelogObj[colValueArray[4]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.latestDataYear = item.LatestDataYear;
                    this.previewGridData.push({
                        Market: item.Market,
                        Segment: item.Segment,
                        ProductType: item.ProductType,
                        Brand: item.Brand,
                        Supplier: item.Supplier,
                        ProductForm: item.ProductForm,
                        ProductClassification: item.ProductClassification,
                        Year: this.latestDataYear,
                        Value: item.Value1,
                    });
                    this.previewGridData.push({
                        Market: item.Market,
                        Segment: item.Segment,
                        ProductType: item.ProductType,
                        Brand: item.Brand,
                        Supplier: item.Supplier,
                        ProductForm: item.ProductForm,
                        ProductClassification: item.ProductClassification,
                        Year: this.currentYear,
                        Value: item.Value2,
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                    this.studyData[i].DataRowKey =
                        item.DataRowId !== null ? item.DataRowId : `row_key_${i}`;
                });
                this.volumeYears.push({
                    field: 'Value1',
                    year: this.latestDataYear,
                });
                this.volumeYears.push({
                    field: 'Value2',
                    year: this.currentYear,
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getMasterEntryList() {
        const masterEntries = [
            this.dataRelationsEnum.Segment,
            this.dataRelationsEnum.ProductType,
            this.dataRelationsEnum.Brand,
            this.dataRelationsEnum.Supplier,
            this.dataRelationsEnum.ProductForm,
            this.dataRelationsEnum.ProductClassification,
        ];
        masterEntries.map((masterEntry) => {
            this.getMasterDataLists(masterEntry);
        });
    }
    getMasterDataLists(masterEntryField) {
        const dataRelationData = this.dataRelationsForEntry.find((item) => item.TableName === masterEntryField);
        if (dataRelationData) {
            this.sharedService
                .getDataEntryDropDowns(dataRelationData.DataRelationId)
                .subscribe((res) => {
                switch (masterEntryField) {
                    case this.dataRelationsEnum.Segment:
                        this.SegmentList = res.Data;
                        break;
                    case this.dataRelationsEnum.ProductType:
                        this.ProductTypeList = res.Data;
                        break;
                    case this.dataRelationsEnum.Brand:
                        this.BrandList = res.Data;
                        break;
                    case this.dataRelationsEnum.Supplier:
                        this.SupplierList = res.Data;
                        break;
                    case this.dataRelationsEnum.ProductForm:
                        this.ProductFormList = res.Data;
                        break;
                    case this.dataRelationsEnum.ProductClassification:
                        this.ProductClassificationList = res.Data;
                        break;
                    default:
                        break;
                }
            });
        }
    }
    getGridFields() {
        return [
            {
                dataField: 'Market',
                area: 'row',
                caption: 'Market',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'ProductType',
                area: 'row',
                caption: 'Product Type',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'Brand',
                area: 'row',
                caption: 'Brand',
                dataType: 'string',
                id: 3,
            },
            {
                dataField: 'Supplier',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
                id: 4,
            },
            {
                dataField: 'ProductForm',
                area: 'row',
                caption: 'Product Form',
                dataType: 'string',
                id: 5,
            },
            {
                dataField: 'ProductClassification',
                area: 'row',
                caption: 'Product Classification',
                dataType: 'string',
                id: 6,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 8,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        if (typeof e.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === e.column.dataField);
            if (e.rowType === 'data' && isFound) {
                if (e.data.ChangeLogObj) {
                    const cellValue = typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'
                        ? e.data.ChangeLogObj[e.column.dataField]
                        : null;
                    if (cellValue !== null) {
                        // e.cellElement.bgColor = '#FFFF00';
                        e.cellElement.className = 'highlighter-td';
                    }
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.dataField] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.dataField]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            ProductType: newRowData.ProductType.Name,
            ProductTypeId: newRowData.ProductType.Id,
            SegmentId: newRowData.Segment.Id,
            Segment: newRowData.Segment.Name,
            SupplierId: newRowData.Supplier.Id,
            Supplier: newRowData.Supplier.Name,
            MarketId: newRowData.Market.Id,
            Market: newRowData.Market.OfficialName,
            BrandId: newRowData.Brand.Id,
            Brand: newRowData.Brand.Name,
            ProductFormId: newRowData.ProductForm.Id,
            ProductForm: newRowData.ProductForm.Name,
            ProductClassificationId: newRowData.ProductClassification.Id,
            ProductClassification: newRowData.ProductClassification.Name,
            Value2: +newRowData.Value,
            Value1: 0,
            UnitOfMeasureId: newRowData.UnitOfMeasure.Id,
            UnitOfMeasureName: newRowData.UnitOfMeasure.Name,
            UnitOfMeasureSymbol: newRowData.UnitOfMeasure.symbol,
            Measure2: +newRowData.Measure,
            Measure1: 0,
            Cagr2: +newRowData.Cagr,
            Cagr1: 0,
            LatestDataYear: this.latestDataYear,
            CurrentYear: this.currentYear,
            DataRowKey: '',
            CalculatorId: 0,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.MarketId == newRow.MarketId &&
            item.SegmentId == newRow.SegmentId &&
            item.ProductTypeId == newRow.ProductTypeId &&
            item.BrandId == newRow.BrandId &&
            item.SupplierId == newRow.SupplierId &&
            item.ProductFormId == newRow.ProductFormId &&
            item.ProductClassificationId == newRow.ProductClassificationId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.MarketId || 0) - (b.MarketId || 0) ||
                (a.SegmentId || 0) - (b.SegmentId || 0) ||
                (a.ProductTypeId || 0) - (b.ProductTypeId || 0) ||
                (a.BrandId || 0) - (b.BrandId || 0) ||
                (a.SupplierId || 0) - (b.SupplierId || 0) ||
                (a.ProductFormId || 0) - (b.ProductFormId || 0) ||
                (a.ProductClassificationId || 0) - (b.ProductClassificationId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    changesDetectionOnSave() {
        if (this.dataRowChanges) {
            this.dataRowChanges.map((change) => {
                const dataChange = change.data;
                const changeKey = change.key.DataRowKey !== '' ? change.key.DataRowKey : undefined;
                if (changeKey !== undefined) {
                    const currentIndex = this.studyData.findIndex((study) => study.DataRowKey === changeKey);
                    if (typeof this.studyData[currentIndex] !== 'undefined') {
                        if (typeof dataChange.Value2 !== 'undefined') {
                            this.studyData[currentIndex].Value2 = +dataChange.Value2;
                        }
                        if (typeof dataChange.Measure2 !== 'undefined') {
                            this.studyData[currentIndex].Measure2 = dataChange.Measure2;
                        }
                        if (typeof dataChange.Cagr2 !== 'undefined') {
                            this.studyData[currentIndex].Cagr2 = dataChange.Cagr2;
                        }
                    }
                }
            });
        }
    }
    saveStudyData() {
        this.changesDetectionOnSave();
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { Value2: item.Value2 > 0 ? item.Value2 : null, Measure2: item.Measure2 > 0 ? item.Measure2 : null, Cagr2: item.Cagr2 > 0 ? item.Cagr2 : null })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            dataItems: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveIVMData(this.studyTypeValue, studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.disabledSignOffButton = false;
                // this.getSalesData();
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            dataItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffIVMData(this.studyTypeValue, formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.dataRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        this.getMasterDataLists(type);
    }
    toFloatValue(val) {
        return parseFloat(val);
    }
    calculateCellValueUnitOfMeasure(data) {
        return [data.UnitOfMeasureName, `(${data.UnitOfMeasureSymbol})`].join(' ');
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
PsComponent.ɵfac = function PsComponent_Factory(t) { return new (t || PsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService)); };
PsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: PsComponent, selectors: [["app-ps"]], viewQuery: function PsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setDataRelationsData: "setDataRelationsData" }, decls: 43, vars: 43, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["mode", "virtual", "columnRenderingMode", "virtual"], [3, "enabled"], ["mode", "batch", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled", "changes", "changesChange"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Market", 3, "allowEditing", "fixed"], ["dataField", "Segment", 3, "allowEditing", "fixed"], ["dataField", "ProductType", 3, "allowEditing", "fixed"], ["dataField", "Brand", 3, "allowEditing", "fixed"], ["dataField", "Supplier", 3, "allowEditing", "fixed"], ["dataField", "ProductForm", 3, "allowEditing", "width", "fixed"], ["dataField", "ProductClassification", 3, "allowEditing", "width", "fixed"], ["dataField", "UnitOfMeasureSymbol", "caption", "Unit of Measure", 3, "allowEditing", "width", "calculateCellValue", "fixed"], ["cssClass", "text-center", 3, "caption"], ["dataField", "Value1", "caption", "Value", "cellTemplate", "numberCellTemplate", 3, "allowEditing"], ["dataField", "Measure1", "caption", "Measure", "cellTemplate", "numberCellTemplate", 3, "allowEditing"], ["dataField", "Cagr1", "caption", "Cagr (%)", "cellTemplate", "numberCellTemplate", 3, "allowEditing"], ["dataField", "Value2", "caption", "Value", "cellTemplate", "EditCellTemplate", 3, "allowEditing"], ["dataField", "Measure2", "caption", "Measure", "cellTemplate", "EditCellTemplate", 3, "width", "allowEditing"], ["dataField", "Cagr2", "caption", "Cagr (%)", "cellTemplate", "EditCellTemplate", 3, "width", "allowEditing"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body"], [1, "row"], [1, "col-6"], ["bindLabel", "OfficialName", "formControlName", "Market", "placeholder", "Select Market", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductType", "placeholder", "Select Product Type", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Brand", "placeholder", "Select Brand", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Supplier", "placeholder", "Select Supplier", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductForm", "placeholder", "Select Product Form", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductClassification", "placeholder", "Select Product Classification", "addTagText", "Create New", 3, "items", "addTag"], ["type", "text", "formControlName", "Value", 1, "form-control"], ["formControlName", "UnitOfMeasure", "placeholder", "Select Unit of Measure", 4, "ngIf"], ["type", "text", "formControlName", "Measure", 1, "form-control"], ["type", "text", "formControlName", "Cagr", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "onClick"], ["formControlName", "UnitOfMeasure", "placeholder", "Select Unit of Measure"], ["value", ""], [3, "value", 4, "ngFor", "ngForOf"], [3, "value"]], template: function PsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PsComponent_dx_data_grid_6_Template, 34, 57, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, PsComponent_app_shc_preview_11_Template, 1, 10, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PsComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function PsComponent_Template_dx_popup_onHidden_12_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "textarea", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "dx-button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_Template_dx_button_onClick_19_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "dx-popup", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PsComponent_Template_dx_popup_visibleChange_20_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function PsComponent_Template_dx_popup_onHidden_20_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, PsComponent_dx_data_grid_23_Template, 4, 8, "dx-data-grid", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, PsComponent_dx_popup_24_Template, 62, 23, "dx-popup", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PsComponent_Template_dx_popup_visibleChange_25_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](29, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_Template_dx_button_onClick_33_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_Template_dx_button_onClick_34_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-popup", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PsComponent_Template_dx_popup_visibleChange_35_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function PsComponent_Template_dx_popup_onHidden_35_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](39, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "dx-button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_Template_dx_button_onClick_41_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PsComponent_Template_dx_button_onClick_42_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](41, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoLoadPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgOptionComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 19532:
/*!********************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/lubricant-demand/lubricant-demand.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LubricantDemandComponent": () => (/* binding */ LubricantDemandComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _study_area_preview_components_lubricant_demand_preview_lubricant_demand_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component */ 80533);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























const _c0 = ["studyPreview"];
function LubricantDemandComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, LubricantDemandComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, LubricantDemandComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, LubricantDemandComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function LubricantDemandComponent_dx_data_grid_6_dxi_column_21_dxi_column_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 86);
} if (rf & 2) {
    const volumeYear_r37 = ctx.$implicit;
    const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("dataField", volumeYear_r37.field)("caption", volumeYear_r37.year)("allowEditing", !ctx_r36.isStudyEditable)("allowFiltering", false);
} }
function LubricantDemandComponent_dx_data_grid_6_dxi_column_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-column", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_dxi_column_21_dxi_column_1_Template, 1, 5, "dxi-column", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r7.volumeYears);
} }
function LubricantDemandComponent_dx_data_grid_6_dxi_column_31_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 87);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function LubricantDemandComponent_dx_data_grid_6_div_32_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_div_32_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r42); const d_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r40.deleteRow(d_r38.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_div_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_div_32_dx_button_1_Template, 1, 0, "dx-button", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r38 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r38.data.DataRowId !== null);
} }
function LubricantDemandComponent_dx_data_grid_6_div_33_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 92);
} if (rf & 2) {
    const data_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r43.value > 0 ? data_r43.value.toFixed(1) : "");
} }
function LubricantDemandComponent_dx_data_grid_6_div_33_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r43.value > 0 ? data_r43.value.toFixed(1) : "");
} }
function LubricantDemandComponent_dx_data_grid_6_div_33_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_div_33_input_1_Template, 1, 1, "input", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, LubricantDemandComponent_dx_data_grid_6_div_33_span_2_Template, 2, 1, "span", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function LubricantDemandComponent_dx_data_grid_6_div_34_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipe"](1, "number");
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate"]("value", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipeBind2"](1, 1, data_r48.value, "1.1-1"));
} }
function LubricantDemandComponent_dx_data_grid_6_div_34_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value > 0 ? data_r48.value.toFixed(1) : "");
} }
function LubricantDemandComponent_dx_data_grid_6_div_34_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_div_34_input_1_Template, 2, 4, "input", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, LubricantDemandComponent_dx_data_grid_6_div_34_span_2_Template, 2, 1, "span", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isStudyEditable);
} }
function LubricantDemandComponent_dx_data_grid_6_div_35_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipe"](1, "number");
} if (rf & 2) {
    const data_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate"]("value", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpipeBind2"](1, 1, data_r53.value, "1.1-1"));
} }
function LubricantDemandComponent_dx_data_grid_6_div_35_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r53.value > 0 ? data_r53.value.toFixed(1) : "");
} }
function LubricantDemandComponent_dx_data_grid_6_div_35_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, LubricantDemandComponent_dx_data_grid_6_div_35_input_1_Template, 2, 4, "input", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, LubricantDemandComponent_dx_data_grid_6_div_35_span_2_Template, 2, 1, "span", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r12.isStudyEditable);
} }
function LubricantDemandComponent_dx_data_grid_6_div_36_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 99);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_dx_data_grid_6_div_36_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r62); const data_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r60.addNotes(data_r58); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function LubricantDemandComponent_dx_data_grid_6_div_36_Template(rf, ctx) { if (rf & 1) {
    const _r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, LubricantDemandComponent_dx_data_grid_6_div_36_dx_button_2_Template, 1, 0, "dx-button", 96);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 97);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 98);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function LubricantDemandComponent_dx_data_grid_6_div_36_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const data_r58 = restoredCtx.$implicit; const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r63.showNotePopup(data_r58); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r58 = ctx.$implicit;
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r13.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r58.value);
} }
function LubricantDemandComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function LubricantDemandComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.onRowSaved($event); })("onCellPrepared", function LubricantDemandComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r67.onCellPreparedHighlighter($event); })("onCellHoverChanged", function LubricantDemandComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r68.onCellHoverChanged($event); })("onRowPrepared", function LubricantDemandComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r69 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r69.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, LubricantDemandComponent_dx_data_grid_6_div_8_Template, 3, 1, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, LubricantDemandComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxo-summary");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-group-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-group-item", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-group-item", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-group-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-group-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-group-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, LubricantDemandComponent_dx_data_grid_6_dxi_column_21_Template, 2, 1, "dxi-column", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "dxi-column", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "dxi-column", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "dxi-column", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "dxi-column", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "dxi-column", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](27, "dxi-column", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](28, "dxi-column", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](29, "dxi-column", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](30, "dxi-column", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](31, LubricantDemandComponent_dx_data_grid_6_dxi_column_31_Template, 1, 1, "dxi-column", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](32, LubricantDemandComponent_dx_data_grid_6_div_32_Template, 2, 1, "div", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](33, LubricantDemandComponent_dx_data_grid_6_div_33_Template, 3, 2, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](34, LubricantDemandComponent_dx_data_grid_6_div_34_Template, 3, 2, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](35, LubricantDemandComponent_dx_data_grid_6_div_35_Template, 3, 2, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](36, LubricantDemandComponent_dx_data_grid_6_div_36_Template, 6, 2, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showInGroupFooter", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("customizeText", ctx_r0.setNumberFormat)("showInGroupFooter", true)("alignByColumn", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("customizeText", ctx_r0.setNumberFormat)("showInGroupFooter", true)("alignByColumn", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("customizeText", ctx_r0.setNumberFormat)("showInGroupFooter", true)("alignByColumn", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("customizeText", ctx_r0.setNumberFormat)("showInGroupFooter", true)("alignByColumn", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("customizeText", ctx_r0.setNumberFormat)("showInGroupFooter", true)("alignByColumn", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r0.volumeYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("caption", ctx_r0.foreCastYear1)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("caption", ctx_r0.foreCastYear2)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 90)("caption", ctx_r0.cagr1)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 90)("caption", ctx_r0.cagr2)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "foreCastYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "foreCastYear2CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function LubricantDemandComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 100);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function LubricantDemandComponent_div_40_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 101);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r71 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Volume Year - ", volumeYear_r71.year, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r71.field);
} }
const _c1 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function LubricantDemandComponent_dx_data_grid_75_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 102);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 103);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 104);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 105);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c1));
} }
const _c2 = function (a0) { return { "is-invalid": a0 }; };
class LubricantDemandComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.groupingValues = [];
        this.studyData = [];
        this.foreCastYear1 = 0;
        this.foreCastYear2 = 0;
        this.volumeYears = [];
        this.cagr1 = '';
        this.cagr2 = '';
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.marketSegments = [];
        this.productCategories = [];
        this.subProducts = [];
        this.viscosityGrades = [];
        this.noteSubmit = false;
        this.studyMarketYearCategoryId = 0;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.isStudyEditable = false;
        this.studyTitle = '';
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.disabledSignOffButton = false;
        this.deleteRowConfirmPopup = false;
        this.previewGridData = [];
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        this.previousYear1 = this.currentYear - 1;
        this.previousYear2 = this.currentYear - 2;
        // this.foreCastYear1 = this.currentYear + 5;
        // this.foreCastYear2 = this.currentYear + 10;
        // this.cagr1 = `${this.currentYear}-${this.foreCastYear1}`;
        // this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.groupingValues = [
            {
                value: 'ProductCategory',
                text: 'Product Category',
            },
            {
                value: 'ViscosityGrade',
                text: 'Viscosity Grade',
            },
        ];
        this.newRowForm = this.formBuilder.group({
            marketSegment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            productCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            subProduct: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            viscosityGrade: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
            forecastYear1: [null],
            forecastYear2: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_2__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getDataRelations();
    }
    ngOnInit() {
        this.getLubricantDemandData();
        this.getMarketSegment();
        this.getProductCategories();
        this.getSubProducts();
        this.getViscosityGrades();
    }
    getLubricantDemandData() {
        this.isLoadingService.add();
        this.studyService
            .getLubricantDemandData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData =
                    studyData.LubricantDemandDataItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(studyData.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.isMidYear = this.studySummary.IsMidYear
                    ? this.studySummary.IsMidYear
                    : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                const studyYear = currentYear;
                currentYear = currentYear - 1;
                this.volumeYears = [];
                this.volumeYearsPreview = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    this.volumeYearsPreview.push({
                        field: `PreviousYear${j}`,
                        year: i,
                    });
                }
                let forecast1Add = 3;
                let forecast2Add = 8;
                if (this.isMidYear) {
                    forecast1Add = 4;
                    forecast2Add = 9;
                }
                this.currentYear = currentYear;
                // this.foreCastYear1 = currentYear + 5;
                // this.foreCastYear1 = currentYear + 4;
                this.foreCastYear1 = studyYear + forecast1Add;
                // this.foreCastYear2 = currentYear + 10;
                // this.foreCastYear2 = this.foreCastYear1 + 5;
                this.foreCastYear2 = studyYear + forecast2Add;
                this.cagr1 = `${currentYear}-${this.foreCastYear1}`;
                this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;
                this.volumeYears.push({ field: `CurrentYear`, year: currentYear });
                this.volumeYearsPreview.push({
                    field: `CurrentYear`,
                    year: currentYear,
                });
                this.volumeYearsPreview.push({
                    field: `Forecast1`,
                    year: this.foreCastYear1,
                });
                this.volumeYearsPreview.push({
                    field: `Forecast2`,
                    year: this.foreCastYear2,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    this.studyData[i].Cagr1 = this.calculateCAGRPercentage(item.CurrentYear, item.Forecast1, this.foreCastYear1 - this.currentYear);
                    this.studyData[i].Cagr2 = this.calculateCAGRPercentage(item.Forecast1, item.Forecast2, this.foreCastYear2 - this.foreCastYear1);
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.volumeYearsPreview.map((d) => {
                        this.previewGridData.push({
                            MarketSegment: item.MarketSegment,
                            ProductCategory: item.ProductCategory,
                            SubProduct: item.SubProduct,
                            ViscosityGrade: item.ViscosityGrade,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                // console.log(this.studyData);
                // this.studyPreview.changeStudyData(this.studyData);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            this.isLoadingService.remove();
            this.alertService.danger('Something went wrong. Please try again or contact administrator.');
        });
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'MarketSegment',
                area: 'row',
                caption: 'Market Segment',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'SubProduct',
                area: 'row',
                caption: 'Sub Product',
                dataType: 'string',
                id: 2,
            },
            // {
            //   dataField: 'ProductType',
            //   area: 'row',
            //   caption: 'ProductType',
            //   dataType: 'string',
            //   id: 3,
            // },
            {
                dataField: 'ViscosityGrade',
                area: 'row',
                caption: 'Viscosity Grade',
                dataType: 'string',
                id: 3,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 4,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 5,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    getMarketSegment() {
        this.sharedService.getMarketSegment().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.marketSegments = res.Data;
            }
        });
    }
    getProductCategories() {
        this.sharedService.getProductCategories().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.productCategories = res.Data;
            }
        });
    }
    getSubProducts() {
        this.sharedService.getSubProducts().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.subProducts = res.Data;
            }
        });
    }
    getViscosityGrades() {
        this.sharedService.getViscosityGrades().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.viscosityGrades = res.Data;
            }
        });
    }
    groupChanged(e) {
        if (typeof this.dataGrid !== 'undefined') {
            this.dataGrid.instance.clearGrouping();
            this.dataGrid.instance.columnOption(e.value, 'groupIndex', 0);
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    get n() {
        return this.newNoteForm.controls;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    setNumberFormat(data) {
        return data.value.toFixed(4);
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
            const currentYear = +data.CurrentYear;
            const forecast1 = +data.Forecast1;
            const forecast2 = +data.Forecast2;
            if (currentYear && forecast1) {
                const cagrYear1Diff = this.foreCastYear1 - this.currentYear;
                data.Cagr1 = this.calculateCAGRPercentage(currentYear, forecast1, cagrYear1Diff);
            }
            if (forecast1 && forecast2) {
                const cagrYear2Diff = this.foreCastYear2 - this.foreCastYear1;
                data.Cagr2 = this.calculateCAGRPercentage(forecast1, forecast2, cagrYear2Diff);
            }
            // this.studyPreview.changeStudyData(this.studyData);
        }
    }
    calculateCAGRPercentage(startValue, endValue, year) {
        let cargPer = '';
        if (startValue && endValue && year) {
            const cagr = Math.pow(endValue / startValue, 1 / year) - 1;
            cargPer = (cagr * 100).toFixed(1);
        }
        return +cargPer;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const cagrYear1Diff = newRowData.forecastYear1 - newRowData.CurrentYear;
        const cagrYear2Diff = newRowData.forecastYear2 - newRowData.forecastYear1;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: 0,
            DataRowId: '',
            Forecast1: +newRowData.forecastYear1,
            Forecast2: +newRowData.forecastYear2,
            LubricantDemandId: 0,
            MarketSegment: newRowData.marketSegment.Name,
            MarketSegmentId: newRowData.marketSegment.Id,
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ProductCategory: newRowData.productCategory.Name,
            ProductCategoryId: newRowData.productCategory.Id,
            SubProduct: newRowData.subProduct.Name,
            SubProductId: newRowData.subProduct.Id,
            ViscosityGrade: newRowData.viscosityGrade.Name,
            ViscosityGradeId: newRowData.viscosityGrade.Id,
            Cagr1: this.calculateCAGRPercentage(newRowData.CurrentYear, newRowData.forecastYear1, cagrYear1Diff),
            Cagr2: this.calculateCAGRPercentage(newRowData.forecastYear1, newRowData.forecastYear2, cagrYear2Diff),
            ChangeLog: '',
            ChangeLogObj: [],
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.MarketSegmentId == newRow.MarketSegmentId &&
            item.ProductCategoryId == newRow.ProductCategoryId &&
            item.SubProductId == newRow.SubProductId &&
            item.ViscosityGradeId == newRow.ViscosityGradeId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => a.MarketSegmentId - b.MarketSegmentId ||
                a.ProductCategoryId - b.ProductCategoryId ||
                a.SubProductId - b.SubProductId ||
                a.ViscosityGradeId - b.ViscosityGradeId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
            // this.studyPreview.changeStudyData(this.studyData);
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    saveStudyData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            lubricantDemandDataItems: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveLubricantData(studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                // this.getLubricantDemandData();
                this.loadPageAfterSave();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    showPreview() {
        this.router.navigate([
            '/',
            'study-area-preview',
            this.studyProjectMarketYearId,
            this.marketYearCategoryId,
        ]);
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffLubricationData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeLubricationData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            lubricantDemandDataItems: [],
        };
        const lubricantDemandItems = [];
        // this.studyData.map((item: LubricantDemandDataItem) => {
        //   lubricantDemandItems.push({
        //     subProduct: item.SubProduct,
        //     subProductId: item.SubProductId,
        //     lubricantDemandId: item.LubricantDemandId,
        //     marketSegment: item.MarketSegment,
        //     marketSegmentId: item.MarketSegmentId,
        //     dataRelationId: item.DataRelationId,
        //     productCategory: item.ProductCategory,
        //     productCategoryId: item.ProductCategoryId,
        //     viscosityGrade: item.ViscosityGrade,
        //     viscosityGradeId: item.ViscosityGradeId,
        //     previousYear5: item.PreviousYear5,
        //     previousYear4: item.PreviousYear4,
        //     previousYear3: item.PreviousYear3,
        //     previousYear1: item.PreviousYear1,
        //     previousYear2: item.PreviousYear2,
        //     currentYear: item.CurrentYear,
        //     forecast1: item.Forecast1,
        //     forecast2: item.Forecast2,
        //     notes: item.Notes,
        //     dataRowId: item.DataRowId,
        //   });
        // });
        const formData = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
            },
            lubricantDemandDataItems: lubricantDemandItems,
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService
            .signOffLubricationData(formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getLubricantDemandData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
            'Forecast1',
            'Forecast2',
        ];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (typeof e.data.ChangeLogObj !== 'undefined' &&
                e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
            'Forecast1',
            'Forecast2',
        ];
        if (typeof event.column !== 'undefined') {
            const isFound = allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.MarketSegment:
                this.getMarketSegment();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ProductCategory:
                this.getProductCategories();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.SubProduct:
                this.getSubProducts();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ViscosityGrade:
                this.getViscosityGrades();
                break;
            default:
                break;
        }
    }
    loadPageAfterSave() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.loadPageAfterSave();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
LubricantDemandComponent.ɵfac = function LubricantDemandComponent_Factory(t) { return new (t || LubricantDemandComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService)); };
LubricantDemandComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: LubricantDemandComponent, selectors: [["app-lubricant-demand"]], viewQuery: function LubricantDemandComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.studyPreview = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 84, vars: 63, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "studyData", "foreCastYear1", "foreCastYear2"], ["studyPreview", ""], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "marketSegment", "placeholder", "Select Market Segment", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "productCategory", "placeholder", "Select Product Category", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "subProduct", "placeholder", "Select Sub-Product", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "viscosityGrade", "placeholder", "Select Viscosity Grade", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "col-md-6"], ["type", "text", "formControlName", "forecastYear1", 1, "form-control"], ["type", "text", "formControlName", "forecastYear2", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["column", "SubProduct", "displayFormat", "Totals", 3, "showInGroupFooter"], ["column", "PreviousYear2", "summaryType", "sum", "displayFormat", "{0}", 3, "customizeText", "showInGroupFooter", "alignByColumn"], ["column", "PreviousYear1", "summaryType", "sum", "displayFormat", "{0}", 3, "customizeText", "showInGroupFooter", "alignByColumn"], ["column", "CurrentYear", "summaryType", "sum", "displayFormat", "{0}", 3, "customizeText", "showInGroupFooter", "alignByColumn"], ["column", "Forecast1", "summaryType", "sum", "displayFormat", "{0}", 3, "customizeText", "showInGroupFooter", "alignByColumn"], ["column", "Forecast2", "summaryType", "sum", "displayFormat", "{0}", 3, "customizeText", "showInGroupFooter", "alignByColumn"], ["dataField", "MarketSegment", 3, "allowEditing"], ["dataField", "ProductCategory", 3, "allowEditing"], ["dataField", "SubProduct", 3, "allowEditing"], ["dataField", "ViscosityGrade", 3, "allowEditing"], ["caption", "Year wise Volume (in KTonnes)", 4, "ngIf"], ["caption", "Forecast"], ["dataField", "Forecast1", "cellTemplate", "volumeYearCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["dataField", "Forecast2", "cellTemplate", "volumeYearCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "CAGR, %"], ["dataField", "Cagr1", 3, "width", "caption", "allowEditing", "allowFiltering"], ["dataField", "Cagr2", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "Year wise Volume (in KTonnes)"], ["cellTemplate", "volumeYearCellTemplate", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", 4, "ngFor", "ngForOf"], ["cellTemplate", "volumeYearCellTemplate", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", 3, "value"], ["type", "text", "class", "form-control form-control-sm", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function LubricantDemandComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, LubricantDemandComponent_dx_data_grid_6_Template, 37, 66, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, LubricantDemandComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-lubricant-demand-preview", 9, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "dx-popup", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function LubricantDemandComponent_Template_dx_popup_visibleChange_13_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "form", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](21, "Market Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](22, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](26, "Product Category");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](27, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](32, "Sub-Product");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](33, "ng-select", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](37, "Viscosity Grade");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](38, "ng-select", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](40, LubricantDemandComponent_div_40_Template, 5, 2, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](45);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](46, "input", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](50);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](51, "input", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function LubricantDemandComponent_Template_dx_button_click_53_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "dx-popup", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function LubricantDemandComponent_Template_dx_popup_visibleChange_54_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function LubricantDemandComponent_Template_dx_popup_onHidden_54_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "form", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](59, "textarea", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_Template_dx_button_onClick_61_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "dx-popup", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function LubricantDemandComponent_Template_dx_popup_visibleChange_62_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "p", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](66, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](68, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "dx-button", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_Template_dx_button_onClick_70_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "dx-button", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_Template_dx_button_onClick_71_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](72, "dx-popup", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function LubricantDemandComponent_Template_dx_popup_visibleChange_72_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function LubricantDemandComponent_Template_dx_popup_onHidden_72_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](75, LubricantDemandComponent_dx_data_grid_75_Template, 4, 8, "dx-data-grid", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](76, "dx-popup", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function LubricantDemandComponent_Template_dx_popup_visibleChange_76_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function LubricantDemandComponent_Template_dx_popup_onHidden_76_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](79, "p", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](80, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](81, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](82, "dx-button", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_Template_dx_button_onClick_82_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](83, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function LubricantDemandComponent_Template_dx_button_onClick_83_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("studyData", ctx.studyData)("foreCastYear1", ctx.foreCastYear1)("foreCastYear2", ctx.foreCastYear2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.marketSegments)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.MarketSegment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productCategories)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductCategory));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.subProducts)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.SubProduct));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.viscosityGrades)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ViscosityGrade));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Forecast Year - ", ctx.foreCastYear1, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Forecast Year - ", ctx.foreCastYear2, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](61, _c2, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoSummaryComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiGroupItemComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _study_area_preview_components_lubricant_demand_preview_lubricant_demand_preview_component__WEBPACK_IMPORTED_MODULE_10__.LubricantDemandPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_19__.DecimalPipe], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsdWJyaWNhbnQtZGVtYW5kLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 64817:
/*!******************************************************************!*\
  !*** ./src/app/pages/study-area/components/pnc/pnc.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PncComponent": () => (/* binding */ PncComponent)
/* harmony export */ });
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sub/pts/pts.component */ 66966);






function PncComponent_app_pnc_pts_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "app-pnc-pts", 1);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("setSelectedCurrency", ctx_r0.datRelationsData);
} }
class PncComponent {
    constructor(route, sharedService) {
        this.route = route;
        this.sharedService = sharedService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__.DataRelationsEnum;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getDataRelations();
    }
    ngOnInit() { }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
}
PncComponent.ɵfac = function PncComponent_Factory(t) { return new (t || PncComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__.SharedService)); };
PncComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: PncComponent, selectors: [["app-pnc"]], decls: 1, vars: 1, consts: [[3, "setSelectedCurrency", 4, "ngIf"], [3, "setSelectedCurrency"]], template: function PncComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](0, PncComponent_app_pnc_pts_0_Template, 1, 1, "app-pnc-pts", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 43);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_2__.PncPtsComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwbmMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 66966:
/*!**************************************************************************!*\
  !*** ./src/app/pages/study-area/components/pnc/sub/pts/pts.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PncPtsComponent": () => (/* binding */ PncPtsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../shc/sub/shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function PncPtsComponent_dx_data_grid_6_div_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r4.studyTitle);
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_ng_container_7_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r16); const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r15.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_ng_container_7_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r17.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r20.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_5_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r24); const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r23.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_6_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r26.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r25.disabledSignOffButton);
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_7_div_1_Template, 2, 1, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r30); const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r29.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_8_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PncPtsComponent_dx_data_grid_6_ng_container_7_div_2_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, PncPtsComponent_dx_data_grid_6_ng_container_7_div_4_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_5_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_6_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_7_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PncPtsComponent_dx_data_grid_6_ng_container_7_dxi_item_8_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isLockedStudy);
} }
function PncPtsComponent_dx_data_grid_6_div_17_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 64);
} if (rf & 2) {
    const data_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r31.value > 0 ? data_r31.value.toFixed(1) : "");
} }
function PncPtsComponent_dx_data_grid_6_div_17_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r31.value > 0 ? data_r31.value.toFixed(1) : "");
} }
function PncPtsComponent_dx_data_grid_6_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PncPtsComponent_dx_data_grid_6_div_17_input_1_Template, 1, 1, "input", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PncPtsComponent_dx_data_grid_6_div_17_span_2_Template, 2, 1, "span", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isStudyEditable);
} }
function PncPtsComponent_dx_data_grid_6_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r36 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r36.value > 0 ? data_r36.value.toFixed(1) : "");
} }
function PncPtsComponent_dx_data_grid_6_div_19_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_dx_data_grid_6_div_19_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const data_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r39.addNotes(data_r37); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PncPtsComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    const _r43 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PncPtsComponent_dx_data_grid_6_div_19_dx_button_2_Template, 1, 0, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function PncPtsComponent_dx_data_grid_6_div_19_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r43); const data_r37 = restoredCtx.$implicit; const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r42.showNotePopup(data_r37); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r37 = ctx.$implicit;
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r8.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r37.value);
} }
function PncPtsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function PncPtsComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r45); const ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r44.onRowSaved($event); })("onCellPrepared", function PncPtsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r45); const ctx_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r46.onCellPreparedHighlighter($event); })("onCellHoverChanged", function PncPtsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r45); const ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r47.onCellHoverChanged($event); })("onRowPrepared", function PncPtsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r45); const ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r48.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-paging", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-editing", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PncPtsComponent_dx_data_grid_6_div_6_Template, 3, 1, "div", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, PncPtsComponent_dx_data_grid_6_ng_container_7_Template, 9, 4, "ng-container", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, PncPtsComponent_dx_data_grid_6_div_17_Template, 3, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, PncPtsComponent_dx_data_grid_6_div_18_Template, 3, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, PncPtsComponent_dx_data_grid_6_div_19_Template, 6, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r0.previousYear1)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r0.currentYear)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r0.foreCastYear1)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function PncPtsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 70);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function PncPtsComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 71);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.PNC_PT_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setViewId", ctx_r2.studyDataViewId);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function PncPtsComponent_dx_data_grid_56_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r3.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class PncPtsComponent {
    constructor(isLoadingService, alertService, route, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            dataItems: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.productCategoryLists = [];
        this.productTypeLists = [];
        this.currencyLists = [];
        this.currentCurrency = {};
        this.foreCastYear1 = 0;
        this.previousYear1 = 0;
        this.previewGridData = [];
        this.allowedCols = ['PreviousYear1', 'CurrentYear', 'ForecastYear1'];
        this.studyTypeValue = 'ProductTypeSales';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            ProductCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            PreviousYear1: [null],
            CurrentYear: [null],
            Forecast1: [null],
        });
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getProductTypeLists();
        this.getProductCategoryLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getPNCProductTypeSalesStudyData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .dataItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.foreCastYear1 = currentYear + 5;
                this.previousYear1 = currentYear - 1;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.previewGridData.push({
                        ProductType: item.ProductType,
                        ProductCategory: item.ProductCategory,
                        CurrencyName: item.CurrencyName,
                        Year: this.previousYear1,
                        Value: item.PreviousYear1,
                    });
                    this.previewGridData.push({
                        ProductType: item.ProductType,
                        ProductCategory: item.ProductCategory,
                        CurrencyName: item.CurrencyName,
                        Year: this.currentYear,
                        Value: item.CurrentYear,
                    });
                    this.previewGridData.push({
                        ProductType: item.ProductType,
                        ProductCategory: item.ProductCategory,
                        CurrencyName: item.CurrencyName,
                        Year: this.foreCastYear1,
                        Value: item.Forecast1,
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'ProductType',
                area: 'row',
                caption: 'Product Type',
                dataType: 'string',
            },
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                dataType: 'string',
            },
            {
                dataField: 'CurrencyName',
                area: 'row',
                caption: 'Currency Name',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                }
                if (event.eventType === 'mouseout') {
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.Forecast1 = +data.Forecast1;
        }
    }
    getProductTypeLists() {
        this.sharedService
            .getDataEntryDropDowns(74)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.productTypeLists = data.Data;
            }
        });
    }
    getProductCategoryLists() {
        this.sharedService
            .getDataEntryDropDowns(77)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.productCategoryLists = data.Data;
            }
        });
    }
    getCurrencyLists() {
        this.sharedService
            .getSEDataEntryData('Currencies')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.currencyLists = res.Data;
            }
        });
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            ProductType: newRowData.ProductType.Name,
            ProductTypeId: newRowData.ProductType.Id,
            ProductCategory: newRowData.ProductCategory.Name,
            ProductCategoryId: newRowData.ProductCategory.Id,
            Forecast1: +newRowData.Forecast1,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ProductCategoryId == newRow.ProductCategoryId &&
            item.ProductTypeId == newRow.ProductTypeId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0) ||
                (a.ProductTypeId || 0) - (b.ProductTypeId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : null, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : null, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : null, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : null, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : null, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : null, ForecastYear1: item.ForecastYear1 > 0 ? item.ForecastYear1 : null })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            dataItems: studyData,
        };
        this.isLoadingService.add();
        this.studyService.savePNCProductTypeSalesData(studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            dataItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffPNCProductTypeSalesData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductCategory:
                this.getProductCategoryLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductType:
                this.getProductTypeLists();
                break;
            default:
                break;
        }
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
PncPtsComponent.ɵfac = function PncPtsComponent_Factory(t) { return new (t || PncPtsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService)); };
PncPtsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: PncPtsComponent, selectors: [["app-pnc-pts"]], viewQuery: function PncPtsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 67, vars: 49, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "ProductType", "placeholder", "Select Product Type", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductCategory", "placeholder", "Select Product Category", "addTagText", "Create New", 3, "items", "addTag"], [1, "col-md-6"], ["type", "text", "formControlName", "PreviousYear1", 1, "form-control"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], ["type", "text", "formControlName", "Forecast1", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "ProductType", 3, "allowEditing"], ["dataField", "ProductCategory", 3, "allowEditing"], ["dataField", "CurrencyName", 3, "allowEditing"], ["dataField", "PreviousYear1", "cellTemplate", "EditCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["dataField", "CurrentYear", "cellTemplate", "EditCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["dataField", "Forecast1", "cellTemplate", "EditCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function PncPtsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PncPtsComponent_dx_data_grid_6_Template, 20, 36, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PncPtsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, PncPtsComponent_app_shc_preview_11_Template, 1, 8, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PncPtsComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Product Type");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Product Category");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](32, "input", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](37, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](42, "input", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function PncPtsComponent_Template_dx_button_click_44_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PncPtsComponent_Template_dx_popup_visibleChange_45_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function PncPtsComponent_Template_dx_popup_onHidden_45_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](50, "textarea", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_Template_dx_button_onClick_52_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-popup", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PncPtsComponent_Template_dx_popup_visibleChange_53_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function PncPtsComponent_Template_dx_popup_onHidden_53_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](56, PncPtsComponent_dx_data_grid_56_Template, 4, 8, "dx-data-grid", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "dx-popup", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PncPtsComponent_Template_dx_popup_visibleChange_57_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "p", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](61, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](63, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_Template_dx_button_onClick_65_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](66, "dx-button", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PncPtsComponent_Template_dx_button_onClick_66_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productTypeLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductType));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productCategoryLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductCategory));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.previousYear1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.currentYear);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.foreCastYear1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](47, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwdHMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 92390:
/*!******************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/psc.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PSCComponent": () => (/* binding */ PSCComponent)
/* harmony export */ });
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _sub_product_type_sales_product_type_sales_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sub/product-type-sales/product-type-sales.component */ 40333);
/* harmony import */ var _sub_brand_sales_brand_sales_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub/brand-sales/brand-sales.component */ 62711);
/* harmony import */ var _sub_segment_sales_segment_sales_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sub/segment-sales/segment-sales.component */ 86991);
/* harmony import */ var _sub_european_country_sales_european_country_sales_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sub/european-country-sales/european-country-sales.component */ 50411);









function PSCComponent_app_product_type_sales_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "app-product-type-sales", 2);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("setDataRelationsData", ctx_r0.datRelationsData);
} }
function PSCComponent_app_brand_sales_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "app-brand-sales", 3);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("setSelectedCurrency", ctx_r1.datRelationsData);
} }
function PSCComponent_app_segment_sales_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "app-segment-sales", 3);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("setSelectedCurrency", ctx_r2.datRelationsData);
} }
function PSCComponent_app_european_country_sales_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "app-european-country-sales", 3);
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("setSelectedCurrency", ctx_r3.datRelationsData);
} }
class PSCComponent {
    constructor(route, sharedService) {
        this.route = route;
        this.sharedService = sharedService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__.DataRelationsEnum;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getDataRelations();
    }
    ngOnInit() { }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
}
PSCComponent.ɵfac = function PSCComponent_Factory(t) { return new (t || PSCComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__.SharedService)); };
PSCComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: PSCComponent, selectors: [["app-psc"]], decls: 4, vars: 4, consts: [[3, "setDataRelationsData", 4, "ngIf"], [3, "setSelectedCurrency", 4, "ngIf"], [3, "setDataRelationsData"], [3, "setSelectedCurrency"]], template: function PSCComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](0, PSCComponent_app_product_type_sales_0_Template, 1, 1, "app-product-type-sales", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, PSCComponent_app_brand_sales_1_Template, 1, 1, "app-brand-sales", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, PSCComponent_app_segment_sales_2_Template, 1, 1, "app-segment-sales", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](3, PSCComponent_app_european_country_sales_3_Template, 1, 1, "app-european-country-sales", 1);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 26);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _sub_product_type_sales_product_type_sales_component__WEBPACK_IMPORTED_MODULE_2__.ProductTypeSalesComponent, _sub_brand_sales_brand_sales_component__WEBPACK_IMPORTED_MODULE_3__.BrandSalesComponent, _sub_segment_sales_segment_sales_component__WEBPACK_IMPORTED_MODULE_4__.SegmentSalesComponent, _sub_european_country_sales_european_country_sales_component__WEBPACK_IMPORTED_MODULE_5__.EuropeanCountrySalesComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwc2MuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 36657:
/*!**********************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/brand-sales/brand-sales-preview/brand-sales-preview.component.ts ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrandSalesPreviewComponent": () => (/* binding */ BrandSalesPreviewComponent)
/* harmony export */ });
/* harmony import */ var D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exceljs */ 34498);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataFieldArea.enum */ 29368);
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/model/userStateAndSetttings.model */ 69893);
/* harmony import */ var src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/model/enums/specialValueType.enum */ 59591);
/* harmony import */ var devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme/excel_exporter */ 47081);
/* harmony import */ var src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/guard/commonHelper */ 83518);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/model/enums/computingType.enum */ 11892);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shc/sub/shc-preview/preview-top-menu/preview-top-menu.component */ 57952);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! devextreme-angular/core */ 85915);





























function BrandSalesPreviewComponent_div_5_div_2_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "In Direction");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "dx-select-box", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function BrandSalesPreviewComponent_div_5_div_2_div_10_Template_dx_select_box_valueChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
      return ctx_r7.percentInDirection = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", ctx_r6.summaryDisplayModeItems)("value", ctx_r6.percentInDirection);
  }
}

const _c0 = function () {
  return ["Subtotals", "Grand Totals"];
};

function BrandSalesPreviewComponent_div_5_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute '% Of Total':");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](7, "Based on");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function BrandSalesPreviewComponent_div_5_div_2_Template_dx_radio_group_valueChange_9_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r9.percentOfTotalBasedOn = $event;
    })("onValueChanged", function BrandSalesPreviewComponent_div_5_div_2_Template_dx_radio_group_onValueChanged_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r11.onBasedOnChange(false);
    })("onInitialized", function BrandSalesPreviewComponent_div_5_div_2_Template_dx_radio_group_onInitialized_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r12.onBasedOnChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](10, BrandSalesPreviewComponent_div_5_div_2_div_10_Template, 5, 2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "dx-button", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function BrandSalesPreviewComponent_div_5_div_2_Template_dx_button_onClick_14_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r13.addPercentOfTotalsToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](5, _c0))("value", ctx_r4.percentOfTotalBasedOn);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx_r4.summaryDisplayModeItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120)("disabled", false);
  }
}

function BrandSalesPreviewComponent_div_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function BrandSalesPreviewComponent_div_5_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r14.isPercentOfTotalPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, BrandSalesPreviewComponent_div_5_div_2_Template, 15, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 250)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r1.isPercentOfTotalPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c1 = function (a0, a1) {
  return [a0, a1];
};

function BrandSalesPreviewComponent_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute change, %:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function BrandSalesPreviewComponent_div_6_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r18.percentOfChangeComputeType = $event;
    })("onValueChanged", function BrandSalesPreviewComponent_div_6_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r20.onComputeTypeChange(false);
    })("onInitialized", function BrandSalesPreviewComponent_div_6_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r21.onComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function BrandSalesPreviewComponent_div_6_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r22.addPrecentOfChangeToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r16.computingType.FirstYear, ctx_r16.computingType.PreviousYear))("value", ctx_r16.percentOfChangeComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function BrandSalesPreviewComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function BrandSalesPreviewComponent_div_6_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r24);
      const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r23.isPercentOfChangePopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, BrandSalesPreviewComponent_div_6_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r2.isPercentOfChangePopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

function BrandSalesPreviewComponent_div_7_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute CAGR:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function BrandSalesPreviewComponent_div_7_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r27.cagrComputeType = $event;
    })("onValueChanged", function BrandSalesPreviewComponent_div_7_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r29.onCagrComputeTypeChange(false);
    })("onInitialized", function BrandSalesPreviewComponent_div_7_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r30.onCagrComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function BrandSalesPreviewComponent_div_7_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r31.addCAGRToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r25.computingType.FirstYear, ctx_r25.computingType.PreviousYear))("value", ctx_r25.cagrComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function BrandSalesPreviewComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function BrandSalesPreviewComponent_div_7_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r33);
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r32.isCagrPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, BrandSalesPreviewComponent_div_7_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r3.isCagrPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c2 = function () {
  return {
    showColumnFields: true,
    showDataFields: true,
    showFilterFields: true,
    showRowFields: true,
    allowFieldDragging: true,
    visible: true
  };
};

const _c3 = function () {
  return {
    enabled: true
  };
};

class BrandSalesPreviewComponent {
  constructor(route, isLoadingService, studyService, alertService, sharedService) {
    this.route = route;
    this.isLoadingService = isLoadingService;
    this.studyService = studyService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.studyData = [];
    this.currentYear = 0;
    this.foreCastYear = 0;
    this.previousYears = [];
    this.previewData = [];
    this.saveStateEnabled = false;
    this.gridFields = [];
    this.previewGridKey = '';
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.studyAreaId = 0;
    this.selectedCurrency = {
      Id: 0,
      IsActive: false,
      Name: ''
    };
    this.studyType = '';
    this.volumeYears = [];
    this.viewId = 0;
    this.currencyConversionTypeSelected = 1;
    this.computingType = src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType;
    this.eventsCustomAction = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.pivotGridNoDataMessage = '';
    this.isPercentOfTotalPopup = false;
    this.isPercentOfChangePopup = false;
    this.isCagrPopup = false;
    this.firstAvailableId = 0;
    this.yearDataFieldName = '';
    this.isHeaderFilterLoading = false;
    this.canCallSaveState = false;
    this.adminSetNewState = false;
    this.pivotSummaryDisplayModesSubtotals = [{
      id: undefined,
      name: 'Same as the Data Fields'
    }, {
      id: 'percentOfColumnTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowTotal',
      name: 'Always Rows'
    }];
    this.pivotSummaryDisplayModesGrandTotals = [{
      id: 'percentOfColumnGrandTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowGrandTotal',
      name: 'Always Rows'
    }, {
      id: 'percentOfGrandTotal',
      name: 'Table (Absolute) Grand Total'
    }];
    this.shownYears = undefined;
    this.invisibleFields = [];
    this.saveStateToDbTimeout = setTimeout(() => {}, 0);
    this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.shownYearsPrev = undefined;
    this.isAdmin = false;
    this.pivotStateId = 0;
    this.percentOfTotalBasedOn = 'Subtotals';
    this.percentInDirection = '';
    this.percentOfChangeComputeType = '';
    this.cagrComputeType = '';
    this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.customSaveState = this.customSaveState.bind(this);
    this.customLoadState = this.customLoadState.bind(this);
    this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridOptions(); // this.stateData = new UserStateAndSetttings();
  }

  set setPreviewData(data) {
    if (data) {
      this.previewData = data;
    }
  }

  set setGridFields(data) {
    if (data) {
      this.gridFields = data;
    }
  }

  set setPreviewGridKey(data) {
    if (data) {
      this.previewGridKey = data;
    }
  }

  set setSelectedCurrency(data) {
    if (data) {
      this.selectedCurrency = {
        Id: data.CurrencyId,
        IsActive: true,
        Name: data.CurrencyName,
        CurrencyCode: data.CurrencyCode,
        CurrencyName: data.CurrencyName
      };
      this.currencyDropdownSelected = this.selectedCurrency;
    }
  }

  set setStudyType(data) {
    if (data) {
      this.studyType = data;
    }
  }

  set setVolumeYears(data) {
    if (data) {
      this.volumeYears = data;
    }
  }

  set setViewId(data) {
    if (data) {
      this.viewId = data;
      this.getPivotSettings();
      this.getPivotState();
    }
  }

  ngOnInit() {
    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  ngOnChanges(changes) {
    this.getPreviewData(this.studyData);
  }

  getPreviewData(studyData) {
    const previewData = [];
    studyData.map(item => {
      this.previousYears.map(year => {
        previewData.push({
          Channel: item.Channel,
          Company: item.Company,
          Brand: item.Brand,
          Year: year.year,
          Value: item[year.field]
        });
      });
      previewData.push({
        Channel: item.Channel,
        Company: item.Company,
        Brand: item.Brand,
        Year: this.currentYear,
        Value: item.CurrentYear
      }); // previewData.push({
      //   Channel: item.Channel,
      //   Company: item.Company,
      //   Brand: item.Brand,
      //   Year: this.foreCastYear,
      //   Value: item.Forecast1,
      // });
    });
    this.previewData = previewData; // console.log(previewData);
    // this.pivotGridDataSource = new PivotGridDataSource({
    //   store: previewData,
    //   fields: this.getGridFields(),
    // });

    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  getGridFields() {
    return this.gridFields = [{
      dataField: 'Channel',
      area: 'row',
      caption: 'Channel',
      dataType: 'string',
      id: 0
    }, {
      dataField: 'Company',
      area: 'row',
      caption: 'Company',
      dataType: 'string',
      id: 1
    }, {
      dataField: 'Brand',
      area: 'row',
      caption: 'Brand',
      dataType: 'string',
      id: 2
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 3,
      caption: 'Sales',
      dataField: 'Value',
      dataFieldType: 'Value',
      width: 80,
      dataType: 'number',
      summaryType: 'sum',
      summaryDisplayMode: 'none',
      format: {
        type: 'fixedPoint',
        precision: 1
      },
      area: 'data'
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 4,
      caption: 'Year',
      dataField: 'Year',
      width: 30,
      dataType: 'string',
      summaryDisplayMode: 'none',
      area: 'column'
    }];
  }

  getPivotSettings() {
    this.sharedService.getPivotSettings(this.viewId).subscribe(res => {
      this.pivotGridOptions = res.Data;

      if (this.pivotGridOptions) {
        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      }
    });
  }

  getPivotState() {
    // console.log(this.stateData);
    if (!this.stateData) {
      let stateData = undefined;
      this.sharedService.getPivotState(this.viewId).subscribe(res => {
        // in case state is not exists yet
        try {
          const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
          stateData = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.realMerge(new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(), JSON.parse(stateRes.StateData));
          this.pivotStateId = stateRes.PivotStateId;
        } catch (_a) {
          stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(); // stateData.state.fields = this.getGridFields();
        }

        this.directDatasourceRenderPivot(stateData);
      });
    } else {
      this.directDatasourceRenderPivot(this.stateData);
    }
  }

  directDatasourceRenderPivot(stateData) {
    var _this = this;

    return (0,D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (_this.pivotGridOptions.settings.isCube) {// let token = await this.getAzureAnalysisToken();
        // let cubesStore = CubeStoreHelper.setCubeStore(
        //   this.pivotGridOptions.settings.cubeSettings.catalog,
        //   this.pivotGridOptions.settings.cubeSettings.cube,
        //   token,
        //   this.devEndpoint
        // );
        // this.pivotGridOptions.pivotGridSource.store = cubesStore;
        // this.pivotGridDataSource = new PivotGridDataSource(
        //   this.pivotGridOptions.pivotGridSource as any
        // );
        // setTimeout(() => {
        //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);
        // }, 5000);
        // this.saveStateEnabled = true;
        // if (stateData.settings) {
        //   if (!stateData.settings.currency) {
        //     stateData.settings.currency =
        //       this.pivotGridOptions.pivotGridDefaultValues.currency;
        //   }
        //   if (!stateData.settings.currencyConversionType) {
        //     stateData.settings.currencyConversionType =
        //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
        //   }
        //   if (!stateData.settings.selectedYear) {
        //     stateData.settings.selectedYear.PeriodKey = 2021;
        //   }
        // }
        // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.stateData = stateData;
        // this.fillPivotCube();
        // setTimeout(() => {
        //   this.canCallSaveState = true;
        // }, 300);
      } else {
        if (stateData.settings) {
          if (!stateData.settings.currency) {
            stateData.settings.currency = _this.pivotGridOptions.pivotGridDefaultValues.currency;
          }

          if (!stateData.settings.currencyConversionType) {
            stateData.settings.currencyConversionType = _this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
          }

          if (!((_a = stateData.settings.selectedYear) === null || _a === void 0 ? void 0 : _a.PeriodKey)) {
            // stateData.settings.selectedYear = await this.getLatestAccessibleYear(
            //   this.sharedService.getUserData().userId,
            //   this.requestedView.databaseId,
            //   this.requestedView.viewId
            // );
            stateData.settings.selectedYear = _this.currentYear;
          } // if (!stateData.settings.unitOfVolume) {
          //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(
          //     this.requestedView.databaseId
          //   );
          // }


          if (!stateData.settings.unitOfMass) {
            // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(
            //   this.requestedView.databaseId
            // );
            stateData.settings.unitOfMass = {
              Id: 105,
              Name: 'Thousand Tonnes'
            };
          }
        } // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );


        _this.stateData = stateData;

        if (_this.previewData && _this.previewData.length) {
          //get all invisible fields
          _this.invisibleFields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => f.visible === false); //filter invisible fields

          _this.pivotGridOptions.pivotGridSource.fields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => !f.visible || !f.isCalculated); //get count of visible fields for calculated fields ids

          _this.firstAvailableId = _this.pivotGridOptions.pivotGridSource.fields.length; // remove all invisible data from the datasource

          if (_this.invisibleFields && _this.invisibleFields.length > 0) {
            for (const invisibleField of _this.invisibleFields) {
              _this.previewData.forEach(obj => {
                delete obj[invisibleField.dataField];
              });
            }
          }

          _this.fillPivot(_this.pivotGridOptions, _this.previewData);
        } else {
          _this.readPivotDataFromApi();
        }
      }
    })();
  }

  customSaveState(data, isChangeAutoSaveStatus) {
    var _a; // do not save state to db in case, states are emited too intensively


    clearTimeout(this.saveStateToDbTimeout);
    this.canCallSaveState = true; // const userData = this.sharedService.getUserData();
    // this.initChart();
    // allow to save state only in case all requested data is available

    if (this.viewId && this.canCallSaveState && this.pivotGridOptions && this.stateData) {
      this.stateData.state = data;
      this.stateChange.next(this.stateData); // find all shown years and reload pivot grid on change

      const yearField = this.stateData.state.fields.filter(f => f.dataField === this.yearDataFieldName);
      const hasCagrOrChange = this.stateData.settings.cagrState.isSet || this.stateData.settings.changePercentState.isSet;

      if (yearField && hasCagrOrChange) {
        const pivotGridInstance = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance;
        const pivotFridDataSource = pivotGridInstance.getDataSource();
        const areaIndex = yearField[0].areaIndex;
        const uniqArrByText = lodash__WEBPACK_IMPORTED_MODULE_3__.uniqBy(pivotGridInstance._dataController._columnsInfo[areaIndex], 'text');
        this.shownYears = uniqArrByText.map(t => parseInt(t.text)); // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists

        if (yearField[0].sortOrder === 'desc') {
          pivotFridDataSource.field(this.yearDataFieldName, {
            sortOrder: 'asc'
          });
          pivotFridDataSource.load();
        }

        if (!lodash__WEBPACK_IMPORTED_MODULE_3__.isEqual(this.shownYears, this.shownYearsPrev)) {
          this.shownYearsPrev = this.shownYears;
          pivotFridDataSource.load();
        }
      } // in case user is NOT admin and has disable automatic saving state or remember latest state
      else if (!isChangeAutoSaveStatus) {
        if (this.stateData.settings.rememberLatestState == undefined) {
          this.stateData.settings.rememberLatestState = this.pivotGridOptions.canSaveUserState;
        }

        if (this.stateData.settings.rememberLatestState == false) {
          return;
        }
      }

      this.saveStateToDbTimeout = setTimeout(() => {
        this.sharedService.setPivotState(this.viewId, 0, this.isAdmin, JSON.stringify(this.stateData)).subscribe(data => {
          if (data && this.pivotGridOptions.canSaveDefaultStateAndOptions && this.isAdmin) {
            this.alertService.info('The system will remember the last state!'); // after save state, save also settings

            this.saveSettings(this.viewId, this.pivotGridOptions); // set can save default state to false

            this.pivotGridOptions.canSaveDefaultStateAndOptions = false;
          }
        }, error => {
          throw new Error(error);
        });
      }, 2000);
    }
  }

  customLoadState() {
    if (this.stateData) {
      return this.stateData.state;
    }
  }

  deleteCustomState() {
    this.adminSetNewState = false;

    if (this.viewId && this.pivotStateId) {
      this.sharedService.deletePivotState(this.viewId, this.pivotStateId).subscribe(data => data, error => {
        throw new Error(error);
      }, () => {
        // finally read all data again
        // this.readPivotOptionsAndData();
        // this.readPivotDataFromApi();
        const stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings();
        this.directDatasourceRenderPivot(stateData);
      });
    }
  }

  saveSettings(currentlySelectedViewId, optionsDataSource) {
    let saveResult = false;
    const optionsDataSourceTemp = Object.assign({}, optionsDataSource);
    optionsDataSourceTemp.pivotGridSource.fields = optionsDataSourceTemp.pivotGridSource.fields.filter(f => !f.isCalculated); // set store to empty, system will read fresh data from backend next time

    optionsDataSourceTemp.pivotGridSource.store = [];
  }

  readPivotDataFromApi() {
    this.isLoadingService.add();
    this.yearDataFieldName = 'Year';
    this.studyService.getPscStudyData('BrandSales', this.marketYearCategoryId, this.studyProjectMarketYearId, typeof this.currencyDropdownSelected !== 'undefined' ? this.currencyDropdownSelected.Id : 0, typeof this.unitOfMassDropdownSelected !== 'undefined' ? this.unitOfMassDropdownSelected.Id : 0, typeof this.currencyConversionTypeSelected !== 'undefined' ? this.currencyConversionTypeSelected : 0).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const studyDataObj = res.Data;
        const studyData = studyDataObj['BrandSales'];
        const previewData = [];
        let index = 0;
        studyData.map((item, i) => {
          this.volumeYears.map(d => {
            this.gridFields.map(field => {
              if (typeof previewData[index] === 'undefined') {
                previewData[index] = {};
              }

              previewData[index][field.dataField] = item[field.dataField];

              if (field.dataField === 'Year') {
                previewData[index][field.dataField] = d.year;
              }

              if (field.dataField === 'Value') {
                previewData[index][field.dataField] = item[d.field];
              }
            });
            index++;
          });
        });
        this.previewData = previewData; // this.pivotGridDataSource = new PivotGridDataSource({
        //   store: this.previewData,
        //   fields: this.gridFields,
        // });

        if (typeof this.pivotGridOptions !== 'undefined') {
          this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
          this.pivotGridOptions.pivotGridSource.store = this.previewData;
          this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }

        this.fillPivot(this.pivotGridOptions, this.previewData); // when pivot data is loaded allow with small delay save state to the database

        setTimeout(() => {
          this.canCallSaveState = true;
        }, 300); // console.log(this.previewData);

        this.isLoadingService.remove();
      } else {
        this.alertService.danger(res.Data);
      }
    }, err => {
      const errorShow = typeof err.error !== 'undefined' ? err.error : 'Something went wrong. Please try again later.';
      this.alertService.danger(errorShow);
      this.isLoadingService.remove();
    });
  }

  getDataFieldName(fieldName) {
    if (fieldName == 'ProductTypeSales') {
      return 'ProductTypeSalesSHC';
    }

    return fieldName;
  }

  onOptionChanged(e) {}

  onInitialized(e) {}

  cellPrepared(e) {
    var _a, _b, _c, _d; // customize change % columns captions
    // console.log(this.stateData?.settings.changePercentState.computingType);


    const shownYearsInPivot = this.shownYears;

    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {
      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex].toString() + ' to ' + shownYearsInPivot[yearIndex].toString();
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      } //customize cagr columns captions


      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex] + ' to ' + shownYearsInPivot[yearIndex];
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      }
    }

    if (e.area === 'data') {
      if (e.cell.value) {
        e.cell.value.hasCd && e.cellElement.classList.add('pivot-grid-cell-has-cd');
      }
    }
  }

  onContentReady(e) {
    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource && this.pivotGridOptions.pivotGridSource.fields) {
      const calculatedFields = this.pivotGridOptions.pivotGridSource.fields.filter(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      for (const calculatedField of calculatedFields) {
        this.addCloseButtonToCalculatedField(calculatedField.id, calculatedField.calculatedFieldType);
      }
    } // change style for no data message


    const noDataElement = e.component.element().querySelector('.dx-pivotgrid-nodata');

    if (noDataElement) {
      setTimeout(() => {
        if (this.pivotGridNoDataMessage) {
          noDataElement.classList.add('noDataMessage');
        } else {
          noDataElement.classList.remove('noDataMessage');
        }
      }, 100);
    }

    if (this.pivotGrid && this.stateData && this.stateData.state) {// Allow next rows if you want to enable disabling pivot during waiting for component response
      //this.pivot.disabled = true;
      // not allow to user change state too fast, pivot component needs some time to save emit state
      //setTimeout(() => { this.pivot.disabled = false; }, 1000)
    }
  }

  onContextMenuPreparing(e) {
    // this.pivot.disabled = true;
    this.customizeContextMenu(e); //if (e.area == "row" || e.area == "column") {
    //    let id = e.columnIndex + "" + e.rowIndex;
    //    let tooltip = $("<span></span>").append($("<span id='" + id + "'></span>").html("")).appendTo(e.cellElement);
    //    let field = $("#" + id).closest('td');
    //    field.attr('title', e.cell.text);
    //}
  }

  customizeContextMenu(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    this.updateDefaultContextMenuTextsAndIcons(e);

    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {
      e.items.push({
        beginGroup: true,
        text: 'Delete Calculated Field',
        icon: 'fa fa-trash-alt',
        onItemClick: () => {
          const fieldToDelete = e.field;

          if (typeof this.stateData !== 'undefined') {
            switch (fieldToDelete.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }

          this.deleteCalculatedField(e.field.id);
        }
      });
      e.items.push({
        beginGroup: true,
        text: 'Edit Calculated Field',
        icon: 'fa fa-pencil-alt',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            switch (e.field.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.isPercentOfTotalPopup = true;
                this.stateData.settings.percentOfTotalState.summaryDisplayMode =  false || '';
                this.pivotSummaryDisplayModesSubtotals[0].id = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.isPercentOfChangePopup = true;
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.isCagrPopup = true;
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }
        }
      });
      return;
    }

    let openMenuItems = [];

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.menuSettings.isCurrencySelection) {
      openMenuItems.push({
        icon: 'fa fa-money',
        text: 'Change Currency',
        onItemClick: () => {
          this.eventsCustomAction.next('currencySelector');
        }
      });
    }

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.menuSettings.isCurrencyConversion) {
      openMenuItems.push({
        icon: 'fa fa-exchange-alt',
        text: 'Constant',
        onItemClick: () => {
          this.eventsCustomAction.next('currencyConversionSelector');
        }
      });
    }

    if ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.menuSettings.isUnitsOfVolume) {
      openMenuItems.push({
        icon: 'fa fa-fill-drip',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('massUnitSelector');
        }
      });
    }

    if ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.menuSettings.isUnitsOfMass) {
      openMenuItems.push({
        icon: 'fa fa-balance-scale',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('volumeUnitSelector');
        }
      });
    }

    e.items.push({
      beginGroup: true,
      text: 'Reset to Default',
      icon: 'fas fa-sync-alt',
      onItemClick: () => {
        this.deleteCustomState();
      }
    });
    e.items.push({
      beginGroup: true,
      text: 'Adjust Parameters',
      icon: 'fa fa-sliders-h',
      items: openMenuItems
    });

    if (e.field && e.field.area === 'data' && this.enabledInContextMenu(e.field)) {
      let calculatedFieldsItems = [];

      if ((_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.settings.calculatedFields.isPercentOfTotal) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal,
          onItemClick: () => {
            var _a, _b;

            this.isPercentOfTotalPopup = true;
            this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

            if (((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.percentOfTotalState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.percentOfTotalState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.isPercentOfChange) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent,
          onItemClick: () => {
            var _a;

            this.isPercentOfChangePopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.changePercentState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.changePercentState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_g = this.pivotGridOptions) === null || _g === void 0 ? void 0 : _g.settings.calculatedFields.isCagr) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr,
          onItemClick: () => {
            var _a;

            this.isCagrPopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.cagrState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.cagrState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      e.items.push({
        beginGroup: true,
        text: 'Add Calculated Field',
        icon: 'fa fa-calculator',
        items: calculatedFieldsItems
      });
    } // show only case if exist two or more datafields


    if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType)).length >= 2) {
      const dataFieldsHeaders = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'Rows' : 'Columns';
      e.items.push({
        beginGroup: true,
        text: 'Show Data Field Headers in ' + dataFieldsHeaders,
        icon: 'fa fa-table',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            this.stateData.settings.dataFieldArea = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.row : src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column;
          }
        }
      });
    }
  }

  deleteCalculatedField(fieldId) {
    var _a, _b;

    (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.splice(this.pivotGridOptions.pivotGridSource.fields.map(m => m.id).indexOf(fieldId), 1);
    this.firstAvailableId--;

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) {
      this.readPivotDataFromApi();
    } else {
      if (typeof this.pivotGridOptions !== 'undefined') {
        this.fillPivot(this.pivotGridOptions, this.previewData);
      }
    }
  }

  updateDefaultContextMenuTextsAndIcons(e) {
    var _a;

    let rowName = undefined;
    let rowCaption;

    if ((_a = e.cell) === null || _a === void 0 ? void 0 : _a.path) {
      if (e.cell && e.area === 'row') {
        const path = e.cell.path.length - 1;
        rowName = e.rowFields[path].dataField;
        rowCaption = e.rowFields[path].caption;
      } else if (e.cell && e.area === 'column') {
        const path = e.cell.path.length - 1;
        rowName = e.columnFields[path].dataField;
        rowCaption = e.columnFields[path].caption;
      }

      const expandAll = e.items.find(f => f.text.includes('Expand All'));

      if (expandAll) {
        expandAll.icon = 'fas fa-plus';
        expandAll.text = 'Expand' + ' ' + rowCaption;
      }

      const collapseAll = e.items.find(f => f.text.includes('Collapse All'));

      if (collapseAll) {
        collapseAll.icon = 'fas fa-minus';
        collapseAll.text = 'Collapse' + ' ' + rowCaption;
      }
    }

    const fieldChooser = e.items.find(f => f.text.includes('Show Field Chooser'));

    if (fieldChooser) {
      fieldChooser.text = 'FieldChooser Text';
    }

    const exportToExcel = e.items.find(f => f.text.includes('Export to'));

    if (exportToExcel) {
      exportToExcel.text = 'Export to excel';
    }

    const sorts = e.items.filter(f => f.text.includes('Sort'));

    if (sorts) {
      for (let sort of sorts) {
        sort.icon = 'fas fa-sort';
      }
    }
  }

  enabledInContextMenu(field) {
    if (field.dataFieldType === src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.AvgPrice) {
      return false;
    } else {
      return true;
    }
  }

  addCloseButtonToCalculatedField(fieldId, datafieldType) {
    const calculatedFieldObj = $(".dx-area-field-content:contains('" + datafieldType + "')").append("<i id='" + src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.removeAllSpaces(datafieldType) + "' class='closeButton fas fa-times-circle'></i>");
    calculatedFieldObj.parent().parent().css('padding-right', '0').css('margin-right', '0 !important');
    calculatedFieldObj.children().off().on('click', () => {
      if (typeof this.stateData !== 'undefined') {
        switch (datafieldType) {
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
            this.stateData.settings.percentOfTotalState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
            this.stateData.settings.changePercentState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
            this.stateData.settings.cagrState.isSet = false;
            break;
        }
      }

      this.deleteCalculatedField(fieldId);
    });
  }

  currencySelectionChanged(currency) {
    this.currencyDropdownSelected = currency; // this.stateData.settings.currency = currency;

    this.readPivotDataFromApi(); // // on currency change update % of total caption if exists
    // const percentOfTotalField =
    //   this.pivotGridOptions.pivotGridSource.fields.find(
    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal
    //   );
    // if (percentOfTotalField) {
    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();
    // }
  }

  currencyConversionSelectionChanged(currencyConversionType) {
    this.currencyConversionTypeSelected = currencyConversionType; // this.stateData.settings.currencyConversionType = currencyConversionType;

    this.readPivotDataFromApi();
  }

  massUnitSelectionChanged(unitOfMass) {
    this.unitOfMassDropdownSelected = unitOfMass; // this.stateData.settings.unitOfMass = unitOfMass;

    this.readPivotDataFromApi();
  }

  getUserSettings() {
    const userSettings = {
      currency: {
        Id: this.selectedCurrency.Id,
        Code: this.selectedCurrency.CurrencyCode,
        Name: this.selectedCurrency.CurrencyName
      },
      currencyConversionType: 1,
      unitOfMass: {
        Id: 103,
        Name: 'Thousand Lbs'
      },
      unitOfMeasure: {
        Id: 101,
        Name: 'Metric Tonnes'
      },
      unitOfVolume: {
        Id: 7,
        Name: 'Quart (US)'
      },
      selectedYear: {
        PeriodKey: this.currentYear,
        Name: this.currentYear.toString()
      },
      percentOfTotalState: {
        isSet: true,
        dataField: 'Value',
        basedOn: 'Subtotals',
        summaryDisplayMode: 'percentOfColumnTotal'
      },
      changePercentState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'Previous (Shown) Year'
      },
      cagrState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'First (Shown) Year'
      },
      dataFieldArea: 'column',
      userChartSetting: {
        dataFieldsDisplayMode: 'singleAxis',
        chartType: 'Column'
      },
      isReducedDataSource: false,
      rememberLatestState: true
    };
    return userSettings;
  }

  exportToExcel() {
    var _a, _b;

    this.getUserSettings();
    this.studyService.changeExcelLoading(true);
    let title = '...';
    const menuSettings = (_b = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.menuSettings;
    const pivotFields = this.pivotGridDataSource.fields();
    const userSettings = this.getUserSettings();
    let finalData;

    if (this.previewData[0].hasOwnProperty('Year')) {
      finalData = this.previewData.sort((a, b) => a.Year - b.Year);
    } else {
      finalData = this.previewData;
    }

    this.studyService.exportToExcel(finalData, pivotFields, userSettings, title, menuSettings, 0).subscribe(res => {
      let fileName = 'PivotTest';

      if (title.length > 3) {
        fileName = title.split(' ').join('');
        fileName = fileName.split('-').join('_');
      }

      var file = new Blob([res], {
        type: 'application/vnd.ms-excel'
      });
      var fileURL = URL.createObjectURL(file);
      let a = document.createElement('a');
      document.body.appendChild(a);
      a.style.display = 'none';
      a.href = fileURL;
      a.target = '_blank';
      a.download = `${fileName}.xlsx`;
      a.click();
      a.remove();
      this.studyService.changeExcelLoading(false);
    }, error => {
      this.studyService.changeExcelLoading(false);
      console.log(error);
    });
  }

  exportToCvs() {
    this.studyService.changeExcelLoading(true);
    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    this.studyService.exportToCsv(this.previewData, fileName);
  }

  exportToShanptshot() {
    var _a;

    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_2__.Workbook();
    const worksheet = workbook.addWorksheet('Main sheet');
    (0,devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__.exportPivotGrid)({
      component: (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance,
      worksheet: worksheet,
      customizeCell: function (options) {
        const excelCell = options;
        excelCell.excelCell.font = {
          name: 'Calibri',
          size: 11
        };
        excelCell.excelCell.alignment = {
          horizontal: 'left',
          vertical: 'top'
        };
      }
    }).then(function () {
      workbook.xlsx.writeBuffer().then(function (buffer) {
        (0,file_saver__WEBPACK_IMPORTED_MODULE_4__.saveAs)(new Blob([buffer], {
          type: 'application/octet-stream'
        }), fileName + '.xlsx');
      });
    });
  }

  fillPivot(pivotGridOptions, pivotData) {
    var _a;

    this.saveStateEnabled = false;
    const selectedYear = this.stateData ? this.stateData.settings.selectedYear : this.currentYear;

    if (pivotGridOptions && ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings)) {
      // If is visible like default, add % of total to pivot
      if (this.stateData.settings.percentOfTotalState.isSet) {
        this.addPercentOfTotalsToPivot(true);
      } // If is visible like default, add change % to pivot


      if (this.stateData.settings.changePercentState.isSet) {
        this.addPrecentOfChangeToPivot(true);
      } // If is visible like default, add CAGR to pivot


      if (this.stateData.settings.cagrState.isSet) {
        this.addCAGRToPivot(true);
      }

      const pivotGridSource = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridSource();
      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;
      pivotGridSource.store = pivotData; // make copy of datasource without reference to old object

      let sourceCopy = lodash__WEBPACK_IMPORTED_MODULE_3__.cloneDeep(pivotGridSource); // if administrator set default sorting to true do not use any special sorting

      if (!pivotGridOptions.settings.useDefaultSorting) {
        // if some special sorting is applied
        if (pivotGridOptions.settings.specialSorting && pivotGridOptions.settings.specialSorting.length) {
          for (let specialSorting of pivotGridOptions.settings.specialSorting) {
            if (specialSorting.fieldName) {
              let orderAray = [];

              if (pivotData) {
                let rowData = 0;

                for (let row of pivotData) {
                  // if (row.Year == selectedYear.PeriodKey) {
                  // in case value datafield is not exists, must exists unit
                  rowData = row.Value === undefined ? row.Unit : row.Value;

                  if (orderAray.some(r => r.field === row[specialSorting.fieldName])) {
                    orderAray.find(r => r.field === row[specialSorting.fieldName]).valueSum += rowData;
                  } else {
                    orderAray.push({
                      field: row[specialSorting.fieldName],
                      valueSum: rowData
                    });
                  } // }

                }

                orderAray = orderAray.sort((a, b) => b.valueSum - a.valueSum).map(m => m.field);
                orderAray.forEach((item, index) => {
                  if (item.startsWith(specialSorting.beginningWith)) {
                    orderAray.push(orderAray.splice(index, 1)[0]);
                  }
                });
                const sortingField = sourceCopy.fields.find(f => f.dataField === specialSorting.fieldName);

                if (sortingField) {
                  sortingField.sortOrder = 'asc';

                  sortingField.sortingMethod = (b, a) => {
                    // if (!this.isHeaderFilterLoading) {
                    //   for (const item of orderAray) {
                    //     if (a.value === item) {
                    //       return 1;
                    //     }
                    //     if (b.value === item) {
                    //       return -1;
                    //     }
                    //   }
                    // }
                    return b.value.localeCompare(a.value);
                  };
                }
              }
            }
          }
        } else {
          this.applySortingRolesByYear();
        }
      }

      if (this.pivotGridDataSource) {
        this.pivotGridDataSource.dispose();
      } // check if source contains dataType property and set visibility to false


      if (pivotGridSource.store && pivotGridSource.store.length && pivotGridSource.store[0].DataType) {
        let dataType = sourceCopy.fields.filter(d => d.dataField === 'DataType');
        dataType[0].visible = false;
      } // check all datafields if contains an exception in calculating


      const allDatafields = sourceCopy.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false);

      for (let field of allDatafields) {
        let newField = this.returnSpecialSumamryField(field);

        if (newField) {
          sourceCopy.fields.push(newField);
          field.visible = false;
        }
      } // remove unused properties


      for (let field of sourceCopy.fields) {
        // remove group properties when group is empty
        if (field.groupName == '') {// delete field.groupName;
          // delete field.groupIndex;
        } // in case fileld is grouped field parse index to int
        else if (field.groupName && field.groupName.length > 0) {
          let groupIndex = field.groupIndex ? parseInt(field.groupIndex.toString()) : 0;
          field.groupIndex = groupIndex;
        }
      }

      if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.settings.groupedFields) {
        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {
          let field = {
            groupName: groupedField.groupName,
            area: groupedField.area
          };
          sourceCopy.fields.push(field);
        }
      }

      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](sourceCopy); // this solves alphabetical filtering in filters

      setTimeout(() => {
        var _a;

        const source = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
        const getFieldValues = source.getFieldValues;
        this.isHeaderFilterLoading = false;
        let that = this;

        source.getFieldValues = function () {
          that.isHeaderFilterLoading = true;
          return getFieldValues.apply(this, arguments).always(function () {
            that.isHeaderFilterLoading = false;
          });
        };
      }, 1);
      src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);

      if (pivotGridOptions.settings && (pivotGridOptions.settings.menuSettings.isChart || pivotGridOptions.settings.charts.isVisible)) {// this.initChart();
      }
    } //cutomize texts in pivot
    // this.updateDefaultPivotTexts();
    // apply special filtering
    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {
    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);
    //}


    setTimeout(() => {
      this.saveStateEnabled = true;
    }, 1);
  }

  returnSpecialSumamryField(fieldOriginal) {
    if (fieldOriginal.summaryType === 'range') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption || '';
      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.dataField = fieldOriginal.dataField || '';

      fieldNew.calculateCustomSummary = e => this.calculateSummaryValueRange(e, fieldOriginal);

      fieldNew.customizeText = e => this.customizeRangeText(e);

      fieldNew.isCalculated = true;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.range;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else if (fieldOriginal.summaryType === 'sumCdOd') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption;

      fieldNew.calculateCustomSummary = options => this.calculateSummaryValueCdOd(options, fieldOriginal);

      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.isCalculated = false;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.none;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else {
      return undefined;
    }
  }

  calculateSummaryValueRange(e, field) {
    var _a, _b;

    const valueNearZero = Number.EPSILON;

    switch (e.summaryProcess) {
      case 'start':
        e.totalValue = 0;
        e.values = [0, 0];
        break;

      case 'calculate':
        if (e.value != -1.7976931348623157e308) {
          if (!e.values[0] || !e.values[1]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value < e.values[0]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value > e.values[1]) {
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }
        }

        break;

      case 'finalize':
        let min = e.values[0] ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision) : 0;
        let max = e.values[1] ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed((_b = field.format) === null || _b === void 0 ? void 0 : _b.precision) : 0; // if (
        //   GlobalSettings.SpecialValueForSqlMoney.find(
        //     (v) => v === Number(min)
        //   ) ||
        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))
        // ) {
        //   ErrorHelper.informAdministrator(
        //     this.appCommonDataService,
        //     'Unhandled range value - (' +
        //       min +
        //       ')(' +
        //       max +
        //       ') ' +
        //       Common.objToString(this.requestedView) +
        //       'Environment: ' +
        //       Common.objToString(
        //         this.appEnvironmentData.getEnvironmentSettings()
        //       ) +
        //       ' User: ' +
        //       Common.objToString(this.sharedService.getUserData())
        //   );
        // }

        if (min === max) {
          e.totalValue = min;
        } else if (!min) {
          e.totalValue = max;
        } else {
          e.totalValue = min + ' - ' + max;
        }

        break;
    }
  }

  customizeRangeText(e) {
    if (e.value === undefined) {
      return src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === null || src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === void 0 ? void 0 : src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash;
    } else {
      return e.value;
    }
  }

  calculateSummaryValueCdOd(options, field) {
    var _a;

    switch (options.summaryProcess) {
      case 'start':
        options.totalValue = {
          value: 0,
          hasCd: false,

          valueOf() {
            return this.value;
          },

          toString() {
            return this.value.toString();
          },

          indexOf() {
            const stringValue = this.toString();
            return stringValue.indexOf.apply(this, arguments);
          }

        };
        break;

      case 'calculate':
        options.totalValue.value += options.value[field.dataField] || 0;
        options.totalValue.hasCd = options.totalValue.hasCd || options.value.DataType === 'cd';
        break;

      case 'finalize':
        let totalValue = options.totalValue;
        totalValue.value = totalValue.value.toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        options.totalValue = totalValue;
        break;
    }
  }

  applySortingRolesByYear() {
    this.yearDataFieldName = 'Year';
    setTimeout(() => {
      var _a;

      const pivotGridDataSource = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();

      const columnFields = pivotGridDataSource._fields.filter(f => f.area === 'column');

      const datafields = pivotGridDataSource._fields.filter(f => f.area === 'data');

      const yearFieldOnFirstPositon = columnFields.filter(f => f.areaIndex === 0 && f.dataField === this.yearDataFieldName); // apply this role only in case, year field is on first column position

      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {
        const rowFields = pivotGridDataSource._fields.filter(f => f.area === 'row');

        const selectedYear = this.currentYear; // const selectedYear = this.stateData
        //   ? this.stateData.settings.selectedYear.PeriodKey
        //   : 2021;

        if (selectedYear) {
          for (const field of rowFields) {
            pivotGridDataSource.field(field.dataField, {
              sortBySummaryField: datafields ? datafields.filter(f => f.areaIndex === 0)[0].dataField : undefined,
              sortBySummaryPath: [selectedYear],
              sortOrder: 'desc'
            });
          }

          pivotGridDataSource.load();
        }
      }
    }, 100);
  }

  setCalculatedFieldFromTopMenu(value) {
    var _a;

    const type = value.itemName;
    const dataField = value.dataField;

    switch (type) {
      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
        this.isPercentOfTotalPopup = true;
        this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.percentOfTotalState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
        this.isPercentOfChangePopup = true;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.changePercentState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
        this.isCagrPopup = true; // this.stateData?.settings.cagrState.dataField = dataField;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.cagrState.dataField = dataField;
        }

        break;
    }
  }

  onBasedOnChange(isInit) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.basedOn = this.percentOfTotalBasedOn;
    }

    this.summaryDisplayModeItems = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.basedOn) === 'Subtotals' ? this.pivotSummaryDisplayModesSubtotals : this.pivotSummaryDisplayModesGrandTotals;

    if (isInit === false && typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';
    }
  }

  onComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.changePercentState.computingType = this.percentOfChangeComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.changePercentState.computingType =
    //     ComputingType.FirstYear;
    // }

  }

  onCagrComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.cagrState.computingType = this.cagrComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;
    // }

  }

  addPercentOfTotalsToPivot(iSCallFromFillPivot) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = this.percentInDirection;
    }

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);
    } else {
      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);
    }
  }

  addPercentOfTotalsToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of total exists

      const percentOfTotal = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal);

      if (percentOfTotal && this.pivotGridDataSource) {
        fieldId = percentOfTotal.id;
        percentOfTotal.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
        percentOfTotal.caption = this.getCaptionForPercentOfTotal();
        percentOfTotal.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.dataField) || 'Value';
        percentOfTotal.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        this.pivotGridDataSource.field(percentOfTotal.id, {
          summaryDisplayMode: percentOfTotal.summaryDisplayMode,
          caption: percentOfTotal.caption,
          calculatedFieldType: percentOfTotal.calculatedFieldType,
          dataField: ((_e = this.stateData) === null || _e === void 0 ? void 0 : _e.settings.percentOfTotalState.dataField) || 'Value'
        });
        this.pivotGridDataSource.load(); // CommonHelper.updatePlaceholders(
        //   this.pivotGridDataSource,
        //   this.stateData
        // );
      } else {
        this.firstAvailableId = ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.pivotGridSource.fields.length) || 0;
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfTotal();
        field.dataField = ((_g = this.stateData) === null || _g === void 0 ? void 0 : _g.settings.percentOfTotalState.dataField) || 'Value';
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.isMeasure = true;
        field.visible = true;
        field.calculateSummaryValue = undefined;
        field.summaryDisplayMode = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.percentOfTotalState.summaryDisplayMode) || '';
        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_j = this.pivotGridOptions) === null || _j === void 0 ? void 0 : _j.settings.calculatedFields.formatPrecision) || 1
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = ((_k = this.stateData) === null || _k === void 0 ? void 0 : _k.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        (_l = this.pivotGridOptions) === null || _l === void 0 ? void 0 : _l.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && typeof this.pivotGridOptions !== 'undefined') {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfTotalPopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.percentOfTotalState.isSet = true;
      }
    }
  }

  addPercentOfTotalsToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    this.removeAllHiddenCalculatedFields();
    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForPercentOfTotal();
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.dataField) || '';
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.isMeasure = true;
    field.visible = true;
    field.calculateSummaryValue = undefined;
    field.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isPercentOfTotalPopup = false;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  removeAllHiddenCalculatedFields() {
    var _a;

    if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state) && this.pivotGridDataSource) {
      this.stateData.state.fields = this.stateData.state.fields.filter(a => a.area !== undefined);
      this.pivotGridDataSource.state(this.stateData.state);
    }
  }

  getCaptionForPercentOfTotal() {
    var _a, _b, _c, _d;

    let caption = ''; //check if exist 2 or more datafields

    if (typeof this.pivotGridOptions !== 'undefined' && ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length) >= 2) {
      const percentOfTotaldatafield = (_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.dataField;
      let currentDatafieldCaption = '';

      if (this.pivotGridOptions.settings.isCube) {
        currentDatafieldCaption = // this.pivotGridOptions.pivotGridSource.fields.find(
        //   (f) => f.dataField === percentOfTotaldatafield
        // ).caption;
        'Cube Caption';
      } else {
        if (typeof this.pivotGridOptions !== 'undefined') {
          const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfTotaldatafield);

          if (fieldCaption) {
            currentDatafieldCaption = fieldCaption.caption;
          }
        }
      }

      caption = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal + ' ' + currentDatafieldCaption;
    } else {
      caption = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    }

    return caption;
  }

  addPrecentOfChangeToPivot(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of change exists

      const percentOfChange = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent);

      if (percentOfChange && this.pivotGridDataSource) {
        fieldId = percentOfChange.id;
        this.pivotGridDataSource.field(percentOfChange.id, {
          caption: this.getCaptionForPercentOfChange(),
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.dataField) || 'Value',
          calculateSummaryValue: e => this.calculateSummaryValuePercentOfChange(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfChange();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.changePercentState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValuePercentOfChange(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfChangePopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.changePercentState.isSet = true;
      }
    }
  }

  calculateSummaryValuePercentOfChange(e) {
    var _a, _b;

    if (e.parent('column')) {
      let base;

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        let yearIndex = 0;

        for (const index in e.parent('column').children()) {
          if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
            yearIndex = parseInt(index);
            break;
          }
        }

        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const returnValue = e.value() / base.value() - 1;
      return isNaN(returnValue) || returnValue && returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  getCaptionForPercentOfChange() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const percentOfChangeDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfChangeDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (percentOfChangeDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
    }

    return caption;
  }

  addCAGRToPivot(iSCallFromFillPivot) {
    var _a;

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addCAGRToPivotCube(iSCallFromFillPivot);
    } else {
      this.addCAGRToPivotArray(iSCallFromFillPivot);
    }
  }

  addCAGRToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case cagr exists, remove and recreate it (case for edit)

      const cagr = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      if (cagr && this.pivotGridDataSource) {
        fieldId = cagr.id;
        this.pivotGridDataSource.field(cagr.id, {
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.dataField) || 'Value',
          caption: this.getCaptionForCagr(),
          calculateSummaryValue: e => this.calculateSummaryValueCagr(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForCagr();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isCagrPopup = false;
      if (this.stateData) this.stateData.settings.cagrState.isSet = true;
    }
  }

  addCAGRToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c;

    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForCagr();
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField) || 'Value';
    field.isMeasure = true;
    field.visible = true;

    field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isCagrPopup = false;

    if (this.stateData) {
      this.stateData.settings.cagrState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  getCaptionForCagr() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const cagrDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataField === cagrDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (cagrDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    }

    return caption;
  }

  calculateSummaryValueCagr(e) {
    var _a, _b;

    const shownYearsInPivot = this.shownYears;

    if (e.parent('column') && shownYearsInPivot) {
      let base;
      let yearIndex = 0;
      let prevYearIndex = 0;

      for (const index in e.parent('column').children()) {
        if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
          yearIndex = parseInt(index);
          break;
        }
      }

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
        prevYearIndex = 0;
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();
      const yearSpan = shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];
      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;
      return isNaN(returnValue) || returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  onChangeAutoSaveStatus(statusValue) {
    var _a;

    if (this.stateData) {
      this.stateData.settings.rememberLatestState = statusValue;
    }

    if (statusValue == false) {
      this.alertService.info('The system will remember this state!');
    } else {
      this.alertService.info('The system will remember the last used state!');
    }

    this.canCallSaveState = true;
    this.customSaveState((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state, true);
  }

}

BrandSalesPreviewComponent.ɵfac = function BrandSalesPreviewComponent_Factory(t) {
  return new (t || BrandSalesPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_20__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_15__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__.SharedService));
};

BrandSalesPreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({
  type: BrandSalesPreviewComponent,
  selectors: [["app-brand-sales-preview"]],
  viewQuery: function BrandSalesPreviewComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    }
  },
  inputs: {
    studyData: "studyData",
    currentYear: "currentYear",
    foreCastYear: "foreCastYear",
    previousYears: "previousYears",
    setPreviewData: "setPreviewData",
    setGridFields: "setGridFields",
    setPreviewGridKey: "setPreviewGridKey",
    setSelectedCurrency: "setSelectedCurrency",
    setStudyType: "setStudyType",
    setVolumeYears: "setVolumeYears",
    setViewId: "setViewId"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵNgOnChangesFeature"]],
  decls: 8,
  vars: 33,
  consts: [[3, "setSelectedCurrency", "pivotGridOptions", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus"], ["id", "pivotGrid", "showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser", "showTotalsPrior", "dataFieldArea", "onContextMenuPreparing", "onOptionChanged", "onInitialized", "onContentReady", "onCellPrepared"], ["pivotGrid", ""], [3, "allowSearch"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], [4, "ngIf"], [1, "popup", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "visible", "visibleChange"], [4, "dxTemplate", "dxTemplateOf"], [1, "form"], [1, "dx-fieldset"], [1, "dx-field"], [1, "dx-field-label"], [1, "dx-field-value"], [3, "items", "value", "valueChange", "onValueChanged", "onInitialized"], ["class", "dx-field", 4, "ngIf"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "disabled", "onClick"], ["displayExpr", "name", "valueExpr", "id", 3, "items", "value", "valueChange"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "onClick"]],
  template: function BrandSalesPreviewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "app-preview-top-menu", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("currencySelectionChanged", function BrandSalesPreviewComponent_Template_app_preview_top_menu_currencySelectionChanged_0_listener($event) {
        return ctx.currencySelectionChanged($event);
      })("currencyConversionSelectionChanged", function BrandSalesPreviewComponent_Template_app_preview_top_menu_currencyConversionSelectionChanged_0_listener($event) {
        return ctx.currencyConversionSelectionChanged($event);
      })("massUnitSelectionChanged", function BrandSalesPreviewComponent_Template_app_preview_top_menu_massUnitSelectionChanged_0_listener($event) {
        return ctx.massUnitSelectionChanged($event);
      })("onExportToExcel", function BrandSalesPreviewComponent_Template_app_preview_top_menu_onExportToExcel_0_listener() {
        return ctx.exportToExcel();
      })("onExportToCvs", function BrandSalesPreviewComponent_Template_app_preview_top_menu_onExportToCvs_0_listener() {
        return ctx.exportToCvs();
      })("onExportSnapshot", function BrandSalesPreviewComponent_Template_app_preview_top_menu_onExportSnapshot_0_listener() {
        return ctx.exportToShanptshot();
      })("calculatedFieldItemSelected", function BrandSalesPreviewComponent_Template_app_preview_top_menu_calculatedFieldItemSelected_0_listener($event) {
        return ctx.setCalculatedFieldFromTopMenu($event);
      })("onChangeAutoSaveStatus", function BrandSalesPreviewComponent_Template_app_preview_top_menu_onChangeAutoSaveStatus_0_listener($event) {
        return ctx.onChangeAutoSaveStatus($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-pivot-grid", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onContextMenuPreparing", function BrandSalesPreviewComponent_Template_dx_pivot_grid_onContextMenuPreparing_1_listener($event) {
        return ctx.onContextMenuPreparing($event);
      })("onOptionChanged", function BrandSalesPreviewComponent_Template_dx_pivot_grid_onOptionChanged_1_listener($event) {
        return ctx.onOptionChanged($event);
      })("onInitialized", function BrandSalesPreviewComponent_Template_dx_pivot_grid_onInitialized_1_listener($event) {
        return ctx.onInitialized($event);
      })("onContentReady", function BrandSalesPreviewComponent_Template_dx_pivot_grid_onContentReady_1_listener($event) {
        return ctx.onContentReady($event);
      })("onCellPrepared", function BrandSalesPreviewComponent_Template_dx_pivot_grid_onCellPrepared_1_listener($event) {
        return ctx.cellPrepared($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](3, "dxo-field-chooser", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "dxo-state-storing", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](5, BrandSalesPreviewComponent_div_5_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](6, BrandSalesPreviewComponent_div_6_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](7, BrandSalesPreviewComponent_div_7_Template, 3, 7, "div", 5);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("setSelectedCurrency", ctx.selectedCurrency)("pivotGridOptions", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](31, _c2))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](32, _c3))("allowFiltering", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowFiltering) || false)("allowExpandAll", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowExpandAll) || false)("showBorders", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showBorders) || false)("showRowTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowTotals) || false)("showColumnTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnTotals) || false)("showTotalsPrior", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showTotalsPrior) || "")("dataFieldArea", (ctx.stateData == null ? null : ctx.stateData.settings == null ? null : ctx.stateData.settings.dataFieldArea) || "")("showColumnGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnGrandTotals) || false)("showRowGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowGrandTotals) || false);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSearch", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("enabled", ctx.saveStateEnabled)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
    }
  },
  directives: [_shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__.PreviewTopMenuComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoFieldChooserComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoStateStoringComponent, _angular_common__WEBPACK_IMPORTED_MODULE_25__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxPopupComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxSelectBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxButtonComponent],
  styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJicmFuZC1zYWxlcy1wcmV2aWV3LmNvbXBvbmVudC5jc3MifQ== */"]
});

/***/ }),

/***/ 62711:
/*!******************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/brand-sales/brand-sales.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BrandSalesComponent": () => (/* binding */ BrandSalesComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var src_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/common.service */ 23115);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 42473);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _brand_sales_preview_brand_sales_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./brand-sales-preview/brand-sales-preview.component */ 36657);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);

























function BrandSalesComponent_dx_data_grid_6_div_11_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function BrandSalesComponent_dx_data_grid_6_div_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, BrandSalesComponent_dx_data_grid_6_div_11_div_3_Template, 2, 2, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.onDeleteCustomSaveState(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c0 = function () { return { width: 200 }; };
function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-drop-down-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onItemClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_4_Template_dx_drop_down_button_onItemClick_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r24.onCalculatedItemClick($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](2, _c0))("items", ctx_r15.calculatorContextMenuItems);
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_6_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r26.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_div_8_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r28.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_div_1_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_div_1_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r38); const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r37.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r36.disabledSignOffButton);
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_div_1_Template, 2, 1, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r40.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_div_1_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, BrandSalesComponent_dx_data_grid_6_ng_container_12_div_2_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, BrandSalesComponent_dx_data_grid_6_ng_container_12_div_4_Template, 2, 3, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, BrandSalesComponent_dx_data_grid_6_ng_container_12_div_6_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, BrandSalesComponent_dx_data_grid_6_ng_container_12_div_8_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, BrandSalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function BrandSalesComponent_dx_data_grid_6_dxi_column_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 76);
} if (rf & 2) {
    const volumeYear_r42 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("dataField", volumeYear_r42.field)("caption", volumeYear_r42.year)("allowEditing", volumeYear_r42.isEditable)("allowFiltering", false)("visible", volumeYear_r42.isVisible)("cellTemplate", volumeYear_r42.cellTemplate);
} }
function BrandSalesComponent_dx_data_grid_6_dxi_column_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function BrandSalesComponent_dx_data_grid_6_div_18_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_6_div_18_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r47); const d_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r45.deleteRow(d_r43.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function BrandSalesComponent_dx_data_grid_6_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, BrandSalesComponent_dx_data_grid_6_div_18_dx_button_1_Template, 1, 0, "dx-button", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r43 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r43.data.DataRowId !== null);
} }
function BrandSalesComponent_dx_data_grid_6_div_19_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "span", 83);
} }
function BrandSalesComponent_dx_data_grid_6_div_19_input_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 84);
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r48.value > 0 ? data_r48.value.toFixed(1) : "");
} }
function BrandSalesComponent_dx_data_grid_6_div_19_span_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value > 0 ? data_r48.value.toFixed(1) : "");
} }
function BrandSalesComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, BrandSalesComponent_dx_data_grid_6_div_19_span_1_Template, 1, 0, "span", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, BrandSalesComponent_dx_data_grid_6_div_19_input_2_Template, 1, 1, "input", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, BrandSalesComponent_dx_data_grid_6_div_19_span_3_Template, 2, 1, "span", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.checkHasComment(data_r48));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function BrandSalesComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r54 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r54.value || data_r54.value == 0 ? data_r54.value.toFixed(1) + "%" : "");
} }
function BrandSalesComponent_dx_data_grid_6_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r55 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r55.value > 0 ? data_r55.value.toFixed(1) : "");
} }
function BrandSalesComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onContextMenuPreparing", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onContextMenuPreparing_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r56.onContextMenuPreparing($event); })("onContentReady", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onContentReady_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onContentReady($event); })("onSaved", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowSaved($event); })("onCellPrepared", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r60.onCellPreparedHighlighter($event); })("onCellHoverChanged", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r61.onCellHoverChanged($event); })("onRowPrepared", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.onRowPrepared($event); })("onEditingStart", function BrandSalesComponent_dx_data_grid_6_Template_dx_data_grid_onEditingStart_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r63.onEditingStart($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-scrolling", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-load-panel", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "dxo-paging", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "dxo-editing", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "dxo-state-storing", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxi-item", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, BrandSalesComponent_dx_data_grid_6_div_11_Template, 4, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, BrandSalesComponent_dx_data_grid_6_ng_container_12_Template, 13, 4, "ng-container", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, BrandSalesComponent_dx_data_grid_6_dxi_column_16_Template, 1, 7, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, BrandSalesComponent_dx_data_grid_6_dxi_column_17_Template, 1, 1, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, BrandSalesComponent_dx_data_grid_6_div_18_Template, 2, 1, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, BrandSalesComponent_dx_data_grid_6_div_19_Template, 4, 3, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, BrandSalesComponent_dx_data_grid_6_div_20_Template, 3, 1, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, BrandSalesComponent_dx_data_grid_6_div_21_Template, 3, 1, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true)("customSave", ctx_r0.customSaveState)("customLoad", ctx_r0.customLoadState)("savingTimeout", 300);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 180)("fixed", true)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 180)("fixed", true)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 180)("fixed", true)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYearsShow);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "cargCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
} }
function BrandSalesComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 85);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function BrandSalesComponent_div_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r65 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r65.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r65.field);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
function BrandSalesComponent_dx_popup_40_Template(rf, ctx) { if (rf & 1) {
    const _r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_dx_popup_40_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r67); const ctx_r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r66.notePopupVisible = $event; })("onHidden", function BrandSalesComponent_dx_popup_40_Template_dx_popup_onHidden_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r67); const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r68.onNotePopupHide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "textarea", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dx-button", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_popup_40_Template_dx_button_onClick_9_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r67); const ctx_r69 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r69.onSaveNote(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 270)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r3.notePopupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r3.newNoteForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" Add Comment for ", ctx_r3.selectedCommentCellData.colCaption, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](11, _c1, ctx_r3.noteSubmit && ctx_r3.n["note"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r3.newNoteForm.invalid);
} }
function BrandSalesComponent_dx_data_grid_44_dxi_column_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 30);
} }
function BrandSalesComponent_dx_data_grid_44_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r74 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_dx_data_grid_44_div_5_Template_dx_button_onClick_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r74); const d_r72 = restoredCtx.$implicit; const ctx_r73 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r73.deleteComment(d_r72.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c2 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function BrandSalesComponent_dx_data_grid_44_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, BrandSalesComponent_dx_data_grid_44_dxi_column_4_Template, 1, 1, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, BrandSalesComponent_dx_data_grid_44_div_5_Template, 2, 0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](9, _c2));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r4.isStudyEditable && !ctx_r4.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
} }
class BrandSalesComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService, commonService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.commonService = commonService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup(),
            BrandSales: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.myYears = [];
        this.volumeYears = [];
        this.volumeYearsShow = [];
        this.foreCastYear1 = 0;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.channelLists = [];
        this.companyLists = [];
        this.brandLists = [];
        this.currentCurrency = {};
        this.datRelationsData = [];
        this.studyDataViewId = 0;
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.deleteRowConfirmPopup = false;
        this.deleteCommentConfirmPopup = false;
        this.deleteResetConfirmPopup = false;
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.isLockedStudy = false;
        this.calculatorContextMenuItems = [];
        this.pivotStateId = 0;
        this.saveStateToDbTimeout = setTimeout(() => { }, 0);
        this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_12__.Subject();
        this.adjustColsOthers = [];
        this.adjustOtherTotal = {};
        this.selectedRowDataChange = {};
        this.selectedCommentCellData = {};
        this.allColsComments = [];
        this.cellColsComments = [];
        this.deleteCommentData = {};
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Channel: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            Company: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            Brand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
            ForecastYear1: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_3__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.calculatorContextMenuItems = this.commonService.getCalculatorFields();
        this.customSaveState = this.customSaveState.bind(this);
        this.customLoadState = this.customLoadState.bind(this);
        this.getGridState = this.getGridState.bind(this);
        this.getAllColumnsComments();
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.getPivotSettings();
            this.getGridState();
        }
    }
    ngOnInit() {
        this.getBrandSalesData();
        this.getChannelLists();
        this.getCompanyLists();
        this.getBrandLists();
    }
    getPivotSettings() {
        this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
        if (this.studyDataRelations) {
            this.studyDataViewId = this.studyDataRelations.ViewId;
        }
    }
    getBrandSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getPscStudyData('BrandSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj.BrandSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                this.volumeYearsShow = [];
                this.myYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    this.myYears.push({ field: `PreviousYear${j}`, year: i });
                    this.volumeYearsShow.push({
                        field: `PreviousYear${j}`,
                        year: i,
                        isEditable: !this.isStudyEditable,
                        cellTemplate: 'EditCellTemplate',
                        isVisible: true,
                    });
                    if (j !== 5) {
                        this.volumeYearsShow.push({
                            field: `Cagr${j}`,
                            year: `Cagr, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                        this.volumeYearsShow.push({
                            field: `PerChange${j}`,
                            year: `Change, %, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                    }
                    this.volumeYearsShow.push({
                        field: `TotalPer${j}`,
                        year: `% Of Total`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                }
                this.volumeYearsShow.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                    isEditable: !this.isStudyEditable,
                    cellTemplate: 'EditCellTemplate',
                    isVisible: true,
                });
                this.volumeYearsShow.push({
                    field: `CagrCurrentYear`,
                    year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.volumeYearsShow.push({
                    field: `PerChangeCurrentYear`,
                    year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.volumeYearsShow.push({
                    field: `TotalPerCurrentYear`,
                    year: `% Of Total`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                // myYears = this.volumeYears;
                this.myYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                this.foreCastYear1 = currentYear + 5;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    this.calculateCagrYears(item);
                    this.calculatePercentageOfChangeYears(item);
                    // const rowNoteArray: any = [];
                    // if (item.Notes !== null) {
                    //   const noteArray = item.Notes.split('|||');
                    //   noteArray.map((singleVal: any) => {
                    //     const n = singleVal.split('@@@');
                    //     const d = n[0].split('###');
                    //     rowNoteArray.push({
                    //       name: d[0].trim(),
                    //       date: new Date(d[1].trim()),
                    //       note: n[1].trim(),
                    //     });
                    //   });
                    // }
                    // let sortRowNoteArray: any = [];
                    // if (rowNoteArray.length > 0) {
                    //   sortRowNoteArray = rowNoteArray.sort(
                    //     (a: any, b: any) => b.date - a.date
                    //   );
                    // }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    let rowComments = [];
                    if (this.allColsComments) {
                        rowComments = this.allColsComments.filter((single) => single.DraftDataRowId == item.DataRowId);
                        rowComments.map(({ ColumnName }) => {
                            this.myYears.map((elem) => {
                                if (elem.field == ColumnName) {
                                    item[`${ColumnName}_comment`] = true;
                                }
                            });
                        });
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    if (typeof this.adjustOtherTotal[item.ChannelId] === 'undefined') {
                        // adjustmentOthers[item.ChannelId] = {};
                        this.adjustOtherTotal[item.ChannelId] = {
                            PreviousYear1: 0,
                            PreviousYear2: 0,
                            PreviousYear3: 0,
                            PreviousYear4: 0,
                            PreviousYear5: 0,
                            CurrentYear: 0,
                        };
                    }
                    if (item.Company == 'All other' && item) {
                        this.adjustColsOthers.push(item);
                    }
                    // this.studyData[i].StudyNotes =
                    //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    // this.studyData[i].EditNote = false;
                    // this.studyData[i].Notes = null;
                    // this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.calculateTotalPercentageForCols();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    calculateAllOtherTotal(changeData) {
        if (changeData && this.adjustColsOthers && this.selectedRowDataChange) {
            const otherColData = typeof this.adjustColsOthers[changeData.ChannelId] !== 'undefined'
                ? this.adjustColsOthers[changeData.ChannelId]
                : {};
            if (otherColData) {
                let PreviousYear1Total = +otherColData.PreviousYear1;
                let PreviousYear2Total = +otherColData.PreviousYear2;
                let PreviousYear3Total = +otherColData.PreviousYear3;
                let PreviousYear4Total = +otherColData.PreviousYear4;
                let PreviousYear5Total = +otherColData.PreviousYear5;
                let CurrentYearTotal = +otherColData.CurrentYear;
                this.allowedCols.map((cols) => {
                    const otherColTotal = +otherColData[cols] || 0;
                    if (otherColTotal > 0) {
                        const oldData = +this.selectedRowDataChange[cols];
                        const newData = +changeData[cols];
                        const diff = oldData - newData;
                        let allOtherRow = this.studyData.find((item) => item.DataRowId === otherColData.DataRowId);
                        if (allOtherRow) {
                            allOtherRow[cols] = otherColTotal + diff;
                            this.selectedRowDataChange[cols] = allOtherRow[cols];
                        }
                    }
                });
            }
        }
    }
    calculateCagrYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.Cagr1 = this.commonService.calculateCAGRPercentage(data.PreviousYear2, data.PreviousYear1, 1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.Cagr2 = this.commonService.calculateCAGRPercentage(data.PreviousYear3, data.PreviousYear2, 1);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.Cagr3 = this.commonService.calculateCAGRPercentage(data.PreviousYear4, data.PreviousYear3, 1);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.Cagr4 = this.commonService.calculateCAGRPercentage(data.PreviousYear5, data.PreviousYear4, 1);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(data.PreviousYear1, data.CurrentYear, 1);
        }
    }
    calculatePercentageOfChangeYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.PerChange1 = this.commonService.calculatePercentageChange(data.PreviousYear2, data.PreviousYear1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.PerChange2 = this.commonService.calculatePercentageChange(data.PreviousYear3, data.PreviousYear2);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.PerChange3 = this.commonService.calculatePercentageChange(data.PreviousYear4, data.PreviousYear3);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.PerChange4 = this.commonService.calculatePercentageChange(data.PreviousYear5, data.PreviousYear4);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(data.PreviousYear1, data.CurrentYear);
        }
    }
    calculateTotalPercentageForCols() {
        const PreviousYear1Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear1, 0);
        const PreviousYear2Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear2, 0);
        const PreviousYear3Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear3, 0);
        const PreviousYear4Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear4, 0);
        const PreviousYear5Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear5, 0);
        const CurrentYearTotal = this.studyData.reduce((sum, currentItem) => sum + currentItem.CurrentYear, 0);
        this.studyData.map((item) => {
            item.TotalPer1 = this.commonService.calculateTotalPercentage(PreviousYear1Total, item.PreviousYear1);
            item.TotalPer2 = this.commonService.calculateTotalPercentage(PreviousYear2Total, item.PreviousYear2);
            item.TotalPer3 = this.commonService.calculateTotalPercentage(PreviousYear3Total, item.PreviousYear3);
            item.TotalPer4 = this.commonService.calculateTotalPercentage(PreviousYear4Total, item.PreviousYear4);
            item.TotalPer5 = this.commonService.calculateTotalPercentage(PreviousYear5Total, item.PreviousYear5);
            item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(CurrentYearTotal, item.CurrentYear);
        });
    }
    getChannelLists() {
        this.sharedService
            .getPSCDataEntryData('Channel')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.channelLists = data.Data;
            }
        });
    }
    getCompanyLists() {
        this.sharedService
            .getPSCDataEntryData('Company')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.companyLists = data.Data;
            }
        });
    }
    getBrandLists() {
        this.sharedService
            .getPSCDataEntryData('Brand')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.brandLists = data.Data;
            }
        });
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
            'Forecast1',
        ];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const allowedCols = [
                'PreviousYear1',
                'PreviousYear2',
                'PreviousYear3',
                'PreviousYear4',
                'PreviousYear5',
                'CurrentYear',
                'Forecast1',
            ];
            const isFound = allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onEditingStart(e) {
        const data = e.data;
        this.selectedRowDataChange = {
            CurrentYear: +data.CurrentYear,
            PreviousYear1: +data.PreviousYear1,
            PreviousYear2: +data.PreviousYear2,
            PreviousYear3: +data.PreviousYear3,
            PreviousYear4: +data.PreviousYear4,
            PreviousYear5: +data.PreviousYear5,
        };
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
            // data.Forecast1 = +data.Forecast1;
            this.calculateCagrYears(data);
            this.calculatePercentageOfChangeYears(data);
            this.calculateTotalPercentageForCols();
            this.calculateAllOtherTotal(data);
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Forecast1: +newRowData.ForecastYear1,
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            Channel: newRowData.Channel.Name,
            ChannelId: newRowData.Channel.Id,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            Company: newRowData.Company.Name,
            CompanyId: newRowData.Company.Id,
            Brand: newRowData.Brand.Name,
            BrandId: newRowData.Brand.Id,
            Forecast2: 0,
            Forecast3: 0,
            Forecast4: 0,
            Forecast5: 0,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ChannelId == newRow.ChannelId &&
            item.CompanyId == newRow.CompanyId &&
            item.BrandId == newRow.BrandId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ChannelId || 0) - (b.ChannelId || 0) ||
                (a.CompanyId || 0) - (b.CompanyId || 0) ||
                (a.BrandId || 0) - (b.BrandId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
    }
    onSaveNote(isLoad = true) {
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        if (!this.selectedCommentCellData) {
            return;
        }
        // const rowData = this.newNoteForm.value.rowData;
        // const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        // const IsEditedNote = this.dataGrid?.instance.cellValue(
        //   rowIndex,
        //   'EditNote'
        // );
        // this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        // let noteValue = rowData.data.StudyNotes;
        // noteValue = noteValue !== null ? noteValue : '';
        // if (IsEditedNote) {
        //   const noteArray =
        //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
        //   noteArray.shift();
        //   noteValue = noteArray.join(',');
        // }
        // const newNoteValue =
        //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);
        // this.dataGrid?.instance.saveEditData();
        const formData = {
            dataItemCategoryId: this.studyAreaId,
            marketYearCategoryDataId: this.marketYearCategoryId,
            draftDataRowId: this.selectedCommentCellData.dataRowId,
            columnName: this.selectedCommentCellData.colValue,
            comment: newNote,
        };
        this.isLoadingService.add();
        this.studyService.addCommentForCell(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.notePopupVisible = false;
                // this.getSalesData();
                if (isLoad) {
                    this.loadCurrentStudy();
                }
                else {
                    this.noteSubmit = false;
                    this.newNoteForm.reset();
                    this.newRowForm.updateValueAndValidity();
                    this.getCellColumnsComments(this.selectedCommentCellData.colValue, this.selectedCommentCellData.dataRowId);
                }
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            // console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            brandSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.savePSCData('BrandSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getBrandSalesData();
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            brandSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffPSCData('BrandSales', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getBrandSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            const error = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try after sometimes.';
            this.alertService.danger(error);
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Channel:
                this.getChannelLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Company:
                this.getCompanyLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Brand:
                this.getBrandLists();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
    onCalculatedItemClick(e) {
        var _a, _b, _c, _d, _e, _f;
        // console.log(e.itemData);
        if (typeof e.itemData !== 'undefined') {
            const calculatedFiled = e.itemData;
            calculatedFiled.isCheck = !calculatedFiled.isCheck;
            calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';
            if (calculatedFiled.value === 'percentOfTotal') {
                // this.calculateTotalPercentageForCols();
                for (let i = 1; i <= 5; i++) {
                    (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.columnOption(`TotalPer${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.columnOption(`TotalPerCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else if (calculatedFiled.value === 'changePercent') {
                for (let i = 1; i <= 5; i++) {
                    (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.columnOption(`PerChange${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.columnOption(`PerChangeCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else {
                for (let i = 1; i <= 5; i++) {
                    (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.columnOption(`Cagr${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.columnOption(`CagrCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
        }
    }
    customSaveState(data, isChangeAutoSaveStatus) {
        // do not save state to db in case, states are emited too intensively
        clearTimeout(this.saveStateToDbTimeout);
        data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;
        // const userData = this.sharedService.getUserData();
        // this.initChart();
        // allow to save state only in case all requested data is available
        if (this.studyDataViewId) {
            this.stateData = data;
            this.stateChange.next(this.stateData);
            this.saveStateToDbTimeout = setTimeout(() => {
                this.sharedService
                    .setPivotState(this.studyDataViewId, 0, false, JSON.stringify(this.stateData), true)
                    .subscribe((data) => {
                    if (data) {
                        // this.alertService.info(
                        //   'The system will remember the last state!'
                        // );
                        // this.loadCurrentStudy();
                        // console.log(this.pivotStateId);
                        if (this.pivotStateId == 0) {
                            this.stateData = undefined;
                            this.getGridState();
                        }
                    }
                }, (error) => {
                    throw new Error(error);
                });
            }, 2000);
        }
    }
    customLoadState() {
        if (this.stateData) {
            this.setColsForDataGrid();
            return this.stateData;
        }
    }
    getGridState() {
        if (!this.stateData) {
            let stateData = undefined;
            this.sharedService
                .getPivotState(this.studyDataViewId, true)
                .subscribe((res) => {
                var _a;
                // in case state is not exists yet
                try {
                    const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
                    stateData = JSON.parse(stateRes.StateData);
                    if (stateData) {
                        this.pivotStateId = stateRes.PivotStateId;
                        this.stateData = stateData;
                        (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.state(this.stateData);
                        this.setColsForDataGrid();
                    }
                    // this.pivotStateId = stateRes.PivotStateId;
                }
                catch (_b) {
                    // stateData.state.fields = this.getGridFields();
                }
            });
        }
    }
    onDeleteCustomSaveState() {
        this.deleteResetConfirmPopup = true;
    }
    deleteCustomState() {
        if (this.studyDataViewId && this.pivotStateId) {
            this.sharedService
                .deletePivotState(this.studyDataViewId, this.pivotStateId)
                .subscribe((data) => data, (error) => {
                throw new Error(error);
            }, () => {
                // finally read all data again
                // this.readPivotOptionsAndData();
                // this.readPivotDataFromApi();
                const stateData = undefined;
                this.stateData = stateData;
                this.calculatorContextMenuItems =
                    this.commonService.getCalculatorFields();
                this.getBrandSalesData();
                this.deleteResetConfirmPopup = false;
                // this.getGridState();
            });
        }
        else {
            this.deleteResetConfirmPopup = false;
        }
    }
    onContentReady(e) { }
    onContextMenuPreparing(e) {
        if (typeof e.items === 'undefined') {
            e.items = [];
        }
        // e.items.push({
        //   beginGroup: true,
        //   text: 'Reset to Default',
        //   icon: 'fas fa-sync-alt',
        //   onItemClick: () => {
        //     this.deleteCustomState();
        //   },
        // });
        const isValidTarget = typeof e.target !== 'undefined' && e.target === 'content' ? true : false;
        if (isValidTarget) {
            const cells = e.row.cells;
            const rowIndex = e.rowIndex;
            const colIndex = e.columnIndex;
            const currentCell = typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;
            if (typeof currentCell !== 'undefined') {
                const foundValidCell = this.allowedCols.find((e) => e === currentCell.column.dataField);
                if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {
                    e.items.push({
                        beginGroup: true,
                        text: 'Comments',
                        icon: 'fas fa-comment',
                        onItemClick: () => {
                            // this.addNewCellComment(foundValidCell, colIndex, e.row);
                            this.getCellColumnsComments(currentCell.column.dataField, e.row.data.DataRowId);
                        },
                    });
                }
                // if (
                //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==
                //     'undefined' &&
                //   e.row.data[`${currentCell.column.dataField}_comment`]
                // ) {
                //   e.items.push({
                //     beginGroup: true,
                //     text: 'View Comments',
                //     icon: 'fas fa-bars',
                //     onItemClick: () => {
                //       this.getCellColumnsComments(
                //         currentCell.column.dataField,
                //         e.row.data.DataRowId
                //       );
                //     },
                //   });
                // }
            }
        }
    }
    setColsForDataGrid() {
        if (this.stateData) {
            this.volumeYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.calculatorContextMenuItems = this.stateData
                .calculatorContextMenuItems
                ? this.stateData.calculatorContextMenuItems
                : this.calculatorContextMenuItems;
        }
    }
    addNewCellComment(colValue, colIndex, row) {
        const currentCell = typeof row.cells[colIndex] !== 'undefined'
            ? row.cells[colIndex]
            : undefined;
        const colCaption = currentCell.column.caption;
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: currentCell.data.DataRowId,
            currentCell: currentCell,
            colCaption: colCaption,
        };
        this.notePopupVisible = true;
    }
    getAllColumnsComments() {
        this.studyService
            .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.allColsComments = data.Data;
            }
        });
    }
    getCellColumnsComments(colValue, dataRowId) {
        const currentLabel = this.myYears.find((item) => item.field == colValue);
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: dataRowId,
            currentCell: {},
            colCaption: currentLabel.year,
        };
        this.studyService
            .getCellCommentsForStudy(this.studyAreaId, this.marketYearCategoryId, dataRowId, colValue)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.selectedRowNotes = data.Data;
                this.viewNotePopup = true;
                if (this.selectedRowNotes.length == 0) {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = false;
                        }
                    });
                }
                else {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = true;
                        }
                    });
                }
            }
        });
    }
    checkHasComment(data) {
        if (typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&
            data.data[`${data.column.dataField}_comment`]) {
            return true;
        }
        return false;
    }
    deleteComment(data) {
        this.deleteCommentData = data;
        this.deleteCommentConfirmPopup = true;
        // this.viewNotePopup = false;
    }
    onDeleteCommentConfirmPopupHide() {
        this.deleteCommentData = {};
        this.deleteCommentConfirmPopup = false;
    }
    confirmDeleteComment() {
        this.isLoadingService.add();
        const colValue = this.deleteCommentData.ColumnName;
        const dataRowId = this.deleteCommentData.DraftDataRowId;
        this.studyService
            .deleteCellComment(this.deleteCommentData.MarketYearCategoryDataId, dataRowId, colValue, this.deleteCommentData.Id)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.deleteCommentConfirmPopup = false;
                this.getCellColumnsComments(colValue, dataRowId);
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteCommentConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
}
BrandSalesComponent.ɵfac = function BrandSalesComponent_Factory(t) { return new (t || BrandSalesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_7__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_common_service__WEBPACK_IMPORTED_MODULE_8__.CommonService)); };
BrandSalesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: BrandSalesComponent, selectors: [["app-brand-sales"]], viewQuery: function BrandSalesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 90, vars: 72, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId"], ["width", "100%", "id", "gridContainer", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", "onEditingStart", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "previousYears", "foreCastYear", "studyData", "setSelectedCurrency", "setVolumeYears", "setViewId"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col-md-6"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "Channel", "placeholder", "Select Channel", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Company", "placeholder", "Select Company", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Brand", "placeholder", "Select Brand", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", 4, "ngIf"], ["container", ".dx-viewport", 3, "width", "height", "showTitle", "title", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0", "h-100", "comment-container"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], [1, "card-footer"], [1, "row", "align-items-center", "justify-content-center"], [1, "col-md-8"], ["placeholder", "Enter your comment", "formControlName", "note", "rows", "2", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "col-md-4"], [1, "form-group", "text-center"], ["text", "Save Comment", "type", "default", 3, "disabled", "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Reset Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], ["width", "100%", "id", "gridContainer", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", "onEditingStart"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["columnRenderingMode", "standard"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Channel", 3, "width", "fixed", "allowEditing"], ["dataField", "Company", 3, "width", "fixed", "allowEditing"], ["dataField", "Brand", 3, "width", "fixed", "allowEditing"], ["alignment", "center", "cellTemplate", "EditCellTemplate", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate", 4, "ngFor", "ngForOf"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "refresh", "text", "Reset", 3, "onClick"], ["icon", "fas fa-calculator", "displayExpr", "name", "keyExpr", "value", 3, "dropDownOptions", "items", "onItemClick"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["alignment", "center", "cellTemplate", "EditCellTemplate", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["class", "has-comment", 4, "ngIf"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], [1, "has-comment"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [3, "innerHTML"], ["type", "text", 1, "form-control", 3, "formControlName"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "mt-0"], ["formControlName", "note", "rows", "2", 1, "form-control", 3, "ngClass"], ["icon", "plus", "text", "Save Comment", "type", "default", 3, "disabled", "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "CreatedBy", "dataType", "string"], ["dataField", "CreatedOn", "dataType", "date", 3, "format"], ["dataField", "Comment", "dataType", "string"]], template: function BrandSalesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, BrandSalesComponent_dx_data_grid_6_Template, 22, 35, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, BrandSalesComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-brand-sales-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Channel");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Company");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Brand");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](32, BrandSalesComponent_div_32_Template, 5, 2, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](37, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "dx-button", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function BrandSalesComponent_Template_dx_button_click_39_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](40, BrandSalesComponent_dx_popup_40_Template, 10, 13, "dx-popup", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_Template_dx_popup_visibleChange_41_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function BrandSalesComponent_Template_dx_popup_onHidden_41_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](44, BrandSalesComponent_dx_data_grid_44_Template, 6, 10, "dx-data-grid", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](50, "textarea", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_53_listener() { return ctx.onSaveNote(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "dx-popup", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_Template_dx_popup_visibleChange_54_listener($event) { return ctx.deleteCommentConfirmPopup = $event; })("onHidden", function BrandSalesComponent_Template_dx_popup_onHidden_54_listener() { return ctx.onDeleteCommentConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](58, "Are you sure you want to delete this comment?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_60_listener() { return ctx.confirmDeleteComment(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-button", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_61_listener() { return ctx.deleteCommentConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "dx-popup", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_Template_dx_popup_visibleChange_62_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](66, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](68, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_70_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "dx-button", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_71_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](72, "dx-popup", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_Template_dx_popup_visibleChange_72_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function BrandSalesComponent_Template_dx_popup_onHidden_72_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](75, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](76, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_78_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](79, "dx-button", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_79_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](80, "dx-popup", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function BrandSalesComponent_Template_dx_popup_visibleChange_80_listener($event) { return ctx.deleteResetConfirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](81, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](82, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](83, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](84, " Reset to Default will take you to last saved Data. Your unsaved data will be removed. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](85, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](86, "Are you sure you want to continue?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](87, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](88, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_88_listener() { return ctx.deleteCustomState(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](89, "dx-button", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function BrandSalesComponent_Template_dx_button_onClick_89_listener() { return ctx.deleteResetConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("previousYears", ctx.volumeYears)("foreCastYear", ctx.foreCastYear1)("studyData", ctx.studyData)("setSelectedCurrency", ctx.currentCurrency)("setVolumeYears", ctx.volumeYears)("setViewId", ctx.studyDataViewId);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.channelLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Channel));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.companyLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Company));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.brandLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Brand));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.currentYear);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedCommentCellData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate1"]("title", "View Comments for ", ctx.selectedCommentCellData.colCaption, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("height", 500)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](70, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteCommentConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteResetConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoLoadPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoStateStoringComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_21__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxDropDownButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxTooltipComponent, _brand_sales_preview_brand_sales_preview_component__WEBPACK_IMPORTED_MODULE_10__.BrandSalesPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_25__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.MaxLengthValidator], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJicmFuZC1zYWxlcy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 34343:
/*!*******************************************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/european-country-sales/european-country-sales-preview/european-country-sales-preview.component.ts ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EuropeanCountrySalesPreviewComponent": () => (/* binding */ EuropeanCountrySalesPreviewComponent)
/* harmony export */ });
/* harmony import */ var D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exceljs */ 34498);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataFieldArea.enum */ 29368);
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/model/userStateAndSetttings.model */ 69893);
/* harmony import */ var src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/model/enums/specialValueType.enum */ 59591);
/* harmony import */ var devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme/excel_exporter */ 47081);
/* harmony import */ var src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/guard/commonHelper */ 83518);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/model/enums/computingType.enum */ 11892);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shc/sub/shc-preview/preview-top-menu/preview-top-menu.component */ 57952);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! devextreme-angular/core */ 85915);





























function EuropeanCountrySalesPreviewComponent_div_5_div_2_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "In Direction");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "dx-select-box", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function EuropeanCountrySalesPreviewComponent_div_5_div_2_div_10_Template_dx_select_box_valueChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
      return ctx_r7.percentInDirection = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", ctx_r6.summaryDisplayModeItems)("value", ctx_r6.percentInDirection);
  }
}

const _c0 = function () {
  return ["Subtotals", "Grand Totals"];
};

function EuropeanCountrySalesPreviewComponent_div_5_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute '% Of Total':");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](7, "Based on");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function EuropeanCountrySalesPreviewComponent_div_5_div_2_Template_dx_radio_group_valueChange_9_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r9.percentOfTotalBasedOn = $event;
    })("onValueChanged", function EuropeanCountrySalesPreviewComponent_div_5_div_2_Template_dx_radio_group_onValueChanged_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r11.onBasedOnChange(false);
    })("onInitialized", function EuropeanCountrySalesPreviewComponent_div_5_div_2_Template_dx_radio_group_onInitialized_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r12.onBasedOnChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](10, EuropeanCountrySalesPreviewComponent_div_5_div_2_div_10_Template, 5, 2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "dx-button", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function EuropeanCountrySalesPreviewComponent_div_5_div_2_Template_dx_button_onClick_14_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r13.addPercentOfTotalsToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](5, _c0))("value", ctx_r4.percentOfTotalBasedOn);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx_r4.summaryDisplayModeItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120)("disabled", false);
  }
}

function EuropeanCountrySalesPreviewComponent_div_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesPreviewComponent_div_5_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r14.isPercentOfTotalPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, EuropeanCountrySalesPreviewComponent_div_5_div_2_Template, 15, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 250)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r1.isPercentOfTotalPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c1 = function (a0, a1) {
  return [a0, a1];
};

function EuropeanCountrySalesPreviewComponent_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute change, %:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function EuropeanCountrySalesPreviewComponent_div_6_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r18.percentOfChangeComputeType = $event;
    })("onValueChanged", function EuropeanCountrySalesPreviewComponent_div_6_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r20.onComputeTypeChange(false);
    })("onInitialized", function EuropeanCountrySalesPreviewComponent_div_6_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r21.onComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function EuropeanCountrySalesPreviewComponent_div_6_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r22.addPrecentOfChangeToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r16.computingType.FirstYear, ctx_r16.computingType.PreviousYear))("value", ctx_r16.percentOfChangeComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function EuropeanCountrySalesPreviewComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesPreviewComponent_div_6_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r24);
      const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r23.isPercentOfChangePopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, EuropeanCountrySalesPreviewComponent_div_6_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r2.isPercentOfChangePopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

function EuropeanCountrySalesPreviewComponent_div_7_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute CAGR:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function EuropeanCountrySalesPreviewComponent_div_7_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r27.cagrComputeType = $event;
    })("onValueChanged", function EuropeanCountrySalesPreviewComponent_div_7_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r29.onCagrComputeTypeChange(false);
    })("onInitialized", function EuropeanCountrySalesPreviewComponent_div_7_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r30.onCagrComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function EuropeanCountrySalesPreviewComponent_div_7_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r31.addCAGRToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r25.computingType.FirstYear, ctx_r25.computingType.PreviousYear))("value", ctx_r25.cagrComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function EuropeanCountrySalesPreviewComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesPreviewComponent_div_7_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r33);
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r32.isCagrPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, EuropeanCountrySalesPreviewComponent_div_7_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r3.isCagrPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c2 = function () {
  return {
    showColumnFields: true,
    showDataFields: true,
    showFilterFields: true,
    showRowFields: true,
    allowFieldDragging: true,
    visible: true
  };
};

const _c3 = function () {
  return {
    enabled: true
  };
};

class EuropeanCountrySalesPreviewComponent {
  constructor(route, isLoadingService, studyService, alertService, sharedService) {
    this.route = route;
    this.isLoadingService = isLoadingService;
    this.studyService = studyService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.studyData = [];
    this.currentYear = 0;
    this.foreCastYear = 0;
    this.previousYears = [];
    this.previewData = [];
    this.saveStateEnabled = false;
    this.gridFields = [];
    this.previewGridKey = '';
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.studyAreaId = 0;
    this.selectedCurrency = {
      Id: 0,
      IsActive: false,
      Name: ''
    };
    this.studyType = '';
    this.volumeYears = [];
    this.viewId = 0;
    this.currencyConversionTypeSelected = 1;
    this.computingType = src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType;
    this.eventsCustomAction = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.pivotGridNoDataMessage = '';
    this.isPercentOfTotalPopup = false;
    this.isPercentOfChangePopup = false;
    this.isCagrPopup = false;
    this.firstAvailableId = 0;
    this.yearDataFieldName = '';
    this.isHeaderFilterLoading = false;
    this.canCallSaveState = false;
    this.adminSetNewState = false;
    this.pivotSummaryDisplayModesSubtotals = [{
      id: undefined,
      name: 'Same as the Data Fields'
    }, {
      id: 'percentOfColumnTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowTotal',
      name: 'Always Rows'
    }];
    this.pivotSummaryDisplayModesGrandTotals = [{
      id: 'percentOfColumnGrandTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowGrandTotal',
      name: 'Always Rows'
    }, {
      id: 'percentOfGrandTotal',
      name: 'Table (Absolute) Grand Total'
    }];
    this.shownYears = undefined;
    this.invisibleFields = [];
    this.saveStateToDbTimeout = setTimeout(() => {}, 0);
    this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.shownYearsPrev = undefined;
    this.isAdmin = false;
    this.pivotStateId = 0;
    this.percentOfTotalBasedOn = 'Subtotals';
    this.percentInDirection = '';
    this.percentOfChangeComputeType = '';
    this.cagrComputeType = '';
    this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.customSaveState = this.customSaveState.bind(this);
    this.customLoadState = this.customLoadState.bind(this);
    this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridOptions(); // this.stateData = new UserStateAndSetttings();
  }

  set setPreviewData(data) {
    if (data) {
      this.previewData = data;
    }
  }

  set setGridFields(data) {
    if (data) {
      this.gridFields = data;
    }
  }

  set setPreviewGridKey(data) {
    if (data) {
      this.previewGridKey = data;
    }
  }

  set setSelectedCurrency(data) {
    if (data) {
      this.selectedCurrency = {
        Id: data.CurrencyId,
        IsActive: true,
        Name: data.CurrencyName,
        CurrencyCode: data.CurrencyCode,
        CurrencyName: data.CurrencyName
      };
      this.currencyDropdownSelected = this.selectedCurrency;
    }
  }

  set setStudyType(data) {
    if (data) {
      this.studyType = data;
    }
  }

  set setVolumeYears(data) {
    if (data) {
      this.volumeYears = data;
    }
  }

  set setViewId(data) {
    if (data) {
      this.viewId = data;
      this.getPivotSettings();
      this.getPivotState();
    }
  }

  ngOnInit() {
    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  ngOnChanges(changes) {
    this.getPreviewData(this.studyData);
  }

  getPivotSettings() {
    this.sharedService.getPivotSettings(this.viewId).subscribe(res => {
      this.pivotGridOptions = res.Data;

      if (this.pivotGridOptions) {
        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      }
    });
  }

  getPivotState() {
    if (!this.stateData) {
      let stateData = undefined;
      this.sharedService.getPivotState(this.viewId).subscribe(res => {
        // in case state is not exists yet
        try {
          const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
          stateData = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.realMerge(new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(), JSON.parse(stateRes.StateData));
          this.pivotStateId = stateRes.PivotStateId;
        } catch (_a) {
          stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(); // stateData.state.fields = this.getGridFields();
        }

        this.directDatasourceRenderPivot(stateData);
      });
    } else {
      this.directDatasourceRenderPivot(this.stateData);
    }
  }

  directDatasourceRenderPivot(stateData) {
    var _this = this;

    return (0,D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (_this.pivotGridOptions.settings.isCube) {// let token = await this.getAzureAnalysisToken();
        // let cubesStore = CubeStoreHelper.setCubeStore(
        //   this.pivotGridOptions.settings.cubeSettings.catalog,
        //   this.pivotGridOptions.settings.cubeSettings.cube,
        //   token,
        //   this.devEndpoint
        // );
        // this.pivotGridOptions.pivotGridSource.store = cubesStore;
        // this.pivotGridDataSource = new PivotGridDataSource(
        //   this.pivotGridOptions.pivotGridSource as any
        // );
        // setTimeout(() => {
        //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);
        // }, 5000);
        // this.saveStateEnabled = true;
        // if (stateData.settings) {
        //   if (!stateData.settings.currency) {
        //     stateData.settings.currency =
        //       this.pivotGridOptions.pivotGridDefaultValues.currency;
        //   }
        //   if (!stateData.settings.currencyConversionType) {
        //     stateData.settings.currencyConversionType =
        //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
        //   }
        //   if (!stateData.settings.selectedYear) {
        //     stateData.settings.selectedYear.PeriodKey = 2021;
        //   }
        // }
        // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.stateData = stateData;
        // this.fillPivotCube();
        // setTimeout(() => {
        //   this.canCallSaveState = true;
        // }, 300);
      } else {
        if (stateData.settings) {
          if (!stateData.settings.currency) {
            stateData.settings.currency = _this.pivotGridOptions.pivotGridDefaultValues.currency;
          }

          if (!stateData.settings.currencyConversionType) {
            stateData.settings.currencyConversionType = _this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
          }

          if (!((_a = stateData.settings.selectedYear) === null || _a === void 0 ? void 0 : _a.PeriodKey)) {
            // stateData.settings.selectedYear = await this.getLatestAccessibleYear(
            //   this.sharedService.getUserData().userId,
            //   this.requestedView.databaseId,
            //   this.requestedView.viewId
            // );
            stateData.settings.selectedYear = _this.currentYear;
          } // if (!stateData.settings.unitOfVolume) {
          //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(
          //     this.requestedView.databaseId
          //   );
          // }


          if (!stateData.settings.unitOfMass) {
            // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(
            //   this.requestedView.databaseId
            // );
            stateData.settings.unitOfMass = {
              Id: 105,
              Name: 'Thousand Tonnes'
            };
          }
        } // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );


        _this.stateData = stateData;

        if (_this.previewData && _this.previewData.length) {
          //get all invisible fields
          _this.invisibleFields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => f.visible === false); //filter invisible fields

          _this.pivotGridOptions.pivotGridSource.fields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => !f.visible || !f.isCalculated); //get count of visible fields for calculated fields ids

          _this.firstAvailableId = _this.pivotGridOptions.pivotGridSource.fields.length; // remove all invisible data from the datasource

          if (_this.invisibleFields && _this.invisibleFields.length > 0) {
            for (const invisibleField of _this.invisibleFields) {
              _this.previewData.forEach(obj => {
                delete obj[invisibleField.dataField];
              });
            }
          }

          _this.fillPivot(_this.pivotGridOptions, _this.previewData);
        } else {
          _this.readPivotDataFromApi();
        }
      }
    })();
  }

  customSaveState(data, isChangeAutoSaveStatus) {
    var _a; // do not save state to db in case, states are emited too intensively


    clearTimeout(this.saveStateToDbTimeout);
    this.canCallSaveState = true; // const userData = this.sharedService.getUserData();
    // this.initChart();
    // allow to save state only in case all requested data is available

    if (this.viewId && this.canCallSaveState && this.pivotGridOptions && this.stateData) {
      this.stateData.state = data;
      this.stateChange.next(this.stateData); // find all shown years and reload pivot grid on change

      const yearField = this.stateData.state.fields.filter(f => f.dataField === this.yearDataFieldName);
      const hasCagrOrChange = this.stateData.settings.cagrState.isSet || this.stateData.settings.changePercentState.isSet;

      if (yearField && hasCagrOrChange) {
        const pivotGridInstance = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance;
        const pivotFridDataSource = pivotGridInstance.getDataSource();
        const areaIndex = yearField[0].areaIndex;
        const uniqArrByText = lodash__WEBPACK_IMPORTED_MODULE_3__.uniqBy(pivotGridInstance._dataController._columnsInfo[areaIndex], 'text');
        this.shownYears = uniqArrByText.map(t => parseInt(t.text)); // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists

        if (yearField[0].sortOrder === 'desc') {
          pivotFridDataSource.field(this.yearDataFieldName, {
            sortOrder: 'asc'
          });
          pivotFridDataSource.load();
        }

        if (!lodash__WEBPACK_IMPORTED_MODULE_3__.isEqual(this.shownYears, this.shownYearsPrev)) {
          this.shownYearsPrev = this.shownYears;
          pivotFridDataSource.load();
        }
      } // in case user is NOT admin and has disable automatic saving state or remember latest state
      else if (!isChangeAutoSaveStatus) {
        if (this.stateData.settings.rememberLatestState == undefined) {
          this.stateData.settings.rememberLatestState = this.pivotGridOptions.canSaveUserState;
        }

        if (this.stateData.settings.rememberLatestState == false) {
          return;
        }
      }

      this.saveStateToDbTimeout = setTimeout(() => {
        this.sharedService.setPivotState(this.viewId, 0, this.isAdmin, JSON.stringify(this.stateData)).subscribe(data => {
          if (data && this.pivotGridOptions.canSaveDefaultStateAndOptions && this.isAdmin) {
            this.alertService.info('The system will remember the last state!'); // after save state, save also settings

            this.saveSettings(this.viewId, this.pivotGridOptions); // set can save default state to false

            this.pivotGridOptions.canSaveDefaultStateAndOptions = false;
          }
        }, error => {
          throw new Error(error);
        });
      }, 2000);
    }
  }

  customLoadState() {
    if (this.stateData) {
      return this.stateData.state;
    }
  }

  deleteCustomState() {
    this.adminSetNewState = false;

    if (this.viewId && this.pivotStateId) {
      this.sharedService.deletePivotState(this.viewId, this.pivotStateId).subscribe(data => data, error => {
        throw new Error(error);
      }, () => {
        // finally read all data again
        // this.readPivotOptionsAndData();
        // this.readPivotDataFromApi();
        const stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings();
        this.directDatasourceRenderPivot(stateData);
      });
    }
  }

  saveSettings(currentlySelectedViewId, optionsDataSource) {
    let saveResult = false;
    const optionsDataSourceTemp = Object.assign({}, optionsDataSource);
    optionsDataSourceTemp.pivotGridSource.fields = optionsDataSourceTemp.pivotGridSource.fields.filter(f => !f.isCalculated); // set store to empty, system will read fresh data from backend next time

    optionsDataSourceTemp.pivotGridSource.store = [];
  }

  getPreviewData(studyData) {
    const previewData = [];
    studyData.map(item => {
      this.previousYears.map(year => {
        previewData.push({
          Market: item.Market,
          Company: item.Company,
          Brand: item.Brand,
          Year: year.year,
          Value: item[year.field]
        });
      });
      previewData.push({
        Market: item.Market,
        Company: item.Company,
        Brand: item.Brand,
        Year: this.currentYear,
        Value: item.CurrentYear
      }); // previewData.push({
      //   Market: item.Market,
      //   Company: item.Company,
      //   Brand: item.Brand,
      //   Year: this.foreCastYear,
      //   Value: item.Forecast1,
      // });
    }); // console.log(previewData);
    // this.pivotGridDataSource = new PivotGridDataSource({
    //   store: previewData,
    //   fields: this.getGridFields(),
    // });

    this.previewData = previewData;

    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  getGridFields() {
    return this.gridFields = [{
      dataField: 'Market',
      area: 'row',
      caption: 'Market',
      dataType: 'string',
      id: 0
    }, {
      dataField: 'Company',
      area: 'row',
      caption: 'Company',
      dataType: 'string',
      id: 1
    }, {
      dataField: 'Brand',
      area: 'row',
      caption: 'Brand',
      dataType: 'string',
      id: 2
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 3,
      caption: 'Sales',
      dataField: 'Value',
      dataFieldType: 'Value',
      width: 80,
      dataType: 'number',
      summaryType: 'sum',
      summaryDisplayMode: 'none',
      format: {
        type: 'fixedPoint',
        precision: 1
      },
      area: 'data'
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 4,
      caption: 'Year',
      dataField: 'Year',
      width: 30,
      dataType: 'string',
      summaryDisplayMode: 'none',
      area: 'column'
    }];
  }

  readPivotDataFromApi() {
    this.isLoadingService.add();
    this.yearDataFieldName = 'Year';
    this.studyService.getPscStudyData('EuropeanCountriesSales', this.marketYearCategoryId, this.studyProjectMarketYearId, typeof this.currencyDropdownSelected !== 'undefined' ? this.currencyDropdownSelected.Id : 0, typeof this.unitOfMassDropdownSelected !== 'undefined' ? this.unitOfMassDropdownSelected.Id : 0, typeof this.currencyConversionTypeSelected !== 'undefined' ? this.currencyConversionTypeSelected : 0).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const studyDataObj = res.Data;
        const studyData = studyDataObj['EuropeanCountriesSales'];
        const previewData = [];
        let index = 0;
        studyData.map((item, i) => {
          this.volumeYears.map(d => {
            this.gridFields.map(field => {
              if (typeof previewData[index] === 'undefined') {
                previewData[index] = {};
              }

              previewData[index][field.dataField] = item[field.dataField];

              if (field.dataField === 'Year') {
                previewData[index][field.dataField] = d.year;
              }

              if (field.dataField === 'Value') {
                previewData[index][field.dataField] = item[d.field];
              }
            });
            index++;
          });
        });
        this.previewData = previewData; // this.pivotGridDataSource = new PivotGridDataSource({
        //   store: this.previewData,
        //   fields: this.gridFields,
        // });

        if (typeof this.pivotGridOptions !== 'undefined') {
          this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
          this.pivotGridOptions.pivotGridSource.store = this.previewData;
          this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }

        this.fillPivot(this.pivotGridOptions, this.previewData); // when pivot data is loaded allow with small delay save state to the database

        setTimeout(() => {
          this.canCallSaveState = true;
        }, 300); // console.log(this.previewData);

        this.isLoadingService.remove();
      } else {
        this.alertService.danger(res.Data);
      }
    }, err => {
      const errorShow = typeof err.error !== 'undefined' ? err.error : 'Something went wrong. Please try again later.';
      this.alertService.danger(errorShow);
      this.isLoadingService.remove();
    });
  }

  getDataFieldName(fieldName) {
    if (fieldName == 'ProductTypeSales') {
      return 'ProductTypeSalesSHC';
    }

    return fieldName;
  }

  onOptionChanged(e) {}

  onInitialized(e) {}

  cellPrepared(e) {
    var _a, _b, _c, _d; // customize change % columns captions
    // console.log(this.stateData?.settings.changePercentState.computingType);


    const shownYearsInPivot = this.shownYears;

    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {
      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex].toString() + ' to ' + shownYearsInPivot[yearIndex].toString();
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      } //customize cagr columns captions


      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex] + ' to ' + shownYearsInPivot[yearIndex];
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      }
    }

    if (e.area === 'data') {
      if (e.cell.value) {
        e.cell.value.hasCd && e.cellElement.classList.add('pivot-grid-cell-has-cd');
      }
    }
  }

  onContentReady(e) {
    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource && this.pivotGridOptions.pivotGridSource.fields) {
      const calculatedFields = this.pivotGridOptions.pivotGridSource.fields.filter(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      for (const calculatedField of calculatedFields) {
        this.addCloseButtonToCalculatedField(calculatedField.id, calculatedField.calculatedFieldType);
      }
    } // change style for no data message


    const noDataElement = e.component.element().querySelector('.dx-pivotgrid-nodata');

    if (noDataElement) {
      setTimeout(() => {
        if (this.pivotGridNoDataMessage) {
          noDataElement.classList.add('noDataMessage');
        } else {
          noDataElement.classList.remove('noDataMessage');
        }
      }, 100);
    }

    if (this.pivotGrid && this.stateData && this.stateData.state) {// Allow next rows if you want to enable disabling pivot during waiting for component response
      //this.pivot.disabled = true;
      // not allow to user change state too fast, pivot component needs some time to save emit state
      //setTimeout(() => { this.pivot.disabled = false; }, 1000)
    }
  }

  onContextMenuPreparing(e) {
    // this.pivot.disabled = true;
    this.customizeContextMenu(e); //if (e.area == "row" || e.area == "column") {
    //    let id = e.columnIndex + "" + e.rowIndex;
    //    let tooltip = $("<span></span>").append($("<span id='" + id + "'></span>").html("")).appendTo(e.cellElement);
    //    let field = $("#" + id).closest('td');
    //    field.attr('title', e.cell.text);
    //}
  }

  customizeContextMenu(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    this.updateDefaultContextMenuTextsAndIcons(e);

    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {
      e.items.push({
        beginGroup: true,
        text: 'Delete Calculated Field',
        icon: 'fa fa-trash-alt',
        onItemClick: () => {
          const fieldToDelete = e.field;

          if (typeof this.stateData !== 'undefined') {
            switch (fieldToDelete.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }

          this.deleteCalculatedField(e.field.id);
        }
      });
      e.items.push({
        beginGroup: true,
        text: 'Edit Calculated Field',
        icon: 'fa fa-pencil-alt',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            switch (e.field.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.isPercentOfTotalPopup = true;
                this.stateData.settings.percentOfTotalState.summaryDisplayMode =  false || '';
                this.pivotSummaryDisplayModesSubtotals[0].id = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.isPercentOfChangePopup = true;
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.isCagrPopup = true;
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }
        }
      });
      return;
    }

    let openMenuItems = [];

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.menuSettings.isCurrencySelection) {
      openMenuItems.push({
        icon: 'fa fa-money',
        text: 'Change Currency',
        onItemClick: () => {
          this.eventsCustomAction.next('currencySelector');
        }
      });
    }

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.menuSettings.isCurrencyConversion) {
      openMenuItems.push({
        icon: 'fa fa-exchange-alt',
        text: 'Constant',
        onItemClick: () => {
          this.eventsCustomAction.next('currencyConversionSelector');
        }
      });
    }

    if ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.menuSettings.isUnitsOfVolume) {
      openMenuItems.push({
        icon: 'fa fa-fill-drip',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('massUnitSelector');
        }
      });
    }

    if ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.menuSettings.isUnitsOfMass) {
      openMenuItems.push({
        icon: 'fa fa-balance-scale',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('volumeUnitSelector');
        }
      });
    }

    e.items.push({
      beginGroup: true,
      text: 'Reset to Default',
      icon: 'fas fa-sync-alt',
      onItemClick: () => {
        this.deleteCustomState();
      }
    });
    e.items.push({
      beginGroup: true,
      text: 'Adjust Parameters',
      icon: 'fa fa-sliders-h',
      items: openMenuItems
    });

    if (e.field && e.field.area === 'data' && this.enabledInContextMenu(e.field)) {
      let calculatedFieldsItems = [];

      if ((_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.settings.calculatedFields.isPercentOfTotal) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal,
          onItemClick: () => {
            var _a, _b;

            this.isPercentOfTotalPopup = true;
            this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

            if (((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.percentOfTotalState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.percentOfTotalState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.isPercentOfChange) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent,
          onItemClick: () => {
            var _a;

            this.isPercentOfChangePopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.changePercentState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.changePercentState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_g = this.pivotGridOptions) === null || _g === void 0 ? void 0 : _g.settings.calculatedFields.isCagr) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr,
          onItemClick: () => {
            var _a;

            this.isCagrPopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.cagrState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.cagrState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      e.items.push({
        beginGroup: true,
        text: 'Add Calculated Field',
        icon: 'fa fa-calculator',
        items: calculatedFieldsItems
      });
    } // show only case if exist two or more datafields


    if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType)).length >= 2) {
      const dataFieldsHeaders = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'Rows' : 'Columns';
      e.items.push({
        beginGroup: true,
        text: 'Show Data Field Headers in ' + dataFieldsHeaders,
        icon: 'fa fa-table',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            this.stateData.settings.dataFieldArea = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.row : src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column;
          }
        }
      });
    }
  }

  deleteCalculatedField(fieldId) {
    var _a, _b;

    (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.splice(this.pivotGridOptions.pivotGridSource.fields.map(m => m.id).indexOf(fieldId), 1);
    this.firstAvailableId--;

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) {
      this.readPivotDataFromApi();
    } else {
      if (typeof this.pivotGridOptions !== 'undefined') {
        this.fillPivot(this.pivotGridOptions, this.previewData);
      }
    }
  }

  updateDefaultContextMenuTextsAndIcons(e) {
    var _a;

    let rowName = undefined;
    let rowCaption;

    if ((_a = e.cell) === null || _a === void 0 ? void 0 : _a.path) {
      if (e.cell && e.area === 'row') {
        const path = e.cell.path.length - 1;
        rowName = e.rowFields[path].dataField;
        rowCaption = e.rowFields[path].caption;
      } else if (e.cell && e.area === 'column') {
        const path = e.cell.path.length - 1;
        rowName = e.columnFields[path].dataField;
        rowCaption = e.columnFields[path].caption;
      }

      const expandAll = e.items.find(f => f.text.includes('Expand All'));

      if (expandAll) {
        expandAll.icon = 'fas fa-plus';
        expandAll.text = 'Expand' + ' ' + rowCaption;
      }

      const collapseAll = e.items.find(f => f.text.includes('Collapse All'));

      if (collapseAll) {
        collapseAll.icon = 'fas fa-minus';
        collapseAll.text = 'Collapse' + ' ' + rowCaption;
      }
    }

    const fieldChooser = e.items.find(f => f.text.includes('Show Field Chooser'));

    if (fieldChooser) {
      fieldChooser.text = 'FieldChooser Text';
    }

    const exportToExcel = e.items.find(f => f.text.includes('Export to'));

    if (exportToExcel) {
      exportToExcel.text = 'Export to excel';
    }

    const sorts = e.items.filter(f => f.text.includes('Sort'));

    if (sorts) {
      for (let sort of sorts) {
        sort.icon = 'fas fa-sort';
      }
    }
  }

  enabledInContextMenu(field) {
    if (field.dataFieldType === src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.AvgPrice) {
      return false;
    } else {
      return true;
    }
  }

  addCloseButtonToCalculatedField(fieldId, datafieldType) {
    const calculatedFieldObj = $(".dx-area-field-content:contains('" + datafieldType + "')").append("<i id='" + src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.removeAllSpaces(datafieldType) + "' class='closeButton fas fa-times-circle'></i>");
    calculatedFieldObj.parent().parent().css('padding-right', '0').css('margin-right', '0 !important');
    calculatedFieldObj.children().off().on('click', () => {
      if (typeof this.stateData !== 'undefined') {
        switch (datafieldType) {
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
            this.stateData.settings.percentOfTotalState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
            this.stateData.settings.changePercentState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
            this.stateData.settings.cagrState.isSet = false;
            break;
        }
      }

      this.deleteCalculatedField(fieldId);
    });
  }

  currencySelectionChanged(currency) {
    this.currencyDropdownSelected = currency; // this.stateData.settings.currency = currency;

    this.readPivotDataFromApi(); // // on currency change update % of total caption if exists
    // const percentOfTotalField =
    //   this.pivotGridOptions.pivotGridSource.fields.find(
    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal
    //   );
    // if (percentOfTotalField) {
    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();
    // }
  }

  currencyConversionSelectionChanged(currencyConversionType) {
    this.currencyConversionTypeSelected = currencyConversionType; // this.stateData.settings.currencyConversionType = currencyConversionType;

    this.readPivotDataFromApi();
  }

  massUnitSelectionChanged(unitOfMass) {
    this.unitOfMassDropdownSelected = unitOfMass; // this.stateData.settings.unitOfMass = unitOfMass;

    this.readPivotDataFromApi();
  }

  getUserSettings() {
    const userSettings = {
      currency: {
        Id: this.selectedCurrency.Id,
        Code: this.selectedCurrency.CurrencyCode,
        Name: this.selectedCurrency.CurrencyName
      },
      currencyConversionType: 1,
      unitOfMass: {
        Id: 103,
        Name: 'Thousand Lbs'
      },
      unitOfMeasure: {
        Id: 101,
        Name: 'Metric Tonnes'
      },
      unitOfVolume: {
        Id: 7,
        Name: 'Quart (US)'
      },
      selectedYear: {
        PeriodKey: this.currentYear,
        Name: this.currentYear.toString()
      },
      percentOfTotalState: {
        isSet: true,
        dataField: 'Value',
        basedOn: 'Subtotals',
        summaryDisplayMode: 'percentOfColumnTotal'
      },
      changePercentState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'Previous (Shown) Year'
      },
      cagrState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'First (Shown) Year'
      },
      dataFieldArea: 'column',
      userChartSetting: {
        dataFieldsDisplayMode: 'singleAxis',
        chartType: 'Column'
      },
      isReducedDataSource: false,
      rememberLatestState: true
    };
    return userSettings;
  }

  exportToExcel() {
    var _a, _b;

    this.getUserSettings();
    this.studyService.changeExcelLoading(true);
    let title = '...';
    const menuSettings = (_b = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.menuSettings;
    const pivotFields = this.pivotGridDataSource.fields();
    const userSettings = this.getUserSettings();
    let finalData;

    if (this.previewData[0].hasOwnProperty('Year')) {
      finalData = this.previewData.sort((a, b) => a.Year - b.Year);
    } else {
      finalData = this.previewData;
    }

    this.studyService.exportToExcel(finalData, pivotFields, userSettings, title, menuSettings, 0).subscribe(res => {
      let fileName = 'PivotTest';

      if (title.length > 3) {
        fileName = title.split(' ').join('');
        fileName = fileName.split('-').join('_');
      }

      var file = new Blob([res], {
        type: 'application/vnd.ms-excel'
      });
      var fileURL = URL.createObjectURL(file);
      let a = document.createElement('a');
      document.body.appendChild(a);
      a.style.display = 'none';
      a.href = fileURL;
      a.target = '_blank';
      a.download = `${fileName}.xlsx`;
      a.click();
      a.remove();
      this.studyService.changeExcelLoading(false);
    }, error => {
      this.studyService.changeExcelLoading(false);
      console.log(error);
    });
  }

  exportToCvs() {
    this.studyService.changeExcelLoading(true);
    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    this.studyService.exportToCsv(this.previewData, fileName);
  }

  exportToShanptshot() {
    var _a;

    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_2__.Workbook();
    const worksheet = workbook.addWorksheet('Main sheet');
    (0,devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__.exportPivotGrid)({
      component: (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance,
      worksheet: worksheet,
      customizeCell: function (options) {
        const excelCell = options;
        excelCell.excelCell.font = {
          name: 'Calibri',
          size: 11
        };
        excelCell.excelCell.alignment = {
          horizontal: 'left',
          vertical: 'top'
        };
      }
    }).then(function () {
      workbook.xlsx.writeBuffer().then(function (buffer) {
        (0,file_saver__WEBPACK_IMPORTED_MODULE_4__.saveAs)(new Blob([buffer], {
          type: 'application/octet-stream'
        }), fileName + '.xlsx');
      });
    });
  }

  fillPivot(pivotGridOptions, pivotData) {
    var _a;

    this.saveStateEnabled = false;
    const selectedYear = this.stateData ? this.stateData.settings.selectedYear : this.currentYear;

    if (pivotGridOptions && ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings)) {
      // If is visible like default, add % of total to pivot
      if (this.stateData.settings.percentOfTotalState.isSet) {
        this.addPercentOfTotalsToPivot(true);
      } // If is visible like default, add change % to pivot


      if (this.stateData.settings.changePercentState.isSet) {
        this.addPrecentOfChangeToPivot(true);
      } // If is visible like default, add CAGR to pivot


      if (this.stateData.settings.cagrState.isSet) {
        this.addCAGRToPivot(true);
      }

      const pivotGridSource = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridSource();
      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;
      pivotGridSource.store = pivotData; // make copy of datasource without reference to old object

      let sourceCopy = lodash__WEBPACK_IMPORTED_MODULE_3__.cloneDeep(pivotGridSource); // if administrator set default sorting to true do not use any special sorting

      if (!pivotGridOptions.settings.useDefaultSorting) {
        // if some special sorting is applied
        if (pivotGridOptions.settings.specialSorting && pivotGridOptions.settings.specialSorting.length) {
          for (let specialSorting of pivotGridOptions.settings.specialSorting) {
            if (specialSorting.fieldName) {
              let orderAray = [];

              if (pivotData) {
                let rowData = 0;

                for (let row of pivotData) {
                  // if (row.Year == selectedYear.PeriodKey) {
                  // in case value datafield is not exists, must exists unit
                  rowData = row.Value === undefined ? row.Unit : row.Value;

                  if (orderAray.some(r => r.field === row[specialSorting.fieldName])) {
                    orderAray.find(r => r.field === row[specialSorting.fieldName]).valueSum += rowData;
                  } else {
                    orderAray.push({
                      field: row[specialSorting.fieldName],
                      valueSum: rowData
                    });
                  } // }

                }

                orderAray = orderAray.sort((a, b) => b.valueSum - a.valueSum).map(m => m.field);
                orderAray.forEach((item, index) => {
                  if (item.startsWith(specialSorting.beginningWith)) {
                    orderAray.push(orderAray.splice(index, 1)[0]);
                  }
                });
                const sortingField = sourceCopy.fields.find(f => f.dataField === specialSorting.fieldName);

                if (sortingField) {
                  sortingField.sortOrder = 'asc';

                  sortingField.sortingMethod = (b, a) => {
                    // if (!this.isHeaderFilterLoading) {
                    //   for (const item of orderAray) {
                    //     if (a.value === item) {
                    //       return 1;
                    //     }
                    //     if (b.value === item) {
                    //       return -1;
                    //     }
                    //   }
                    // }
                    return b.value.localeCompare(a.value);
                  };
                }
              }
            }
          }
        } else {
          this.applySortingRolesByYear();
        }
      }

      if (this.pivotGridDataSource) {
        this.pivotGridDataSource.dispose();
      } // check if source contains dataType property and set visibility to false


      if (pivotGridSource.store && pivotGridSource.store.length && pivotGridSource.store[0].DataType) {
        let dataType = sourceCopy.fields.filter(d => d.dataField === 'DataType');
        dataType[0].visible = false;
      } // check all datafields if contains an exception in calculating


      const allDatafields = sourceCopy.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false);

      for (let field of allDatafields) {
        let newField = this.returnSpecialSumamryField(field);

        if (newField) {
          sourceCopy.fields.push(newField);
          field.visible = false;
        }
      } // remove unused properties


      for (let field of sourceCopy.fields) {
        // remove group properties when group is empty
        if (field.groupName == '') {// delete field.groupName;
          // delete field.groupIndex;
        } // in case fileld is grouped field parse index to int
        else if (field.groupName && field.groupName.length > 0) {
          let groupIndex = field.groupIndex ? parseInt(field.groupIndex.toString()) : 0;
          field.groupIndex = groupIndex;
        }
      }

      if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.settings.groupedFields) {
        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {
          let field = {
            groupName: groupedField.groupName,
            area: groupedField.area
          };
          sourceCopy.fields.push(field);
        }
      }

      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](sourceCopy); // this solves alphabetical filtering in filters

      setTimeout(() => {
        var _a;

        const source = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
        const getFieldValues = source.getFieldValues;
        this.isHeaderFilterLoading = false;
        let that = this;

        source.getFieldValues = function () {
          that.isHeaderFilterLoading = true;
          return getFieldValues.apply(this, arguments).always(function () {
            that.isHeaderFilterLoading = false;
          });
        };
      }, 1);
      src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);

      if (pivotGridOptions.settings && (pivotGridOptions.settings.menuSettings.isChart || pivotGridOptions.settings.charts.isVisible)) {// this.initChart();
      }
    } //cutomize texts in pivot
    // this.updateDefaultPivotTexts();
    // apply special filtering
    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {
    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);
    //}


    setTimeout(() => {
      this.saveStateEnabled = true;
    }, 1);
  }

  returnSpecialSumamryField(fieldOriginal) {
    if (fieldOriginal.summaryType === 'range') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption || '';
      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.dataField = fieldOriginal.dataField || '';

      fieldNew.calculateCustomSummary = e => this.calculateSummaryValueRange(e, fieldOriginal);

      fieldNew.customizeText = e => this.customizeRangeText(e);

      fieldNew.isCalculated = true;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.range;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else if (fieldOriginal.summaryType === 'sumCdOd') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption;

      fieldNew.calculateCustomSummary = options => this.calculateSummaryValueCdOd(options, fieldOriginal);

      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.isCalculated = false;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.none;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else {
      return undefined;
    }
  }

  calculateSummaryValueRange(e, field) {
    var _a, _b;

    const valueNearZero = Number.EPSILON;

    switch (e.summaryProcess) {
      case 'start':
        e.totalValue = 0;
        e.values = [0, 0];
        break;

      case 'calculate':
        if (e.value != -1.7976931348623157e308) {
          if (!e.values[0] || !e.values[1]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value < e.values[0]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value > e.values[1]) {
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }
        }

        break;

      case 'finalize':
        let min = e.values[0] ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision) : 0;
        let max = e.values[1] ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed((_b = field.format) === null || _b === void 0 ? void 0 : _b.precision) : 0; // if (
        //   GlobalSettings.SpecialValueForSqlMoney.find(
        //     (v) => v === Number(min)
        //   ) ||
        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))
        // ) {
        //   ErrorHelper.informAdministrator(
        //     this.appCommonDataService,
        //     'Unhandled range value - (' +
        //       min +
        //       ')(' +
        //       max +
        //       ') ' +
        //       Common.objToString(this.requestedView) +
        //       'Environment: ' +
        //       Common.objToString(
        //         this.appEnvironmentData.getEnvironmentSettings()
        //       ) +
        //       ' User: ' +
        //       Common.objToString(this.sharedService.getUserData())
        //   );
        // }

        if (min === max) {
          e.totalValue = min;
        } else if (!min) {
          e.totalValue = max;
        } else {
          e.totalValue = min + ' - ' + max;
        }

        break;
    }
  }

  customizeRangeText(e) {
    if (e.value === undefined) {
      return src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === null || src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === void 0 ? void 0 : src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash;
    } else {
      return e.value;
    }
  }

  calculateSummaryValueCdOd(options, field) {
    var _a;

    switch (options.summaryProcess) {
      case 'start':
        options.totalValue = {
          value: 0,
          hasCd: false,

          valueOf() {
            return this.value;
          },

          toString() {
            return this.value.toString();
          },

          indexOf() {
            const stringValue = this.toString();
            return stringValue.indexOf.apply(this, arguments);
          }

        };
        break;

      case 'calculate':
        options.totalValue.value += options.value[field.dataField] || 0;
        options.totalValue.hasCd = options.totalValue.hasCd || options.value.DataType === 'cd';
        break;

      case 'finalize':
        let totalValue = options.totalValue;
        totalValue.value = totalValue.value.toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        options.totalValue = totalValue;
        break;
    }
  }

  applySortingRolesByYear() {
    this.yearDataFieldName = 'Year';
    setTimeout(() => {
      var _a;

      const pivotGridDataSource = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();

      const columnFields = pivotGridDataSource._fields.filter(f => f.area === 'column');

      const datafields = pivotGridDataSource._fields.filter(f => f.area === 'data');

      const yearFieldOnFirstPositon = columnFields.filter(f => f.areaIndex === 0 && f.dataField === this.yearDataFieldName); // apply this role only in case, year field is on first column position

      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {
        const rowFields = pivotGridDataSource._fields.filter(f => f.area === 'row');

        const selectedYear = this.currentYear; // const selectedYear = this.stateData
        //   ? this.stateData.settings.selectedYear.PeriodKey
        //   : 2021;

        if (selectedYear) {
          for (const field of rowFields) {
            pivotGridDataSource.field(field.dataField, {
              sortBySummaryField: datafields ? datafields.filter(f => f.areaIndex === 0)[0].dataField : undefined,
              sortBySummaryPath: [selectedYear],
              sortOrder: 'desc'
            });
          }

          pivotGridDataSource.load();
        }
      }
    }, 100);
  }

  setCalculatedFieldFromTopMenu(value) {
    var _a;

    const type = value.itemName;
    const dataField = value.dataField;

    switch (type) {
      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
        this.isPercentOfTotalPopup = true;
        this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.percentOfTotalState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
        this.isPercentOfChangePopup = true;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.changePercentState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
        this.isCagrPopup = true; // this.stateData?.settings.cagrState.dataField = dataField;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.cagrState.dataField = dataField;
        }

        break;
    }
  }

  onBasedOnChange(isInit) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.basedOn = this.percentOfTotalBasedOn;
    }

    this.summaryDisplayModeItems = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.basedOn) === 'Subtotals' ? this.pivotSummaryDisplayModesSubtotals : this.pivotSummaryDisplayModesGrandTotals;

    if (isInit === false && typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';
    }
  }

  onComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.changePercentState.computingType = this.percentOfChangeComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.changePercentState.computingType =
    //     ComputingType.FirstYear;
    // }

  }

  onCagrComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.cagrState.computingType = this.cagrComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;
    // }

  }

  addPercentOfTotalsToPivot(iSCallFromFillPivot) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = this.percentInDirection;
    }

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);
    } else {
      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);
    }
  }

  addPercentOfTotalsToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of total exists

      const percentOfTotal = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal);

      if (percentOfTotal && this.pivotGridDataSource) {
        fieldId = percentOfTotal.id;
        percentOfTotal.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
        percentOfTotal.caption = this.getCaptionForPercentOfTotal();
        percentOfTotal.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.dataField) || 'Value';
        percentOfTotal.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        this.pivotGridDataSource.field(percentOfTotal.id, {
          summaryDisplayMode: percentOfTotal.summaryDisplayMode,
          caption: percentOfTotal.caption,
          calculatedFieldType: percentOfTotal.calculatedFieldType,
          dataField: ((_e = this.stateData) === null || _e === void 0 ? void 0 : _e.settings.percentOfTotalState.dataField) || 'Value'
        });
        this.pivotGridDataSource.load(); // CommonHelper.updatePlaceholders(
        //   this.pivotGridDataSource,
        //   this.stateData
        // );
      } else {
        this.firstAvailableId = ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.pivotGridSource.fields.length) || 0;
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfTotal();
        field.dataField = ((_g = this.stateData) === null || _g === void 0 ? void 0 : _g.settings.percentOfTotalState.dataField) || 'Value';
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.isMeasure = true;
        field.visible = true;
        field.calculateSummaryValue = undefined;
        field.summaryDisplayMode = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.percentOfTotalState.summaryDisplayMode) || '';
        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_j = this.pivotGridOptions) === null || _j === void 0 ? void 0 : _j.settings.calculatedFields.formatPrecision) || 1
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = ((_k = this.stateData) === null || _k === void 0 ? void 0 : _k.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        (_l = this.pivotGridOptions) === null || _l === void 0 ? void 0 : _l.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && typeof this.pivotGridOptions !== 'undefined') {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfTotalPopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.percentOfTotalState.isSet = true;
      }
    }
  }

  addPercentOfTotalsToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    this.removeAllHiddenCalculatedFields();
    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForPercentOfTotal();
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.dataField) || '';
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.isMeasure = true;
    field.visible = true;
    field.calculateSummaryValue = undefined;
    field.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isPercentOfTotalPopup = false;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  removeAllHiddenCalculatedFields() {
    var _a;

    if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state) && this.pivotGridDataSource) {
      this.stateData.state.fields = this.stateData.state.fields.filter(a => a.area !== undefined);
      this.pivotGridDataSource.state(this.stateData.state);
    }
  }

  getCaptionForPercentOfTotal() {
    var _a, _b, _c, _d;

    let caption = ''; //check if exist 2 or more datafields

    if (typeof this.pivotGridOptions !== 'undefined' && ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length) >= 2) {
      const percentOfTotaldatafield = (_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.dataField;
      let currentDatafieldCaption = '';

      if (this.pivotGridOptions.settings.isCube) {
        currentDatafieldCaption = // this.pivotGridOptions.pivotGridSource.fields.find(
        //   (f) => f.dataField === percentOfTotaldatafield
        // ).caption;
        'Cube Caption';
      } else {
        if (typeof this.pivotGridOptions !== 'undefined') {
          const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfTotaldatafield);

          if (fieldCaption) {
            currentDatafieldCaption = fieldCaption.caption;
          }
        }
      }

      caption = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal + ' ' + currentDatafieldCaption;
    } else {
      caption = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    }

    return caption;
  }

  addPrecentOfChangeToPivot(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of change exists

      const percentOfChange = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent);

      if (percentOfChange && this.pivotGridDataSource) {
        fieldId = percentOfChange.id;
        this.pivotGridDataSource.field(percentOfChange.id, {
          caption: this.getCaptionForPercentOfChange(),
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.dataField) || 'Value',
          calculateSummaryValue: e => this.calculateSummaryValuePercentOfChange(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfChange();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.changePercentState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValuePercentOfChange(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfChangePopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.changePercentState.isSet = true;
      }
    }
  }

  calculateSummaryValuePercentOfChange(e) {
    var _a, _b;

    if (e.parent('column')) {
      let base;

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        let yearIndex = 0;

        for (const index in e.parent('column').children()) {
          if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
            yearIndex = parseInt(index);
            break;
          }
        }

        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const returnValue = e.value() / base.value() - 1;
      return isNaN(returnValue) || returnValue && returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  getCaptionForPercentOfChange() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const percentOfChangeDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfChangeDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (percentOfChangeDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
    }

    return caption;
  }

  addCAGRToPivot(iSCallFromFillPivot) {
    var _a;

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addCAGRToPivotCube(iSCallFromFillPivot);
    } else {
      this.addCAGRToPivotArray(iSCallFromFillPivot);
    }
  }

  addCAGRToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case cagr exists, remove and recreate it (case for edit)

      const cagr = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      if (cagr && this.pivotGridDataSource) {
        fieldId = cagr.id;
        this.pivotGridDataSource.field(cagr.id, {
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.dataField) || 'Value',
          caption: this.getCaptionForCagr(),
          calculateSummaryValue: e => this.calculateSummaryValueCagr(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForCagr();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isCagrPopup = false;
      if (this.stateData) this.stateData.settings.cagrState.isSet = true;
    }
  }

  addCAGRToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c;

    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForCagr();
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField) || 'Value';
    field.isMeasure = true;
    field.visible = true;

    field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isCagrPopup = false;

    if (this.stateData) {
      this.stateData.settings.cagrState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  getCaptionForCagr() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const cagrDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataField === cagrDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (cagrDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    }

    return caption;
  }

  calculateSummaryValueCagr(e) {
    var _a, _b;

    const shownYearsInPivot = this.shownYears;

    if (e.parent('column') && shownYearsInPivot) {
      let base;
      let yearIndex = 0;
      let prevYearIndex = 0;

      for (const index in e.parent('column').children()) {
        if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
          yearIndex = parseInt(index);
          break;
        }
      }

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
        prevYearIndex = 0;
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();
      const yearSpan = shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];
      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;
      return isNaN(returnValue) || returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  onChangeAutoSaveStatus(statusValue) {
    var _a;

    if (this.stateData) {
      this.stateData.settings.rememberLatestState = statusValue;
    }

    if (statusValue == false) {
      this.alertService.info('The system will remember this state!');
    } else {
      this.alertService.info('The system will remember the last used state!');
    }

    this.canCallSaveState = true;
    this.customSaveState((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state, true);
  }

}

EuropeanCountrySalesPreviewComponent.ɵfac = function EuropeanCountrySalesPreviewComponent_Factory(t) {
  return new (t || EuropeanCountrySalesPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_20__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_15__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__.SharedService));
};

EuropeanCountrySalesPreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({
  type: EuropeanCountrySalesPreviewComponent,
  selectors: [["app-european-country-sales-preview"]],
  viewQuery: function EuropeanCountrySalesPreviewComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    }
  },
  inputs: {
    studyData: "studyData",
    currentYear: "currentYear",
    foreCastYear: "foreCastYear",
    previousYears: "previousYears",
    setPreviewData: "setPreviewData",
    setGridFields: "setGridFields",
    setPreviewGridKey: "setPreviewGridKey",
    setSelectedCurrency: "setSelectedCurrency",
    setStudyType: "setStudyType",
    setVolumeYears: "setVolumeYears",
    setViewId: "setViewId"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵNgOnChangesFeature"]],
  decls: 8,
  vars: 33,
  consts: [[3, "setSelectedCurrency", "pivotGridOptions", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus"], ["id", "pivotGrid", "showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser", "showTotalsPrior", "dataFieldArea", "onContextMenuPreparing", "onOptionChanged", "onInitialized", "onContentReady", "onCellPrepared"], ["pivotGrid", ""], [3, "allowSearch"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], [4, "ngIf"], [1, "popup", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "visible", "visibleChange"], [4, "dxTemplate", "dxTemplateOf"], [1, "form"], [1, "dx-fieldset"], [1, "dx-field"], [1, "dx-field-label"], [1, "dx-field-value"], [3, "items", "value", "valueChange", "onValueChanged", "onInitialized"], ["class", "dx-field", 4, "ngIf"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "disabled", "onClick"], ["displayExpr", "name", "valueExpr", "id", 3, "items", "value", "valueChange"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "onClick"]],
  template: function EuropeanCountrySalesPreviewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "app-preview-top-menu", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("currencySelectionChanged", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_currencySelectionChanged_0_listener($event) {
        return ctx.currencySelectionChanged($event);
      })("currencyConversionSelectionChanged", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_currencyConversionSelectionChanged_0_listener($event) {
        return ctx.currencyConversionSelectionChanged($event);
      })("massUnitSelectionChanged", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_massUnitSelectionChanged_0_listener($event) {
        return ctx.massUnitSelectionChanged($event);
      })("onExportToExcel", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_onExportToExcel_0_listener() {
        return ctx.exportToExcel();
      })("onExportToCvs", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_onExportToCvs_0_listener() {
        return ctx.exportToCvs();
      })("onExportSnapshot", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_onExportSnapshot_0_listener() {
        return ctx.exportToShanptshot();
      })("calculatedFieldItemSelected", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_calculatedFieldItemSelected_0_listener($event) {
        return ctx.setCalculatedFieldFromTopMenu($event);
      })("onChangeAutoSaveStatus", function EuropeanCountrySalesPreviewComponent_Template_app_preview_top_menu_onChangeAutoSaveStatus_0_listener($event) {
        return ctx.onChangeAutoSaveStatus($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-pivot-grid", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onContextMenuPreparing", function EuropeanCountrySalesPreviewComponent_Template_dx_pivot_grid_onContextMenuPreparing_1_listener($event) {
        return ctx.onContextMenuPreparing($event);
      })("onOptionChanged", function EuropeanCountrySalesPreviewComponent_Template_dx_pivot_grid_onOptionChanged_1_listener($event) {
        return ctx.onOptionChanged($event);
      })("onInitialized", function EuropeanCountrySalesPreviewComponent_Template_dx_pivot_grid_onInitialized_1_listener($event) {
        return ctx.onInitialized($event);
      })("onContentReady", function EuropeanCountrySalesPreviewComponent_Template_dx_pivot_grid_onContentReady_1_listener($event) {
        return ctx.onContentReady($event);
      })("onCellPrepared", function EuropeanCountrySalesPreviewComponent_Template_dx_pivot_grid_onCellPrepared_1_listener($event) {
        return ctx.cellPrepared($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](3, "dxo-field-chooser", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "dxo-state-storing", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](5, EuropeanCountrySalesPreviewComponent_div_5_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](6, EuropeanCountrySalesPreviewComponent_div_6_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](7, EuropeanCountrySalesPreviewComponent_div_7_Template, 3, 7, "div", 5);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("setSelectedCurrency", ctx.selectedCurrency)("pivotGridOptions", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](31, _c2))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](32, _c3))("allowFiltering", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowFiltering) || false)("allowExpandAll", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowExpandAll) || false)("showBorders", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showBorders) || false)("showColumnGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnGrandTotals) || false)("showRowGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowGrandTotals) || false)("showRowTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowTotals) || false)("showColumnTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnTotals) || false)("showTotalsPrior", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showTotalsPrior) || "")("dataFieldArea", (ctx.stateData == null ? null : ctx.stateData.settings == null ? null : ctx.stateData.settings.dataFieldArea) || "");
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSearch", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("enabled", ctx.saveStateEnabled)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
    }
  },
  directives: [_shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__.PreviewTopMenuComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoFieldChooserComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoStateStoringComponent, _angular_common__WEBPACK_IMPORTED_MODULE_25__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxPopupComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxSelectBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxButtonComponent],
  styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJldXJvcGVhbi1jb3VudHJ5LXNhbGVzLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"]
});

/***/ }),

/***/ 50411:
/*!****************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/european-country-sales/european-country-sales.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EuropeanCountrySalesComponent": () => (/* binding */ EuropeanCountrySalesComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var src_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/common.service */ 23115);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 42473);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _european_country_sales_preview_european_country_sales_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./european-country-sales-preview/european-country-sales-preview.component */ 34343);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);

























function EuropeanCountrySalesComponent_dx_data_grid_6_div_11_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, EuropeanCountrySalesComponent_dx_data_grid_6_div_11_div_3_Template, 2, 2, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.onDeleteCustomSaveState(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c0 = function () { return { width: 200 }; };
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-drop-down-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onItemClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_4_Template_dx_drop_down_button_onItemClick_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r24.onCalculatedItemClick($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](2, _c0))("items", ctx_r15.calculatorContextMenuItems);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_6_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r26.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_8_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r28.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_div_1_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_div_1_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r38); const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r37.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r36.disabledSignOffButton);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_div_1_Template, 2, 1, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r40.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_div_1_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_2_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_4_Template, 2, 3, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_6_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_div_8_Template, 2, 0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_9_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_10_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_11_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_dxi_item_12_Template, 2, 0, "dxi-item", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_dxi_column_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 76);
} if (rf & 2) {
    const volumeYear_r42 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("dataField", volumeYear_r42.field)("caption", volumeYear_r42.year)("allowEditing", volumeYear_r42.isEditable)("allowFiltering", false)("visible", volumeYear_r42.isVisible)("cellTemplate", volumeYear_r42.cellTemplate);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_dxi_column_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_18_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_6_div_18_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r47); const d_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r45.deleteRow(d_r43.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, EuropeanCountrySalesComponent_dx_data_grid_6_div_18_dx_button_1_Template, 1, 0, "dx-button", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r43 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r43.data.DataRowId !== null);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_19_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "span", 83);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_19_input_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 84);
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r48.value > 0 ? data_r48.value.toFixed(1) : "");
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_19_span_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value > 0 ? data_r48.value.toFixed(1) : "");
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, EuropeanCountrySalesComponent_dx_data_grid_6_div_19_span_1_Template, 1, 0, "span", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, EuropeanCountrySalesComponent_dx_data_grid_6_div_19_input_2_Template, 1, 1, "input", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, EuropeanCountrySalesComponent_dx_data_grid_6_div_19_span_3_Template, 2, 1, "span", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.checkHasComment(data_r48));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r54 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r54.value > 0 ? data_r54.value.toFixed(1) : "");
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r55 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r55.value || data_r55.value == 0 ? data_r55.value.toFixed(1) + "%" : "");
} }
function EuropeanCountrySalesComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onContextMenuPreparing", function EuropeanCountrySalesComponent_dx_data_grid_6_Template_dx_data_grid_onContextMenuPreparing_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r56.onContextMenuPreparing($event); })("onContentReady", function EuropeanCountrySalesComponent_dx_data_grid_6_Template_dx_data_grid_onContentReady_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onContentReady($event); })("onSaved", function EuropeanCountrySalesComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowSaved($event); })("onCellPrepared", function EuropeanCountrySalesComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r60.onCellPreparedHighlighter($event); })("onCellHoverChanged", function EuropeanCountrySalesComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r61.onCellHoverChanged($event); })("onRowPrepared", function EuropeanCountrySalesComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r57); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-scrolling", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-load-panel", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-filter-row", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-header-filter", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "dxo-paging", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "dxo-state-storing", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "dxo-editing", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxi-item", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, EuropeanCountrySalesComponent_dx_data_grid_6_div_11_Template, 4, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, EuropeanCountrySalesComponent_dx_data_grid_6_ng_container_12_Template, 13, 4, "ng-container", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, EuropeanCountrySalesComponent_dx_data_grid_6_dxi_column_16_Template, 1, 7, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, EuropeanCountrySalesComponent_dx_data_grid_6_dxi_column_17_Template, 1, 1, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, EuropeanCountrySalesComponent_dx_data_grid_6_div_18_Template, 2, 1, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, EuropeanCountrySalesComponent_dx_data_grid_6_div_19_Template, 4, 3, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, EuropeanCountrySalesComponent_dx_data_grid_6_div_20_Template, 3, 1, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, EuropeanCountrySalesComponent_dx_data_grid_6_div_21_Template, 3, 1, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true)("customSave", ctx_r0.customSaveState)("customLoad", ctx_r0.customLoadState)("savingTimeout", 300);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 180)("fixed", true)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 180)("fixed", true)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 180)("fixed", true)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYearsShow);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "cargCellTemplate");
} }
function EuropeanCountrySalesComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 85);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function EuropeanCountrySalesComponent_div_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r64 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r64.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r64.field);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
function EuropeanCountrySalesComponent_dx_popup_40_Template(rf, ctx) { if (rf & 1) {
    const _r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_dx_popup_40_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.notePopupVisible = $event; })("onHidden", function EuropeanCountrySalesComponent_dx_popup_40_Template_dx_popup_onHidden_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r67.onNotePopupHide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "textarea", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dx-button", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_popup_40_Template_dx_button_onClick_9_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r68.onSaveNote(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 270)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r3.notePopupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r3.newNoteForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" Add Comment for ", ctx_r3.selectedCommentCellData.colCaption, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](11, _c1, ctx_r3.noteSubmit && ctx_r3.n["note"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r3.newNoteForm.invalid);
} }
function EuropeanCountrySalesComponent_dx_data_grid_44_dxi_column_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 30);
} }
function EuropeanCountrySalesComponent_dx_data_grid_44_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r73 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_dx_data_grid_44_div_5_Template_dx_button_onClick_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r73); const d_r71 = restoredCtx.$implicit; const ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r72.deleteComment(d_r71.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c2 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function EuropeanCountrySalesComponent_dx_data_grid_44_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, EuropeanCountrySalesComponent_dx_data_grid_44_dxi_column_4_Template, 1, 1, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, EuropeanCountrySalesComponent_dx_data_grid_44_div_5_Template, 2, 0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](9, _c2));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r4.isStudyEditable && !ctx_r4.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
} }
class EuropeanCountrySalesComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService, commonService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.commonService = commonService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup(),
            EuropeanCountriesSales: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.myYears = [];
        this.volumeYears = [];
        this.volumeYearsShow = [];
        this.foreCastYear1 = 0;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.companyLists = [];
        this.europeanCountryLists = [];
        this.brandLists = [];
        this.currentCurrency = {};
        this.datRelationsData = [];
        this.studyDataViewId = 0;
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.deleteRowConfirmPopup = false;
        this.deleteCommentConfirmPopup = false;
        this.deleteResetConfirmPopup = false;
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
            'Forecast1',
        ];
        this.isLockedStudy = false;
        this.calculatorContextMenuItems = [];
        this.pivotStateId = 0;
        this.saveStateToDbTimeout = setTimeout(() => { }, 0);
        this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_12__.Subject();
        this.selectedCommentCellData = {};
        this.allColsComments = [];
        this.cellColsComments = [];
        this.deleteCommentData = {};
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Market: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            Company: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            Brand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
            ForecastYear1: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_3__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.calculatorContextMenuItems = this.commonService.getCalculatorFields();
        this.customSaveState = this.customSaveState.bind(this);
        this.customLoadState = this.customLoadState.bind(this);
        this.getGridState = this.getGridState.bind(this);
        this.getAllColumnsComments();
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.getPivotSettings();
            this.getGridState();
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getEuropeanCountryLists();
        this.getCompanyLists();
        this.getBrandLists();
    }
    getPivotSettings() {
        this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
        if (this.studyDataRelations) {
            this.studyDataViewId = this.studyDataRelations.ViewId;
        }
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getPscStudyData('EuropeanCountriesSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .EuropeanCountriesSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                this.volumeYearsShow = [];
                this.myYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    this.myYears.push({ field: `PreviousYear${j}`, year: i });
                    this.volumeYearsShow.push({
                        field: `PreviousYear${j}`,
                        year: i,
                        isEditable: !this.isStudyEditable,
                        cellTemplate: 'EditCellTemplate',
                        isVisible: true,
                    });
                    if (j !== 5) {
                        this.volumeYearsShow.push({
                            field: `Cagr${j}`,
                            year: `Cagr, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                        this.volumeYearsShow.push({
                            field: `PerChange${j}`,
                            year: `Change, %, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                    }
                    this.volumeYearsShow.push({
                        field: `TotalPer${j}`,
                        year: `% Of Total`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                }
                this.volumeYearsShow.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                    isEditable: !this.isStudyEditable,
                    cellTemplate: 'EditCellTemplate',
                    isVisible: true,
                });
                this.volumeYearsShow.push({
                    field: `CagrCurrentYear`,
                    year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.volumeYearsShow.push({
                    field: `PerChangeCurrentYear`,
                    year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.volumeYearsShow.push({
                    field: `TotalPerCurrentYear`,
                    year: `% Of Total`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                // myYears = this.volumeYears;
                this.myYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                this.foreCastYear1 = currentYear + 5;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    this.calculateCagrYears(item);
                    this.calculatePercentageOfChangeYears(item);
                    // const rowNoteArray: any = [];
                    // if (item.Notes !== null) {
                    //   const noteArray = item.Notes.split('|||');
                    //   noteArray.map((singleVal: any) => {
                    //     const n = singleVal.split('@@@');
                    //     const d = n[0].split('###');
                    //     rowNoteArray.push({
                    //       name: d[0].trim(),
                    //       date: new Date(d[1].trim()),
                    //       note: n[1].trim(),
                    //     });
                    //   });
                    // }
                    // let sortRowNoteArray: any = [];
                    // if (rowNoteArray.length > 0) {
                    //   sortRowNoteArray = rowNoteArray.sort(
                    //     (a: any, b: any) => b.date - a.date
                    //   );
                    // }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    let rowComments = [];
                    if (this.allColsComments) {
                        rowComments = this.allColsComments.filter((single) => single.DraftDataRowId == item.DataRowId);
                        rowComments.map(({ ColumnName }) => {
                            this.myYears.map((elem) => {
                                if (elem.field == ColumnName) {
                                    item[`${ColumnName}_comment`] = true;
                                }
                            });
                        });
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    // this.studyData[i].StudyNotes =
                    //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    // this.studyData[i].EditNote = false;
                    // this.studyData[i].Notes = null;
                    // this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.calculateTotalPercentageForCols();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    calculateCagrYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.Cagr1 = this.commonService.calculateCAGRPercentage(data.PreviousYear2, data.PreviousYear1, 1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.Cagr2 = this.commonService.calculateCAGRPercentage(data.PreviousYear3, data.PreviousYear2, 1);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.Cagr3 = this.commonService.calculateCAGRPercentage(data.PreviousYear4, data.PreviousYear3, 1);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.Cagr4 = this.commonService.calculateCAGRPercentage(data.PreviousYear5, data.PreviousYear4, 1);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(data.PreviousYear1, data.CurrentYear, 1);
        }
    }
    calculatePercentageOfChangeYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.PerChange1 = this.commonService.calculatePercentageChange(data.PreviousYear2, data.PreviousYear1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.PerChange2 = this.commonService.calculatePercentageChange(data.PreviousYear3, data.PreviousYear2);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.PerChange3 = this.commonService.calculatePercentageChange(data.PreviousYear4, data.PreviousYear3);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.PerChange4 = this.commonService.calculatePercentageChange(data.PreviousYear5, data.PreviousYear4);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(data.PreviousYear1, data.CurrentYear);
        }
    }
    calculateTotalPercentageForCols() {
        const PreviousYear1Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear1, 0);
        const PreviousYear2Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear2, 0);
        const PreviousYear3Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear3, 0);
        const PreviousYear4Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear4, 0);
        const PreviousYear5Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear5, 0);
        const CurrentYearTotal = this.studyData.reduce((sum, currentItem) => sum + currentItem.CurrentYear, 0);
        this.studyData.map((item) => {
            item.TotalPer1 = this.commonService.calculateTotalPercentage(PreviousYear1Total, item.PreviousYear1);
            item.TotalPer2 = this.commonService.calculateTotalPercentage(PreviousYear2Total, item.PreviousYear2);
            item.TotalPer3 = this.commonService.calculateTotalPercentage(PreviousYear3Total, item.PreviousYear3);
            item.TotalPer4 = this.commonService.calculateTotalPercentage(PreviousYear4Total, item.PreviousYear4);
            item.TotalPer5 = this.commonService.calculateTotalPercentage(PreviousYear5Total, item.PreviousYear5);
            item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(CurrentYearTotal, item.CurrentYear);
        });
    }
    getEuropeanCountryLists() {
        this.sharedService
            .getEuropeanCountryLists()
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.europeanCountryLists = data.Data;
            }
        });
    }
    getCompanyLists() {
        this.sharedService
            .getPSCDataEntryData('Company')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.companyLists = data.Data;
            }
        });
    }
    getBrandLists() {
        this.sharedService
            .getPSCDataEntryData('Brand')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.brandLists = data.Data;
            }
        });
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = this.allowedCols;
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = this.allowedCols;
        const isFound = allowedCols.some((item) => item === event.column.dataField);
        if (event.rowType === 'data' && isFound) {
            this.TooltipTarget = event.cellElement;
            if (event.eventType === 'mouseover') {
                if (event.data.ChangeLogObj.length > 0) {
                    const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !== 'undefined'
                        ? event.data.ChangeLogObj[event.column.caption]
                        : null;
                    if (cellValue !== null) {
                        const oldValue = !isNaN(cellValue.oldValue)
                            ? +cellValue.oldValue
                            : 0;
                        const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                        this.TooltipText = html;
                        this.isTooltipVisible = true;
                    }
                }
                // console.log(this.ToolTipText);
            }
            if (event.eventType === 'mouseout') {
                // console.log(this.ToolTipText);
                // this.ToolTipText = 'Blah Bl;ah Blah';
                this.isTooltipVisible = false;
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
            data.Forecast1 = +data.Forecast1;
            this.calculateCagrYears(data);
            this.calculatePercentageOfChangeYears(data);
            this.calculateTotalPercentageForCols();
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Forecast1: +newRowData.ForecastYear1,
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            Company: newRowData.Company.Name,
            CompanyId: newRowData.Company.Id,
            Brand: newRowData.Brand.Name,
            BrandId: newRowData.Brand.Id,
            Market: newRowData.Market.ShortName,
            MarketId: newRowData.Market.Id,
            Forecast2: 0,
            Forecast3: 0,
            Forecast4: 0,
            Forecast5: 0,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.CompanyId == newRow.CompanyId &&
            item.BrandId == newRow.BrandId &&
            item.MarketId == newRow.MarketId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.CompanyId || 0) - (b.CompanyId || 0) ||
                (a.BrandId || 0) - (b.BrandId || 0) ||
                (a.MarketId || 0) - (b.MarketId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
    }
    onSaveNote(isLoad = true) {
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        if (!this.selectedCommentCellData) {
            return;
        }
        // const rowData = this.newNoteForm.value.rowData;
        // const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        // const IsEditedNote = this.dataGrid?.instance.cellValue(
        //   rowIndex,
        //   'EditNote'
        // );
        // this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        // let noteValue = rowData.data.StudyNotes;
        // noteValue = noteValue !== null ? noteValue : '';
        // if (IsEditedNote) {
        //   const noteArray =
        //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
        //   noteArray.shift();
        //   noteValue = noteArray.join(',');
        // }
        // const newNoteValue =
        //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);
        // this.dataGrid?.instance.saveEditData();
        const formData = {
            dataItemCategoryId: this.studyAreaId,
            marketYearCategoryDataId: this.marketYearCategoryId,
            draftDataRowId: this.selectedCommentCellData.dataRowId,
            columnName: this.selectedCommentCellData.colValue,
            comment: newNote,
        };
        this.isLoadingService.add();
        this.studyService.addCommentForCell(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.notePopupVisible = false;
                // this.getSalesData();
                if (isLoad) {
                    this.loadCurrentStudy();
                }
                else {
                    this.noteSubmit = false;
                    this.newNoteForm.reset();
                    this.newRowForm.updateValueAndValidity();
                    this.getCellColumnsComments(this.selectedCommentCellData.colValue, this.selectedCommentCellData.dataRowId);
                }
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            // console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            europeanCountriesSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .savePSCData('EuropeanCountriesSales', studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            europeanCountriesSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService
            .signOffPSCData('EuropeanCountriesSales', formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            const error = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try after sometimes.';
            this.alertService.danger(error);
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Company:
                this.getCompanyLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Brand:
                this.getBrandLists();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
    onCalculatedItemClick(e) {
        var _a, _b, _c, _d, _e, _f;
        // console.log(e.itemData);
        if (typeof e.itemData !== 'undefined') {
            const calculatedFiled = e.itemData;
            calculatedFiled.isCheck = !calculatedFiled.isCheck;
            calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';
            if (calculatedFiled.value === 'percentOfTotal') {
                // this.calculateTotalPercentageForCols();
                for (let i = 1; i <= 5; i++) {
                    (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.columnOption(`TotalPer${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.columnOption(`TotalPerCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else if (calculatedFiled.value === 'changePercent') {
                for (let i = 1; i <= 5; i++) {
                    (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.columnOption(`PerChange${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.columnOption(`PerChangeCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else {
                for (let i = 1; i <= 5; i++) {
                    (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.columnOption(`Cagr${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.columnOption(`CagrCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
        }
    }
    customSaveState(data, isChangeAutoSaveStatus) {
        // do not save state to db in case, states are emited too intensively
        clearTimeout(this.saveStateToDbTimeout);
        data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;
        // const userData = this.sharedService.getUserData();
        // this.initChart();
        // allow to save state only in case all requested data is available
        if (this.studyDataViewId) {
            this.stateData = data;
            this.stateChange.next(this.stateData);
            this.saveStateToDbTimeout = setTimeout(() => {
                this.sharedService
                    .setPivotState(this.studyDataViewId, 0, false, JSON.stringify(this.stateData), true)
                    .subscribe((data) => {
                    if (data) {
                        // this.alertService.info(
                        //   'The system will remember the last state!'
                        // );
                        // this.loadCurrentStudy();
                        if (this.pivotStateId == 0) {
                            this.stateData = undefined;
                            this.getGridState();
                        }
                    }
                }, (error) => {
                    throw new Error(error);
                });
            }, 2000);
        }
    }
    customLoadState() {
        if (this.stateData) {
            this.setColsForDataGrid();
            return this.stateData;
        }
    }
    getGridState() {
        if (!this.stateData) {
            let stateData = undefined;
            this.sharedService
                .getPivotState(this.studyDataViewId, true)
                .subscribe((res) => {
                var _a;
                // in case state is not exists yet
                try {
                    const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
                    stateData = JSON.parse(stateRes.StateData);
                    if (stateData) {
                        this.pivotStateId = stateRes.PivotStateId;
                        this.stateData = stateData;
                        (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.state(this.stateData);
                        this.setColsForDataGrid();
                    }
                    // this.pivotStateId = stateRes.PivotStateId;
                }
                catch (_b) {
                    // stateData.state.fields = this.getGridFields();
                }
            });
        }
    }
    onDeleteCustomSaveState() {
        this.deleteResetConfirmPopup = true;
    }
    deleteCustomState() {
        if (this.studyDataViewId && this.pivotStateId) {
            this.sharedService
                .deletePivotState(this.studyDataViewId, this.pivotStateId)
                .subscribe((data) => data, (error) => {
                throw new Error(error);
            }, () => {
                // finally read all data again
                // this.readPivotOptionsAndData();
                // this.readPivotDataFromApi();
                const stateData = undefined;
                this.stateData = stateData;
                this.calculatorContextMenuItems =
                    this.commonService.getCalculatorFields();
                this.getSalesData();
                this.deleteResetConfirmPopup = false;
                // this.getGridState();
            });
        }
        else {
            this.deleteResetConfirmPopup = false;
        }
    }
    onContentReady(e) { }
    onContextMenuPreparing(e) {
        if (typeof e.items === 'undefined') {
            e.items = [];
        }
        // e.items.push({
        //   beginGroup: true,
        //   text: 'Reset to Default',
        //   icon: 'fas fa-sync-alt',
        //   onItemClick: () => {
        //     this.deleteCustomState();
        //   },
        // });
        const isValidTarget = typeof e.target !== 'undefined' && e.target === 'content' ? true : false;
        if (isValidTarget) {
            const cells = e.row.cells;
            const rowIndex = e.rowIndex;
            const colIndex = e.columnIndex;
            const currentCell = typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;
            if (typeof currentCell !== 'undefined') {
                const foundValidCell = this.allowedCols.find((e) => e === currentCell.column.dataField);
                if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {
                    e.items.push({
                        beginGroup: true,
                        text: 'Comments',
                        icon: 'fas fa-comment',
                        onItemClick: () => {
                            // this.addNewCellComment(foundValidCell, colIndex, e.row);
                            this.getCellColumnsComments(currentCell.column.dataField, e.row.data.DataRowId);
                        },
                    });
                }
                // if (
                //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==
                //     'undefined' &&
                //   e.row.data[`${currentCell.column.dataField}_comment`]
                // ) {
                //   e.items.push({
                //     beginGroup: true,
                //     text: 'View Comments',
                //     icon: 'fas fa-bars',
                //     onItemClick: () => {
                //       this.getCellColumnsComments(
                //         currentCell.column.dataField,
                //         e.row.data.DataRowId
                //       );
                //     },
                //   });
                // }
            }
        }
    }
    setColsForDataGrid() {
        if (this.stateData) {
            this.volumeYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.calculatorContextMenuItems = this.stateData
                .calculatorContextMenuItems
                ? this.stateData.calculatorContextMenuItems
                : this.calculatorContextMenuItems;
        }
    }
    addNewCellComment(colValue, colIndex, row) {
        const currentCell = typeof row.cells[colIndex] !== 'undefined'
            ? row.cells[colIndex]
            : undefined;
        const colCaption = currentCell.column.caption;
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: currentCell.data.DataRowId,
            currentCell: currentCell,
            colCaption: colCaption,
        };
        this.notePopupVisible = true;
    }
    getAllColumnsComments() {
        this.studyService
            .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.allColsComments = data.Data;
            }
        });
    }
    getCellColumnsComments(colValue, dataRowId) {
        const currentLabel = this.myYears.find((item) => item.field == colValue);
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: dataRowId,
            currentCell: {},
            colCaption: currentLabel.year,
        };
        this.studyService
            .getCellCommentsForStudy(this.studyAreaId, this.marketYearCategoryId, dataRowId, colValue)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.selectedRowNotes = data.Data;
                this.viewNotePopup = true;
                if (this.selectedRowNotes.length == 0) {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = false;
                        }
                    });
                }
                else {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = true;
                        }
                    });
                }
            }
        });
    }
    checkHasComment(data) {
        if (typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&
            data.data[`${data.column.dataField}_comment`]) {
            return true;
        }
        return false;
    }
    deleteComment(data) {
        this.deleteCommentData = data;
        this.deleteCommentConfirmPopup = true;
        // this.viewNotePopup = false;
    }
    onDeleteCommentConfirmPopupHide() {
        this.deleteCommentData = {};
        this.deleteCommentConfirmPopup = false;
    }
    confirmDeleteComment() {
        this.isLoadingService.add();
        const colValue = this.deleteCommentData.ColumnName;
        const dataRowId = this.deleteCommentData.DraftDataRowId;
        this.studyService
            .deleteCellComment(this.deleteCommentData.MarketYearCategoryDataId, dataRowId, colValue, this.deleteCommentData.Id)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.deleteCommentConfirmPopup = false;
                this.getCellColumnsComments(colValue, dataRowId);
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteCommentConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
}
EuropeanCountrySalesComponent.ɵfac = function EuropeanCountrySalesComponent_Factory(t) { return new (t || EuropeanCountrySalesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_7__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_common_service__WEBPACK_IMPORTED_MODULE_8__.CommonService)); };
EuropeanCountrySalesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: EuropeanCountrySalesComponent, selectors: [["app-european-country-sales"]], viewQuery: function EuropeanCountrySalesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 90, vars: 72, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", "width", "100%", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "previousYears", "foreCastYear", "studyData", "setSelectedCurrency", "setVolumeYears", "setViewId"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col-md-6"], [1, "form-group"], ["bindLabel", "ShortName", "formControlName", "Market", "placeholder", "Select Market", 3, "items"], ["bindLabel", "Name", "formControlName", "Company", "placeholder", "Select Company", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Brand", "placeholder", "Select Brand", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", 4, "ngIf"], ["container", ".dx-viewport", 3, "width", "height", "showTitle", "title", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0", "h-100", "comment-container"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], [1, "card-footer"], [1, "row", "align-items-center", "justify-content-center"], [1, "col-md-8"], ["placeholder", "Enter your comment", "formControlName", "note", "rows", "2", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "col-md-4"], [1, "form-group", "text-center"], ["text", "Save Comment", "type", "default", 3, "disabled", "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Reset Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], ["id", "gridContainer", "width", "100%", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["columnRenderingMode", "standard"], [3, "enabled"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Market", 3, "width", "fixed", "allowEditing"], ["dataField", "Company", 3, "width", "fixed", "allowEditing"], ["dataField", "Brand", 3, "width", "fixed", "allowEditing"], ["alignment", "center", "cellTemplate", "EditCellTemplate", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate", 4, "ngFor", "ngForOf"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "refresh", "text", "Reset", 3, "onClick"], ["icon", "fas fa-calculator", "displayExpr", "name", "keyExpr", "value", 3, "dropDownOptions", "items", "onItemClick"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["alignment", "center", "cellTemplate", "EditCellTemplate", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["class", "has-comment", 4, "ngIf"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], [1, "has-comment"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [3, "innerHTML"], ["type", "text", 1, "form-control", 3, "formControlName"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "mt-0"], ["formControlName", "note", "rows", "2", 1, "form-control", 3, "ngClass"], ["icon", "plus", "text", "Save Comment", "type", "default", 3, "disabled", "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "CreatedBy", "dataType", "string"], ["dataField", "CreatedOn", "dataType", "date", 3, "format"], ["dataField", "Comment", "dataType", "string"]], template: function EuropeanCountrySalesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, EuropeanCountrySalesComponent_dx_data_grid_6_Template, 22, 35, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, EuropeanCountrySalesComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-european-country-sales-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Market");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Company");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Brand");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](32, EuropeanCountrySalesComponent_div_32_Template, 5, 2, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](37, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "dx-button", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function EuropeanCountrySalesComponent_Template_dx_button_click_39_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](40, EuropeanCountrySalesComponent_dx_popup_40_Template, 10, 13, "dx-popup", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_Template_dx_popup_visibleChange_41_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function EuropeanCountrySalesComponent_Template_dx_popup_onHidden_41_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](44, EuropeanCountrySalesComponent_dx_data_grid_44_Template, 6, 10, "dx-data-grid", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](50, "textarea", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_53_listener() { return ctx.onSaveNote(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "dx-popup", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_Template_dx_popup_visibleChange_54_listener($event) { return ctx.deleteCommentConfirmPopup = $event; })("onHidden", function EuropeanCountrySalesComponent_Template_dx_popup_onHidden_54_listener() { return ctx.onDeleteCommentConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](58, "Are you sure you want to delete this comment?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_60_listener() { return ctx.confirmDeleteComment(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-button", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_61_listener() { return ctx.deleteCommentConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "dx-popup", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_Template_dx_popup_visibleChange_62_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](66, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](68, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_70_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "dx-button", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_71_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](72, "dx-popup", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_Template_dx_popup_visibleChange_72_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function EuropeanCountrySalesComponent_Template_dx_popup_onHidden_72_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](75, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](76, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_78_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](79, "dx-button", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_79_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](80, "dx-popup", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function EuropeanCountrySalesComponent_Template_dx_popup_visibleChange_80_listener($event) { return ctx.deleteResetConfirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](81, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](82, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](83, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](84, " Reset to Default will take you to last saved Data. Your unsaved data will be removed. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](85, "p", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](86, "Are you sure you want to continue?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](87, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](88, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_88_listener() { return ctx.deleteCustomState(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](89, "dx-button", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function EuropeanCountrySalesComponent_Template_dx_button_onClick_89_listener() { return ctx.deleteResetConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("previousYears", ctx.volumeYears)("foreCastYear", ctx.foreCastYear1)("studyData", ctx.studyData)("setSelectedCurrency", ctx.currentCurrency)("setVolumeYears", ctx.volumeYears)("setViewId", ctx.studyDataViewId);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.europeanCountryLists);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.companyLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Company));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.brandLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Brand));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.currentYear);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedCommentCellData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate1"]("title", "View Comments for ", ctx.selectedCommentCellData.colCaption, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("height", 500)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](70, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteCommentConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteResetConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoLoadPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoStateStoringComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_21__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxDropDownButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxTooltipComponent, _european_country_sales_preview_european_country_sales_preview_component__WEBPACK_IMPORTED_MODULE_10__.EuropeanCountrySalesPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_25__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.MaxLengthValidator], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJldXJvcGVhbi1jb3VudHJ5LXNhbGVzLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 12642:
/*!*****************************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/product-type-sales/product-type-sale-preview/product-type-sale-preview.component.ts ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductTypeSalePreviewComponent": () => (/* binding */ ProductTypeSalePreviewComponent)
/* harmony export */ });
/* harmony import */ var D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exceljs */ 34498);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataFieldArea.enum */ 29368);
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/model/userStateAndSetttings.model */ 69893);
/* harmony import */ var src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/model/enums/specialValueType.enum */ 59591);
/* harmony import */ var devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme/excel_exporter */ 47081);
/* harmony import */ var src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/guard/commonHelper */ 83518);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/model/enums/computingType.enum */ 11892);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shc/sub/shc-preview/preview-top-menu/preview-top-menu.component */ 57952);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! devextreme-angular/core */ 85915);





























function ProductTypeSalePreviewComponent_div_5_div_2_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "In Direction");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "dx-select-box", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function ProductTypeSalePreviewComponent_div_5_div_2_div_10_Template_dx_select_box_valueChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
      return ctx_r7.percentInDirection = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", ctx_r6.summaryDisplayModeItems)("value", ctx_r6.percentInDirection);
  }
}

const _c0 = function () {
  return ["Subtotals", "Grand Totals"];
};

function ProductTypeSalePreviewComponent_div_5_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute '% Of Total':");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](7, "Based on");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function ProductTypeSalePreviewComponent_div_5_div_2_Template_dx_radio_group_valueChange_9_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r9.percentOfTotalBasedOn = $event;
    })("onValueChanged", function ProductTypeSalePreviewComponent_div_5_div_2_Template_dx_radio_group_onValueChanged_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r11.onBasedOnChange(false);
    })("onInitialized", function ProductTypeSalePreviewComponent_div_5_div_2_Template_dx_radio_group_onInitialized_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r12.onBasedOnChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](10, ProductTypeSalePreviewComponent_div_5_div_2_div_10_Template, 5, 2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "dx-button", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function ProductTypeSalePreviewComponent_div_5_div_2_Template_dx_button_onClick_14_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r13.addPercentOfTotalsToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](5, _c0))("value", ctx_r4.percentOfTotalBasedOn);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx_r4.summaryDisplayModeItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120)("disabled", false);
  }
}

function ProductTypeSalePreviewComponent_div_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function ProductTypeSalePreviewComponent_div_5_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r14.isPercentOfTotalPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, ProductTypeSalePreviewComponent_div_5_div_2_Template, 15, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 250)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r1.isPercentOfTotalPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c1 = function (a0, a1) {
  return [a0, a1];
};

function ProductTypeSalePreviewComponent_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute change, %:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function ProductTypeSalePreviewComponent_div_6_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r18.percentOfChangeComputeType = $event;
    })("onValueChanged", function ProductTypeSalePreviewComponent_div_6_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r20.onComputeTypeChange(false);
    })("onInitialized", function ProductTypeSalePreviewComponent_div_6_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r21.onComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function ProductTypeSalePreviewComponent_div_6_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r22.addPrecentOfChangeToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r16.computingType.FirstYear, ctx_r16.computingType.PreviousYear))("value", ctx_r16.percentOfChangeComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function ProductTypeSalePreviewComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function ProductTypeSalePreviewComponent_div_6_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r24);
      const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r23.isPercentOfChangePopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, ProductTypeSalePreviewComponent_div_6_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r2.isPercentOfChangePopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

function ProductTypeSalePreviewComponent_div_7_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute CAGR:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function ProductTypeSalePreviewComponent_div_7_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r27.cagrComputeType = $event;
    })("onValueChanged", function ProductTypeSalePreviewComponent_div_7_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r29.onCagrComputeTypeChange(false);
    })("onInitialized", function ProductTypeSalePreviewComponent_div_7_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r30.onCagrComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function ProductTypeSalePreviewComponent_div_7_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r31.addCAGRToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r25.computingType.FirstYear, ctx_r25.computingType.PreviousYear))("value", ctx_r25.cagrComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function ProductTypeSalePreviewComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function ProductTypeSalePreviewComponent_div_7_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r33);
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r32.isCagrPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, ProductTypeSalePreviewComponent_div_7_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r3.isCagrPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c2 = function () {
  return {
    showColumnFields: true,
    showDataFields: true,
    showFilterFields: true,
    showRowFields: true,
    allowFieldDragging: true,
    visible: true
  };
};

const _c3 = function () {
  return {
    enabled: true
  };
};

class ProductTypeSalePreviewComponent {
  constructor(route, isLoadingService, studyService, alertService, sharedService) {
    this.route = route;
    this.isLoadingService = isLoadingService;
    this.studyService = studyService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.studyData = [];
    this.currentYear = 0;
    this.foreCastYears = [];
    this.previousYears = [];
    this.previewData = [];
    this.saveStateEnabled = false;
    this.gridFields = [];
    this.previewGridKey = '';
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.studyAreaId = 0;
    this.selectedCurrency = {
      Id: 0,
      IsActive: false,
      Name: ''
    };
    this.studyType = '';
    this.volumeYears = [];
    this.viewId = 0;
    this.currencyConversionTypeSelected = 1;
    this.computingType = src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType;
    this.eventsCustomAction = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.pivotGridNoDataMessage = '';
    this.isPercentOfTotalPopup = false;
    this.isPercentOfChangePopup = false;
    this.isCagrPopup = false;
    this.firstAvailableId = 0;
    this.yearDataFieldName = '';
    this.isHeaderFilterLoading = false;
    this.canCallSaveState = false;
    this.adminSetNewState = false;
    this.pivotSummaryDisplayModesSubtotals = [{
      id: undefined,
      name: 'Same as the Data Fields'
    }, {
      id: 'percentOfColumnTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowTotal',
      name: 'Always Rows'
    }];
    this.pivotSummaryDisplayModesGrandTotals = [{
      id: 'percentOfColumnGrandTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowGrandTotal',
      name: 'Always Rows'
    }, {
      id: 'percentOfGrandTotal',
      name: 'Table (Absolute) Grand Total'
    }];
    this.shownYears = undefined;
    this.invisibleFields = [];
    this.saveStateToDbTimeout = setTimeout(() => {}, 0);
    this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.shownYearsPrev = undefined;
    this.isAdmin = false;
    this.pivotStateId = 0;
    this.percentOfTotalBasedOn = 'Subtotals';
    this.percentInDirection = '';
    this.percentOfChangeComputeType = '';
    this.cagrComputeType = '';
    this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.customSaveState = this.customSaveState.bind(this);
    this.customLoadState = this.customLoadState.bind(this);
    this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridOptions(); // this.stateData = new UserStateAndSetttings();
  }

  set setPreviewData(data) {
    if (data) {
      this.previewData = data;
    }
  }

  set setGridFields(data) {
    if (data) {
      this.gridFields = data;
    }
  }

  set setPreviewGridKey(data) {
    if (data) {
      this.previewGridKey = data;
    }
  }

  set setSelectedCurrency(data) {
    if (data) {
      this.selectedCurrency = {
        Id: data.CurrencyId,
        IsActive: true,
        Name: data.CurrencyName,
        CurrencyCode: data.CurrencyCode,
        CurrencyName: data.CurrencyName
      };
      this.currencyDropdownSelected = this.selectedCurrency;
    }
  }

  set setStudyType(data) {
    if (data) {
      this.studyType = data;
    }
  }

  set setVolumeYears(data) {
    if (data) {
      this.volumeYears = data;
    }
  }

  set setViewId(data) {
    if (data) {
      this.viewId = data;
      this.getPivotSettings();
      this.getPivotState();
    }
  }

  ngOnInit() {
    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  ngOnChanges(changes) {
    this.getPreviewData(this.studyData);
  }

  getPivotSettings() {
    this.sharedService.getPivotSettings(this.viewId).subscribe(res => {
      this.pivotGridOptions = res.Data;

      if (this.pivotGridOptions) {
        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      }
    });
  }

  getPivotState() {
    if (!this.stateData) {
      let stateData = undefined;
      this.sharedService.getPivotState(this.viewId).subscribe(res => {
        // in case state is not exists yet
        try {
          const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
          stateData = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.realMerge(new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(), JSON.parse(stateRes.StateData));
          this.pivotStateId = stateRes.PivotStateId;
        } catch (_a) {
          stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(); // stateData.state.fields = this.getGridFields();
        }

        this.directDatasourceRenderPivot(stateData);
      });
    } else {
      this.directDatasourceRenderPivot(this.stateData);
    }
  }

  directDatasourceRenderPivot(stateData) {
    var _this = this;

    return (0,D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (_this.pivotGridOptions.settings.isCube) {// let token = await this.getAzureAnalysisToken();
        // let cubesStore = CubeStoreHelper.setCubeStore(
        //   this.pivotGridOptions.settings.cubeSettings.catalog,
        //   this.pivotGridOptions.settings.cubeSettings.cube,
        //   token,
        //   this.devEndpoint
        // );
        // this.pivotGridOptions.pivotGridSource.store = cubesStore;
        // this.pivotGridDataSource = new PivotGridDataSource(
        //   this.pivotGridOptions.pivotGridSource as any
        // );
        // setTimeout(() => {
        //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);
        // }, 5000);
        // this.saveStateEnabled = true;
        // if (stateData.settings) {
        //   if (!stateData.settings.currency) {
        //     stateData.settings.currency =
        //       this.pivotGridOptions.pivotGridDefaultValues.currency;
        //   }
        //   if (!stateData.settings.currencyConversionType) {
        //     stateData.settings.currencyConversionType =
        //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
        //   }
        //   if (!stateData.settings.selectedYear) {
        //     stateData.settings.selectedYear.PeriodKey = 2021;
        //   }
        // }
        // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.stateData = stateData;
        // this.fillPivotCube();
        // setTimeout(() => {
        //   this.canCallSaveState = true;
        // }, 300);
      } else {
        if (stateData.settings) {
          if (!stateData.settings.currency) {
            stateData.settings.currency = _this.pivotGridOptions.pivotGridDefaultValues.currency;
          }

          if (!stateData.settings.currencyConversionType) {
            stateData.settings.currencyConversionType = _this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
          }

          if (!((_a = stateData.settings.selectedYear) === null || _a === void 0 ? void 0 : _a.PeriodKey)) {
            // stateData.settings.selectedYear = await this.getLatestAccessibleYear(
            //   this.sharedService.getUserData().userId,
            //   this.requestedView.databaseId,
            //   this.requestedView.viewId
            // );
            stateData.settings.selectedYear = _this.currentYear;
          } // if (!stateData.settings.unitOfVolume) {
          //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(
          //     this.requestedView.databaseId
          //   );
          // }


          if (!stateData.settings.unitOfMass) {
            // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(
            //   this.requestedView.databaseId
            // );
            stateData.settings.unitOfMass = {
              Id: 105,
              Name: 'Thousand Tonnes'
            };
          }
        } // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );


        _this.stateData = stateData;

        if (_this.previewData && _this.previewData.length) {
          //get all invisible fields
          _this.invisibleFields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => f.visible === false); //filter invisible fields

          _this.pivotGridOptions.pivotGridSource.fields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => !f.visible || !f.isCalculated); //get count of visible fields for calculated fields ids

          _this.firstAvailableId = _this.pivotGridOptions.pivotGridSource.fields.length; // remove all invisible data from the datasource

          if (_this.invisibleFields && _this.invisibleFields.length > 0) {
            for (const invisibleField of _this.invisibleFields) {
              _this.previewData.forEach(obj => {
                delete obj[invisibleField.dataField];
              });
            }
          }

          _this.fillPivot(_this.pivotGridOptions, _this.previewData);
        } else {
          _this.readPivotDataFromApi();
        }
      }
    })();
  }

  customSaveState(data, isChangeAutoSaveStatus) {
    var _a; // do not save state to db in case, states are emited too intensively


    clearTimeout(this.saveStateToDbTimeout);
    this.canCallSaveState = true; // const userData = this.sharedService.getUserData();
    // this.initChart();
    // allow to save state only in case all requested data is available

    if (this.viewId && this.canCallSaveState && this.pivotGridOptions && this.stateData) {
      this.stateData.state = data;
      this.stateChange.next(this.stateData); // find all shown years and reload pivot grid on change

      const yearField = this.stateData.state.fields.filter(f => f.dataField === this.yearDataFieldName);
      const hasCagrOrChange = this.stateData.settings.cagrState.isSet || this.stateData.settings.changePercentState.isSet;

      if (yearField && hasCagrOrChange) {
        const pivotGridInstance = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance;
        const pivotFridDataSource = pivotGridInstance.getDataSource();
        const areaIndex = yearField[0].areaIndex;
        const uniqArrByText = lodash__WEBPACK_IMPORTED_MODULE_3__.uniqBy(pivotGridInstance._dataController._columnsInfo[areaIndex], 'text');
        this.shownYears = uniqArrByText.map(t => parseInt(t.text)); // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists

        if (yearField[0].sortOrder === 'desc') {
          pivotFridDataSource.field(this.yearDataFieldName, {
            sortOrder: 'asc'
          });
          pivotFridDataSource.load();
        }

        if (!lodash__WEBPACK_IMPORTED_MODULE_3__.isEqual(this.shownYears, this.shownYearsPrev)) {
          this.shownYearsPrev = this.shownYears;
          pivotFridDataSource.load();
        }
      } // in case user is NOT admin and has disable automatic saving state or remember latest state
      else if (!isChangeAutoSaveStatus) {
        if (this.stateData.settings.rememberLatestState == undefined) {
          this.stateData.settings.rememberLatestState = this.pivotGridOptions.canSaveUserState;
        }

        if (this.stateData.settings.rememberLatestState == false) {
          return;
        }
      }

      this.saveStateToDbTimeout = setTimeout(() => {
        this.sharedService.setPivotState(this.viewId, 0, this.isAdmin, JSON.stringify(this.stateData)).subscribe(data => {
          if (data && this.pivotGridOptions.canSaveDefaultStateAndOptions && this.isAdmin) {
            this.alertService.info('The system will remember the last state!'); // after save state, save also settings

            this.saveSettings(this.viewId, this.pivotGridOptions); // set can save default state to false

            this.pivotGridOptions.canSaveDefaultStateAndOptions = false;
          }
        }, error => {
          throw new Error(error);
        });
      }, 2000);
    }
  }

  customLoadState() {
    if (this.stateData) {
      return this.stateData.state;
    }
  }

  deleteCustomState() {
    this.adminSetNewState = false;

    if (this.viewId && this.pivotStateId) {
      this.sharedService.deletePivotState(this.viewId, this.pivotStateId).subscribe(data => data, error => {
        throw new Error(error);
      }, () => {
        // finally read all data again
        // this.readPivotOptionsAndData();
        // this.readPivotDataFromApi();
        const stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings();
        this.directDatasourceRenderPivot(stateData);
      });
    }
  }

  saveSettings(currentlySelectedViewId, optionsDataSource) {
    let saveResult = false;
    const optionsDataSourceTemp = Object.assign({}, optionsDataSource);
    optionsDataSourceTemp.pivotGridSource.fields = optionsDataSourceTemp.pivotGridSource.fields.filter(f => !f.isCalculated); // set store to empty, system will read fresh data from backend next time

    optionsDataSourceTemp.pivotGridSource.store = [];
  }

  getPreviewData(studyData) {
    const previewData = [];
    this.shownYears = this.currentYear;
    studyData.map(item => {
      this.previousYears.map(year => {
        previewData.push({
          Channel: item.Channel,
          ProductType: item.ProductType,
          Year: year.year,
          Value: item[year.field]
        });
      });
      previewData.push({
        Channel: item.Channel,
        ProductType: item.ProductType,
        Year: this.currentYear,
        Value: item.CurrentYear
      });
      this.foreCastYears.map(year => {
        previewData.push({
          Channel: item.Channel,
          ProductType: item.ProductType,
          Year: year.year,
          Value: item[year.field]
        });
      }); // previewData.push({
      //   Channel: item.Channel,
      //   ProductType: item.ProductType,
      //   Year: this.foreCastYear,
      //   Value: item.Forecast1,
      // });
    }); // console.log(previewData);

    this.previewData = previewData; // this.pivotGridDataSource = new PivotGridDataSource({
    //   store: previewData,
    //   fields: this.getGridFields(),
    // });

    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  getGridFields() {
    return this.gridFields = [{
      dataField: 'Channel',
      area: 'row',
      caption: 'Channel',
      dataType: 'string',
      id: 0
    }, {
      dataField: 'ProductType',
      area: 'row',
      caption: 'ProductType',
      dataType: 'string',
      id: 1
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 2,
      caption: 'Sales',
      dataField: 'Value',
      dataFieldType: 'Value',
      width: 80,
      dataType: 'number',
      summaryType: 'sum',
      summaryDisplayMode: 'none',
      format: {
        type: 'fixedPoint',
        precision: 1
      },
      area: 'data'
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 3,
      caption: 'Year',
      dataField: 'Year',
      width: 30,
      dataType: 'string',
      summaryDisplayMode: 'none',
      area: 'column'
    }];
  }

  readPivotDataFromApi() {
    this.isLoadingService.add();
    this.yearDataFieldName = 'Year';
    this.studyService.getPscStudyData('ProductTypeSales', this.marketYearCategoryId, this.studyProjectMarketYearId, typeof this.currencyDropdownSelected !== 'undefined' ? this.currencyDropdownSelected.Id : 0, typeof this.unitOfMassDropdownSelected !== 'undefined' ? this.unitOfMassDropdownSelected.Id : 0, typeof this.currencyConversionTypeSelected !== 'undefined' ? this.currencyConversionTypeSelected : 0).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const studyDataObj = res.Data;
        const studyData = studyDataObj['ProductTypeSales'];
        const previewData = [];
        let index = 0;
        studyData.map((item, i) => {
          this.volumeYears.map(d => {
            this.gridFields.map(field => {
              if (typeof previewData[index] === 'undefined') {
                previewData[index] = {};
              }

              previewData[index][field.dataField] = item[field.dataField];

              if (field.dataField === 'Year') {
                previewData[index][field.dataField] = d.year;
              }

              if (field.dataField === 'Value') {
                previewData[index][field.dataField] = item[d.field];
              }
            });
            index++;
          });
        });
        this.previewData = previewData; // this.pivotGridDataSource = new PivotGridDataSource({
        //   store: this.previewData,
        //   fields: this.gridFields,
        // });

        if (typeof this.pivotGridOptions !== 'undefined') {
          this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
          this.pivotGridOptions.pivotGridSource.store = this.previewData;
          this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }

        this.fillPivot(this.pivotGridOptions, this.previewData); // when pivot data is loaded allow with small delay save state to the database

        setTimeout(() => {
          this.canCallSaveState = true;
        }, 300); // console.log(this.previewData);

        this.isLoadingService.remove();
      } else {
        this.alertService.danger(res.Data);
      }
    }, err => {
      const errorShow = typeof err.error !== 'undefined' ? err.error : 'Something went wrong. Please try again later.';
      this.alertService.danger(errorShow);
      this.isLoadingService.remove();
    });
  }

  getDataFieldName(fieldName) {
    if (fieldName == 'ProductTypeSales') {
      return 'ProductTypeSalesSHC';
    }

    return fieldName;
  }

  onOptionChanged(e) {}

  onInitialized(e) {}

  cellPrepared(e) {
    var _a, _b, _c, _d; // customize change % columns captions
    // console.log(this.stateData?.settings.changePercentState.computingType);


    const shownYearsInPivot = this.shownYears;

    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {
      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex].toString() + ' to ' + shownYearsInPivot[yearIndex].toString();
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      } //customize cagr columns captions


      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex] + ' to ' + shownYearsInPivot[yearIndex];
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      }
    }

    if (e.area === 'data') {
      if (e.cell.value) {
        e.cell.value.hasCd && e.cellElement.classList.add('pivot-grid-cell-has-cd');
      }
    }
  }

  onContentReady(e) {
    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource && this.pivotGridOptions.pivotGridSource.fields) {
      const calculatedFields = this.pivotGridOptions.pivotGridSource.fields.filter(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      for (const calculatedField of calculatedFields) {
        this.addCloseButtonToCalculatedField(calculatedField.id, calculatedField.calculatedFieldType);
      }
    } // change style for no data message


    const noDataElement = e.component.element().querySelector('.dx-pivotgrid-nodata');

    if (noDataElement) {
      setTimeout(() => {
        if (this.pivotGridNoDataMessage) {
          noDataElement.classList.add('noDataMessage');
        } else {
          noDataElement.classList.remove('noDataMessage');
        }
      }, 100);
    }

    if (this.pivotGrid && this.stateData && this.stateData.state) {// Allow next rows if you want to enable disabling pivot during waiting for component response
      //this.pivot.disabled = true;
      // not allow to user change state too fast, pivot component needs some time to save emit state
      //setTimeout(() => { this.pivot.disabled = false; }, 1000)
    }
  }

  onContextMenuPreparing(e) {
    // this.pivot.disabled = true;
    this.customizeContextMenu(e); //if (e.area == "row" || e.area == "column") {
    //    let id = e.columnIndex + "" + e.rowIndex;
    //    let tooltip = $("<span></span>").append($("<span id='" + id + "'></span>").html("")).appendTo(e.cellElement);
    //    let field = $("#" + id).closest('td');
    //    field.attr('title', e.cell.text);
    //}
  }

  customizeContextMenu(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    this.updateDefaultContextMenuTextsAndIcons(e);

    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {
      e.items.push({
        beginGroup: true,
        text: 'Delete Calculated Field',
        icon: 'fa fa-trash-alt',
        onItemClick: () => {
          const fieldToDelete = e.field;

          if (typeof this.stateData !== 'undefined') {
            switch (fieldToDelete.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }

          this.deleteCalculatedField(e.field.id);
        }
      });
      e.items.push({
        beginGroup: true,
        text: 'Edit Calculated Field',
        icon: 'fa fa-pencil-alt',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            switch (e.field.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.isPercentOfTotalPopup = true;
                this.stateData.settings.percentOfTotalState.summaryDisplayMode =  false || '';
                this.pivotSummaryDisplayModesSubtotals[0].id = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.isPercentOfChangePopup = true;
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.isCagrPopup = true;
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }
        }
      });
      return;
    }

    let openMenuItems = [];

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.menuSettings.isCurrencySelection) {
      openMenuItems.push({
        icon: 'fa fa-money',
        text: 'Change Currency',
        onItemClick: () => {
          this.eventsCustomAction.next('currencySelector');
        }
      });
    }

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.menuSettings.isCurrencyConversion) {
      openMenuItems.push({
        icon: 'fa fa-exchange-alt',
        text: 'Constant',
        onItemClick: () => {
          this.eventsCustomAction.next('currencyConversionSelector');
        }
      });
    }

    if ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.menuSettings.isUnitsOfVolume) {
      openMenuItems.push({
        icon: 'fa fa-fill-drip',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('massUnitSelector');
        }
      });
    }

    if ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.menuSettings.isUnitsOfMass) {
      openMenuItems.push({
        icon: 'fa fa-balance-scale',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('volumeUnitSelector');
        }
      });
    }

    e.items.push({
      beginGroup: true,
      text: 'Reset to Default',
      icon: 'fas fa-sync-alt',
      onItemClick: () => {
        this.deleteCustomState();
      }
    });
    e.items.push({
      beginGroup: true,
      text: 'Adjust Parameters',
      icon: 'fa fa-sliders-h',
      items: openMenuItems
    });

    if (e.field && e.field.area === 'data' && this.enabledInContextMenu(e.field)) {
      let calculatedFieldsItems = [];

      if ((_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.settings.calculatedFields.isPercentOfTotal) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal,
          onItemClick: () => {
            var _a, _b;

            this.isPercentOfTotalPopup = true;
            this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

            if (((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.percentOfTotalState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.percentOfTotalState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.isPercentOfChange) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent,
          onItemClick: () => {
            var _a;

            this.isPercentOfChangePopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.changePercentState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.changePercentState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_g = this.pivotGridOptions) === null || _g === void 0 ? void 0 : _g.settings.calculatedFields.isCagr) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr,
          onItemClick: () => {
            var _a;

            this.isCagrPopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.cagrState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.cagrState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      e.items.push({
        beginGroup: true,
        text: 'Add Calculated Field',
        icon: 'fa fa-calculator',
        items: calculatedFieldsItems
      });
    } // show only case if exist two or more datafields


    if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType)).length >= 2) {
      const dataFieldsHeaders = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'Rows' : 'Columns';
      e.items.push({
        beginGroup: true,
        text: 'Show Data Field Headers in ' + dataFieldsHeaders,
        icon: 'fa fa-table',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            this.stateData.settings.dataFieldArea = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.row : src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column;
          }
        }
      });
    }
  }

  deleteCalculatedField(fieldId) {
    var _a, _b;

    (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.splice(this.pivotGridOptions.pivotGridSource.fields.map(m => m.id).indexOf(fieldId), 1);
    this.firstAvailableId--;

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) {
      this.readPivotDataFromApi();
    } else {
      if (typeof this.pivotGridOptions !== 'undefined') {
        this.fillPivot(this.pivotGridOptions, this.previewData);
      }
    }
  }

  updateDefaultContextMenuTextsAndIcons(e) {
    var _a;

    let rowName = undefined;
    let rowCaption;

    if ((_a = e.cell) === null || _a === void 0 ? void 0 : _a.path) {
      if (e.cell && e.area === 'row') {
        const path = e.cell.path.length - 1;
        rowName = e.rowFields[path].dataField;
        rowCaption = e.rowFields[path].caption;
      } else if (e.cell && e.area === 'column') {
        const path = e.cell.path.length - 1;
        rowName = e.columnFields[path].dataField;
        rowCaption = e.columnFields[path].caption;
      }

      const expandAll = e.items.find(f => f.text.includes('Expand All'));

      if (expandAll) {
        expandAll.icon = 'fas fa-plus';
        expandAll.text = 'Expand' + ' ' + rowCaption;
      }

      const collapseAll = e.items.find(f => f.text.includes('Collapse All'));

      if (collapseAll) {
        collapseAll.icon = 'fas fa-minus';
        collapseAll.text = 'Collapse' + ' ' + rowCaption;
      }
    }

    const fieldChooser = e.items.find(f => f.text.includes('Show Field Chooser'));

    if (fieldChooser) {
      fieldChooser.text = 'FieldChooser Text';
    }

    const exportToExcel = e.items.find(f => f.text.includes('Export to'));

    if (exportToExcel) {
      exportToExcel.text = 'Export to excel';
    }

    const sorts = e.items.filter(f => f.text.includes('Sort'));

    if (sorts) {
      for (let sort of sorts) {
        sort.icon = 'fas fa-sort';
      }
    }
  }

  enabledInContextMenu(field) {
    if (field.dataFieldType === src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.AvgPrice) {
      return false;
    } else {
      return true;
    }
  }

  addCloseButtonToCalculatedField(fieldId, datafieldType) {
    const calculatedFieldObj = $(".dx-area-field-content:contains('" + datafieldType + "')").append("<i id='" + src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.removeAllSpaces(datafieldType) + "' class='closeButton fas fa-times-circle'></i>");
    calculatedFieldObj.parent().parent().css('padding-right', '0').css('margin-right', '0 !important');
    calculatedFieldObj.children().off().on('click', () => {
      if (typeof this.stateData !== 'undefined') {
        switch (datafieldType) {
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
            this.stateData.settings.percentOfTotalState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
            this.stateData.settings.changePercentState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
            this.stateData.settings.cagrState.isSet = false;
            break;
        }
      }

      this.deleteCalculatedField(fieldId);
    });
  }

  currencySelectionChanged(currency) {
    this.currencyDropdownSelected = currency; // this.stateData.settings.currency = currency;

    this.readPivotDataFromApi(); // // on currency change update % of total caption if exists
    // const percentOfTotalField =
    //   this.pivotGridOptions.pivotGridSource.fields.find(
    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal
    //   );
    // if (percentOfTotalField) {
    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();
    // }
  }

  currencyConversionSelectionChanged(currencyConversionType) {
    this.currencyConversionTypeSelected = currencyConversionType; // this.stateData.settings.currencyConversionType = currencyConversionType;

    this.readPivotDataFromApi();
  }

  massUnitSelectionChanged(unitOfMass) {
    this.unitOfMassDropdownSelected = unitOfMass; // this.stateData.settings.unitOfMass = unitOfMass;

    this.readPivotDataFromApi();
  }

  getUserSettings() {
    const userSettings = {
      currency: {
        Id: this.selectedCurrency.Id,
        Code: this.selectedCurrency.CurrencyCode,
        Name: this.selectedCurrency.CurrencyName
      },
      currencyConversionType: 1,
      unitOfMass: {
        Id: 103,
        Name: 'Thousand Lbs'
      },
      unitOfMeasure: {
        Id: 101,
        Name: 'Metric Tonnes'
      },
      unitOfVolume: {
        Id: 7,
        Name: 'Quart (US)'
      },
      selectedYear: {
        PeriodKey: this.currentYear,
        Name: this.currentYear.toString()
      },
      percentOfTotalState: {
        isSet: true,
        dataField: 'Value',
        basedOn: 'Subtotals',
        summaryDisplayMode: 'percentOfColumnTotal'
      },
      changePercentState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'Previous (Shown) Year'
      },
      cagrState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'First (Shown) Year'
      },
      dataFieldArea: 'column',
      userChartSetting: {
        dataFieldsDisplayMode: 'singleAxis',
        chartType: 'Column'
      },
      isReducedDataSource: false,
      rememberLatestState: true
    };
    return userSettings;
  }

  exportToExcel() {
    var _a, _b;

    this.getUserSettings();
    this.studyService.changeExcelLoading(true);
    let title = '...';
    const menuSettings = (_b = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.menuSettings;
    const pivotFields = this.pivotGridDataSource.fields();
    const userSettings = this.getUserSettings();
    let finalData;

    if (this.previewData[0].hasOwnProperty('Year')) {
      finalData = this.previewData.sort((a, b) => a.Year - b.Year);
    } else {
      finalData = this.previewData;
    }

    this.studyService.exportToExcel(finalData, pivotFields, userSettings, title, menuSettings, 0).subscribe(res => {
      let fileName = 'PivotTest';

      if (title.length > 3) {
        fileName = title.split(' ').join('');
        fileName = fileName.split('-').join('_');
      }

      var file = new Blob([res], {
        type: 'application/vnd.ms-excel'
      });
      var fileURL = URL.createObjectURL(file);
      let a = document.createElement('a');
      document.body.appendChild(a);
      a.style.display = 'none';
      a.href = fileURL;
      a.target = '_blank';
      a.download = `${fileName}.xlsx`;
      a.click();
      a.remove();
      this.studyService.changeExcelLoading(false);
    }, error => {
      this.studyService.changeExcelLoading(false);
      console.log(error);
    });
  }

  exportToCvs() {
    this.studyService.changeExcelLoading(true);
    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    this.studyService.exportToCsv(this.previewData, fileName);
  }

  exportToShanptshot() {
    var _a;

    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_2__.Workbook();
    const worksheet = workbook.addWorksheet('Main sheet');
    (0,devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__.exportPivotGrid)({
      component: (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance,
      worksheet: worksheet,
      customizeCell: function (options) {
        const excelCell = options;
        excelCell.excelCell.font = {
          name: 'Calibri',
          size: 11
        };
        excelCell.excelCell.alignment = {
          horizontal: 'left',
          vertical: 'top'
        };
      }
    }).then(function () {
      workbook.xlsx.writeBuffer().then(function (buffer) {
        (0,file_saver__WEBPACK_IMPORTED_MODULE_4__.saveAs)(new Blob([buffer], {
          type: 'application/octet-stream'
        }), fileName + '.xlsx');
      });
    });
  }

  fillPivot(pivotGridOptions, pivotData) {
    var _a;

    this.saveStateEnabled = false;
    const selectedYear = this.stateData ? this.stateData.settings.selectedYear : this.currentYear;

    if (pivotGridOptions && ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings)) {
      // If is visible like default, add % of total to pivot
      if (this.stateData.settings.percentOfTotalState.isSet) {
        this.addPercentOfTotalsToPivot(true);
      } // If is visible like default, add change % to pivot


      if (this.stateData.settings.changePercentState.isSet) {
        this.addPrecentOfChangeToPivot(true);
      } // If is visible like default, add CAGR to pivot


      if (this.stateData.settings.cagrState.isSet) {
        this.addCAGRToPivot(true);
      }

      const pivotGridSource = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridSource();
      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;
      pivotGridSource.store = pivotData; // make copy of datasource without reference to old object

      let sourceCopy = lodash__WEBPACK_IMPORTED_MODULE_3__.cloneDeep(pivotGridSource); // if administrator set default sorting to true do not use any special sorting

      if (!pivotGridOptions.settings.useDefaultSorting) {
        // if some special sorting is applied
        if (pivotGridOptions.settings.specialSorting && pivotGridOptions.settings.specialSorting.length) {
          for (let specialSorting of pivotGridOptions.settings.specialSorting) {
            if (specialSorting.fieldName) {
              let orderAray = [];

              if (pivotData) {
                let rowData = 0;

                for (let row of pivotData) {
                  // if (row.Year == selectedYear.PeriodKey) {
                  // in case value datafield is not exists, must exists unit
                  rowData = row.Value === undefined ? row.Unit : row.Value;

                  if (orderAray.some(r => r.field === row[specialSorting.fieldName])) {
                    orderAray.find(r => r.field === row[specialSorting.fieldName]).valueSum += rowData;
                  } else {
                    orderAray.push({
                      field: row[specialSorting.fieldName],
                      valueSum: rowData
                    });
                  } // }

                }

                orderAray = orderAray.sort((a, b) => b.valueSum - a.valueSum).map(m => m.field);
                orderAray.forEach((item, index) => {
                  if (item.startsWith(specialSorting.beginningWith)) {
                    orderAray.push(orderAray.splice(index, 1)[0]);
                  }
                });
                const sortingField = sourceCopy.fields.find(f => f.dataField === specialSorting.fieldName);

                if (sortingField) {
                  sortingField.sortOrder = 'asc';

                  sortingField.sortingMethod = (b, a) => {
                    // if (!this.isHeaderFilterLoading) {
                    //   for (const item of orderAray) {
                    //     if (a.value === item) {
                    //       return 1;
                    //     }
                    //     if (b.value === item) {
                    //       return -1;
                    //     }
                    //   }
                    // }
                    return b.value.localeCompare(a.value);
                  };
                }
              }
            }
          }
        } else {
          this.applySortingRolesByYear();
        }
      }

      if (this.pivotGridDataSource) {
        this.pivotGridDataSource.dispose();
      } // check if source contains dataType property and set visibility to false


      if (pivotGridSource.store && pivotGridSource.store.length && pivotGridSource.store[0].DataType) {
        let dataType = sourceCopy.fields.filter(d => d.dataField === 'DataType');
        dataType[0].visible = false;
      } // check all datafields if contains an exception in calculating


      const allDatafields = sourceCopy.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false);

      for (let field of allDatafields) {
        let newField = this.returnSpecialSumamryField(field);

        if (newField) {
          sourceCopy.fields.push(newField);
          field.visible = false;
        }
      } // remove unused properties


      for (let field of sourceCopy.fields) {
        // remove group properties when group is empty
        if (field.groupName == '') {// delete field.groupName;
          // delete field.groupIndex;
        } // in case fileld is grouped field parse index to int
        else if (field.groupName && field.groupName.length > 0) {
          let groupIndex = field.groupIndex ? parseInt(field.groupIndex.toString()) : 0;
          field.groupIndex = groupIndex;
        }
      }

      if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.settings.groupedFields) {
        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {
          let field = {
            groupName: groupedField.groupName,
            area: groupedField.area
          };
          sourceCopy.fields.push(field);
        }
      }

      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](sourceCopy); // this solves alphabetical filtering in filters

      setTimeout(() => {
        var _a;

        const source = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
        const getFieldValues = source.getFieldValues;
        this.isHeaderFilterLoading = false;
        let that = this;

        source.getFieldValues = function () {
          that.isHeaderFilterLoading = true;
          return getFieldValues.apply(this, arguments).always(function () {
            that.isHeaderFilterLoading = false;
          });
        };
      }, 1);
      src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);

      if (pivotGridOptions.settings && (pivotGridOptions.settings.menuSettings.isChart || pivotGridOptions.settings.charts.isVisible)) {// this.initChart();
      }
    } //cutomize texts in pivot
    // this.updateDefaultPivotTexts();
    // apply special filtering
    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {
    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);
    //}


    setTimeout(() => {
      this.saveStateEnabled = true;
    }, 1);
  }

  returnSpecialSumamryField(fieldOriginal) {
    if (fieldOriginal.summaryType === 'range') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption || '';
      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.dataField = fieldOriginal.dataField || '';

      fieldNew.calculateCustomSummary = e => this.calculateSummaryValueRange(e, fieldOriginal);

      fieldNew.customizeText = e => this.customizeRangeText(e);

      fieldNew.isCalculated = true;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.range;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else if (fieldOriginal.summaryType === 'sumCdOd') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption;

      fieldNew.calculateCustomSummary = options => this.calculateSummaryValueCdOd(options, fieldOriginal);

      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.isCalculated = false;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.none;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else {
      return undefined;
    }
  }

  calculateSummaryValueRange(e, field) {
    var _a, _b;

    const valueNearZero = Number.EPSILON;

    switch (e.summaryProcess) {
      case 'start':
        e.totalValue = 0;
        e.values = [0, 0];
        break;

      case 'calculate':
        if (e.value != -1.7976931348623157e308) {
          if (!e.values[0] || !e.values[1]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value < e.values[0]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value > e.values[1]) {
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }
        }

        break;

      case 'finalize':
        let min = e.values[0] ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision) : 0;
        let max = e.values[1] ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed((_b = field.format) === null || _b === void 0 ? void 0 : _b.precision) : 0; // if (
        //   GlobalSettings.SpecialValueForSqlMoney.find(
        //     (v) => v === Number(min)
        //   ) ||
        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))
        // ) {
        //   ErrorHelper.informAdministrator(
        //     this.appCommonDataService,
        //     'Unhandled range value - (' +
        //       min +
        //       ')(' +
        //       max +
        //       ') ' +
        //       Common.objToString(this.requestedView) +
        //       'Environment: ' +
        //       Common.objToString(
        //         this.appEnvironmentData.getEnvironmentSettings()
        //       ) +
        //       ' User: ' +
        //       Common.objToString(this.sharedService.getUserData())
        //   );
        // }

        if (min === max) {
          e.totalValue = min;
        } else if (!min) {
          e.totalValue = max;
        } else {
          e.totalValue = min + ' - ' + max;
        }

        break;
    }
  }

  customizeRangeText(e) {
    if (e.value === undefined) {
      return src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === null || src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === void 0 ? void 0 : src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash;
    } else {
      return e.value;
    }
  }

  calculateSummaryValueCdOd(options, field) {
    var _a;

    switch (options.summaryProcess) {
      case 'start':
        options.totalValue = {
          value: 0,
          hasCd: false,

          valueOf() {
            return this.value;
          },

          toString() {
            return this.value.toString();
          },

          indexOf() {
            const stringValue = this.toString();
            return stringValue.indexOf.apply(this, arguments);
          }

        };
        break;

      case 'calculate':
        options.totalValue.value += options.value[field.dataField] || 0;
        options.totalValue.hasCd = options.totalValue.hasCd || options.value.DataType === 'cd';
        break;

      case 'finalize':
        let totalValue = options.totalValue;
        totalValue.value = totalValue.value.toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        options.totalValue = totalValue;
        break;
    }
  }

  applySortingRolesByYear() {
    this.yearDataFieldName = 'Year';
    setTimeout(() => {
      var _a;

      const pivotGridDataSource = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();

      const columnFields = pivotGridDataSource._fields.filter(f => f.area === 'column');

      const datafields = pivotGridDataSource._fields.filter(f => f.area === 'data');

      const yearFieldOnFirstPositon = columnFields.filter(f => f.areaIndex === 0 && f.dataField === this.yearDataFieldName); // apply this role only in case, year field is on first column position

      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {
        const rowFields = pivotGridDataSource._fields.filter(f => f.area === 'row');

        const selectedYear = this.currentYear; // const selectedYear = this.stateData
        //   ? this.stateData.settings.selectedYear.PeriodKey
        //   : 2021;

        if (selectedYear) {
          for (const field of rowFields) {
            pivotGridDataSource.field(field.dataField, {
              sortBySummaryField: datafields ? datafields.filter(f => f.areaIndex === 0)[0].dataField : undefined,
              sortBySummaryPath: [selectedYear],
              sortOrder: 'desc'
            });
          }

          pivotGridDataSource.load();
        }
      }
    }, 100);
  }

  setCalculatedFieldFromTopMenu(value) {
    var _a;

    const type = value.itemName;
    const dataField = value.dataField;

    switch (type) {
      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
        this.isPercentOfTotalPopup = true;
        this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.percentOfTotalState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
        this.isPercentOfChangePopup = true;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.changePercentState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
        this.isCagrPopup = true; // this.stateData?.settings.cagrState.dataField = dataField;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.cagrState.dataField = dataField;
        }

        break;
    }
  }

  onBasedOnChange(isInit) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.basedOn = this.percentOfTotalBasedOn;
    }

    this.summaryDisplayModeItems = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.basedOn) === 'Subtotals' ? this.pivotSummaryDisplayModesSubtotals : this.pivotSummaryDisplayModesGrandTotals;

    if (isInit === false && typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';
    }
  }

  onComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.changePercentState.computingType = this.percentOfChangeComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.changePercentState.computingType =
    //     ComputingType.FirstYear;
    // }

  }

  onCagrComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.cagrState.computingType = this.cagrComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;
    // }

  }

  addPercentOfTotalsToPivot(iSCallFromFillPivot) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = this.percentInDirection;
    }

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);
    } else {
      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);
    }
  }

  addPercentOfTotalsToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of total exists

      const percentOfTotal = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal);

      if (percentOfTotal && this.pivotGridDataSource) {
        fieldId = percentOfTotal.id;
        percentOfTotal.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
        percentOfTotal.caption = this.getCaptionForPercentOfTotal();
        percentOfTotal.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.dataField) || 'Value';
        percentOfTotal.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        this.pivotGridDataSource.field(percentOfTotal.id, {
          summaryDisplayMode: percentOfTotal.summaryDisplayMode,
          caption: percentOfTotal.caption,
          calculatedFieldType: percentOfTotal.calculatedFieldType,
          dataField: ((_e = this.stateData) === null || _e === void 0 ? void 0 : _e.settings.percentOfTotalState.dataField) || 'Value'
        });
        this.pivotGridDataSource.load(); // CommonHelper.updatePlaceholders(
        //   this.pivotGridDataSource,
        //   this.stateData
        // );
      } else {
        this.firstAvailableId = ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.pivotGridSource.fields.length) || 0;
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfTotal();
        field.dataField = ((_g = this.stateData) === null || _g === void 0 ? void 0 : _g.settings.percentOfTotalState.dataField) || 'Value';
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.isMeasure = true;
        field.visible = true;
        field.calculateSummaryValue = undefined;
        field.summaryDisplayMode = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.percentOfTotalState.summaryDisplayMode) || '';
        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_j = this.pivotGridOptions) === null || _j === void 0 ? void 0 : _j.settings.calculatedFields.formatPrecision) || 1
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = ((_k = this.stateData) === null || _k === void 0 ? void 0 : _k.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        (_l = this.pivotGridOptions) === null || _l === void 0 ? void 0 : _l.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && typeof this.pivotGridOptions !== 'undefined') {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfTotalPopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.percentOfTotalState.isSet = true;
      }
    }
  }

  addPercentOfTotalsToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    this.removeAllHiddenCalculatedFields();
    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForPercentOfTotal();
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.dataField) || '';
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.isMeasure = true;
    field.visible = true;
    field.calculateSummaryValue = undefined;
    field.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isPercentOfTotalPopup = false;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  removeAllHiddenCalculatedFields() {
    var _a;

    if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state) && this.pivotGridDataSource) {
      this.stateData.state.fields = this.stateData.state.fields.filter(a => a.area !== undefined);
      this.pivotGridDataSource.state(this.stateData.state);
    }
  }

  getCaptionForPercentOfTotal() {
    var _a, _b, _c, _d;

    let caption = ''; //check if exist 2 or more datafields

    if (typeof this.pivotGridOptions !== 'undefined' && ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length) >= 2) {
      const percentOfTotaldatafield = (_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.dataField;
      let currentDatafieldCaption = '';

      if (this.pivotGridOptions.settings.isCube) {
        currentDatafieldCaption = // this.pivotGridOptions.pivotGridSource.fields.find(
        //   (f) => f.dataField === percentOfTotaldatafield
        // ).caption;
        'Cube Caption';
      } else {
        if (typeof this.pivotGridOptions !== 'undefined') {
          const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfTotaldatafield);

          if (fieldCaption) {
            currentDatafieldCaption = fieldCaption.caption;
          }
        }
      }

      caption = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal + ' ' + currentDatafieldCaption;
    } else {
      caption = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    }

    return caption;
  }

  addPrecentOfChangeToPivot(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of change exists

      const percentOfChange = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent);

      if (percentOfChange && this.pivotGridDataSource) {
        fieldId = percentOfChange.id;
        this.pivotGridDataSource.field(percentOfChange.id, {
          caption: this.getCaptionForPercentOfChange(),
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.dataField) || 'Value',
          calculateSummaryValue: e => this.calculateSummaryValuePercentOfChange(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfChange();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.changePercentState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValuePercentOfChange(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfChangePopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.changePercentState.isSet = true;
      }
    }
  }

  calculateSummaryValuePercentOfChange(e) {
    var _a, _b;

    if (e.parent('column')) {
      let base;

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        let yearIndex = 0;

        for (const index in e.parent('column').children()) {
          if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
            yearIndex = parseInt(index);
            break;
          }
        }

        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const returnValue = e.value() / base.value() - 1;
      return isNaN(returnValue) || returnValue && returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  getCaptionForPercentOfChange() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const percentOfChangeDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfChangeDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (percentOfChangeDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
    }

    return caption;
  }

  addCAGRToPivot(iSCallFromFillPivot) {
    var _a;

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addCAGRToPivotCube(iSCallFromFillPivot);
    } else {
      this.addCAGRToPivotArray(iSCallFromFillPivot);
    }
  }

  addCAGRToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case cagr exists, remove and recreate it (case for edit)

      const cagr = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      if (cagr && this.pivotGridDataSource) {
        fieldId = cagr.id;
        this.pivotGridDataSource.field(cagr.id, {
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.dataField) || 'Value',
          caption: this.getCaptionForCagr(),
          calculateSummaryValue: e => this.calculateSummaryValueCagr(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForCagr();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isCagrPopup = false;
      if (this.stateData) this.stateData.settings.cagrState.isSet = true;
    }
  }

  addCAGRToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c;

    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForCagr();
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField) || 'Value';
    field.isMeasure = true;
    field.visible = true;

    field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isCagrPopup = false;

    if (this.stateData) {
      this.stateData.settings.cagrState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  getCaptionForCagr() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const cagrDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataField === cagrDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (cagrDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    }

    return caption;
  }

  calculateSummaryValueCagr(e) {
    var _a, _b;

    const shownYearsInPivot = this.shownYears;

    if (e.parent('column') && shownYearsInPivot) {
      let base;
      let yearIndex = 0;
      let prevYearIndex = 0;

      for (const index in e.parent('column').children()) {
        if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
          yearIndex = parseInt(index);
          break;
        }
      }

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
        prevYearIndex = 0;
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();
      const yearSpan = shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];
      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;
      return isNaN(returnValue) || returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  onChangeAutoSaveStatus(statusValue) {
    var _a;

    if (this.stateData) {
      this.stateData.settings.rememberLatestState = statusValue;
    }

    if (statusValue == false) {
      this.alertService.info('The system will remember this state!');
    } else {
      this.alertService.info('The system will remember the last used state!');
    }

    this.canCallSaveState = true;
    this.customSaveState((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state, true);
  }

}

ProductTypeSalePreviewComponent.ɵfac = function ProductTypeSalePreviewComponent_Factory(t) {
  return new (t || ProductTypeSalePreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_20__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_15__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__.SharedService));
};

ProductTypeSalePreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({
  type: ProductTypeSalePreviewComponent,
  selectors: [["app-product-type-sale-preview"]],
  viewQuery: function ProductTypeSalePreviewComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    }
  },
  inputs: {
    studyData: "studyData",
    currentYear: "currentYear",
    foreCastYears: "foreCastYears",
    previousYears: "previousYears",
    setPreviewData: "setPreviewData",
    setGridFields: "setGridFields",
    setPreviewGridKey: "setPreviewGridKey",
    setSelectedCurrency: "setSelectedCurrency",
    setStudyType: "setStudyType",
    setVolumeYears: "setVolumeYears",
    setViewId: "setViewId"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵNgOnChangesFeature"]],
  decls: 8,
  vars: 33,
  consts: [[3, "setSelectedCurrency", "pivotGridOptions", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus"], ["id", "pivotGrid", "showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser", "showTotalsPrior", "dataFieldArea", "onContextMenuPreparing", "onOptionChanged", "onInitialized", "onContentReady", "onCellPrepared"], ["pivotGrid", ""], [3, "allowSearch"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], [4, "ngIf"], [1, "popup", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "visible", "visibleChange"], [4, "dxTemplate", "dxTemplateOf"], [1, "form"], [1, "dx-fieldset"], [1, "dx-field"], [1, "dx-field-label"], [1, "dx-field-value"], [3, "items", "value", "valueChange", "onValueChanged", "onInitialized"], ["class", "dx-field", 4, "ngIf"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "disabled", "onClick"], ["displayExpr", "name", "valueExpr", "id", 3, "items", "value", "valueChange"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "onClick"]],
  template: function ProductTypeSalePreviewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "app-preview-top-menu", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("currencySelectionChanged", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_currencySelectionChanged_0_listener($event) {
        return ctx.currencySelectionChanged($event);
      })("currencyConversionSelectionChanged", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_currencyConversionSelectionChanged_0_listener($event) {
        return ctx.currencyConversionSelectionChanged($event);
      })("massUnitSelectionChanged", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_massUnitSelectionChanged_0_listener($event) {
        return ctx.massUnitSelectionChanged($event);
      })("onExportToExcel", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_onExportToExcel_0_listener() {
        return ctx.exportToExcel();
      })("onExportToCvs", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_onExportToCvs_0_listener() {
        return ctx.exportToCvs();
      })("onExportSnapshot", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_onExportSnapshot_0_listener() {
        return ctx.exportToShanptshot();
      })("calculatedFieldItemSelected", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_calculatedFieldItemSelected_0_listener($event) {
        return ctx.setCalculatedFieldFromTopMenu($event);
      })("onChangeAutoSaveStatus", function ProductTypeSalePreviewComponent_Template_app_preview_top_menu_onChangeAutoSaveStatus_0_listener($event) {
        return ctx.onChangeAutoSaveStatus($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-pivot-grid", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onContextMenuPreparing", function ProductTypeSalePreviewComponent_Template_dx_pivot_grid_onContextMenuPreparing_1_listener($event) {
        return ctx.onContextMenuPreparing($event);
      })("onOptionChanged", function ProductTypeSalePreviewComponent_Template_dx_pivot_grid_onOptionChanged_1_listener($event) {
        return ctx.onOptionChanged($event);
      })("onInitialized", function ProductTypeSalePreviewComponent_Template_dx_pivot_grid_onInitialized_1_listener($event) {
        return ctx.onInitialized($event);
      })("onContentReady", function ProductTypeSalePreviewComponent_Template_dx_pivot_grid_onContentReady_1_listener($event) {
        return ctx.onContentReady($event);
      })("onCellPrepared", function ProductTypeSalePreviewComponent_Template_dx_pivot_grid_onCellPrepared_1_listener($event) {
        return ctx.cellPrepared($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](3, "dxo-field-chooser", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "dxo-state-storing", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](5, ProductTypeSalePreviewComponent_div_5_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](6, ProductTypeSalePreviewComponent_div_6_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](7, ProductTypeSalePreviewComponent_div_7_Template, 3, 7, "div", 5);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("setSelectedCurrency", ctx.selectedCurrency)("pivotGridOptions", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](31, _c2))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](32, _c3))("allowFiltering", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowFiltering) || false)("allowExpandAll", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowExpandAll) || false)("showBorders", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showBorders) || false)("showColumnGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnGrandTotals) || false)("showRowGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowGrandTotals) || false)("showRowTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowTotals) || false)("showColumnTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnTotals) || false)("showTotalsPrior", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showTotalsPrior) || "")("dataFieldArea", (ctx.stateData == null ? null : ctx.stateData.settings == null ? null : ctx.stateData.settings.dataFieldArea) || "");
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSearch", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("enabled", ctx.saveStateEnabled)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
    }
  },
  directives: [_shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__.PreviewTopMenuComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoFieldChooserComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoStateStoringComponent, _angular_common__WEBPACK_IMPORTED_MODULE_25__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxPopupComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxSelectBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxButtonComponent],
  styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kdWN0LXR5cGUtc2FsZS1wcmV2aWV3LmNvbXBvbmVudC5jc3MifQ== */"]
});

/***/ }),

/***/ 40333:
/*!********************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/product-type-sales/product-type-sales.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProductTypeSalesComponent": () => (/* binding */ ProductTypeSalesComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var src_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/common.service */ 23115);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 42473);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _product_type_sale_preview_product_type_sale_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./product-type-sale-preview/product-type-sale-preview.component */ 12642);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);

























function ProductTypeSalesComponent_div_16_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r16.currentCurrency.CurrencyName, " (", ctx_r16.currentCurrency.CurrencyCode, ") ");
} }
function ProductTypeSalesComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, ProductTypeSalesComponent_div_16_div_3_Template, 2, 2, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r0.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r0.currentCurrency);
} }
const _c0 = function () { return { width: 200 }; };
function ProductTypeSalesComponent_ng_container_17_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-drop-down-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onItemClick", function ProductTypeSalesComponent_ng_container_17_div_2_Template_dx_drop_down_button_onItemClick_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r24.onCalculatedItemClick($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](2, _c0))("items", ctx_r17.calculatorContextMenuItems);
} }
function ProductTypeSalesComponent_ng_container_17_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_ng_container_17_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r26.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_ng_container_17_div_6_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r28.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_ng_container_17_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r31.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_ng_container_17_dxi_item_7_div_1_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_ng_container_17_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r34.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_ng_container_17_dxi_item_8_div_1_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_9_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_ng_container_17_dxi_item_9_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r38); const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r37.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r36.disabledSignOffButton);
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_ng_container_17_dxi_item_9_div_1_Template, 2, 1, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_10_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_ng_container_17_dxi_item_10_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r40.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_dxi_item_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_ng_container_17_dxi_item_10_div_1_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_ng_container_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductTypeSalesComponent_ng_container_17_div_2_Template, 2, 3, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, ProductTypeSalesComponent_ng_container_17_div_4_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, ProductTypeSalesComponent_ng_container_17_div_6_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, ProductTypeSalesComponent_ng_container_17_dxi_item_7_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, ProductTypeSalesComponent_ng_container_17_dxi_item_8_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, ProductTypeSalesComponent_ng_container_17_dxi_item_9_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, ProductTypeSalesComponent_ng_container_17_dxi_item_10_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r1.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r1.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r1.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r1.isLockedStudy);
} }
function ProductTypeSalesComponent_dxi_column_20_dxi_column_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    const volumeYear_r43 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 120)("dataField", volumeYear_r43.field)("caption", volumeYear_r43.year)("allowEditing", volumeYear_r43.isEditable)("allowFiltering", false)("visible", volumeYear_r43.isVisible)("cellTemplate", volumeYear_r43.cellTemplate);
} }
function ProductTypeSalesComponent_dxi_column_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-column", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_dxi_column_20_dxi_column_1_Template, 1, 7, "dxi-column", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r2.volumeYearsShow);
} }
function ProductTypeSalesComponent_dxi_column_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    const currentYearShow_r44 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 120)("dataField", currentYearShow_r44.field)("caption", currentYearShow_r44.year)("allowEditing", currentYearShow_r44.isEditable)("allowFiltering", false)("visible", currentYearShow_r44.isVisible)("cellTemplate", currentYearShow_r44.cellTemplate);
} }
function ProductTypeSalesComponent_ng_container_22_dxi_column_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 77);
} if (rf & 2) {
    const forecastYear_r46 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 120)("dataField", forecastYear_r46.field)("caption", forecastYear_r46.year)("allowEditing", forecastYear_r46.isEditable)("allowFiltering", false)("visible", forecastYear_r46.isVisible)("cellTemplate", forecastYear_r46.cellTemplate);
} }
function ProductTypeSalesComponent_ng_container_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_ng_container_22_dxi_column_1_Template, 1, 7, "dxi-column", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r4.forecastYearsShow);
} }
function ProductTypeSalesComponent_dxi_column_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 78);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function ProductTypeSalesComponent_div_27_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_div_27_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r51); const d_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r49.deleteRow(d_r47.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_div_27_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_div_27_dx_button_1_Template, 1, 0, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r47.data.DataRowId !== null);
} }
function ProductTypeSalesComponent_div_28_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "span", 84);
} }
function ProductTypeSalesComponent_div_28_input_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 85);
} if (rf & 2) {
    const data_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r52.value > 0 ? data_r52.value.toFixed(1) : "");
} }
function ProductTypeSalesComponent_div_28_span_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r52.value > 0 ? data_r52.value.toFixed(1) : "");
} }
function ProductTypeSalesComponent_div_28_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ProductTypeSalesComponent_div_28_span_1_Template, 1, 0, "span", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductTypeSalesComponent_div_28_input_2_Template, 1, 1, "input", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, ProductTypeSalesComponent_div_28_span_3_Template, 2, 1, "span", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r52 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r7.checkHasComment(data_r52));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r7.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r7.isStudyEditable);
} }
function ProductTypeSalesComponent_div_29_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r58 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r58.value > 0 ? data_r58.value.toFixed(1) : "");
} }
function ProductTypeSalesComponent_div_30_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r59 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r59.value || data_r59.value == 0 ? data_r59.value.toFixed(1) + "%" : "");
} }
function ProductTypeSalesComponent_div_31_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_div_31_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const data_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.addNotes(data_r60); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ProductTypeSalesComponent_div_31_Template(rf, ctx) { if (rf & 1) {
    const _r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ProductTypeSalesComponent_div_31_dx_button_2_Template, 1, 0, "dx-button", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function ProductTypeSalesComponent_div_31_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const data_r60 = restoredCtx.$implicit; const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.showNotePopup(data_r60); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r60 = ctx.$implicit;
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r60.value);
} }
function ProductTypeSalesComponent_div_33_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 91);
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r11.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function ProductTypeSalesComponent_div_53_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r68 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r68.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r68.field);
} }
function ProductTypeSalesComponent_div_59_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const forecast_r69 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](forecast_r69.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", forecast_r69.field);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
function ProductTypeSalesComponent_dx_popup_62_Template(rf, ctx) { if (rf & 1) {
    const _r71 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_dx_popup_62_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r71); const ctx_r70 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r70.notePopupVisible = $event; })("onHidden", function ProductTypeSalesComponent_dx_popup_62_Template_dx_popup_onHidden_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r71); const ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r72.onNotePopupHide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "textarea", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dx-button", 96);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_dx_popup_62_Template_dx_button_onClick_9_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r71); const ctx_r73 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r73.onSaveNote(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 270)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r14.notePopupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r14.newNoteForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" Add Comment for ", ctx_r14.selectedCommentCellData.colCaption, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](11, _c1, ctx_r14.noteSubmit && ctx_r14.n["note"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r14.newNoteForm.invalid);
} }
function ProductTypeSalesComponent_dx_data_grid_66_dxi_column_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 78);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 30);
} }
function ProductTypeSalesComponent_dx_data_grid_66_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r78 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_dx_data_grid_66_div_5_Template_dx_button_onClick_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r78); const d_r76 = restoredCtx.$implicit; const ctx_r77 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r77.deleteComment(d_r76.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c2 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function ProductTypeSalesComponent_dx_data_grid_66_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 97);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 98);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 99);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 100);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, ProductTypeSalesComponent_dx_data_grid_66_dxi_column_4_Template, 1, 1, "dxi-column", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, ProductTypeSalesComponent_dx_data_grid_66_div_5_Template, 2, 0, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r15.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](9, _c2));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r15.isStudyEditable && !ctx_r15.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
} }
class ProductTypeSalesComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService, commonService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.commonService = commonService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup(),
            ProductTypeSales: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.myYears = [];
        this.volumeYears = [];
        this.volumeYearsShow = [];
        this.currentYearsShow = [];
        this.forecastYears = [];
        this.forecastYearsShow = [];
        this.foreCastYear1 = 0;
        this.cagr = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.channelLists = [];
        this.productTypeLists = [];
        this.currentCurrency = {};
        this.datRelationsData = [];
        this.studyDataViewId = 0;
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.deleteRowConfirmPopup = false;
        this.deleteCommentConfirmPopup = false;
        this.deleteResetConfirmPopup = false;
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
            'Forecast1',
            'Forecast2',
            'Forecast3',
            'Forecast4',
            'Forecast5',
        ];
        this.isLockedStudy = false;
        this.calculatorContextMenuItems = [];
        this.pivotStateId = 0;
        this.saveStateToDbTimeout = setTimeout(() => { }, 0);
        this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_12__.Subject();
        this.selectedCommentCellData = {};
        this.allColsComments = [];
        this.cellColsComments = [];
        this.deleteCommentData = {};
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Channel: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
            Forecast1: [null],
            Forecast2: [null],
            Forecast3: [null],
            Forecast4: [null],
            Forecast5: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_3__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.calculatorContextMenuItems = this.commonService.getCalculatorFields();
        this.customSaveState = this.customSaveState.bind(this);
        this.customLoadState = this.customLoadState.bind(this);
        this.getGridState = this.getGridState.bind(this);
        this.getAllColumnsComments();
    }
    set setDataRelationsData(data) {
        if (data) {
            this.datRelationsData = data;
            this.getPivotSettings();
            this.getGridState();
        }
    }
    ngOnInit() {
        this.getProductTypeSalesData();
        this.getChannelLists();
        this.getProductTypeLists();
    }
    getPivotSettings() {
        this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
        if (this.studyDataRelations) {
            this.studyDataViewId = this.studyDataRelations.ViewId;
        }
    }
    getProductTypeSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getPscPTData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .ProductTypeSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_2__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                this.volumeYearsShow = [];
                this.myYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    this.myYears.push({ field: `PreviousYear${j}`, year: i });
                    this.volumeYearsShow.push({
                        field: `PreviousYear${j}`,
                        year: i,
                        isEditable: !this.isStudyEditable,
                        cellTemplate: 'EditCellTemplate',
                        isVisible: true,
                    });
                    if (j !== 5) {
                        this.volumeYearsShow.push({
                            field: `PreviousYearCagr${j}`,
                            year: `Cagr, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                        this.volumeYearsShow.push({
                            field: `PreviousYearPerChange${j}`,
                            year: `Change, %, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                    }
                    this.volumeYearsShow.push({
                        field: `PreviousYearTotalPer${j}`,
                        year: `% Of Total`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                }
                // myYears = this.volumeYears;
                this.myYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                this.currentYearsShow = [];
                this.currentYearsShow.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                    isEditable: !this.isStudyEditable,
                    cellTemplate: 'EditCellTemplate',
                    isVisible: true,
                });
                this.currentYearsShow.push({
                    field: `CagrCurrentYear`,
                    year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.currentYearsShow.push({
                    field: `PerChangeCurrentYear`,
                    year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.currentYearsShow.push({
                    field: `TotalPerCurrentYear`,
                    year: `% Of Total`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.forecastYears = [];
                this.forecastYearsShow = [];
                this.cagr = [];
                const forecastYear = this.currentYear + 5;
                this.forecastYears.push({
                    field: `Forecast5`,
                    year: forecastYear,
                });
                this.forecastYearsShow.push({
                    field: `Forecast5`,
                    year: forecastYear,
                    isEditable: !this.isStudyEditable,
                    cellTemplate: 'EditCellTemplate',
                    isVisible: true,
                });
                this.forecastYearsShow.push({
                    field: `Cagr1`,
                    year: `Cagr, ${this.currentYear}-${forecastYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.forecastYearsShow.push({
                    field: `TotalPer1`,
                    year: `% Of Total`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.forecastYearsShow.push({
                    field: `PerChange1`,
                    year: `Change, %, ${this.currentYear}-${forecastYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.myYears.push({ field: `Forecast5`, year: forecastYear });
                // myYears.push(...this.forecastYears);
                // for (
                //   let i = currentYear + 1, j = 1;
                //   i < currentYear + 6;
                //   i++, j++
                // ) {
                //   // this.forecastYears.push({ field: `Forecast${j}`, year: i });
                //   // this.cagr.push({ field: `Cagr${j}`, year: `${i - 1}-${i}` });
                //   this.forecastYears.push({
                //     field: `Forecast${j}`,
                //     year: i,
                //   });
                //   this.forecastYearsShow.push({
                //     field: `Forecast${j}`,
                //     year: i,
                //     isEditable: !this.isStudyEditable,
                //     cellTemplate: 'EditCellTemplate',
                //     isVisible: true,
                //   });
                //   this.forecastYearsShow.push({
                //     field: `Cagr${j}`,
                //     year: `Cagr, ${i - 1}-${i}`,
                //     isEditable: false,
                //     cellTemplate: 'cargCellTemplate',
                //     isVisible: false,
                //   });
                //   this.forecastYearsShow.push({
                //     field: `TotalPer${j}`,
                //     year: `% Of Total`,
                //     isEditable: false,
                //     cellTemplate: 'cargCellTemplate',
                //     isVisible: false,
                //   });
                //   this.forecastYearsShow.push({
                //     field: `PerChange${j}`,
                //     year: `Change, %, ${i - 1}-${i}`,
                //     isEditable: false,
                //     cellTemplate: 'cargCellTemplate',
                //     isVisible: false,
                //   });
                // }
                // this.studyData.map((item: any, i) => {
                //   this.studyData[i].Cagr1 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.CurrentYear,
                //       item.Forecast1,
                //       item.Forecast1 - item.CurrentYear
                //     );
                //   this.studyData[i].Cagr2 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast1,
                //       item.Forecast2,
                //       item.Forecast2 - item.Forecast1
                //     );
                //   this.studyData[i].Cagr3 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast2,
                //       item.Forecast3,
                //       item.Forecast3 - item.Forecast2
                //     );
                //   this.studyData[i].Cagr4 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast3,
                //       item.Forecast4,
                //       item.Forecast4 - item.Forecast3
                //     );
                //   this.studyData[i].Cagr5 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast4,
                //       item.Forecast5,
                //       item.Forecast5 - item.Forecast4
                //     );
                //   this.calculatePercentageChangeForForecastYears(this.studyData[i]);
                // });
                this.calculateTotalPercentageForCols();
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    this.calculateCargForForecastYears(item);
                    this.calculatePercentageChangeForForecastYears(item);
                    // const rowNoteArray: any = [];
                    // if (item.Notes !== null) {
                    //   const noteArray = item.Notes.split('|||');
                    //   noteArray.map((singleVal: any) => {
                    //     const n = singleVal.split('@@@');
                    //     const d = n[0].split('###');
                    //     rowNoteArray.push({
                    //       name: d[0].trim(),
                    //       date: new Date(d[1].trim()),
                    //       note: n[1].trim(),
                    //     });
                    //   });
                    // }
                    // let sortRowNoteArray: any = [];
                    // if (rowNoteArray.length > 0) {
                    //   sortRowNoteArray = rowNoteArray.sort(
                    //     (a: any, b: any) => b.date - a.date
                    //   );
                    // }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    let rowComments = [];
                    if (this.allColsComments) {
                        rowComments = this.allColsComments.filter((single) => single.DraftDataRowId == item.DataRowId);
                        rowComments.map(({ ColumnName }) => {
                            this.myYears.map((elem) => {
                                if (elem.field == ColumnName) {
                                    item[`${ColumnName}_comment`] = true;
                                }
                            });
                        });
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    // this.studyData[i].StudyNotes =
                    //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    // this.studyData[i].EditNote = false;
                    // this.studyData[i].Notes = null;
                    // this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
            data.Forecast1 = +data.Forecast1;
            data.Forecast2 = +data.Forecast2;
            data.Forecast3 = +data.Forecast3;
            data.Forecast4 = +data.Forecast4;
            data.Forecast5 = +data.Forecast5;
            this.calculateCargForForecastYears(data);
            this.calculateTotalPercentageForCols();
            this.calculatePercentageChangeForForecastYears(data);
        }
    }
    calculateCargForForecastYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.PreviousYearCagr1 = this.commonService.calculateCAGRPercentage(data.PreviousYear2, data.PreviousYear1, 1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.PreviousYearCagr2 = this.commonService.calculateCAGRPercentage(data.PreviousYear3, data.PreviousYear2, 1);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.PreviousYearCagr3 = this.commonService.calculateCAGRPercentage(data.PreviousYear4, data.PreviousYear3, 1);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.PreviousYearCagr4 = this.commonService.calculateCAGRPercentage(data.PreviousYear5, data.PreviousYear4, 1);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(data.PreviousYear1, data.CurrentYear, 1);
        }
        if (data.CurrentYear > 0 && data.Forecast5 > 0) {
            data.Cagr1 = this.commonService.calculateCAGRPercentage(data.CurrentYear, data.Forecast5, 5);
        }
        // if (data.Forecast1 > 0 && data.Forecast2 > 0) {
        //   data.Cagr2 = this.commonService.calculateCAGRPercentage(
        //     data.Forecast1,
        //     data.Forecast2,
        //     1
        //   );
        // }
        // if (data.Forecast2 > 0 && data.Forecast3 > 0) {
        //   data.Cagr3 = this.commonService.calculateCAGRPercentage(
        //     data.Forecast2,
        //     data.Forecast3,
        //     1
        //   );
        // }
        // if (data.Forecast3 > 0 && data.Forecast4 > 0) {
        //   data.Cagr4 = this.commonService.calculateCAGRPercentage(
        //     data.Forecast3,
        //     data.Forecast4,
        //     1
        //   );
        // }
        // if (data.Forecast4 > 0 && data.Forecast5 > 0) {
        //   data.Cagr5 = this.commonService.calculateCAGRPercentage(
        //     data.Forecast4,
        //     data.Forecast5,
        //     1
        //   );
        // }
    }
    calculateTotalPercentageForCols() {
        const PreviousYear1Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear1, 0);
        const PreviousYear2Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear2, 0);
        const PreviousYear3Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear3, 0);
        const PreviousYear4Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear4, 0);
        const PreviousYear5Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear5, 0);
        const CurrentYearTotal = this.studyData.reduce((sum, currentItem) => sum + currentItem.CurrentYear, 0);
        // const foreCastYear1Total = this.studyData.reduce(
        //   (sum: number, currentItem: any) => sum + currentItem.Forecast1,
        //   0
        // );
        // const foreCastYear2Total = this.studyData.reduce(
        //   (sum: number, currentItem: any) => sum + currentItem.Forecast2,
        //   0
        // );
        // const foreCastYear3Total = this.studyData.reduce(
        //   (sum: number, currentItem: any) => sum + currentItem.Forecast3,
        //   0
        // );
        // const foreCastYear4Total = this.studyData.reduce(
        //   (sum: number, currentItem: any) => sum + currentItem.Forecast4,
        //   0
        // );
        const foreCastYear5Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.Forecast5, 0);
        this.studyData.map((item) => {
            item.PreviousYearTotalPer1 = this.commonService.calculateTotalPercentage(PreviousYear1Total, item.PreviousYear1);
            item.PreviousYearTotalPer2 = this.commonService.calculateTotalPercentage(PreviousYear2Total, item.PreviousYear2);
            item.PreviousYearTotalPer3 = this.commonService.calculateTotalPercentage(PreviousYear3Total, item.PreviousYear3);
            item.PreviousYearTotalPer4 = this.commonService.calculateTotalPercentage(PreviousYear4Total, item.PreviousYear4);
            item.PreviousYearTotalPer5 = this.commonService.calculateTotalPercentage(PreviousYear5Total, item.PreviousYear5);
            item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(CurrentYearTotal, item.CurrentYear);
            // item.TotalPer1 = this.commonService.calculateTotalPercentage(
            //   foreCastYear1Total,
            //   item.Forecast1
            // );
            // item.TotalPer2 = this.commonService.calculateTotalPercentage(
            //   foreCastYear2Total,
            //   item.Forecast2
            // );
            // item.TotalPer3 = this.commonService.calculateTotalPercentage(
            //   foreCastYear3Total,
            //   item.Forecast3
            // );
            // item.TotalPer4 = this.commonService.calculateTotalPercentage(
            //   foreCastYear4Total,
            //   item.Forecast4
            // );
            item.TotalPer5 = this.commonService.calculateTotalPercentage(foreCastYear5Total, item.Forecast5);
        });
    }
    calculatePercentageChangeForForecastYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.PreviousYearPerChange1 =
                this.commonService.calculatePercentageChange(data.PreviousYear2, data.PreviousYear1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.PreviousYearPerChange2 =
                this.commonService.calculatePercentageChange(data.PreviousYear3, data.PreviousYear2);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.PreviousYearPerChange3 =
                this.commonService.calculatePercentageChange(data.PreviousYear4, data.PreviousYear3);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.PreviousYearPerChange4 =
                this.commonService.calculatePercentageChange(data.PreviousYear5, data.PreviousYear4);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(data.PreviousYear1, data.CurrentYear);
        }
        if (data.CurrentYear > 0 && data.Forecast5 > 0) {
            data.PerChange1 = this.commonService.calculatePercentageChange(data.CurrentYear, data.Forecast5);
        }
        // if (data.Forecast1 > 0 && data.Forecast2 > 0) {
        //   data.PerChange2 = this.commonService.calculatePercentageChange(
        //     data.Forecast1,
        //     data.Forecast2
        //   );
        // }
        // if (data.Forecast2 > 0 && data.Forecast3 > 0) {
        //   data.PerChange3 = this.commonService.calculatePercentageChange(
        //     data.Forecast2,
        //     data.Forecast3
        //   );
        // }
        // if (data.Forecast3 > 0 && data.Forecast4 > 0) {
        //   data.PerChange4 = this.commonService.calculatePercentageChange(
        //     data.Forecast3,
        //     data.Forecast4
        //   );
        // }
        // if (data.Forecast4 > 0 && data.Forecast5 > 0) {
        //   data.PerChange5 = this.commonService.calculatePercentageChange(
        //     data.Forecast4,
        //     data.Forecast5
        //   );
        // }
    }
    getChannelLists() {
        this.sharedService
            .getPSCDataEntryData('Channel')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.channelLists = data.Data;
            }
        });
    }
    getProductTypeLists() {
        this.sharedService
            .getPSCDataEntryData('ProductType')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.productTypeLists = data.Data;
            }
        });
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Forecast1: +newRowData.Forecast1,
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            Channel: newRowData.Channel.Name,
            ChannelId: newRowData.Channel.Id,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            ProductType: newRowData.ProductType.Name,
            ProductTypeId: newRowData.ProductType.Id,
            Forecast2: +newRowData.Forecast2,
            Forecast3: +newRowData.Forecast3,
            Forecast4: +newRowData.Forecast4,
            Forecast5: +newRowData.Forecast5,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ChannelId == newRow.ChannelId &&
            item.ProductTypeId == newRow.ProductTypeId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ChannelId || 0) - (b.ChannelId || 0) ||
                (a.ProductTypeId || 0) - (b.ProductTypeId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
    }
    onSaveNote(isLoad = true) {
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        if (!this.selectedCommentCellData) {
            return;
        }
        // const rowData = this.newNoteForm.value.rowData;
        // const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        // const IsEditedNote = this.dataGrid?.instance.cellValue(
        //   rowIndex,
        //   'EditNote'
        // );
        // this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        // let noteValue = rowData.data.StudyNotes;
        // noteValue = noteValue !== null ? noteValue : '';
        // if (IsEditedNote) {
        //   const noteArray =
        //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
        //   noteArray.shift();
        //   noteValue = noteArray.join(',');
        // }
        // const newNoteValue =
        //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);
        // this.dataGrid?.instance.saveEditData();
        const formData = {
            dataItemCategoryId: this.studyAreaId,
            marketYearCategoryDataId: this.marketYearCategoryId,
            draftDataRowId: this.selectedCommentCellData.dataRowId,
            columnName: this.selectedCommentCellData.colValue,
            comment: newNote,
        };
        this.isLoadingService.add();
        this.studyService.addCommentForCell(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.notePopupVisible = false;
                // this.getSalesData();
                if (isLoad) {
                    this.loadCurrentStudy();
                }
                else {
                    this.noteSubmit = false;
                    this.newNoteForm.reset();
                    this.newRowForm.updateValueAndValidity();
                    this.getCellColumnsComments(this.selectedCommentCellData.colValue, this.selectedCommentCellData.dataRowId);
                }
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            // console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0, Forecast1: item.Forecast1 > 0 ? item.Forecast1 : 0, Forecast2: item.Forecast2 > 0 ? item.Forecast2 : 0, Forecast3: item.Forecast3 > 0 ? item.Forecast3 : 0, Forecast4: item.Forecast4 > 0 ? item.Forecast4 : 0, Forecast5: item.Forecast5 > 0 ? item.Forecast5 : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            productTypeSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.savePSCData('ProductTypeSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getProductTypeSalesData();
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            productTypeSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService
            .signOffPSCData('ProductTypeSales', formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getProductTypeSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Channel:
                this.getChannelLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductType:
                this.getProductTypeLists();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
    onCalculatedItemClick(e) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        // console.log(e.itemData);
        if (typeof e.itemData !== 'undefined') {
            const calculatedFiled = e.itemData;
            calculatedFiled.isCheck = !calculatedFiled.isCheck;
            calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';
            if (calculatedFiled.value === 'percentOfTotal') {
                this.calculateTotalPercentageForCols();
                for (let i = 1; i <= 5; i++) {
                    (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.columnOption(`PreviousYearTotalPer${i}`, 'visible', calculatedFiled.isCheck);
                    // this.dataGrid?.instance.columnOption(
                    //   `TotalPer${i}`,
                    //   'visible',
                    //   calculatedFiled.isCheck
                    // );
                }
                (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.columnOption(`TotalPer1`, 'visible', calculatedFiled.isCheck);
                (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.columnOption(`TotalPerCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else if (calculatedFiled.value === 'changePercent') {
                for (let i = 1; i <= 5; i++) {
                    (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.columnOption(`PreviousYearPerChange${i}`, 'visible', calculatedFiled.isCheck);
                    // this.dataGrid?.instance.columnOption(
                    //   `PerChange${i}`,
                    //   'visible',
                    //   calculatedFiled.isCheck
                    // );
                }
                (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.columnOption(`PerChange1`, 'visible', calculatedFiled.isCheck);
                (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.columnOption(`PerChangeCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else {
                for (let i = 1; i <= 5; i++) {
                    (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.columnOption(`PreviousYearCagr${i}`, 'visible', calculatedFiled.isCheck);
                    // this.dataGrid?.instance.columnOption(
                    //   `Cagr${i}`,
                    //   'visible',
                    //   calculatedFiled.isCheck
                    // );
                }
                (_h = this.dataGrid) === null || _h === void 0 ? void 0 : _h.instance.columnOption(`Cagr1`, 'visible', calculatedFiled.isCheck);
                (_j = this.dataGrid) === null || _j === void 0 ? void 0 : _j.instance.columnOption(`CagrCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
        }
    }
    customSaveState(data, isChangeAutoSaveStatus) {
        // do not save state to db in case, states are emited too intensively
        clearTimeout(this.saveStateToDbTimeout);
        data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;
        // const userData = this.sharedService.getUserData();
        // this.initChart();
        // allow to save state only in case all requested data is available
        if (this.studyDataViewId) {
            this.stateData = data;
            this.stateChange.next(this.stateData);
            this.saveStateToDbTimeout = setTimeout(() => {
                this.sharedService
                    .setPivotState(this.studyDataViewId, 0, false, JSON.stringify(this.stateData), true)
                    .subscribe((data) => {
                    if (data) {
                        // this.alertService.info(
                        //   'The system will remember the last state!'
                        // );
                        // this.loadCurrentStudy();
                        if (!this.pivotStateId) {
                            this.getGridState();
                        }
                    }
                }, (error) => {
                    throw new Error(error);
                });
            }, 2000);
        }
    }
    customLoadState() {
        if (this.stateData) {
            this.setColsForDataGrid();
            return this.stateData;
        }
    }
    getGridState() {
        if (!this.stateData) {
            let stateData = undefined;
            this.sharedService
                .getPivotState(this.studyDataViewId, true)
                .subscribe((res) => {
                var _a;
                // in case state is not exists yet
                try {
                    const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
                    stateData = JSON.parse(stateRes.StateData);
                    if (stateData) {
                        this.pivotStateId = stateRes.PivotStateId;
                        this.stateData = stateData;
                        (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.state(this.stateData);
                        this.setColsForDataGrid();
                    }
                    // this.pivotStateId = stateRes.PivotStateId;
                }
                catch (_b) {
                    // stateData.state.fields = this.getGridFields();
                }
            });
        }
    }
    onDeleteCustomSaveState() {
        this.deleteResetConfirmPopup = true;
    }
    deleteCustomState() {
        if (this.studyDataViewId && this.pivotStateId) {
            this.sharedService
                .deletePivotState(this.studyDataViewId, this.pivotStateId)
                .subscribe((data) => data, (error) => {
                throw new Error(error);
            }, () => {
                // finally read all data again
                // this.readPivotOptionsAndData();
                // this.readPivotDataFromApi();
                const stateData = undefined;
                this.stateData = stateData;
                this.calculatorContextMenuItems =
                    this.commonService.getCalculatorFields();
                this.getProductTypeSalesData();
                this.deleteResetConfirmPopup = false;
                // this.getGridState();
            });
        }
        else {
            this.deleteResetConfirmPopup = false;
        }
    }
    onContentReady(e) { }
    onContextMenuPreparing(e) {
        if (typeof e.items === 'undefined') {
            e.items = [];
        }
        // e.items.push({
        //   beginGroup: true,
        //   text: 'Reset to Default',
        //   icon: 'fas fa-sync-alt',
        //   onItemClick: () => {
        //     this.deleteCustomState();
        //   },
        // });
        const isValidTarget = typeof e.target !== 'undefined' && e.target === 'content' ? true : false;
        if (isValidTarget) {
            const cells = e.row.cells;
            const rowIndex = e.rowIndex;
            const colIndex = e.columnIndex;
            const currentCell = typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;
            if (typeof currentCell !== 'undefined') {
                const foundValidCell = this.allowedCols.find((e) => e === currentCell.column.dataField);
                if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {
                    e.items.push({
                        beginGroup: true,
                        text: 'Comments',
                        icon: 'fas fa-comment',
                        onItemClick: () => {
                            // this.addNewCellComment(foundValidCell, colIndex, e.row);
                            this.getCellColumnsComments(currentCell.column.dataField, e.row.data.DataRowId);
                        },
                    });
                }
                // if (
                //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==
                //     'undefined' &&
                //   e.row.data[`${currentCell.column.dataField}_comment`]
                // ) {
                //   e.items.push({
                //     beginGroup: true,
                //     text: 'View Comments',
                //     icon: 'fas fa-bars',
                //     onItemClick: () => {
                //       this.getCellColumnsComments(
                //         currentCell.column.dataField,
                //         e.row.data.DataRowId
                //       );
                //     },
                //   });
                // }
            }
        }
    }
    setColsForDataGrid() {
        if (this.stateData) {
            this.currentYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.volumeYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.forecastYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.calculatorContextMenuItems = this.stateData
                .calculatorContextMenuItems
                ? this.stateData.calculatorContextMenuItems
                : this.calculatorContextMenuItems;
        }
    }
    addNewCellComment(colValue, colIndex, row) {
        const currentCell = typeof row.cells[colIndex] !== 'undefined'
            ? row.cells[colIndex]
            : undefined;
        const colCaption = currentCell.column.caption;
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: currentCell.data.DataRowId,
            currentCell: currentCell,
            colCaption: colCaption,
        };
        this.notePopupVisible = true;
    }
    getAllColumnsComments() {
        this.studyService
            .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.allColsComments = data.Data;
            }
        });
    }
    getCellColumnsComments(colValue, dataRowId) {
        const currentLabel = this.myYears.find((item) => item.field == colValue);
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: dataRowId,
            currentCell: {},
            colCaption: currentLabel.year,
        };
        this.studyService
            .getCellCommentsForStudy(this.studyAreaId, this.marketYearCategoryId, dataRowId, colValue)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.selectedRowNotes = data.Data;
                this.viewNotePopup = true;
                if (this.selectedRowNotes.length == 0) {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = false;
                        }
                    });
                }
                else {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = true;
                        }
                    });
                }
            }
        });
    }
    checkHasComment(data) {
        if (typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&
            data.data[`${data.column.dataField}_comment`]) {
            return true;
        }
        return false;
    }
    deleteComment(data) {
        this.deleteCommentData = data;
        this.deleteCommentConfirmPopup = true;
        // this.viewNotePopup = false;
    }
    onDeleteCommentConfirmPopupHide() {
        this.deleteCommentData = {};
        this.deleteCommentConfirmPopup = false;
    }
    confirmDeleteComment() {
        this.isLoadingService.add();
        const colValue = this.deleteCommentData.ColumnName;
        const dataRowId = this.deleteCommentData.DraftDataRowId;
        this.studyService
            .deleteCellComment(this.deleteCommentData.MarketYearCategoryDataId, dataRowId, colValue, this.deleteCommentData.Id)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.deleteCommentConfirmPopup = false;
                this.getCellColumnsComments(colValue, dataRowId);
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteCommentConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
}
ProductTypeSalesComponent.ɵfac = function ProductTypeSalesComponent_Factory(t) { return new (t || ProductTypeSalesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_7__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_common_service__WEBPACK_IMPORTED_MODULE_8__.CommonService)); };
ProductTypeSalesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: ProductTypeSalesComponent, selectors: [["app-product-type-sales"]], viewQuery: function ProductTypeSalesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setDataRelationsData: "setDataRelationsData" }, decls: 112, vars: 115, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "allowColumnReordering", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "enabled"], ["columnRenderingMode", "standard"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Channel", 3, "allowEditing", "fixed", "width"], ["dataField", "ProductType", 3, "allowEditing", "fixed", "width"], ["alignment", "center", "caption", "Previous Years", 4, "ngIf"], ["alignment", "center", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate", 4, "ngFor", "ngForOf"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "previousYears", "foreCastYears", "studyData", "setSelectedCurrency", "setVolumeYears", "setViewId"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "Channel", "placeholder", "Select Channel", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductType", "placeholder", "Select Product Type", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "col-md-6"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", 4, "ngIf"], ["container", ".dx-viewport", 3, "width", "height", "showTitle", "title", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0", "h-100", "comment-container"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], [1, "card-footer"], [1, "row", "align-items-center", "justify-content-center"], [1, "col-md-8"], ["placeholder", "Enter your comment", "formControlName", "note", "rows", "2", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "col-md-4"], [1, "form-group", "text-center"], ["text", "Save Comment", "type", "default", 3, "disabled", "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Reset Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "fas fa-calculator", "displayExpr", "name", "keyExpr", "value", 3, "dropDownOptions", "items", "onItemClick"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["alignment", "center", "caption", "Previous Years"], ["alignment", "center", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["class", "has-comment", 4, "ngIf"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], [1, "has-comment"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], ["type", "text", 1, "form-control", 3, "formControlName"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "mt-0"], ["formControlName", "note", "rows", "2", 1, "form-control", 3, "ngClass"], ["icon", "plus", "text", "Save Comment", "type", "default", 3, "disabled", "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "CreatedBy", "dataType", "string"], ["dataField", "CreatedOn", "dataType", "date", 3, "format"], ["dataField", "Comment", "dataType", "string"]], template: function ProductTypeSalesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onContextMenuPreparing", function ProductTypeSalesComponent_Template_dx_data_grid_onContextMenuPreparing_6_listener($event) { return ctx.onContextMenuPreparing($event); })("onContentReady", function ProductTypeSalesComponent_Template_dx_data_grid_onContentReady_6_listener($event) { return ctx.onContentReady($event); })("onSaved", function ProductTypeSalesComponent_Template_dx_data_grid_onSaved_6_listener($event) { return ctx.onRowSaved($event); })("onCellPrepared", function ProductTypeSalesComponent_Template_dx_data_grid_onCellPrepared_6_listener($event) { return ctx.onCellPreparedHighlighter($event); })("onCellHoverChanged", function ProductTypeSalesComponent_Template_dx_data_grid_onCellHoverChanged_6_listener($event) { return ctx.onCellHoverChanged($event); })("onRowPrepared", function ProductTypeSalesComponent_Template_dx_data_grid_onRowPrepared_6_listener($event) { return ctx.onRowPrepared($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "dxo-load-panel", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "dxo-scrolling", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "dxo-filter-row", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxo-header-filter", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxo-state-storing", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxo-paging", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxo-editing", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "dxo-toolbar");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "dxi-item", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, ProductTypeSalesComponent_div_16_Template, 4, 2, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, ProductTypeSalesComponent_ng_container_17_Template, 11, 4, "ng-container", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, ProductTypeSalesComponent_dxi_column_20_Template, 2, 1, "dxi-column", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, ProductTypeSalesComponent_dxi_column_21_Template, 1, 7, "dxi-column", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, ProductTypeSalesComponent_ng_container_22_Template, 2, 1, "ng-container", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "dxi-column", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "dxi-column", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](25, "dxi-column", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](26, ProductTypeSalesComponent_dxi_column_26_Template, 1, 1, "dxi-column", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](27, ProductTypeSalesComponent_div_27_Template, 2, 1, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](28, ProductTypeSalesComponent_div_28_Template, 4, 3, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](29, ProductTypeSalesComponent_div_29_Template, 3, 1, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](30, ProductTypeSalesComponent_div_30_Template, 3, 1, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](31, ProductTypeSalesComponent_div_31_Template, 6, 2, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "dx-tooltip", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](33, ProductTypeSalesComponent_div_33_Template, 1, 1, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dxi-item", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](36, "app-product-type-sale-preview", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "dx-popup", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_Template_dx_popup_visibleChange_37_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "form", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](45, "Channel");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](46, "ng-select", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](50, "Product Type");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](51, "ng-select", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](53, ProductTypeSalesComponent_div_53_Template, 5, 2, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "div", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](57);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](58, "input", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](59, ProductTypeSalesComponent_div_59_Template, 5, 2, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-button", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function ProductTypeSalesComponent_Template_dx_button_click_61_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](62, ProductTypeSalesComponent_dx_popup_62_Template, 10, 13, "dx-popup", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "dx-popup", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_Template_dx_popup_visibleChange_63_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function ProductTypeSalesComponent_Template_dx_popup_onHidden_63_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](66, ProductTypeSalesComponent_dx_data_grid_66_Template, 6, 10, "dx-data-grid", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "div", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](68, "form", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "div", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](72, "textarea", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "div", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](75, "dx-button", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_75_listener() { return ctx.onSaveNote(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](76, "dx-popup", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_Template_dx_popup_visibleChange_76_listener($event) { return ctx.deleteCommentConfirmPopup = $event; })("onHidden", function ProductTypeSalesComponent_Template_dx_popup_onHidden_76_listener() { return ctx.onDeleteCommentConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](79, "p", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](80, "Are you sure you want to delete this comment?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](81, "div", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](82, "dx-button", 57);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_82_listener() { return ctx.confirmDeleteComment(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](83, "dx-button", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_83_listener() { return ctx.deleteCommentConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](84, "dx-popup", 59);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_Template_dx_popup_visibleChange_84_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](85, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](86, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](87, "p", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](88, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](89, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](90, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](91, "div", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](92, "dx-button", 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_92_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](93, "dx-button", 61);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_93_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](94, "dx-popup", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_Template_dx_popup_visibleChange_94_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function ProductTypeSalesComponent_Template_dx_popup_onHidden_94_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](95, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](96, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](97, "p", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](98, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](99, "div", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](100, "dx-button", 57);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_100_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](101, "dx-button", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_101_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](102, "dx-popup", 62);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ProductTypeSalesComponent_Template_dx_popup_visibleChange_102_listener($event) { return ctx.deleteResetConfirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](103, "div", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](104, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](105, "p", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](106, " Reset to Default will take you to last saved Data. Your unsaved data will be removed. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](107, "p", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](108, "Are you sure you want to continue?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](109, "div", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](110, "dx-button", 57);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_110_listener() { return ctx.deleteCustomState(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](111, "dx-button", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ProductTypeSalesComponent_Template_dx_button_onClick_111_listener() { return ctx.deleteResetConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx.studyData)("showBorders", true)("allowColumnResizing", true)("allowColumnReordering", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx.isStudyEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true)("width", 230);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("fixed", true)("width", 230);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.currentYearsShow);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.forecastYearsShow);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 150)("allowEditing", false)("allowFiltering", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx.isStudyEditable && !ctx.disabledSignOffButton);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "cargCellTemplate");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("previousYears", ctx.volumeYears)("foreCastYears", ctx.forecastYears)("studyData", ctx.studyData)("setSelectedCurrency", ctx.currentCurrency)("setVolumeYears", ctx.volumeYears)("setViewId", ctx.studyDataViewId);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.channelLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Channel));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productTypeLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductType));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.currentYear);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.forecastYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedCommentCellData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate1"]("title", "View Comments for ", ctx.selectedCommentCellData.colCaption, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("height", 500)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](113, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteCommentConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteResetConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_4__.DisableStudyEditingComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoLoadPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoStateStoringComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxDropDownButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxTooltipComponent, _product_type_sale_preview_product_type_sale_preview_component__WEBPACK_IMPORTED_MODULE_10__.ProductTypeSalePreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_25__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.MaxLengthValidator], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9kdWN0LXR5cGUtc2FsZXMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 51542:
/*!****************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/segment-sales/segment-sales-preview/segment-sales-preview.component.ts ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SegmentSalesPreviewComponent": () => (/* binding */ SegmentSalesPreviewComponent)
/* harmony export */ });
/* harmony import */ var D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exceljs */ 34498);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataFieldArea.enum */ 29368);
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/model/userStateAndSetttings.model */ 69893);
/* harmony import */ var src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/model/enums/specialValueType.enum */ 59591);
/* harmony import */ var devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme/excel_exporter */ 47081);
/* harmony import */ var src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/guard/commonHelper */ 83518);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/model/enums/computingType.enum */ 11892);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../../shc/sub/shc-preview/preview-top-menu/preview-top-menu.component */ 57952);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! devextreme-angular/core */ 85915);





























function SegmentSalesPreviewComponent_div_5_div_2_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](2, "In Direction");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](4, "dx-select-box", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function SegmentSalesPreviewComponent_div_5_div_2_div_10_Template_dx_select_box_valueChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
      return ctx_r7.percentInDirection = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", ctx_r6.summaryDisplayModeItems)("value", ctx_r6.percentInDirection);
  }
}

const _c0 = function () {
  return ["Subtotals", "Grand Totals"];
};

function SegmentSalesPreviewComponent_div_5_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute '% Of Total':");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](7, "Based on");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function SegmentSalesPreviewComponent_div_5_div_2_Template_dx_radio_group_valueChange_9_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r9.percentOfTotalBasedOn = $event;
    })("onValueChanged", function SegmentSalesPreviewComponent_div_5_div_2_Template_dx_radio_group_onValueChanged_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r11.onBasedOnChange(false);
    })("onInitialized", function SegmentSalesPreviewComponent_div_5_div_2_Template_dx_radio_group_onInitialized_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r12.onBasedOnChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](10, SegmentSalesPreviewComponent_div_5_div_2_div_10_Template, 5, 2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](12, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](13, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](14, "dx-button", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function SegmentSalesPreviewComponent_div_5_div_2_Template_dx_button_onClick_14_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r10);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r13.addPercentOfTotalsToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](5, _c0))("value", ctx_r4.percentOfTotalBasedOn);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx_r4.summaryDisplayModeItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120)("disabled", false);
  }
}

function SegmentSalesPreviewComponent_div_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function SegmentSalesPreviewComponent_div_5_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r14.isPercentOfTotalPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, SegmentSalesPreviewComponent_div_5_div_2_Template, 15, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 250)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r1.isPercentOfTotalPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c1 = function (a0, a1) {
  return [a0, a1];
};

function SegmentSalesPreviewComponent_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute change, %:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function SegmentSalesPreviewComponent_div_6_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r18.percentOfChangeComputeType = $event;
    })("onValueChanged", function SegmentSalesPreviewComponent_div_6_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r20.onComputeTypeChange(false);
    })("onInitialized", function SegmentSalesPreviewComponent_div_6_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r21.onComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function SegmentSalesPreviewComponent_div_6_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r19);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r22.addPrecentOfChangeToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r16.computingType.FirstYear, ctx_r16.computingType.PreviousYear))("value", ctx_r16.percentOfChangeComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function SegmentSalesPreviewComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function SegmentSalesPreviewComponent_div_6_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r24);
      const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r23.isPercentOfChangePopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, SegmentSalesPreviewComponent_div_6_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r2.isPercentOfChangePopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

function SegmentSalesPreviewComponent_div_7_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtext"](4, "Compute CAGR:");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("valueChange", function SegmentSalesPreviewComponent_div_7_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r27.cagrComputeType = $event;
    })("onValueChanged", function SegmentSalesPreviewComponent_div_7_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r29.onCagrComputeTypeChange(false);
    })("onInitialized", function SegmentSalesPreviewComponent_div_7_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r30.onCagrComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onClick", function SegmentSalesPreviewComponent_div_7_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r28);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
      return ctx_r31.addCAGRToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction2"](3, _c1, ctx_r25.computingType.FirstYear, ctx_r25.computingType.PreviousYear))("value", ctx_r25.cagrComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 120);
  }
}

function SegmentSalesPreviewComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("visibleChange", function SegmentSalesPreviewComponent_div_7_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵrestoreView"](_r33);
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
      return ctx_r32.isCagrPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](2, SegmentSalesPreviewComponent_div_7_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r3.isCagrPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c2 = function () {
  return {
    showColumnFields: true,
    showDataFields: true,
    showFilterFields: true,
    showRowFields: true,
    allowFieldDragging: true,
    visible: true
  };
};

const _c3 = function () {
  return {
    enabled: true
  };
};

class SegmentSalesPreviewComponent {
  constructor(route, isLoadingService, studyService, alertService, sharedService) {
    this.route = route;
    this.isLoadingService = isLoadingService;
    this.studyService = studyService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.studyData = [];
    this.currentYear = 0;
    this.foreCastYears = [];
    this.previousYears = [];
    this.previewData = [];
    this.saveStateEnabled = false;
    this.gridFields = [];
    this.previewGridKey = '';
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.studyAreaId = 0;
    this.selectedCurrency = {
      Id: 0,
      IsActive: false,
      Name: ''
    };
    this.studyType = '';
    this.volumeYears = [];
    this.viewId = 0;
    this.currencyConversionTypeSelected = 1;
    this.computingType = src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType;
    this.eventsCustomAction = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.pivotGridNoDataMessage = '';
    this.isPercentOfTotalPopup = false;
    this.isPercentOfChangePopup = false;
    this.isCagrPopup = false;
    this.firstAvailableId = 0;
    this.yearDataFieldName = '';
    this.isHeaderFilterLoading = false;
    this.canCallSaveState = false;
    this.adminSetNewState = false;
    this.pivotSummaryDisplayModesSubtotals = [{
      id: undefined,
      name: 'Same as the Data Fields'
    }, {
      id: 'percentOfColumnTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowTotal',
      name: 'Always Rows'
    }];
    this.pivotSummaryDisplayModesGrandTotals = [{
      id: 'percentOfColumnGrandTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowGrandTotal',
      name: 'Always Rows'
    }, {
      id: 'percentOfGrandTotal',
      name: 'Table (Absolute) Grand Total'
    }];
    this.shownYears = undefined;
    this.invisibleFields = [];
    this.saveStateToDbTimeout = setTimeout(() => {}, 0);
    this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_19__.Subject();
    this.shownYearsPrev = undefined;
    this.isAdmin = false;
    this.pivotStateId = 0;
    this.percentOfTotalBasedOn = 'Subtotals';
    this.percentInDirection = '';
    this.percentOfChangeComputeType = '';
    this.cagrComputeType = '';
    this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.customSaveState = this.customSaveState.bind(this);
    this.customLoadState = this.customLoadState.bind(this);
    this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridOptions(); // this.stateData = new UserStateAndSetttings();
  }

  set setPreviewData(data) {
    if (data) {
      this.previewData = data;
    }
  }

  set setGridFields(data) {
    if (data) {
      this.gridFields = data;
    }
  }

  set setPreviewGridKey(data) {
    if (data) {
      this.previewGridKey = data;
    }
  }

  set setSelectedCurrency(data) {
    if (data) {
      this.selectedCurrency = {
        Id: data.CurrencyId,
        IsActive: true,
        Name: data.CurrencyName,
        CurrencyCode: data.CurrencyCode,
        CurrencyName: data.CurrencyName
      };
      this.currencyDropdownSelected = this.selectedCurrency;
    }
  }

  set setStudyType(data) {
    if (data) {
      this.studyType = data;
    }
  }

  set setVolumeYears(data) {
    if (data) {
      this.volumeYears = data;
    }
  }

  set setViewId(data) {
    if (data) {
      this.viewId = data;
      this.getPivotSettings();
      this.getPivotState();
    }
  }

  ngOnInit() {
    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  ngOnChanges(changes) {
    this.getPreviewData(this.studyData);
  }

  getPivotSettings() {
    this.sharedService.getPivotSettings(this.viewId).subscribe(res => {
      this.pivotGridOptions = res.Data;

      if (this.pivotGridOptions) {
        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      }
    });
  }

  getPivotState() {
    if (!this.stateData) {
      let stateData = undefined;
      this.sharedService.getPivotState(this.viewId).subscribe(res => {
        // in case state is not exists yet
        try {
          const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
          stateData = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.realMerge(new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(), JSON.parse(stateRes.StateData));
          this.pivotStateId = stateRes.PivotStateId;
        } catch (_a) {
          stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(); // stateData.state.fields = this.getGridFields();
        }

        this.directDatasourceRenderPivot(stateData);
      });
    } else {
      this.directDatasourceRenderPivot(this.stateData);
    }
  }

  directDatasourceRenderPivot(stateData) {
    var _this = this;

    return (0,D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (_this.pivotGridOptions.settings.isCube) {// let token = await this.getAzureAnalysisToken();
        // let cubesStore = CubeStoreHelper.setCubeStore(
        //   this.pivotGridOptions.settings.cubeSettings.catalog,
        //   this.pivotGridOptions.settings.cubeSettings.cube,
        //   token,
        //   this.devEndpoint
        // );
        // this.pivotGridOptions.pivotGridSource.store = cubesStore;
        // this.pivotGridDataSource = new PivotGridDataSource(
        //   this.pivotGridOptions.pivotGridSource as any
        // );
        // setTimeout(() => {
        //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);
        // }, 5000);
        // this.saveStateEnabled = true;
        // if (stateData.settings) {
        //   if (!stateData.settings.currency) {
        //     stateData.settings.currency =
        //       this.pivotGridOptions.pivotGridDefaultValues.currency;
        //   }
        //   if (!stateData.settings.currencyConversionType) {
        //     stateData.settings.currencyConversionType =
        //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
        //   }
        //   if (!stateData.settings.selectedYear) {
        //     stateData.settings.selectedYear.PeriodKey = 2021;
        //   }
        // }
        // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.stateData = stateData;
        // this.fillPivotCube();
        // setTimeout(() => {
        //   this.canCallSaveState = true;
        // }, 300);
      } else {
        if (stateData.settings) {
          if (!stateData.settings.currency) {
            stateData.settings.currency = _this.pivotGridOptions.pivotGridDefaultValues.currency;
          }

          if (!stateData.settings.currencyConversionType) {
            stateData.settings.currencyConversionType = _this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
          }

          if (!((_a = stateData.settings.selectedYear) === null || _a === void 0 ? void 0 : _a.PeriodKey)) {
            // stateData.settings.selectedYear = await this.getLatestAccessibleYear(
            //   this.sharedService.getUserData().userId,
            //   this.requestedView.databaseId,
            //   this.requestedView.viewId
            // );
            stateData.settings.selectedYear = _this.currentYear;
          } // if (!stateData.settings.unitOfVolume) {
          //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(
          //     this.requestedView.databaseId
          //   );
          // }


          if (!stateData.settings.unitOfMass) {
            // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(
            //   this.requestedView.databaseId
            // );
            stateData.settings.unitOfMass = {
              Id: 105,
              Name: 'Thousand Tonnes'
            };
          }
        } // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );


        _this.stateData = stateData;

        if (_this.previewData && _this.previewData.length) {
          //get all invisible fields
          _this.invisibleFields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => f.visible === false); //filter invisible fields

          _this.pivotGridOptions.pivotGridSource.fields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => !f.visible || !f.isCalculated); //get count of visible fields for calculated fields ids

          _this.firstAvailableId = _this.pivotGridOptions.pivotGridSource.fields.length; // remove all invisible data from the datasource

          if (_this.invisibleFields && _this.invisibleFields.length > 0) {
            for (const invisibleField of _this.invisibleFields) {
              _this.previewData.forEach(obj => {
                delete obj[invisibleField.dataField];
              });
            }
          }

          _this.fillPivot(_this.pivotGridOptions, _this.previewData);
        } else {
          _this.readPivotDataFromApi();
        }
      }
    })();
  }

  customSaveState(data, isChangeAutoSaveStatus) {
    var _a; // do not save state to db in case, states are emited too intensively


    clearTimeout(this.saveStateToDbTimeout);
    this.canCallSaveState = true; // const userData = this.sharedService.getUserData();
    // this.initChart();
    // allow to save state only in case all requested data is available

    if (this.viewId && this.canCallSaveState && this.pivotGridOptions && this.stateData) {
      this.stateData.state = data;
      this.stateChange.next(this.stateData); // find all shown years and reload pivot grid on change

      const yearField = this.stateData.state.fields.filter(f => f.dataField === this.yearDataFieldName);
      const hasCagrOrChange = this.stateData.settings.cagrState.isSet || this.stateData.settings.changePercentState.isSet;

      if (yearField && hasCagrOrChange) {
        const pivotGridInstance = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance;
        const pivotFridDataSource = pivotGridInstance.getDataSource();
        const areaIndex = yearField[0].areaIndex;
        const uniqArrByText = lodash__WEBPACK_IMPORTED_MODULE_3__.uniqBy(pivotGridInstance._dataController._columnsInfo[areaIndex], 'text');
        this.shownYears = uniqArrByText.map(t => parseInt(t.text)); // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists

        if (yearField[0].sortOrder === 'desc') {
          pivotFridDataSource.field(this.yearDataFieldName, {
            sortOrder: 'asc'
          });
          pivotFridDataSource.load();
        }

        if (!lodash__WEBPACK_IMPORTED_MODULE_3__.isEqual(this.shownYears, this.shownYearsPrev)) {
          this.shownYearsPrev = this.shownYears;
          pivotFridDataSource.load();
        }
      } // in case user is NOT admin and has disable automatic saving state or remember latest state
      else if (!isChangeAutoSaveStatus) {
        if (this.stateData.settings.rememberLatestState == undefined) {
          this.stateData.settings.rememberLatestState = this.pivotGridOptions.canSaveUserState;
        }

        if (this.stateData.settings.rememberLatestState == false) {
          return;
        }
      }

      this.saveStateToDbTimeout = setTimeout(() => {
        this.sharedService.setPivotState(this.viewId, 0, this.isAdmin, JSON.stringify(this.stateData)).subscribe(data => {
          if (data && this.pivotGridOptions.canSaveDefaultStateAndOptions && this.isAdmin) {
            this.alertService.info('The system will remember the last state!'); // after save state, save also settings

            this.saveSettings(this.viewId, this.pivotGridOptions); // set can save default state to false

            this.pivotGridOptions.canSaveDefaultStateAndOptions = false;
          }
        }, error => {
          throw new Error(error);
        });
      }, 2000);
    }
  }

  customLoadState() {
    if (this.stateData) {
      return this.stateData.state;
    }
  }

  deleteCustomState() {
    this.adminSetNewState = false;

    if (this.viewId && this.pivotStateId) {
      this.sharedService.deletePivotState(this.viewId, this.pivotStateId).subscribe(data => data, error => {
        throw new Error(error);
      }, () => {
        // finally read all data again
        // this.readPivotOptionsAndData();
        // this.readPivotDataFromApi();
        const stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings();
        this.directDatasourceRenderPivot(stateData);
      });
    }
  }

  saveSettings(currentlySelectedViewId, optionsDataSource) {
    let saveResult = false;
    const optionsDataSourceTemp = Object.assign({}, optionsDataSource);
    optionsDataSourceTemp.pivotGridSource.fields = optionsDataSourceTemp.pivotGridSource.fields.filter(f => !f.isCalculated); // set store to empty, system will read fresh data from backend next time

    optionsDataSourceTemp.pivotGridSource.store = [];
  }

  getPreviewData(studyData) {
    const previewData = [];
    studyData.map(item => {
      this.previousYears.map(year => {
        previewData.push({
          Segment: item.Segment,
          Channel: item.Channel,
          Year: year.year,
          Value: item[year.field]
        });
      });
      previewData.push({
        Segment: item.Segment,
        Channel: item.Channel,
        Year: this.currentYear,
        Value: item.CurrentYear
      });
      this.foreCastYears.map(year => {
        previewData.push({
          Segment: item.Segment,
          Channel: item.Channel,
          Year: year.year,
          Value: item[year.field]
        });
      }); // previewData.push({
      //   Segment: item.Segment,
      //   Channel: item.Channel,
      //   Year: this.foreCastYear,
      //   Value: item.Forecast1,
      // });
    }); // console.log(previewData);
    // this.pivotGridDataSource = new PivotGridDataSource({
    //   store: previewData,
    //   fields: this.getGridFields(),
    // });

    this.previewData = previewData;

    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  getGridFields() {
    return this.gridFields = [{
      dataField: 'Segment',
      area: 'row',
      caption: 'Segment',
      dataType: 'string',
      id: 0
    }, {
      dataField: 'Channel',
      area: 'row',
      caption: 'Channel',
      dataType: 'string',
      id: 1
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 2,
      caption: 'Sales',
      dataField: 'Value',
      dataFieldType: 'Value',
      width: 80,
      dataType: 'number',
      summaryType: 'sum',
      summaryDisplayMode: 'none',
      format: {
        type: 'fixedPoint',
        precision: 1
      },
      area: 'data'
    }, {
      visible: true,
      isCalculated: false,
      calculatedFieldType: 'none',
      id: 3,
      caption: 'Year',
      dataField: 'Year',
      width: 30,
      dataType: 'string',
      summaryDisplayMode: 'none',
      area: 'column'
    }];
  }

  readPivotDataFromApi() {
    this.isLoadingService.add();
    this.yearDataFieldName = 'Year';
    this.studyService.getPscStudyData('SegmentSales', this.marketYearCategoryId, this.studyProjectMarketYearId, typeof this.currencyDropdownSelected !== 'undefined' ? this.currencyDropdownSelected.Id : 0, typeof this.unitOfMassDropdownSelected !== 'undefined' ? this.unitOfMassDropdownSelected.Id : 0, typeof this.currencyConversionTypeSelected !== 'undefined' ? this.currencyConversionTypeSelected : 0).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const studyDataObj = res.Data;
        const studyData = studyDataObj['SegmentSales'];
        const previewData = [];
        let index = 0;
        studyData.map((item, i) => {
          this.volumeYears.map(d => {
            this.gridFields.map(field => {
              if (typeof previewData[index] === 'undefined') {
                previewData[index] = {};
              }

              previewData[index][field.dataField] = item[field.dataField];

              if (field.dataField === 'Year') {
                previewData[index][field.dataField] = d.year;
              }

              if (field.dataField === 'Value') {
                previewData[index][field.dataField] = item[d.field];
              }
            });
            index++;
          });
        });
        this.previewData = previewData; // this.pivotGridDataSource = new PivotGridDataSource({
        //   store: this.previewData,
        //   fields: this.gridFields,
        // });

        if (typeof this.pivotGridOptions !== 'undefined') {
          this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
          this.pivotGridOptions.pivotGridSource.store = this.previewData;
          this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }

        this.fillPivot(this.pivotGridOptions, this.previewData); // when pivot data is loaded allow with small delay save state to the database

        setTimeout(() => {
          this.canCallSaveState = true;
        }, 300); // console.log(this.previewData);

        this.isLoadingService.remove();
      } else {
        this.alertService.danger(res.Data);
      }
    }, err => {
      const errorShow = typeof err.error !== 'undefined' ? err.error : 'Something went wrong. Please try again later.';
      this.alertService.danger(errorShow);
      this.isLoadingService.remove();
    });
  }

  getDataFieldName(fieldName) {
    if (fieldName == 'ProductTypeSales') {
      return 'ProductTypeSalesSHC';
    }

    return fieldName;
  }

  onOptionChanged(e) {}

  onInitialized(e) {}

  cellPrepared(e) {
    var _a, _b, _c, _d; // customize change % columns captions
    // console.log(this.stateData?.settings.changePercentState.computingType);


    const shownYearsInPivot = this.shownYears;

    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {
      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex].toString() + ' to ' + shownYearsInPivot[yearIndex].toString();
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      } //customize cagr columns captions


      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex] + ' to ' + shownYearsInPivot[yearIndex];
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      }
    }

    if (e.area === 'data') {
      if (e.cell.value) {
        e.cell.value.hasCd && e.cellElement.classList.add('pivot-grid-cell-has-cd');
      }
    }
  }

  onContentReady(e) {
    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource && this.pivotGridOptions.pivotGridSource.fields) {
      const calculatedFields = this.pivotGridOptions.pivotGridSource.fields.filter(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      for (const calculatedField of calculatedFields) {
        this.addCloseButtonToCalculatedField(calculatedField.id, calculatedField.calculatedFieldType);
      }
    } // change style for no data message


    const noDataElement = e.component.element().querySelector('.dx-pivotgrid-nodata');

    if (noDataElement) {
      setTimeout(() => {
        if (this.pivotGridNoDataMessage) {
          noDataElement.classList.add('noDataMessage');
        } else {
          noDataElement.classList.remove('noDataMessage');
        }
      }, 100);
    }

    if (this.pivotGrid && this.stateData && this.stateData.state) {// Allow next rows if you want to enable disabling pivot during waiting for component response
      //this.pivot.disabled = true;
      // not allow to user change state too fast, pivot component needs some time to save emit state
      //setTimeout(() => { this.pivot.disabled = false; }, 1000)
    }
  }

  onContextMenuPreparing(e) {
    // this.pivot.disabled = true;
    this.customizeContextMenu(e); //if (e.area == "row" || e.area == "column") {
    //    let id = e.columnIndex + "" + e.rowIndex;
    //    let tooltip = $("<span></span>").append($("<span id='" + id + "'></span>").html("")).appendTo(e.cellElement);
    //    let field = $("#" + id).closest('td');
    //    field.attr('title', e.cell.text);
    //}
  }

  customizeContextMenu(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    this.updateDefaultContextMenuTextsAndIcons(e);

    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {
      e.items.push({
        beginGroup: true,
        text: 'Delete Calculated Field',
        icon: 'fa fa-trash-alt',
        onItemClick: () => {
          const fieldToDelete = e.field;

          if (typeof this.stateData !== 'undefined') {
            switch (fieldToDelete.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }

          this.deleteCalculatedField(e.field.id);
        }
      });
      e.items.push({
        beginGroup: true,
        text: 'Edit Calculated Field',
        icon: 'fa fa-pencil-alt',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            switch (e.field.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.isPercentOfTotalPopup = true;
                this.stateData.settings.percentOfTotalState.summaryDisplayMode =  false || '';
                this.pivotSummaryDisplayModesSubtotals[0].id = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.isPercentOfChangePopup = true;
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.isCagrPopup = true;
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }
        }
      });
      return;
    }

    let openMenuItems = [];

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.menuSettings.isCurrencySelection) {
      openMenuItems.push({
        icon: 'fa fa-money',
        text: 'Change Currency',
        onItemClick: () => {
          this.eventsCustomAction.next('currencySelector');
        }
      });
    }

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.menuSettings.isCurrencyConversion) {
      openMenuItems.push({
        icon: 'fa fa-exchange-alt',
        text: 'Constant',
        onItemClick: () => {
          this.eventsCustomAction.next('currencyConversionSelector');
        }
      });
    }

    if ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.menuSettings.isUnitsOfVolume) {
      openMenuItems.push({
        icon: 'fa fa-fill-drip',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('massUnitSelector');
        }
      });
    }

    if ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.menuSettings.isUnitsOfMass) {
      openMenuItems.push({
        icon: 'fa fa-balance-scale',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('volumeUnitSelector');
        }
      });
    }

    e.items.push({
      beginGroup: true,
      text: 'Reset to Default',
      icon: 'fas fa-sync-alt',
      onItemClick: () => {
        this.deleteCustomState();
      }
    });
    e.items.push({
      beginGroup: true,
      text: 'Adjust Parameters',
      icon: 'fa fa-sliders-h',
      items: openMenuItems
    });

    if (e.field && e.field.area === 'data' && this.enabledInContextMenu(e.field)) {
      let calculatedFieldsItems = [];

      if ((_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.settings.calculatedFields.isPercentOfTotal) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal,
          onItemClick: () => {
            var _a, _b;

            this.isPercentOfTotalPopup = true;
            this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

            if (((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.percentOfTotalState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.percentOfTotalState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.isPercentOfChange) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent,
          onItemClick: () => {
            var _a;

            this.isPercentOfChangePopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.changePercentState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.changePercentState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_g = this.pivotGridOptions) === null || _g === void 0 ? void 0 : _g.settings.calculatedFields.isCagr) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr,
          onItemClick: () => {
            var _a;

            this.isCagrPopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.cagrState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.cagrState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      e.items.push({
        beginGroup: true,
        text: 'Add Calculated Field',
        icon: 'fa fa-calculator',
        items: calculatedFieldsItems
      });
    } // show only case if exist two or more datafields


    if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType)).length >= 2) {
      const dataFieldsHeaders = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'Rows' : 'Columns';
      e.items.push({
        beginGroup: true,
        text: 'Show Data Field Headers in ' + dataFieldsHeaders,
        icon: 'fa fa-table',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            this.stateData.settings.dataFieldArea = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.row : src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column;
          }
        }
      });
    }
  }

  deleteCalculatedField(fieldId) {
    var _a, _b;

    (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.splice(this.pivotGridOptions.pivotGridSource.fields.map(m => m.id).indexOf(fieldId), 1);
    this.firstAvailableId--;

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) {
      this.readPivotDataFromApi();
    } else {
      if (typeof this.pivotGridOptions !== 'undefined') {
        this.fillPivot(this.pivotGridOptions, this.previewData);
      }
    }
  }

  updateDefaultContextMenuTextsAndIcons(e) {
    var _a;

    let rowName = undefined;
    let rowCaption;

    if ((_a = e.cell) === null || _a === void 0 ? void 0 : _a.path) {
      if (e.cell && e.area === 'row') {
        const path = e.cell.path.length - 1;
        rowName = e.rowFields[path].dataField;
        rowCaption = e.rowFields[path].caption;
      } else if (e.cell && e.area === 'column') {
        const path = e.cell.path.length - 1;
        rowName = e.columnFields[path].dataField;
        rowCaption = e.columnFields[path].caption;
      }

      const expandAll = e.items.find(f => f.text.includes('Expand All'));

      if (expandAll) {
        expandAll.icon = 'fas fa-plus';
        expandAll.text = 'Expand' + ' ' + rowCaption;
      }

      const collapseAll = e.items.find(f => f.text.includes('Collapse All'));

      if (collapseAll) {
        collapseAll.icon = 'fas fa-minus';
        collapseAll.text = 'Collapse' + ' ' + rowCaption;
      }
    }

    const fieldChooser = e.items.find(f => f.text.includes('Show Field Chooser'));

    if (fieldChooser) {
      fieldChooser.text = 'FieldChooser Text';
    }

    const exportToExcel = e.items.find(f => f.text.includes('Export to'));

    if (exportToExcel) {
      exportToExcel.text = 'Export to excel';
    }

    const sorts = e.items.filter(f => f.text.includes('Sort'));

    if (sorts) {
      for (let sort of sorts) {
        sort.icon = 'fas fa-sort';
      }
    }
  }

  enabledInContextMenu(field) {
    if (field.dataFieldType === src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.AvgPrice) {
      return false;
    } else {
      return true;
    }
  }

  addCloseButtonToCalculatedField(fieldId, datafieldType) {
    const calculatedFieldObj = $(".dx-area-field-content:contains('" + datafieldType + "')").append("<i id='" + src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.removeAllSpaces(datafieldType) + "' class='closeButton fas fa-times-circle'></i>");
    calculatedFieldObj.parent().parent().css('padding-right', '0').css('margin-right', '0 !important');
    calculatedFieldObj.children().off().on('click', () => {
      if (typeof this.stateData !== 'undefined') {
        switch (datafieldType) {
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
            this.stateData.settings.percentOfTotalState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
            this.stateData.settings.changePercentState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
            this.stateData.settings.cagrState.isSet = false;
            break;
        }
      }

      this.deleteCalculatedField(fieldId);
    });
  }

  currencySelectionChanged(currency) {
    this.currencyDropdownSelected = currency; // this.stateData.settings.currency = currency;

    this.readPivotDataFromApi(); // // on currency change update % of total caption if exists
    // const percentOfTotalField =
    //   this.pivotGridOptions.pivotGridSource.fields.find(
    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal
    //   );
    // if (percentOfTotalField) {
    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();
    // }
  }

  currencyConversionSelectionChanged(currencyConversionType) {
    this.currencyConversionTypeSelected = currencyConversionType; // this.stateData.settings.currencyConversionType = currencyConversionType;

    this.readPivotDataFromApi();
  }

  massUnitSelectionChanged(unitOfMass) {
    this.unitOfMassDropdownSelected = unitOfMass; // this.stateData.settings.unitOfMass = unitOfMass;

    this.readPivotDataFromApi();
  }

  getUserSettings() {
    const userSettings = {
      currency: {
        Id: this.selectedCurrency.Id,
        Code: this.selectedCurrency.CurrencyCode,
        Name: this.selectedCurrency.CurrencyName
      },
      currencyConversionType: 1,
      unitOfMass: {
        Id: 103,
        Name: 'Thousand Lbs'
      },
      unitOfMeasure: {
        Id: 101,
        Name: 'Metric Tonnes'
      },
      unitOfVolume: {
        Id: 7,
        Name: 'Quart (US)'
      },
      selectedYear: {
        PeriodKey: this.currentYear,
        Name: this.currentYear.toString()
      },
      percentOfTotalState: {
        isSet: true,
        dataField: 'Value',
        basedOn: 'Subtotals',
        summaryDisplayMode: 'percentOfColumnTotal'
      },
      changePercentState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'Previous (Shown) Year'
      },
      cagrState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'First (Shown) Year'
      },
      dataFieldArea: 'column',
      userChartSetting: {
        dataFieldsDisplayMode: 'singleAxis',
        chartType: 'Column'
      },
      isReducedDataSource: false,
      rememberLatestState: true
    };
    return userSettings;
  }

  exportToExcel() {
    var _a, _b;

    this.getUserSettings();
    this.studyService.changeExcelLoading(true);
    let title = '...';
    const menuSettings = (_b = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.menuSettings;
    const pivotFields = this.pivotGridDataSource.fields();
    const userSettings = this.getUserSettings();
    let finalData;

    if (this.previewData[0].hasOwnProperty('Year')) {
      finalData = this.previewData.sort((a, b) => a.Year - b.Year);
    } else {
      finalData = this.previewData;
    }

    this.studyService.exportToExcel(finalData, pivotFields, userSettings, title, menuSettings, 0).subscribe(res => {
      let fileName = 'PivotTest';

      if (title.length > 3) {
        fileName = title.split(' ').join('');
        fileName = fileName.split('-').join('_');
      }

      var file = new Blob([res], {
        type: 'application/vnd.ms-excel'
      });
      var fileURL = URL.createObjectURL(file);
      let a = document.createElement('a');
      document.body.appendChild(a);
      a.style.display = 'none';
      a.href = fileURL;
      a.target = '_blank';
      a.download = `${fileName}.xlsx`;
      a.click();
      a.remove();
      this.studyService.changeExcelLoading(false);
    }, error => {
      this.studyService.changeExcelLoading(false);
      console.log(error);
    });
  }

  exportToCvs() {
    this.studyService.changeExcelLoading(true);
    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    this.studyService.exportToCsv(this.previewData, fileName);
  }

  exportToShanptshot() {
    var _a;

    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_2__.Workbook();
    const worksheet = workbook.addWorksheet('Main sheet');
    (0,devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__.exportPivotGrid)({
      component: (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance,
      worksheet: worksheet,
      customizeCell: function (options) {
        const excelCell = options;
        excelCell.excelCell.font = {
          name: 'Calibri',
          size: 11
        };
        excelCell.excelCell.alignment = {
          horizontal: 'left',
          vertical: 'top'
        };
      }
    }).then(function () {
      workbook.xlsx.writeBuffer().then(function (buffer) {
        (0,file_saver__WEBPACK_IMPORTED_MODULE_4__.saveAs)(new Blob([buffer], {
          type: 'application/octet-stream'
        }), fileName + '.xlsx');
      });
    });
  }

  fillPivot(pivotGridOptions, pivotData) {
    var _a;

    this.saveStateEnabled = false;
    const selectedYear = this.stateData ? this.stateData.settings.selectedYear : this.currentYear;

    if (pivotGridOptions && ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings)) {
      // If is visible like default, add % of total to pivot
      if (this.stateData.settings.percentOfTotalState.isSet) {
        this.addPercentOfTotalsToPivot(true);
      } // If is visible like default, add change % to pivot


      if (this.stateData.settings.changePercentState.isSet) {
        this.addPrecentOfChangeToPivot(true);
      } // If is visible like default, add CAGR to pivot


      if (this.stateData.settings.cagrState.isSet) {
        this.addCAGRToPivot(true);
      }

      const pivotGridSource = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridSource();
      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;
      pivotGridSource.store = pivotData; // make copy of datasource without reference to old object

      let sourceCopy = lodash__WEBPACK_IMPORTED_MODULE_3__.cloneDeep(pivotGridSource); // if administrator set default sorting to true do not use any special sorting

      if (!pivotGridOptions.settings.useDefaultSorting) {
        // if some special sorting is applied
        if (pivotGridOptions.settings.specialSorting && pivotGridOptions.settings.specialSorting.length) {
          for (let specialSorting of pivotGridOptions.settings.specialSorting) {
            if (specialSorting.fieldName) {
              let orderAray = [];

              if (pivotData) {
                let rowData = 0;

                for (let row of pivotData) {
                  // if (row.Year == selectedYear.PeriodKey) {
                  // in case value datafield is not exists, must exists unit
                  rowData = row.Value === undefined ? row.Unit : row.Value;

                  if (orderAray.some(r => r.field === row[specialSorting.fieldName])) {
                    orderAray.find(r => r.field === row[specialSorting.fieldName]).valueSum += rowData;
                  } else {
                    orderAray.push({
                      field: row[specialSorting.fieldName],
                      valueSum: rowData
                    });
                  } // }

                }

                orderAray = orderAray.sort((a, b) => b.valueSum - a.valueSum).map(m => m.field);
                orderAray.forEach((item, index) => {
                  if (item.startsWith(specialSorting.beginningWith)) {
                    orderAray.push(orderAray.splice(index, 1)[0]);
                  }
                });
                const sortingField = sourceCopy.fields.find(f => f.dataField === specialSorting.fieldName);

                if (sortingField) {
                  sortingField.sortOrder = 'asc';

                  sortingField.sortingMethod = (b, a) => {
                    // if (!this.isHeaderFilterLoading) {
                    //   for (const item of orderAray) {
                    //     if (a.value === item) {
                    //       return 1;
                    //     }
                    //     if (b.value === item) {
                    //       return -1;
                    //     }
                    //   }
                    // }
                    return b.value.localeCompare(a.value);
                  };
                }
              }
            }
          }
        } else {
          this.applySortingRolesByYear();
        }
      }

      if (this.pivotGridDataSource) {
        this.pivotGridDataSource.dispose();
      } // check if source contains dataType property and set visibility to false


      if (pivotGridSource.store && pivotGridSource.store.length && pivotGridSource.store[0].DataType) {
        let dataType = sourceCopy.fields.filter(d => d.dataField === 'DataType');
        dataType[0].visible = false;
      } // check all datafields if contains an exception in calculating


      const allDatafields = sourceCopy.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false);

      for (let field of allDatafields) {
        let newField = this.returnSpecialSumamryField(field);

        if (newField) {
          sourceCopy.fields.push(newField);
          field.visible = false;
        }
      } // remove unused properties


      for (let field of sourceCopy.fields) {
        // remove group properties when group is empty
        if (field.groupName == '') {// delete field.groupName;
          // delete field.groupIndex;
        } // in case fileld is grouped field parse index to int
        else if (field.groupName && field.groupName.length > 0) {
          let groupIndex = field.groupIndex ? parseInt(field.groupIndex.toString()) : 0;
          field.groupIndex = groupIndex;
        }
      }

      if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.settings.groupedFields) {
        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {
          let field = {
            groupName: groupedField.groupName,
            area: groupedField.area
          };
          sourceCopy.fields.push(field);
        }
      }

      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](sourceCopy); // this solves alphabetical filtering in filters

      setTimeout(() => {
        var _a;

        const source = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
        const getFieldValues = source.getFieldValues;
        this.isHeaderFilterLoading = false;
        let that = this;

        source.getFieldValues = function () {
          that.isHeaderFilterLoading = true;
          return getFieldValues.apply(this, arguments).always(function () {
            that.isHeaderFilterLoading = false;
          });
        };
      }, 1);
      src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);

      if (pivotGridOptions.settings && (pivotGridOptions.settings.menuSettings.isChart || pivotGridOptions.settings.charts.isVisible)) {// this.initChart();
      }
    } //cutomize texts in pivot
    // this.updateDefaultPivotTexts();
    // apply special filtering
    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {
    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);
    //}


    setTimeout(() => {
      this.saveStateEnabled = true;
    }, 1);
  }

  returnSpecialSumamryField(fieldOriginal) {
    if (fieldOriginal.summaryType === 'range') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption || '';
      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.dataField = fieldOriginal.dataField || '';

      fieldNew.calculateCustomSummary = e => this.calculateSummaryValueRange(e, fieldOriginal);

      fieldNew.customizeText = e => this.customizeRangeText(e);

      fieldNew.isCalculated = true;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.range;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else if (fieldOriginal.summaryType === 'sumCdOd') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption;

      fieldNew.calculateCustomSummary = options => this.calculateSummaryValueCdOd(options, fieldOriginal);

      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.isCalculated = false;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.none;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else {
      return undefined;
    }
  }

  calculateSummaryValueRange(e, field) {
    var _a, _b;

    const valueNearZero = Number.EPSILON;

    switch (e.summaryProcess) {
      case 'start':
        e.totalValue = 0;
        e.values = [0, 0];
        break;

      case 'calculate':
        if (e.value != -1.7976931348623157e308) {
          if (!e.values[0] || !e.values[1]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value < e.values[0]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value > e.values[1]) {
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }
        }

        break;

      case 'finalize':
        let min = e.values[0] ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision) : 0;
        let max = e.values[1] ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed((_b = field.format) === null || _b === void 0 ? void 0 : _b.precision) : 0; // if (
        //   GlobalSettings.SpecialValueForSqlMoney.find(
        //     (v) => v === Number(min)
        //   ) ||
        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))
        // ) {
        //   ErrorHelper.informAdministrator(
        //     this.appCommonDataService,
        //     'Unhandled range value - (' +
        //       min +
        //       ')(' +
        //       max +
        //       ') ' +
        //       Common.objToString(this.requestedView) +
        //       'Environment: ' +
        //       Common.objToString(
        //         this.appEnvironmentData.getEnvironmentSettings()
        //       ) +
        //       ' User: ' +
        //       Common.objToString(this.sharedService.getUserData())
        //   );
        // }

        if (min === max) {
          e.totalValue = min;
        } else if (!min) {
          e.totalValue = max;
        } else {
          e.totalValue = min + ' - ' + max;
        }

        break;
    }
  }

  customizeRangeText(e) {
    if (e.value === undefined) {
      return src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === null || src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === void 0 ? void 0 : src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash;
    } else {
      return e.value;
    }
  }

  calculateSummaryValueCdOd(options, field) {
    var _a;

    switch (options.summaryProcess) {
      case 'start':
        options.totalValue = {
          value: 0,
          hasCd: false,

          valueOf() {
            return this.value;
          },

          toString() {
            return this.value.toString();
          },

          indexOf() {
            const stringValue = this.toString();
            return stringValue.indexOf.apply(this, arguments);
          }

        };
        break;

      case 'calculate':
        options.totalValue.value += options.value[field.dataField] || 0;
        options.totalValue.hasCd = options.totalValue.hasCd || options.value.DataType === 'cd';
        break;

      case 'finalize':
        let totalValue = options.totalValue;
        totalValue.value = totalValue.value.toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        options.totalValue = totalValue;
        break;
    }
  }

  applySortingRolesByYear() {
    this.yearDataFieldName = 'Year';
    setTimeout(() => {
      var _a;

      const pivotGridDataSource = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();

      const columnFields = pivotGridDataSource._fields.filter(f => f.area === 'column');

      const datafields = pivotGridDataSource._fields.filter(f => f.area === 'data');

      const yearFieldOnFirstPositon = columnFields.filter(f => f.areaIndex === 0 && f.dataField === this.yearDataFieldName); // apply this role only in case, year field is on first column position

      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {
        const rowFields = pivotGridDataSource._fields.filter(f => f.area === 'row');

        const selectedYear = this.currentYear; // const selectedYear = this.stateData
        //   ? this.stateData.settings.selectedYear.PeriodKey
        //   : 2021;

        if (selectedYear) {
          for (const field of rowFields) {
            pivotGridDataSource.field(field.dataField, {
              sortBySummaryField: datafields ? datafields.filter(f => f.areaIndex === 0)[0].dataField : undefined,
              sortBySummaryPath: [selectedYear],
              sortOrder: 'desc'
            });
          }

          pivotGridDataSource.load();
        }
      }
    }, 100);
  }

  setCalculatedFieldFromTopMenu(value) {
    var _a;

    const type = value.itemName;
    const dataField = value.dataField;

    switch (type) {
      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
        this.isPercentOfTotalPopup = true;
        this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.percentOfTotalState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
        this.isPercentOfChangePopup = true;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.changePercentState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
        this.isCagrPopup = true; // this.stateData?.settings.cagrState.dataField = dataField;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.cagrState.dataField = dataField;
        }

        break;
    }
  }

  onBasedOnChange(isInit) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.basedOn = this.percentOfTotalBasedOn;
    }

    this.summaryDisplayModeItems = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.basedOn) === 'Subtotals' ? this.pivotSummaryDisplayModesSubtotals : this.pivotSummaryDisplayModesGrandTotals;

    if (isInit === false && typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';
    }
  }

  onComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.changePercentState.computingType = this.percentOfChangeComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.changePercentState.computingType =
    //     ComputingType.FirstYear;
    // }

  }

  onCagrComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.cagrState.computingType = this.cagrComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;
    // }

  }

  addPercentOfTotalsToPivot(iSCallFromFillPivot) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = this.percentInDirection;
    }

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);
    } else {
      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);
    }
  }

  addPercentOfTotalsToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of total exists

      const percentOfTotal = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal);

      if (percentOfTotal && this.pivotGridDataSource) {
        fieldId = percentOfTotal.id;
        percentOfTotal.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
        percentOfTotal.caption = this.getCaptionForPercentOfTotal();
        percentOfTotal.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.dataField) || 'Value';
        percentOfTotal.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        this.pivotGridDataSource.field(percentOfTotal.id, {
          summaryDisplayMode: percentOfTotal.summaryDisplayMode,
          caption: percentOfTotal.caption,
          calculatedFieldType: percentOfTotal.calculatedFieldType,
          dataField: ((_e = this.stateData) === null || _e === void 0 ? void 0 : _e.settings.percentOfTotalState.dataField) || 'Value'
        });
        this.pivotGridDataSource.load(); // CommonHelper.updatePlaceholders(
        //   this.pivotGridDataSource,
        //   this.stateData
        // );
      } else {
        this.firstAvailableId = ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.pivotGridSource.fields.length) || 0;
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfTotal();
        field.dataField = ((_g = this.stateData) === null || _g === void 0 ? void 0 : _g.settings.percentOfTotalState.dataField) || 'Value';
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.isMeasure = true;
        field.visible = true;
        field.calculateSummaryValue = undefined;
        field.summaryDisplayMode = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.percentOfTotalState.summaryDisplayMode) || '';
        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_j = this.pivotGridOptions) === null || _j === void 0 ? void 0 : _j.settings.calculatedFields.formatPrecision) || 1
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = ((_k = this.stateData) === null || _k === void 0 ? void 0 : _k.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        (_l = this.pivotGridOptions) === null || _l === void 0 ? void 0 : _l.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && typeof this.pivotGridOptions !== 'undefined') {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfTotalPopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.percentOfTotalState.isSet = true;
      }
    }
  }

  addPercentOfTotalsToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    this.removeAllHiddenCalculatedFields();
    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForPercentOfTotal();
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.dataField) || '';
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.isMeasure = true;
    field.visible = true;
    field.calculateSummaryValue = undefined;
    field.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isPercentOfTotalPopup = false;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  removeAllHiddenCalculatedFields() {
    var _a;

    if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state) && this.pivotGridDataSource) {
      this.stateData.state.fields = this.stateData.state.fields.filter(a => a.area !== undefined);
      this.pivotGridDataSource.state(this.stateData.state);
    }
  }

  getCaptionForPercentOfTotal() {
    var _a, _b, _c, _d;

    let caption = ''; //check if exist 2 or more datafields

    if (typeof this.pivotGridOptions !== 'undefined' && ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length) >= 2) {
      const percentOfTotaldatafield = (_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.dataField;
      let currentDatafieldCaption = '';

      if (this.pivotGridOptions.settings.isCube) {
        currentDatafieldCaption = // this.pivotGridOptions.pivotGridSource.fields.find(
        //   (f) => f.dataField === percentOfTotaldatafield
        // ).caption;
        'Cube Caption';
      } else {
        if (typeof this.pivotGridOptions !== 'undefined') {
          const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfTotaldatafield);

          if (fieldCaption) {
            currentDatafieldCaption = fieldCaption.caption;
          }
        }
      }

      caption = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal + ' ' + currentDatafieldCaption;
    } else {
      caption = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    }

    return caption;
  }

  addPrecentOfChangeToPivot(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of change exists

      const percentOfChange = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent);

      if (percentOfChange && this.pivotGridDataSource) {
        fieldId = percentOfChange.id;
        this.pivotGridDataSource.field(percentOfChange.id, {
          caption: this.getCaptionForPercentOfChange(),
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.dataField) || 'Value',
          calculateSummaryValue: e => this.calculateSummaryValuePercentOfChange(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfChange();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.changePercentState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValuePercentOfChange(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfChangePopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.changePercentState.isSet = true;
      }
    }
  }

  calculateSummaryValuePercentOfChange(e) {
    var _a, _b;

    if (e.parent('column')) {
      let base;

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        let yearIndex = 0;

        for (const index in e.parent('column').children()) {
          if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
            yearIndex = parseInt(index);
            break;
          }
        }

        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const returnValue = e.value() / base.value() - 1;
      return isNaN(returnValue) || returnValue && returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  getCaptionForPercentOfChange() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const percentOfChangeDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfChangeDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (percentOfChangeDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
    }

    return caption;
  }

  addCAGRToPivot(iSCallFromFillPivot) {
    var _a;

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addCAGRToPivotCube(iSCallFromFillPivot);
    } else {
      this.addCAGRToPivotArray(iSCallFromFillPivot);
    }
  }

  addCAGRToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case cagr exists, remove and recreate it (case for edit)

      const cagr = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      if (cagr && this.pivotGridDataSource) {
        fieldId = cagr.id;
        this.pivotGridDataSource.field(cagr.id, {
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.dataField) || 'Value',
          caption: this.getCaptionForCagr(),
          calculateSummaryValue: e => this.calculateSummaryValueCagr(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForCagr();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isCagrPopup = false;
      if (this.stateData) this.stateData.settings.cagrState.isSet = true;
    }
  }

  addCAGRToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c;

    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForCagr();
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField) || 'Value';
    field.isMeasure = true;
    field.visible = true;

    field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isCagrPopup = false;

    if (this.stateData) {
      this.stateData.settings.cagrState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  getCaptionForCagr() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const cagrDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataField === cagrDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (cagrDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    }

    return caption;
  }

  calculateSummaryValueCagr(e) {
    var _a, _b;

    const shownYearsInPivot = this.shownYears;

    if (e.parent('column') && shownYearsInPivot) {
      let base;
      let yearIndex = 0;
      let prevYearIndex = 0;

      for (const index in e.parent('column').children()) {
        if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
          yearIndex = parseInt(index);
          break;
        }
      }

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
        prevYearIndex = 0;
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();
      const yearSpan = shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];
      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;
      return isNaN(returnValue) || returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  onChangeAutoSaveStatus(statusValue) {
    var _a;

    if (this.stateData) {
      this.stateData.settings.rememberLatestState = statusValue;
    }

    if (statusValue == false) {
      this.alertService.info('The system will remember this state!');
    } else {
      this.alertService.info('The system will remember the last used state!');
    }

    this.canCallSaveState = true;
    this.customSaveState((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state, true);
  }

}

SegmentSalesPreviewComponent.ɵfac = function SegmentSalesPreviewComponent_Factory(t) {
  return new (t || SegmentSalesPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_20__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_21__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_15__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_22__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_16__.SharedService));
};

SegmentSalesPreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵdefineComponent"]({
  type: SegmentSalesPreviewComponent,
  selectors: [["app-segment-sales-preview"]],
  viewQuery: function SegmentSalesPreviewComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    }
  },
  inputs: {
    studyData: "studyData",
    currentYear: "currentYear",
    foreCastYears: "foreCastYears",
    previousYears: "previousYears",
    setPreviewData: "setPreviewData",
    setGridFields: "setGridFields",
    setPreviewGridKey: "setPreviewGridKey",
    setSelectedCurrency: "setSelectedCurrency",
    setStudyType: "setStudyType",
    setVolumeYears: "setVolumeYears",
    setViewId: "setViewId"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵNgOnChangesFeature"]],
  decls: 8,
  vars: 33,
  consts: [[3, "setSelectedCurrency", "pivotGridOptions", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus"], ["id", "pivotGrid", "showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser", "showTotalsPrior", "dataFieldArea", "onContextMenuPreparing", "onOptionChanged", "onInitialized", "onContentReady", "onCellPrepared"], ["pivotGrid", ""], [3, "allowSearch"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], [4, "ngIf"], [1, "popup", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "visible", "visibleChange"], [4, "dxTemplate", "dxTemplateOf"], [1, "form"], [1, "dx-fieldset"], [1, "dx-field"], [1, "dx-field-label"], [1, "dx-field-value"], [3, "items", "value", "valueChange", "onValueChanged", "onInitialized"], ["class", "dx-field", 4, "ngIf"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "disabled", "onClick"], ["displayExpr", "name", "valueExpr", "id", 3, "items", "value", "valueChange"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "onClick"]],
  template: function SegmentSalesPreviewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](0, "app-preview-top-menu", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("currencySelectionChanged", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_currencySelectionChanged_0_listener($event) {
        return ctx.currencySelectionChanged($event);
      })("currencyConversionSelectionChanged", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_currencyConversionSelectionChanged_0_listener($event) {
        return ctx.currencyConversionSelectionChanged($event);
      })("massUnitSelectionChanged", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_massUnitSelectionChanged_0_listener($event) {
        return ctx.massUnitSelectionChanged($event);
      })("onExportToExcel", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_onExportToExcel_0_listener() {
        return ctx.exportToExcel();
      })("onExportToCvs", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_onExportToCvs_0_listener() {
        return ctx.exportToCvs();
      })("onExportSnapshot", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_onExportSnapshot_0_listener() {
        return ctx.exportToShanptshot();
      })("calculatedFieldItemSelected", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_calculatedFieldItemSelected_0_listener($event) {
        return ctx.setCalculatedFieldFromTopMenu($event);
      })("onChangeAutoSaveStatus", function SegmentSalesPreviewComponent_Template_app_preview_top_menu_onChangeAutoSaveStatus_0_listener($event) {
        return ctx.onChangeAutoSaveStatus($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementStart"](1, "dx-pivot-grid", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵlistener"]("onContextMenuPreparing", function SegmentSalesPreviewComponent_Template_dx_pivot_grid_onContextMenuPreparing_1_listener($event) {
        return ctx.onContextMenuPreparing($event);
      })("onOptionChanged", function SegmentSalesPreviewComponent_Template_dx_pivot_grid_onOptionChanged_1_listener($event) {
        return ctx.onOptionChanged($event);
      })("onInitialized", function SegmentSalesPreviewComponent_Template_dx_pivot_grid_onInitialized_1_listener($event) {
        return ctx.onInitialized($event);
      })("onContentReady", function SegmentSalesPreviewComponent_Template_dx_pivot_grid_onContentReady_1_listener($event) {
        return ctx.onContentReady($event);
      })("onCellPrepared", function SegmentSalesPreviewComponent_Template_dx_pivot_grid_onCellPrepared_1_listener($event) {
        return ctx.cellPrepared($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](3, "dxo-field-chooser", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelement"](4, "dxo-state-storing", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](5, SegmentSalesPreviewComponent_div_5_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](6, SegmentSalesPreviewComponent_div_6_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵtemplate"](7, SegmentSalesPreviewComponent_div_7_Template, 3, 7, "div", 5);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("setSelectedCurrency", ctx.selectedCurrency)("pivotGridOptions", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](31, _c2))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵpureFunction0"](32, _c3))("allowFiltering", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowFiltering) || false)("allowExpandAll", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowExpandAll) || false)("showBorders", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showBorders) || false)("showColumnGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnGrandTotals) || false)("showRowGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowGrandTotals) || false)("showRowTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowTotals) || false)("showColumnTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnTotals) || false)("showTotalsPrior", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showTotalsPrior) || "")("dataFieldArea", (ctx.stateData == null ? null : ctx.stateData.settings == null ? null : ctx.stateData.settings.dataFieldArea) || "");
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("allowSearch", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("enabled", ctx.saveStateEnabled)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_18__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
    }
  },
  directives: [_shc_sub_shc_preview_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_17__.PreviewTopMenuComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoFieldChooserComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_24__.DxoStateStoringComponent, _angular_common__WEBPACK_IMPORTED_MODULE_25__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxPopupComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_27__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxSelectBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxButtonComponent],
  styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWdtZW50LXNhbGVzLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"]
});

/***/ }),

/***/ 86991:
/*!**********************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/psc/sub/segment-sales/segment-sales.component.ts ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SegmentSalesComponent": () => (/* binding */ SegmentSalesComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var src_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/common.service */ 23115);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 42473);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _segment_sales_preview_segment_sales_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./segment-sales-preview/segment-sales-preview.component */ 51542);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);

























function SegmentSalesComponent_dx_data_grid_6_div_12_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r17.currentCurrency.CurrencyName, " (", ctx_r17.currentCurrency.CurrencyCode, ") ");
} }
function SegmentSalesComponent_dx_data_grid_6_div_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, SegmentSalesComponent_dx_data_grid_6_div_12_div_3_Template, 2, 2, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r7.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r7.currentCurrency);
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r26.onDeleteCustomSaveState(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c0 = function () { return { width: 200 }; };
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-drop-down-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onItemClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_4_Template_dx_drop_down_button_onItemClick_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r28.onCalculatedItemClick($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](2, _c0))("items", ctx_r19.calculatorContextMenuItems);
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_6_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r31); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r30.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_8_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r33); const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r32.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_9_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_9_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r36); const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r35.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_9_div_1_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_10_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_10_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r39); const ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r38.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_10_div_1_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_11_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_11_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r42); const ctx_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r41.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r40.disabledSignOffButton);
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_11_div_1_Template, 2, 1, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_12_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_12_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r45); const ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r44.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_12_div_1_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_2_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_4_Template, 2, 3, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_6_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SegmentSalesComponent_dx_data_grid_6_ng_container_13_div_8_Template, 2, 0, "div", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_9_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_10_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_11_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, SegmentSalesComponent_dx_data_grid_6_ng_container_13_dxi_item_12_Template, 2, 0, "dxi-item", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r8.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r8.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r8.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r8.isLockedStudy);
} }
function SegmentSalesComponent_dx_data_grid_6_dxi_column_16_dxi_column_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 78);
} if (rf & 2) {
    const volumeYear_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 120)("dataField", volumeYear_r47.field)("caption", volumeYear_r47.year)("allowEditing", volumeYear_r47.isEditable)("allowFiltering", false)("visible", volumeYear_r47.isVisible)("cellTemplate", volumeYear_r47.cellTemplate);
} }
function SegmentSalesComponent_dx_data_grid_6_dxi_column_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-column", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_dxi_column_16_dxi_column_1_Template, 1, 7, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r9.volumeYearsShow);
} }
function SegmentSalesComponent_dx_data_grid_6_dxi_column_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 78);
} if (rf & 2) {
    const currentYearShow_r48 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 120)("dataField", currentYearShow_r48.field)("caption", currentYearShow_r48.year)("allowEditing", currentYearShow_r48.isEditable)("allowFiltering", false)("visible", currentYearShow_r48.isVisible)("cellTemplate", currentYearShow_r48.cellTemplate);
} }
function SegmentSalesComponent_dx_data_grid_6_dxi_column_18_dxi_column_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 78);
} if (rf & 2) {
    const forecastYear_r50 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 120)("dataField", forecastYear_r50.field)("caption", forecastYear_r50.year)("allowEditing", forecastYear_r50.isEditable)("allowFiltering", false)("visible", forecastYear_r50.isVisible)("cellTemplate", forecastYear_r50.cellTemplate);
} }
function SegmentSalesComponent_dx_data_grid_6_dxi_column_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-column", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_dxi_column_18_dxi_column_1_Template, 1, 7, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r11.forecastYearsShow);
} }
function SegmentSalesComponent_dx_data_grid_6_dxi_column_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 80);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function SegmentSalesComponent_dx_data_grid_6_div_20_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_6_div_20_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const d_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r53.deleteRow(d_r51.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SegmentSalesComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_div_20_dx_button_1_Template, 1, 0, "dx-button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r51 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r51.data.DataRowId !== null);
} }
function SegmentSalesComponent_dx_data_grid_6_div_21_span_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "span", 86);
} }
function SegmentSalesComponent_dx_data_grid_6_div_21_input_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 87);
} if (rf & 2) {
    const data_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r56.value > 0 ? data_r56.value.toFixed(1) : "");
} }
function SegmentSalesComponent_dx_data_grid_6_div_21_span_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r56.value > 0 ? data_r56.value.toFixed(1) : "");
} }
function SegmentSalesComponent_dx_data_grid_6_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SegmentSalesComponent_dx_data_grid_6_div_21_span_1_Template, 1, 0, "span", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SegmentSalesComponent_dx_data_grid_6_div_21_input_2_Template, 1, 1, "input", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, SegmentSalesComponent_dx_data_grid_6_div_21_span_3_Template, 2, 1, "span", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r56 = ctx.$implicit;
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r14.checkHasComment(data_r56));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r14.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r14.isStudyEditable);
} }
function SegmentSalesComponent_dx_data_grid_6_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r62 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r62.value > 0 ? data_r62.value.toFixed(1) : "");
} }
function SegmentSalesComponent_dx_data_grid_6_div_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r63 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r63.value || data_r63.value == 0 ? data_r63.value.toFixed(1) + "%" : "");
} }
function SegmentSalesComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 43, 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onContextMenuPreparing", function SegmentSalesComponent_dx_data_grid_6_Template_dx_data_grid_onContextMenuPreparing_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r65); const ctx_r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r64.onContextMenuPreparing($event); })("onContentReady", function SegmentSalesComponent_dx_data_grid_6_Template_dx_data_grid_onContentReady_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r65); const ctx_r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r66.onContentReady($event); })("onSaved", function SegmentSalesComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r65); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r67.onRowSaved($event); })("onCellPrepared", function SegmentSalesComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r65); const ctx_r68 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r68.onCellPreparedHighlighter($event); })("onCellHoverChanged", function SegmentSalesComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r65); const ctx_r69 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r69.onCellHoverChanged($event); })("onRowPrepared", function SegmentSalesComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r65); const ctx_r70 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r70.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-grouping", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-load-panel", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-filter-row", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-header-filter", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "dxo-paging", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "dxo-scrolling", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](8, "dxo-state-storing", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "dxo-editing", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "dxi-item", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, SegmentSalesComponent_dx_data_grid_6_div_12_Template, 4, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](13, SegmentSalesComponent_dx_data_grid_6_ng_container_13_Template, 13, 4, "ng-container", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, SegmentSalesComponent_dx_data_grid_6_dxi_column_16_Template, 2, 1, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, SegmentSalesComponent_dx_data_grid_6_dxi_column_17_Template, 1, 7, "dxi-column", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, SegmentSalesComponent_dx_data_grid_6_dxi_column_18_Template, 2, 1, "dxi-column", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, SegmentSalesComponent_dx_data_grid_6_dxi_column_19_Template, 1, 1, "dxi-column", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, SegmentSalesComponent_dx_data_grid_6_div_20_Template, 2, 1, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, SegmentSalesComponent_dx_data_grid_6_div_21_Template, 4, 3, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, SegmentSalesComponent_dx_data_grid_6_div_22_Template, 3, 1, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, SegmentSalesComponent_dx_data_grid_6_div_23_Template, 3, 1, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", true)("customSave", ctx_r0.customSaveState)("customLoad", ctx_r0.customLoadState)("savingTimeout", 300);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("fixed", true)("width", 230)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("fixed", true)("width", 230)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r0.volumeYearsShow);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.currentYearsShow);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r0.forecastYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "cargCellTemplate");
} }
function SegmentSalesComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 88);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function SegmentSalesComponent_div_27_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r72 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r72.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r72.field);
} }
function SegmentSalesComponent_div_33_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const forecast_r73 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](forecast_r73.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", forecast_r73.field);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
function SegmentSalesComponent_dx_popup_36_Template(rf, ctx) { if (rf & 1) {
    const _r75 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_dx_popup_36_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r75); const ctx_r74 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r74.notePopupVisible = $event; })("onHidden", function SegmentSalesComponent_dx_popup_36_Template_dx_popup_onHidden_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r75); const ctx_r76 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r76.onNotePopupHide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "textarea", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dx-button", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_popup_36_Template_dx_button_onClick_9_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r75); const ctx_r77 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r77.onSaveNote(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 270)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r4.notePopupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r4.newNoteForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" Add Comment for ", ctx_r4.selectedCommentCellData.colCaption, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](11, _c1, ctx_r4.noteSubmit && ctx_r4.n["note"].errors));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r4.newNoteForm.invalid);
} }
function SegmentSalesComponent_dx_data_grid_40_dxi_column_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 80);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 30);
} }
function SegmentSalesComponent_dx_data_grid_40_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r82 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_dx_data_grid_40_div_5_Template_dx_button_onClick_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r82); const d_r80 = restoredCtx.$implicit; const ctx_r81 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r81.deleteComment(d_r80.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
const _c2 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function SegmentSalesComponent_dx_data_grid_40_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 96);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 97);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, SegmentSalesComponent_dx_data_grid_40_dxi_column_4_Template, 1, 1, "dxi-column", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, SegmentSalesComponent_dx_data_grid_40_div_5_Template, 2, 0, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r5.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](9, _c2));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r5.isStudyEditable && !ctx_r5.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
} }
class SegmentSalesComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService, commonService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.commonService = commonService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.cagr = [];
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            SegmentSales: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.myYears = [];
        this.volumeYears = [];
        this.volumeYearsShow = [];
        this.currentYearsShow = [];
        this.forecastYears = [];
        this.forecastYearsShow = [];
        this.foreCastYear1 = 0;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.channelLists = [];
        this.segmentLists = [];
        this.currentCurrency = {};
        this.datRelationsData = [];
        this.studyDataViewId = 0;
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum;
        this.deleteRowConfirmPopup = false;
        this.deleteCommentConfirmPopup = false;
        this.deleteResetConfirmPopup = false;
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
            'Forecast1',
            'Forecast2',
            'Forecast3',
            'Forecast4',
            'Forecast5',
        ];
        this.isLockedStudy = false;
        this.calculatorContextMenuItems = [];
        this.pivotStateId = 0;
        this.saveStateToDbTimeout = setTimeout(() => { }, 0);
        this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_12__.Subject();
        this.selectedCommentCellData = {};
        this.allColsComments = [];
        this.cellColsComments = [];
        this.deleteCommentData = {};
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Channel: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
            Forecast1: [null],
            Forecast2: [null],
            Forecast3: [null],
            Forecast4: [null],
            Forecast5: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.calculatorContextMenuItems = this.commonService.getCalculatorFields();
        this.customSaveState = this.customSaveState.bind(this);
        this.customLoadState = this.customLoadState.bind(this);
        this.getGridState = this.getGridState.bind(this);
        this.getAllColumnsComments();
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.getPivotSettings();
            this.getGridState();
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getChannelLists();
        this.getSegmentLists();
    }
    getPivotSettings() {
        this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
        if (this.studyDataRelations) {
            this.studyDataViewId = this.studyDataRelations.ViewId;
        }
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getPscStudyData('SegmentSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj.SegmentSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                // console.log('State Data: ', this.stateData);
                this.volumeYears = [];
                this.volumeYearsShow = [];
                this.myYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                    this.myYears.push({ field: `PreviousYear${j}`, year: i });
                    this.volumeYearsShow.push({
                        field: `PreviousYear${j}`,
                        year: i,
                        isEditable: !this.isStudyEditable,
                        cellTemplate: 'EditCellTemplate',
                        isVisible: true,
                    });
                    if (j !== 5) {
                        this.volumeYearsShow.push({
                            field: `PreviousYearCagr${j}`,
                            year: `Cagr, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                        this.volumeYearsShow.push({
                            field: `PreviousYearPerChange${j}`,
                            year: `Change, %, ${i - 1}-${i}`,
                            isEditable: false,
                            cellTemplate: 'cargCellTemplate',
                            isVisible: false,
                        });
                    }
                    this.volumeYearsShow.push({
                        field: `PreviousYearTotalPer${j}`,
                        year: `% Of Total`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                }
                // myYears = this.volumeYears;
                this.myYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                this.currentYearsShow = [];
                this.currentYearsShow.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                    isEditable: !this.isStudyEditable,
                    cellTemplate: 'EditCellTemplate',
                    isVisible: true,
                });
                this.currentYearsShow.push({
                    field: `CagrCurrentYear`,
                    year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.currentYearsShow.push({
                    field: `PerChangeCurrentYear`,
                    year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.currentYearsShow.push({
                    field: `TotalPerCurrentYear`,
                    year: `% Of Total`,
                    isEditable: false,
                    cellTemplate: 'cargCellTemplate',
                    isVisible: false,
                });
                this.forecastYears = [];
                this.forecastYearsShow = [];
                this.cagr = [];
                for (let i = currentYear + 1, j = 1; i < currentYear + 6; i++, j++) {
                    this.forecastYears.push({
                        field: `Forecast${j}`,
                        year: i,
                    });
                    this.myYears.push({ field: `Forecast${j}`, year: i });
                    this.forecastYearsShow.push({
                        field: `Forecast${j}`,
                        year: i,
                        isEditable: !this.isStudyEditable,
                        cellTemplate: 'EditCellTemplate',
                        isVisible: true,
                    });
                    this.forecastYearsShow.push({
                        field: `Cagr${j}`,
                        year: `Cagr, ${i - 1}-${i}`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                    this.forecastYearsShow.push({
                        field: `TotalPer${j}`,
                        year: `% Of Total`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                    this.forecastYearsShow.push({
                        field: `PerChange${j}`,
                        year: `Change, %, ${i - 1}-${i}`,
                        isEditable: false,
                        cellTemplate: 'cargCellTemplate',
                        isVisible: false,
                    });
                    // this.cagr.push({ field: `Cagr${j}`, year: `${i - 1}-${i}` });
                }
                // myYears.push(...this.forecastYears);
                // this.studyData.map((item: any, i) => {
                //   this.studyData[i].Cagr1 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.CurrentYear,
                //       item.Forecast1,
                //       item.Forecast1 - item.CurrentYear
                //     );
                //   this.studyData[i].Cagr2 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast1,
                //       item.Forecast2,
                //       item.Forecast2 - item.Forecast1
                //     );
                //   this.studyData[i].Cagr3 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast2,
                //       item.Forecast3,
                //       item.Forecast3 - item.Forecast2
                //     );
                //   this.studyData[i].Cagr4 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast3,
                //       item.Forecast4,
                //       item.Forecast4 - item.Forecast3
                //     );
                //   this.studyData[i].Cagr5 =
                //     this.commonService.calculateCAGRPercentage(
                //       item.Forecast4,
                //       item.Forecast5,
                //       item.Forecast5 - item.Forecast4
                //     );
                //   this.calculatePercentageChangeForForecastYears(this.studyData[i]);
                //   // this.studyData[i].PerChange1 = this.calculatePercentageChange(
                //   //   item.CurrentYear,
                //   //   item.Forecast1
                //   // );
                //   // this.studyData[i].PerChange2 = this.calculateCAGRPercentage(
                //   //   item.Forecast1,
                //   //   item.Forecast2,
                //   //   item.Forecast2 - item.Forecast1
                //   // );
                //   // this.studyData[i].PerChange3 = this.calculateCAGRPercentage(
                //   //   item.Forecast2,
                //   //   item.Forecast3,
                //   //   item.Forecast3 - item.Forecast2
                //   // );
                //   // this.studyData[i].PerChange4 = this.calculateCAGRPercentage(
                //   //   item.Forecast3,
                //   //   item.Forecast4,
                //   //   item.Forecast4 - item.Forecast3
                //   // );
                //   // this.studyData[i].PerChange5 = this.calculateCAGRPercentage(
                //   //   item.Forecast4,
                //   //   item.Forecast5,
                //   //   item.Forecast5 - item.Forecast4
                //   // );
                // });
                this.calculateTotalPercentageForCols();
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    this.calculateCargForForecastYears(item);
                    this.calculatePercentageChangeForForecastYears(item);
                    // const rowNoteArray: any = [];
                    // if (item.Notes !== null) {
                    //   const noteArray = item.Notes.split('|||');
                    //   noteArray.map((singleVal: any) => {
                    //     const n = singleVal.split('@@@');
                    //     const d = n[0].split('###');
                    //     rowNoteArray.push({
                    //       name: d[0].trim(),
                    //       date: new Date(d[1].trim()),
                    //       note: n[1].trim(),
                    //     });
                    //   });
                    // }
                    // let sortRowNoteArray: any = [];
                    // if (rowNoteArray.length > 0) {
                    //   sortRowNoteArray = rowNoteArray.sort(
                    //     (a: any, b: any) => b.date - a.date
                    //   );
                    // }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    let rowComments = [];
                    if (this.allColsComments) {
                        rowComments = this.allColsComments.filter((single) => single.DraftDataRowId == item.DataRowId);
                        rowComments.map(({ ColumnName }) => {
                            this.myYears.map((elem) => {
                                if (elem.field == ColumnName) {
                                    item[`${ColumnName}_comment`] = true;
                                }
                            });
                        });
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    // this.studyData[i].StudyNotes =
                    //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    // this.studyData[i].EditNote = false;
                    // this.studyData[i].Notes = null;
                    // this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    getChannelLists() {
        this.sharedService
            .getPSCDataEntryData('Channel')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.channelLists = data.Data;
            }
        });
    }
    getSegmentLists() {
        this.sharedService
            .getPSCDataEntryData('Segment')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.segmentLists = data.Data;
            }
        });
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
            data.Forecast1 = +data.Forecast1;
            data.Forecast2 = +data.Forecast2;
            data.Forecast3 = +data.Forecast3;
            data.Forecast4 = +data.Forecast4;
            data.Forecast5 = +data.Forecast5;
            this.calculateCargForForecastYears(data);
            this.calculateTotalPercentageForCols();
            this.calculatePercentageChangeForForecastYears(data);
        }
    }
    calculateCargForForecastYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.PreviousYearCagr1 = this.commonService.calculateCAGRPercentage(data.PreviousYear2, data.PreviousYear1, 1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.PreviousYearCagr2 = this.commonService.calculateCAGRPercentage(data.PreviousYear3, data.PreviousYear2, 1);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.PreviousYearCagr3 = this.commonService.calculateCAGRPercentage(data.PreviousYear4, data.PreviousYear3, 1);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.PreviousYearCagr4 = this.commonService.calculateCAGRPercentage(data.PreviousYear5, data.PreviousYear4, 1);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(data.PreviousYear1, data.CurrentYear, 1);
        }
        if (data.CurrentYear > 0 && data.Forecast1 > 0) {
            data.Cagr1 = this.commonService.calculateCAGRPercentage(data.CurrentYear, data.Forecast1, 1);
        }
        if (data.Forecast1 > 0 && data.Forecast2 > 0) {
            data.Cagr2 = this.commonService.calculateCAGRPercentage(data.Forecast1, data.Forecast2, 1);
        }
        if (data.Forecast2 > 0 && data.Forecast3 > 0) {
            data.Cagr3 = this.commonService.calculateCAGRPercentage(data.Forecast2, data.Forecast3, 1);
        }
        if (data.Forecast3 > 0 && data.Forecast4 > 0) {
            data.Cagr4 = this.commonService.calculateCAGRPercentage(data.Forecast3, data.Forecast4, 1);
        }
        if (data.Forecast4 > 0 && data.Forecast5 > 0) {
            data.Cagr5 = this.commonService.calculateCAGRPercentage(data.Forecast4, data.Forecast5, 1);
        }
    }
    calculateTotalPercentageForCols() {
        const PreviousYear1Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear1, 0);
        const PreviousYear2Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear2, 0);
        const PreviousYear3Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear3, 0);
        const PreviousYear4Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear4, 0);
        const PreviousYear5Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.PreviousYear5, 0);
        const CurrentYearTotal = this.studyData.reduce((sum, currentItem) => sum + currentItem.CurrentYear, 0);
        const foreCastYear1Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.Forecast1, 0);
        const foreCastYear2Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.Forecast2, 0);
        const foreCastYear3Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.Forecast3, 0);
        const foreCastYear4Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.Forecast4, 0);
        const foreCastYear5Total = this.studyData.reduce((sum, currentItem) => sum + currentItem.Forecast5, 0);
        this.studyData.map((item) => {
            item.PreviousYearTotalPer1 = this.commonService.calculateTotalPercentage(PreviousYear1Total, item.PreviousYear1);
            item.PreviousYearTotalPer2 = this.commonService.calculateTotalPercentage(PreviousYear2Total, item.PreviousYear2);
            item.PreviousYearTotalPer3 = this.commonService.calculateTotalPercentage(PreviousYear3Total, item.PreviousYear3);
            item.PreviousYearTotalPer4 = this.commonService.calculateTotalPercentage(PreviousYear4Total, item.PreviousYear4);
            item.PreviousYearTotalPer5 = this.commonService.calculateTotalPercentage(PreviousYear5Total, item.PreviousYear5);
            item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(CurrentYearTotal, item.CurrentYear);
            item.TotalPer1 = this.commonService.calculateTotalPercentage(foreCastYear1Total, item.Forecast1);
            item.TotalPer2 = this.commonService.calculateTotalPercentage(foreCastYear2Total, item.Forecast2);
            item.TotalPer3 = this.commonService.calculateTotalPercentage(foreCastYear3Total, item.Forecast3);
            item.TotalPer4 = this.commonService.calculateTotalPercentage(foreCastYear4Total, item.Forecast4);
            item.TotalPer5 = this.commonService.calculateTotalPercentage(foreCastYear5Total, item.Forecast5);
        });
    }
    calculatePercentageChangeForForecastYears(data) {
        if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {
            data.PreviousYearPerChange1 =
                this.commonService.calculatePercentageChange(data.PreviousYear2, data.PreviousYear1);
        }
        if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {
            data.PreviousYearPerChange2 =
                this.commonService.calculatePercentageChange(data.PreviousYear3, data.PreviousYear2);
        }
        if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {
            data.PreviousYearPerChange3 =
                this.commonService.calculatePercentageChange(data.PreviousYear4, data.PreviousYear3);
        }
        if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {
            data.PreviousYearPerChange4 =
                this.commonService.calculatePercentageChange(data.PreviousYear5, data.PreviousYear4);
        }
        if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {
            data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(data.PreviousYear1, data.CurrentYear);
        }
        if (data.CurrentYear > 0 && data.Forecast1 > 0) {
            data.PerChange1 = this.commonService.calculatePercentageChange(data.CurrentYear, data.Forecast1);
        }
        if (data.Forecast1 > 0 && data.Forecast2 > 0) {
            data.PerChange2 = this.commonService.calculatePercentageChange(data.Forecast1, data.Forecast2);
        }
        if (data.Forecast2 > 0 && data.Forecast3 > 0) {
            data.PerChange3 = this.commonService.calculatePercentageChange(data.Forecast2, data.Forecast3);
        }
        if (data.Forecast3 > 0 && data.Forecast4 > 0) {
            data.PerChange4 = this.commonService.calculatePercentageChange(data.Forecast3, data.Forecast4);
        }
        if (data.Forecast4 > 0 && data.Forecast5 > 0) {
            data.PerChange5 = this.commonService.calculatePercentageChange(data.Forecast4, data.Forecast5);
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Forecast1: +newRowData.ForecastYear1,
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            Channel: newRowData.Channel.Name,
            ChannelId: newRowData.Channel.Id,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            Forecast2: +newRowData.Forecast2,
            Forecast3: +newRowData.Forecast3,
            Forecast4: +newRowData.Forecast4,
            Forecast5: +newRowData.Forecast5,
            Segment: newRowData.Segment.Name,
            SegmentId: newRowData.Segment.Id,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ChannelId == newRow.ChannelId && item.SegmentId == newRow.SegmentId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ChannelId || 0) - (b.ChannelId || 0) ||
                (a.SegmentId || 0) - (b.SegmentId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
    }
    onSaveNote(isLoad = true) {
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        if (!this.selectedCommentCellData) {
            return;
        }
        // const rowData = this.newNoteForm.value.rowData;
        // const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        // const IsEditedNote = this.dataGrid?.instance.cellValue(
        //   rowIndex,
        //   'EditNote'
        // );
        // this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        // let noteValue = rowData.data.StudyNotes;
        // noteValue = noteValue !== null ? noteValue : '';
        // if (IsEditedNote) {
        //   const noteArray =
        //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
        //   noteArray.shift();
        //   noteValue = noteArray.join(',');
        // }
        // const newNoteValue =
        //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        // this.dataGrid?.instance.saveEditData();
        // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);
        // this.dataGrid?.instance.saveEditData();
        const formData = {
            dataItemCategoryId: this.studyAreaId,
            marketYearCategoryDataId: this.marketYearCategoryId,
            draftDataRowId: this.selectedCommentCellData.dataRowId,
            columnName: this.selectedCommentCellData.colValue,
            comment: newNote,
        };
        this.isLoadingService.add();
        this.studyService.addCommentForCell(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.notePopupVisible = false;
                // this.getSalesData();
                if (isLoad) {
                    this.loadCurrentStudy();
                }
                else {
                    this.noteSubmit = false;
                    this.newNoteForm.reset();
                    this.newRowForm.updateValueAndValidity();
                    this.getCellColumnsComments(this.selectedCommentCellData.colValue, this.selectedCommentCellData.dataRowId);
                }
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            // console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0, Forecast1: item.Forecast1 > 0 ? item.Forecast1 : 0, Forecast2: item.Forecast2 > 0 ? item.Forecast2 : 0, Forecast3: item.Forecast3 > 0 ? item.Forecast3 : 0, Forecast4: item.Forecast4 > 0 ? item.Forecast4 : 0, Forecast5: item.Forecast5 > 0 ? item.Forecast5 : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            segmentSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.savePSCData('SegmentSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.loadCurrentStudy();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            segmentSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffPSCData('SegmentSales', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            const error = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try after sometimes.';
            this.alertService.danger(error);
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum.Channel:
                this.getChannelLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum.Segment:
                this.getSegmentLists();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        // console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.getSalesData();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
    onCalculatedItemClick(e) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        // console.log(e.itemData);
        if (typeof e.itemData !== 'undefined') {
            const calculatedFiled = e.itemData;
            calculatedFiled.isCheck = !calculatedFiled.isCheck;
            calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';
            if (calculatedFiled.value === 'percentOfTotal') {
                this.calculateTotalPercentageForCols();
                for (let i = 1; i <= 5; i++) {
                    (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.columnOption(`PreviousYearTotalPer${i}`, 'visible', calculatedFiled.isCheck);
                    (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.columnOption(`TotalPer${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.columnOption(`TotalPerCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else if (calculatedFiled.value === 'changePercent') {
                for (let i = 1; i <= 5; i++) {
                    (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.columnOption(`PreviousYearPerChange${i}`, 'visible', calculatedFiled.isCheck);
                    (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.columnOption(`PerChange${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.columnOption(`PerChangeCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
            else {
                for (let i = 1; i <= 5; i++) {
                    (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.columnOption(`PreviousYearCagr${i}`, 'visible', calculatedFiled.isCheck);
                    (_h = this.dataGrid) === null || _h === void 0 ? void 0 : _h.instance.columnOption(`Cagr${i}`, 'visible', calculatedFiled.isCheck);
                }
                (_j = this.dataGrid) === null || _j === void 0 ? void 0 : _j.instance.columnOption(`CagrCurrentYear`, 'visible', calculatedFiled.isCheck);
            }
        }
    }
    customSaveState(data, isChangeAutoSaveStatus) {
        // do not save state to db in case, states are emited too intensively
        clearTimeout(this.saveStateToDbTimeout);
        data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;
        // const userData = this.sharedService.getUserData();
        // this.initChart();
        // allow to save state only in case all requested data is available
        if (this.studyDataViewId) {
            this.stateData = data;
            this.stateChange.next(this.stateData);
            this.saveStateToDbTimeout = setTimeout(() => {
                this.sharedService
                    .setPivotState(this.studyDataViewId, 0, false, JSON.stringify(this.stateData), true)
                    .subscribe((data) => {
                    if (data) {
                        // this.alertService.info(
                        //   'The system will remember the last state!'
                        // );
                        // this.loadCurrentStudy();
                        if (this.pivotStateId == 0) {
                            this.stateData = undefined;
                            this.getGridState();
                        }
                    }
                }, (error) => {
                    throw new Error(error);
                });
            }, 2000);
        }
    }
    customLoadState() {
        if (this.stateData) {
            this.setColsForDataGrid();
            return this.stateData;
        }
    }
    getGridState() {
        if (!this.stateData) {
            let stateData = undefined;
            this.sharedService
                .getPivotState(this.studyDataViewId, true)
                .subscribe((res) => {
                var _a;
                // in case state is not exists yet
                try {
                    const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
                    stateData = JSON.parse(stateRes.StateData);
                    if (stateData) {
                        this.pivotStateId = stateRes.PivotStateId;
                        this.stateData = stateData;
                        (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.state(this.stateData);
                        this.setColsForDataGrid();
                    }
                    // this.pivotStateId = stateRes.PivotStateId;
                }
                catch (_b) {
                    // stateData.state.fields = this.getGridFields();
                }
            });
        }
    }
    onDeleteCustomSaveState() {
        this.deleteResetConfirmPopup = true;
    }
    deleteCustomState() {
        if (this.studyDataViewId && this.pivotStateId) {
            this.sharedService
                .deletePivotState(this.studyDataViewId, this.pivotStateId)
                .subscribe((data) => data, (error) => {
                throw new Error(error);
            }, () => {
                // finally read all data again
                // this.readPivotOptionsAndData();
                // this.readPivotDataFromApi();
                const stateData = undefined;
                this.stateData = stateData;
                this.calculatorContextMenuItems =
                    this.commonService.getCalculatorFields();
                this.getSalesData();
                this.deleteResetConfirmPopup = false;
                // this.getGridState();
            });
        }
        else {
            this.deleteResetConfirmPopup = false;
        }
    }
    onContentReady(e) { }
    onContextMenuPreparing(e) {
        if (typeof e.items === 'undefined') {
            e.items = [];
        }
        // e.items.push({
        //   beginGroup: true,
        //   text: 'Reset to Default',
        //   icon: 'fas fa-sync-alt',
        //   onItemClick: () => {
        //     this.deleteCustomState();
        //   },
        // });
        const isValidTarget = typeof e.target !== 'undefined' && e.target === 'content' ? true : false;
        if (isValidTarget) {
            const cells = e.row.cells;
            const rowIndex = e.rowIndex;
            const colIndex = e.columnIndex;
            const currentCell = typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;
            if (typeof currentCell !== 'undefined') {
                const foundValidCell = this.allowedCols.find((e) => e === currentCell.column.dataField);
                if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {
                    e.items.push({
                        beginGroup: true,
                        text: 'Comments',
                        icon: 'fas fa-comment',
                        onItemClick: () => {
                            // this.addNewCellComment(foundValidCell, colIndex, e.row);
                            this.getCellColumnsComments(currentCell.column.dataField, e.row.data.DataRowId);
                        },
                    });
                }
                // if (
                //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==
                //     'undefined' &&
                //   e.row.data[`${currentCell.column.dataField}_comment`]
                // ) {
                //   e.items.push({
                //     beginGroup: true,
                //     text: 'View Comments',
                //     icon: 'fas fa-bars',
                //     onItemClick: () => {
                //       this.getCellColumnsComments(
                //         currentCell.column.dataField,
                //         e.row.data.DataRowId
                //       );
                //     },
                //   });
                // }
            }
        }
    }
    setColsForDataGrid() {
        if (this.stateData) {
            this.currentYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.volumeYearsShow.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.forecastYears.map((item) => {
                const data = this.stateData.columns.find((d) => d.dataField == item.field);
                if (data) {
                    item.isVisible = data.visible;
                }
            });
            this.calculatorContextMenuItems = this.stateData
                .calculatorContextMenuItems
                ? this.stateData.calculatorContextMenuItems
                : this.calculatorContextMenuItems;
        }
    }
    addNewCellComment(colValue, colIndex, row) {
        const currentCell = typeof row.cells[colIndex] !== 'undefined'
            ? row.cells[colIndex]
            : undefined;
        const colCaption = currentCell.column.caption;
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: currentCell.data.DataRowId,
            currentCell: currentCell,
            colCaption: colCaption,
        };
        this.notePopupVisible = true;
    }
    getAllColumnsComments() {
        this.studyService
            .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.allColsComments = data.Data;
            }
        });
    }
    getCellColumnsComments(colValue, dataRowId) {
        const currentLabel = this.myYears.find((item) => item.field == colValue);
        this.selectedCommentCellData = {
            colValue: colValue,
            dataRowId: dataRowId,
            currentCell: {},
            colCaption: currentLabel.year,
        };
        this.studyService
            .getCellCommentsForStudy(this.studyAreaId, this.marketYearCategoryId, dataRowId, colValue)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.selectedRowNotes = data.Data;
                this.viewNotePopup = true;
                if (this.selectedRowNotes.length == 0) {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = false;
                        }
                    });
                }
                else {
                    this.studyData.map((item) => {
                        if (item.DataRowId == dataRowId) {
                            item[`${colValue}_comment`] = true;
                        }
                    });
                }
            }
        });
    }
    checkHasComment(data) {
        if (typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&
            data.data[`${data.column.dataField}_comment`]) {
            return true;
        }
        return false;
    }
    deleteComment(data) {
        this.deleteCommentData = data;
        this.deleteCommentConfirmPopup = true;
        // this.viewNotePopup = false;
    }
    onDeleteCommentConfirmPopupHide() {
        this.deleteCommentData = {};
        this.deleteCommentConfirmPopup = false;
    }
    confirmDeleteComment() {
        this.isLoadingService.add();
        const colValue = this.deleteCommentData.ColumnName;
        const dataRowId = this.deleteCommentData.DraftDataRowId;
        this.studyService
            .deleteCellComment(this.deleteCommentData.MarketYearCategoryDataId, dataRowId, colValue, this.deleteCommentData.Id)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.deleteCommentConfirmPopup = false;
                this.getCellColumnsComments(colValue, dataRowId);
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteCommentConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
}
SegmentSalesComponent.ɵfac = function SegmentSalesComponent_Factory(t) { return new (t || SegmentSalesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_6__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_7__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_common_service__WEBPACK_IMPORTED_MODULE_8__.CommonService)); };
SegmentSalesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SegmentSalesComponent, selectors: [["app-segment-sales"]], viewQuery: function SegmentSalesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_1__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 86, vars: 72, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "previousYears", "foreCastYears", "studyData", "setSelectedCurrency", "setVolumeYears", "setViewId"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col-md-6"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "Channel", "placeholder", "Select Channel", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", 4, "ngIf"], ["container", ".dx-viewport", 3, "width", "height", "showTitle", "title", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0", "h-100", "comment-container"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], [1, "card-footer"], [1, "row", "align-items-center", "justify-content-center"], [1, "col-md-8"], ["placeholder", "Enter your comment", "formControlName", "note", "rows", "2", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "col-md-4"], [1, "form-group", "text-center"], ["text", "Save Comment", "type", "default", 3, "disabled", "onClick"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["title", "Reset Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], ["id", "gridContainer", "width", "100%", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onContextMenuPreparing", "onContentReady", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], ["dataGrid", ""], [3, "autoExpandAll"], [3, "enabled"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["columnRenderingMode", "standard"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Segment", 3, "fixed", "width", "allowEditing"], ["dataField", "Channel", 3, "fixed", "width", "allowEditing"], ["alignment", "center", "caption", "Previous Years", 4, "ngIf"], ["alignment", "center", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate", 4, "ngFor", "ngForOf"], ["alignment", "center", "caption", "Forecast Years", 4, "ngIf"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "refresh", "text", "Reset", 3, "onClick"], ["icon", "fas fa-calculator", "displayExpr", "name", "keyExpr", "value", 3, "dropDownOptions", "items", "onItemClick"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["alignment", "center", "caption", "Previous Years"], ["alignment", "center", 3, "width", "dataField", "caption", "allowEditing", "allowFiltering", "visible", "cellTemplate"], ["alignment", "center", "caption", "Forecast Years"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["class", "has-comment", 4, "ngIf"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], [1, "has-comment"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [3, "innerHTML"], ["type", "text", 1, "form-control", 3, "formControlName"], ["title", "Add Comment", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "mt-0"], ["formControlName", "note", "rows", "2", 1, "form-control", 3, "ngClass"], ["icon", "plus", "text", "Save Comment", "type", "default", 3, "disabled", "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "CreatedBy", "dataType", "string"], ["dataField", "CreatedOn", "dataType", "date", 3, "format"], ["dataField", "Comment", "dataType", "string"]], template: function SegmentSalesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, SegmentSalesComponent_dx_data_grid_6_Template, 24, 34, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SegmentSalesComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-segment-sales-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Channel");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](27, SegmentSalesComponent_div_27_Template, 5, 2, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](32, "input", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](33, SegmentSalesComponent_div_33_Template, 5, 2, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-button", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SegmentSalesComponent_Template_dx_button_click_35_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](36, SegmentSalesComponent_dx_popup_36_Template, 10, 13, "dx-popup", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "dx-popup", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_Template_dx_popup_visibleChange_37_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function SegmentSalesComponent_Template_dx_popup_onHidden_37_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](40, SegmentSalesComponent_dx_data_grid_40_Template, 6, 10, "dx-data-grid", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](46, "textarea", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "dx-button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_49_listener() { return ctx.onSaveNote(false); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "dx-popup", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_Template_dx_popup_visibleChange_50_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "p", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](54, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](56, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](57, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "dx-button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_58_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_59_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "dx-popup", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_Template_dx_popup_visibleChange_60_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function SegmentSalesComponent_Template_dx_popup_onHidden_60_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "p", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](64, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](66, "dx-button", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_66_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_67_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](68, "dx-popup", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_Template_dx_popup_visibleChange_68_listener($event) { return ctx.deleteCommentConfirmPopup = $event; })("onHidden", function SegmentSalesComponent_Template_dx_popup_onHidden_68_listener() { return ctx.onDeleteCommentConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "p", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](72, "Are you sure you want to delete this comment?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "dx-button", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_74_listener() { return ctx.confirmDeleteComment(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](75, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_75_listener() { return ctx.deleteCommentConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](76, "dx-popup", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SegmentSalesComponent_Template_dx_popup_visibleChange_76_listener($event) { return ctx.deleteResetConfirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](77, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](78, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](79, "p", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](80, " Reset to Default will take you to last saved Data. Your unsaved data will be removed. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](81, "p", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](82, "Are you sure you want to continue?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](83, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](84, "dx-button", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_84_listener() { return ctx.deleteCustomState(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](85, "dx-button", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SegmentSalesComponent_Template_dx_button_onClick_85_listener() { return ctx.deleteResetConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("previousYears", ctx.volumeYears)("foreCastYears", ctx.forecastYears)("studyData", ctx.studyData)("setSelectedCurrency", ctx.currentCurrency)("setVolumeYears", ctx.volumeYears)("setViewId", ctx.studyDataViewId);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.channelLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Channel));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.segmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx.currentYear);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.forecastYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedCommentCellData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate1"]("title", "View Comments for ", ctx.selectedCommentCellData.colCaption, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("height", 500)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](70, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteCommentConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteResetConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_1__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoLoadPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoStateStoringComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_21__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxDropDownButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_19__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxTooltipComponent, _segment_sales_preview_segment_sales_preview_component__WEBPACK_IMPORTED_MODULE_10__.SegmentSalesPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_25__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_26__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.MaxLengthValidator], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWdtZW50LXNhbGVzLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 84815:
/*!********************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/service-category-consumption/service-category-consumption.component.ts ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ServiceCategoryConsumptionComponent": () => (/* binding */ ServiceCategoryConsumptionComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _study_area_preview_components_service_category_consumption_preview_service_category_consumption_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../study-area-preview/components/service-category-consumption-preview/service-category-consumption-preview.component */ 77898);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r4.studyTitle);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r19); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r18.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r24); const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r23.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r27); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r26.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r30); const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r29.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r28.disabledSignOffButton);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r33); const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r32.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.isLockedStudy);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_dxi_column_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 64);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_24_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_24_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r38); const d_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r36.deleteRow(d_r34.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_24_dx_button_1_Template, 1, 0, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r34 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r34.data.DataRowId !== null);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r39 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r39.value > 0 ? data_r39.value.toFixed(1) : "");
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r40 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r40.value > 0 ? data_r40.value : "");
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_27_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 69);
} if (rf & 2) {
    const data_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r41.value > 0 ? (data_r41.value * 1).toFixed(1) : "");
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_27_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r41.value > 0 ? (data_r41.value * 1).toFixed(1) : "");
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_27_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_27_input_1_Template, 1, 1, "input", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_27_span_2_Template, 2, 1, "span", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_28_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_28_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r50); const data_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r48.addNotes(data_r46); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_28_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_28_dx_button_2_Template, 1, 0, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function ServiceCategoryConsumptionComponent_dx_data_grid_6_div_28_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r46 = restoredCtx.$implicit; const ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r51.showNotePopup(data_r46); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r46 = ctx.$implicit;
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r46.value);
} }
function ServiceCategoryConsumptionComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function ServiceCategoryConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r53.onRowSaved($event); })("onCellPrepared", function ServiceCategoryConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onCellPreparedHighlighter($event); })("onCellHoverChanged", function ServiceCategoryConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r56.onCellHoverChanged($event); })("onRowPrepared", function ServiceCategoryConsumptionComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-paging", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-filter-row", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-header-filter", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_8_Template, 3, 1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, ServiceCategoryConsumptionComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](22, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, ServiceCategoryConsumptionComponent_dx_data_grid_6_dxi_column_23_Template, 1, 1, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_24_Template, 2, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_25_Template, 3, 1, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](26, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_26_Template, 3, 1, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](27, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_27_Template, 3, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](28, ServiceCategoryConsumptionComponent_dx_data_grid_6_div_28_Template, 6, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("caption", ctx_r0.previousYear1)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("caption", ctx_r0.currentYear)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "perCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function ServiceCategoryConsumptionComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 75);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function ServiceCategoryConsumptionComponent_dx_popup_12_Template(rf, ctx) { if (rf & 1) {
    const _r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ServiceCategoryConsumptionComponent_dx_popup_12_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.popupVisible = $event; })("onHidden", function ServiceCategoryConsumptionComponent_dx_popup_12_Template_dx_popup_onHidden_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r61.onNotePopupHide(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6, "Product Category");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "ng-select", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("change", function ServiceCategoryConsumptionComponent_dx_popup_12_Template_ng_select_change_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.getEngineOilType(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10, "Source Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "ng-select", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("change", function ServiceCategoryConsumptionComponent_dx_popup_12_Template_ng_select_change_11_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r63.getServiceCategory(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](14, "Engine Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "ng-select", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("change", function ServiceCategoryConsumptionComponent_dx_popup_12_Template_ng_select_change_15_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r64.getServiceCategory(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](18, "Engine Oil Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "ng-select", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](22, "Service Category");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "ng-select", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](26);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](27, "input", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "dx-button", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function ServiceCategoryConsumptionComponent_dx_popup_12_Template_dx_button_click_29_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("width", 300)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r2.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r2.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r2.productCategories)("addTag", ctx_r2.createNewDataEntry.bind(ctx_r2, ctx_r2.dataRelationsEnum.ProductCategory));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r2.sourceTypes);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r2.engineTypes)("addTag", ctx_r2.createNewDataEntry.bind(ctx_r2, ctx_r2.dataRelationsEnum.EngineType));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r2.engineOilTypes);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r2.serviceCategory);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Volume Year - ", ctx_r2.currentYear, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r2.newRowForm.invalid);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function ServiceCategoryConsumptionComponent_dx_data_grid_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r3.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class ServiceCategoryConsumptionComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear1 = 0;
        this.yearReduce = 1;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.studyMarketYearCategoryId = 0;
        this.isManage = false;
        this.isStudyEditable = false;
        this.studyTitle = '';
        this.studyPageTitle = '';
        this.disabledSignOffButton = false;
        this.engineOilSourceTypeCurrentYearTotal = {};
        this.engineOilSourceTypePreviousYearTotal = {};
        this.productCategories = [];
        this.sourceTypes = [];
        this.engineTypes = [];
        this.engineOilTypes = [];
        this.serviceCategory = [];
        this.allEngineOilTypes = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.previewGridData = [];
        this.currentCurrency = {};
        this.previewGridStorageKey = '';
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.volumeYears = [];
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        this.previousYear1 = this.currentYear - 1;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            ProductCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            SourceType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            EngineType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            EngineOilType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ServiceCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            CurrentYear: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getDataRelations();
        this.getAllEngineOilType();
    }
    ngOnInit() {
        this.getProductCategory();
        this.getEngineType();
        this.getSourceType();
        // this.getSCCData();
    }
    getProductCategory() {
        this.sharedService.getProductCategories().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.productCategories = res.Data;
            }
        });
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
    getSourceType() {
        this.sharedService
            .getDataEntryData('SourceType')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.sourceTypes = res.Data;
                this.getSCCData();
            }
        });
    }
    getEngineType() {
        this.sharedService
            .getDataEntryData('EngineType')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.engineTypes = res.Data;
            }
        });
    }
    getAllEngineOilType() {
        this.sharedService.getAllEngineOilType().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.allEngineOilTypes = res.Data;
            }
        });
    }
    getEngineOilType() {
        var _a;
        const productCategoryId = this.newRowForm.value.ProductCategory !== null &&
            typeof this.newRowForm.value.ProductCategory.Id !== 'undefined'
            ? this.newRowForm.value.ProductCategory.Id
            : 0;
        if (productCategoryId > 0) {
            this.sharedService
                .getDataEntryData('EngineOilType', [
                { key: 'ProductCategoryId', value: productCategoryId },
            ])
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.engineOilTypes = res.Data;
                }
            });
        }
        else {
            this.engineOilTypes = [];
            (_a = this.newRowForm.get('EngineOilType')) === null || _a === void 0 ? void 0 : _a.setValue(null);
        }
    }
    getServiceCategory() {
        var _a;
        const SourceTypeId = this.newRowForm.value.SourceType !== null &&
            typeof this.newRowForm.value.SourceType.Id !== 'undefined'
            ? this.newRowForm.value.SourceType.Id
            : 0;
        const EngineTypeId = this.newRowForm.value.EngineType !== null &&
            typeof this.newRowForm.value.EngineType.Id !== 'undefined'
            ? this.newRowForm.value.EngineType.Id
            : 0;
        if (SourceTypeId > 0 && EngineTypeId > 0) {
            this.sharedService
                .getDataEntryData('ServiceCategory', [
                { key: 'SourceTypeId', value: SourceTypeId },
                { key: 'EngineTypeId', value: EngineTypeId },
            ])
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.serviceCategory = res.Data;
                }
            });
        }
        else {
            this.serviceCategory = [];
            (_a = this.newRowForm.get('ServiceCategory')) === null || _a === void 0 ? void 0 : _a.setValue(null);
        }
    }
    getSCCData() {
        this.isLoadingService.add();
        this.studyService
            .getSCCData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData = [];
                this.studyData =
                    studyData.ServiceCategoryConsumptionItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(studyData.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - this.yearReduce;
                this.currentYear = currentYear;
                this.previousYear1 = currentYear - 1;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                // console.log(this.allEngineOilTypes);
                this.allEngineOilTypes.map((item) => {
                    this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName] =
                        [];
                    this.engineOilSourceTypePreviousYearTotal[item.EngineOilTypeName] = [];
                    this.sourceTypes.map((sourceType) => {
                        if (typeof this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName][sourceType.Name] === 'undefined') {
                            this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName][sourceType.Name] = [];
                        }
                        if (typeof this.engineOilSourceTypePreviousYearTotal[item.EngineOilTypeName][sourceType.Name] === 'undefined') {
                            this.engineOilSourceTypePreviousYearTotal[item.EngineOilTypeName][sourceType.Name] = [];
                        }
                        const { totalCurrentYear, totalPreviousYear1 } = this.studyData
                            .filter((data) => data.EngineOilTypeId === item.EngineOilTypeId &&
                            data.SourceTypeId === sourceType.Id)
                            .reduce(({ totalCurrentYear, totalPreviousYear1 }, currentYear) => ({
                            totalCurrentYear: totalCurrentYear + currentYear.CurrentYear,
                            totalPreviousYear1: totalPreviousYear1 + currentYear.PreviousYear1,
                        }), { totalCurrentYear: 0, totalPreviousYear1: 0 });
                        this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName][sourceType.Name] = totalCurrentYear;
                        this.engineOilSourceTypePreviousYearTotal[item.EngineOilTypeName][sourceType.Name] = totalPreviousYear1;
                    });
                });
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let prevPer = 0;
                    if (item.PreviousYear1 != '' && item.PreviousYear1 > 0) {
                        prevPer = this.calculatePerVolume(item.PreviousYear1, this.engineOilSourceTypePreviousYearTotal[item.EngineOilTypeName][item.SourceTypeCode]);
                    }
                    let currPer = 0;
                    if (item.CurrentYear != '' && item.CurrentYear > 0) {
                        currPer = this.calculatePerVolume(item.CurrentYear, this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName][item.SourceTypeCode]);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].CurrentYearPer = currPer;
                    this.studyData[i].OldCurrentYear = item.CurrentYear;
                    this.studyData[i].PreviousYear1Per = prevPer;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.isLoadingService.remove();
            this.alertService.danger('Something went wrong. Please try again or contact administrator.');
        });
    }
    calculatePerVolume(colValue, totalColValue) {
        return parseFloat(((colValue * 100) / totalColValue).toFixed(1));
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const engineTypeName = newRowData.EngineOilType.Name;
        const sourceTypeCode = newRowData.SourceType.Name;
        const newRow = {
            CurrentYear: newRowData.CurrentYear,
            OldCurrentYear: newRowData.CurrentYear,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: 0,
            PreviousYear1Per: 0,
            CurrentYearPer: 0,
            EngineOilTypeDescription: newRowData.EngineOilType.Description,
            EngineOilTypeId: newRowData.EngineOilType.Id,
            EngineOilTypeName: newRowData.EngineOilType.Name,
            EngineTypeDescription: newRowData.EngineType.Description,
            EngineTypeId: newRowData.EngineType.Id,
            EngineTypeName: engineTypeName,
            ProductcategoryId: newRowData.ProductCategory.Id,
            ProductcategoryName: newRowData.ProductCategory.Name,
            ServiceCategoryCode: newRowData.ServiceCategory.Name,
            ServiceCategoryDescription: newRowData.ServiceCategory.Description,
            ServiceCategoryId: newRowData.ServiceCategory.Id,
            SourceTypeCode: sourceTypeCode,
            SourceTypeId: newRowData.SourceType.Id,
            SourceTypeName: newRowData.SourceType.Description,
            ChangeLog: '',
            ChangeLogObj: [],
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.EngineOilTypeId == newRow.EngineOilTypeId &&
            item.SourceTypeId == newRow.SourceTypeId &&
            item.ServiceCategoryId == newRow.ServiceCategoryId);
        if (!isFound) {
            this.engineOilSourceTypeCurrentYearTotal[engineTypeName][sourceTypeCode] =
                this.engineOilSourceTypeCurrentYearTotal[engineTypeName][sourceTypeCode] + parseFloat(newRowData.CurrentYear);
            this.studyData.push(newRow);
            this.studyData
                .filter((item, index) => {
                item.index = index;
                return (item.EngineOilTypeId == newRow.EngineOilTypeId &&
                    item.SourceTypeId == newRow.SourceTypeId);
            })
                .map((item, i) => {
                let currPer = 0;
                if (item.CurrentYear != '' && item.CurrentYear > 0) {
                    currPer = this.calculatePerVolume(item.CurrentYear, this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName][item.SourceTypeCode]);
                }
                this.studyData[item.index].CurrentYearPer = parseFloat(currPer.toFixed(1));
            });
            this.studyData.sort((a, b) => a.EngineOilTypeId - b.EngineOilTypeId ||
                a.SourceTypeId - b.SourceTypeId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    onNotePopupHide() {
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    saveStudyData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            serviceCategoryConsumptionItems: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveSCCData(studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffSCCData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSCCData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            serviceCategoryConsumptionItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSCCData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSCCData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            // console.log(e);
            const currentYear = +data.CurrentYear;
            const oldCurrentYEar = +data.OldCurrentYear;
            // console.log(currentYear, oldCurrentYEar);
            const engineOilTypeName = data.EngineOilTypeName !== null ? data.EngineOilTypeName : '';
            const sourceTypeCode = data.SourceTypeCode !== null ? data.SourceTypeCode : '';
            this.engineOilSourceTypeCurrentYearTotal[engineOilTypeName][sourceTypeCode] =
                this.engineOilSourceTypeCurrentYearTotal[engineOilTypeName][sourceTypeCode] -
                    oldCurrentYEar +
                    currentYear;
            // this.totalCurrentYearTotal = this.totalCurrentYearTotal - oldCurrentYEar;
            // this.totalCurrentYearTotal = this.totalCurrentYearTotal + currentYear;
            data.OldCurrentYear = currentYear;
            this.studyData
                .filter((item, index) => {
                item.index = index;
                return (item.EngineOilTypeId == data.EngineOilTypeId &&
                    item.SourceTypeId == data.SourceTypeId);
            })
                .map((item, i) => {
                // console.log(item);
                if (item.CurrentYear > 0) {
                    const currPer = this.calculatePerVolume(item.CurrentYear, this.engineOilSourceTypeCurrentYearTotal[engineOilTypeName][sourceTypeCode]);
                    this.studyData[item.index].CurrentYearPer = parseFloat(currPer.toFixed(1));
                }
            });
            // console.log(this.studyData);
        }
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = ['CurrentYear'];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data && e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = ['CurrentYear'];
        if (typeof event.column !== 'undefined') {
            const isFound = allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductCategory:
                this.getProductCategory();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.SourceType:
                this.getSourceType();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.EngineType:
                this.getEngineType();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.EngineOilType:
                this.getEngineOilType();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ServiceCategory:
                this.getServiceCategory();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
ServiceCategoryConsumptionComponent.ɵfac = function ServiceCategoryConsumptionComponent_Factory(t) { return new (t || ServiceCategoryConsumptionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService)); };
ServiceCategoryConsumptionComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: ServiceCategoryConsumptionComponent, selectors: [["app-service-category-consumption"]], viewQuery: function ServiceCategoryConsumptionComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 43, vars: 45, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "studyData", "currentYear", "previousYear"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", 4, "ngIf"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], [3, "enabled"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["caption", "Product Category", "dataField", "ProductcategoryName", 3, "allowEditing"], ["caption", "Engine Oil Type", "dataField", "EngineOilTypeName", 3, "allowEditing"], ["dataField", "ServiceCategoryCode", 3, "allowEditing"], ["dataField", "SourceTypeCode", 3, "allowEditing"], ["caption", "Engine Type", "dataField", "EngineTypeName", 3, "allowEditing"], ["caption", "Lubricant Demand (in KTonnes)"], ["dataField", "PreviousYear1", "cellTemplate", "previousYear1CellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "% of Total", "dataField", "PreviousYear1Per", "cellTemplate", "perCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["dataField", "CurrentYear", "cellTemplate", "volumeYearCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "% of Total", "cellTemplate", "perCellTemplate", "dataField", "CurrentYearPer", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card-body"], ["bindLabel", "Name", "formControlName", "ProductCategory", "placeholder", "Select Product Category", "addTagText", "Create New", 3, "items", "addTag", "change"], ["bindLabel", "Name", "formControlName", "SourceType", "placeholder", "Select Source Type", 3, "items", "change"], ["bindLabel", "Name", "formControlName", "EngineType", "placeholder", "Select Engine Type", "addTagText", "Create New", 3, "items", "addTag", "change"], ["bindLabel", "Name", "formControlName", "EngineOilType", "placeholder", "Select Engine Oil Type", 3, "items"], ["bindLabel", "Name", "formControlName", "ServiceCategory", "placeholder", "Select Service Category", 3, "items"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function ServiceCategoryConsumptionComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, ServiceCategoryConsumptionComponent_dx_data_grid_6_Template, 29, 48, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, ServiceCategoryConsumptionComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-service-category-consumption-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, ServiceCategoryConsumptionComponent_dx_popup_12_Template, 30, 16, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "dx-popup", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ServiceCategoryConsumptionComponent_Template_dx_popup_visibleChange_13_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function ServiceCategoryConsumptionComponent_Template_dx_popup_onHidden_13_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "form", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "textarea", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "dx-button", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_Template_dx_button_onClick_20_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "dx-popup", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ServiceCategoryConsumptionComponent_Template_dx_popup_visibleChange_21_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function ServiceCategoryConsumptionComponent_Template_dx_popup_onHidden_21_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, ServiceCategoryConsumptionComponent_dx_data_grid_24_Template, 4, 8, "dx-data-grid", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ServiceCategoryConsumptionComponent_Template_dx_popup_visibleChange_25_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](29, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_Template_dx_button_onClick_33_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_Template_dx_button_onClick_34_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-popup", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function ServiceCategoryConsumptionComponent_Template_dx_popup_visibleChange_35_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function ServiceCategoryConsumptionComponent_Template_dx_popup_onHidden_35_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "p", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](39, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "dx-button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_Template_dx_button_onClick_41_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function ServiceCategoryConsumptionComponent_Template_dx_button_onClick_42_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyData", ctx.studyData)("currentYear", ctx.currentYear)("previousYear", ctx.previousYear1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](43, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _study_area_preview_components_service_category_consumption_preview_service_category_consumption_preview_component__WEBPACK_IMPORTED_MODULE_10__.ServiceCategoryConsumptionPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJ2aWNlLWNhdGVnb3J5LWNvbnN1bXB0aW9uLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 34642:
/*!******************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/shc.component.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SHCComponent": () => (/* binding */ SHCComponent)
/* harmony export */ });
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sub/pts/pts.component */ 83469);
/* harmony import */ var _sub_pcs_pcs_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sub/pcs/pcs.component */ 77047);
/* harmony import */ var _sub_ir_ir_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sub/ir/ir.component */ 34344);
/* harmony import */ var _sub_cbs_cbs_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sub/cbs/cbs.component */ 5493);
/* harmony import */ var _sub_fs_fs_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./sub/fs/fs.component */ 14936);
/* harmony import */ var _sub_os_os_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sub/os/os.component */ 91823);
/* harmony import */ var _sub_sc_sc_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./sub/sc/sc.component */ 37527);












function SHCComponent_app_pts_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-pts", 1);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r0.datRelationsData);
} }
function SHCComponent_app_pcs_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-pcs", 1);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r1.datRelationsData);
} }
function SHCComponent_app_ir_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-ir", 1);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r2.datRelationsData);
} }
function SHCComponent_app_cbs_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-cbs", 1);
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r3.datRelationsData);
} }
function SHCComponent_app_fs_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-fs", 1);
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r4.datRelationsData);
} }
function SHCComponent_app_os_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-os", 1);
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r5.datRelationsData);
} }
function SHCComponent_app_sc_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](0, "app-sc", 1);
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("setSelectedCurrency", ctx_r6.datRelationsData);
} }
class SHCComponent {
    constructor(route, sharedService) {
        this.route = route;
        this.sharedService = sharedService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_0__.DataRelationsEnum;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getDataRelations();
    }
    ngOnInit() { }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
}
SHCComponent.ɵfac = function SHCComponent_Factory(t) { return new (t || SHCComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_10__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_1__.SharedService)); };
SHCComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({ type: SHCComponent, selectors: [["app-shc"]], decls: 7, vars: 7, consts: [[3, "setSelectedCurrency", 4, "ngIf"], [3, "setSelectedCurrency"]], template: function SHCComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](0, SHCComponent_app_pts_0_Template, 1, 1, "app-pts", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](1, SHCComponent_app_pcs_1_Template, 1, 1, "app-pcs", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](2, SHCComponent_app_ir_2_Template, 1, 1, "app-ir", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](3, SHCComponent_app_cbs_3_Template, 1, 1, "app-cbs", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](4, SHCComponent_app_fs_4_Template, 1, 1, "app-fs", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](5, SHCComponent_app_os_5_Template, 1, 1, "app-os", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵtemplate"](6, SHCComponent_app_sc_6_Template, 1, 1, "app-sc", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵproperty"]("ngIf", ctx.studyAreaId == 34);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_11__.NgIf, _sub_pts_pts_component__WEBPACK_IMPORTED_MODULE_2__.PtsComponent, _sub_pcs_pcs_component__WEBPACK_IMPORTED_MODULE_3__.PcsComponent, _sub_ir_ir_component__WEBPACK_IMPORTED_MODULE_4__.IrComponent, _sub_cbs_cbs_component__WEBPACK_IMPORTED_MODULE_5__.CbsComponent, _sub_fs_fs_component__WEBPACK_IMPORTED_MODULE_6__.FsComponent, _sub_os_os_component__WEBPACK_IMPORTED_MODULE_7__.OsComponent, _sub_sc_sc_component__WEBPACK_IMPORTED_MODULE_8__.ScComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaGMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 5493:
/*!**************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/cbs/cbs.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CbsComponent": () => (/* binding */ CbsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function CbsComponent_dx_data_grid_6_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function CbsComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, CbsComponent_dx_data_grid_6_div_8_div_3_Template, 2, 2, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function CbsComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, CbsComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, CbsComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, CbsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function CbsComponent_dx_data_grid_6_dxi_column_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 72);
} if (rf & 2) {
    const volumeYear_r36 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowFiltering", false)("dataField", volumeYear_r36.field)("caption", volumeYear_r36.year)("allowEditing", !ctx_r7.isStudyEditable);
} }
function CbsComponent_dx_data_grid_6_dxi_column_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 73);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function CbsComponent_dx_data_grid_6_div_20_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_div_20_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const d_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r39.deleteRow(d_r37.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CbsComponent_dx_data_grid_6_div_20_dx_button_1_Template, 1, 0, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r37.data.DataRowId !== null);
} }
function CbsComponent_dx_data_grid_6_div_21_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 78);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function CbsComponent_dx_data_grid_6_div_21_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function CbsComponent_dx_data_grid_6_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CbsComponent_dx_data_grid_6_div_21_input_1_Template, 1, 1, "input", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, CbsComponent_dx_data_grid_6_div_21_span_2_Template, 2, 1, "span", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function CbsComponent_dx_data_grid_6_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value > 0 ? data_r47.value.toFixed(1) : "");
} }
function CbsComponent_dx_data_grid_6_div_23_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_dx_data_grid_6_div_23_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r50.addNotes(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function CbsComponent_dx_data_grid_6_div_23_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, CbsComponent_dx_data_grid_6_div_23_dx_button_2_Template, 1, 0, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function CbsComponent_dx_data_grid_6_div_23_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const data_r48 = restoredCtx.$implicit; const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r53.showNotePopup(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value);
} }
function CbsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function CbsComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onRowSaved($event); })("onCellPrepared", function CbsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellPreparedHighlighter($event); })("onCellHoverChanged", function CbsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onCellHoverChanged($event); })("onRowPrepared", function CbsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-filter-row", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-header-filter", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-grouping", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, CbsComponent_dx_data_grid_6_div_8_Template, 4, 2, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, CbsComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](15, CbsComponent_dx_data_grid_6_dxi_column_15_Template, 1, 5, "dxi-column", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, CbsComponent_dx_data_grid_6_dxi_column_19_Template, 1, 1, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, CbsComponent_dx_data_grid_6_div_20_Template, 2, 1, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, CbsComponent_dx_data_grid_6_div_21_Template, 3, 2, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, CbsComponent_dx_data_grid_6_div_22_Template, 3, 1, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, CbsComponent_dx_data_grid_6_div_23_Template, 6, 2, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function CbsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 84);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function CbsComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 85);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.SHC_CB_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
function CbsComponent_div_43_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r61.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r61.field);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function CbsComponent_dx_data_grid_57_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class CbsComponent {
    constructor(isLoadingService, alertService, route, sharedService, formBuilder, localStorageService, studyService, router) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.router = router;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.ProductCategoryLists = [];
        this.CompanyLists = [];
        this.MasterBrandLists = [];
        this.BrandLists = [];
        this.SegmentLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.studyTypeValue = 'CompanyBrandSales';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            ProductCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Company: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            MasterBrand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Brand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PCS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getProductCategoryLists();
        this.getCompanyLists();
        this.getMasterBrandLists();
        this.getBrandLists();
        this.getSegmentLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData('CompanyBrandSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .CompanyBrandSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            ProductCategory: item.ProductCategory,
                            Company: item.Company,
                            MasterBrand: item.MasterBrand,
                            Brand: item.Brand,
                            Segment: item.Segment,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getProductCategoryLists() {
        this.sharedService
            .getSHCDataEntryData('ProductCategorySHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.ProductCategoryLists = data.Data;
            }
        });
    }
    getCompanyLists() {
        this.sharedService
            .getSHCDataEntryData('CompanySHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.CompanyLists = data.Data;
            }
        });
    }
    getMasterBrandLists() {
        this.sharedService
            .getSHCDataEntryData('MasterBrandSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.MasterBrandLists = data.Data;
            }
        });
    }
    getBrandLists() {
        this.sharedService
            .getSHCDataEntryData('BrandSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.BrandLists = data.Data;
            }
        });
    }
    getSegmentLists() {
        this.sharedService
            .getSHCDataEntryData('SegmentSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.SegmentLists = data.Data;
            }
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'Company',
                area: 'row',
                caption: 'Company',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'MasterBrand',
                area: 'row',
                caption: 'Master Brand',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'Brand',
                area: 'row',
                caption: 'Brand',
                dataType: 'string',
                id: 3,
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
                id: 4,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 5,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => typeof event.column.dataField !== 'undefined' &&
                item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            ProductCategory: newRowData.ProductCategory.Name,
            ProductCategoryId: newRowData.ProductCategory.Id,
            Company: newRowData.Company.Name,
            CompanyId: newRowData.Company.Id,
            MasterBrand: newRowData.MasterBrand.Name,
            MasterBrandId: newRowData.MasterBrand.Id,
            Brand: newRowData.Brand.Name,
            BrandId: newRowData.Brand.Id,
            Segment: newRowData.Segment.Name,
            SegmentId: newRowData.Segment.Id,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ProductCategoryId == newRow.ProductCategoryId &&
            item.CompanyId == newRow.CompanyId &&
            item.MasterBrandId == newRow.MasterBrandId &&
            item.BrandId == newRow.BrandId &&
            item.SegmentId == newRow.SegmentId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0) ||
                (a.CompanyId || 0) - (b.CompanyId || 0) ||
                (a.MasterBrandId || 0) - (b.MasterBrandId || 0) ||
                (a.BrandId || 0) - (b.BrandId || 0) ||
                (a.SegmentId || 0) - (b.SegmentId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            companyBrandSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData('CompanyBrandSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            companyBrandSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData('CompanyBrandSales', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductCategory:
                this.getProductCategoryLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Company:
                this.getCompanyLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.MasterBrand:
                this.getMasterBrandLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Brand:
                this.getBrandLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Segment:
                this.getSegmentLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
CbsComponent.ɵfac = function CbsComponent_Factory(t) { return new (t || CbsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router)); };
CbsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: CbsComponent, selectors: [["app-cbs"]], viewQuery: function CbsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 76, vars: 60, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col-6"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "ProductCategory", "placeholder", "Select Product Category", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Company", "placeholder", "Select Company", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "MasterBrand", "placeholder", "Select Master Brand", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Brand", "placeholder", "Select Brand", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "autoExpandAll"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "ProductCategory", 3, "allowEditing"], ["dataField", "Company", 3, "allowEditing"], ["dataField", "MasterBrand", 3, "allowEditing"], ["dataField", "Brand", 3, "allowEditing"], ["dataField", "Segment", 3, "allowEditing"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing", 4, "ngFor", "ngForOf"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [1, "col-md-6"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function CbsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, CbsComponent_dx_data_grid_6_Template, 24, 34, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, CbsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, CbsComponent_app_shc_preview_11_Template, 1, 10, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function CbsComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Product Category");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Company");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Master Brand");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](35, "Brand");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](36, "ng-select", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](40, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](41, "ng-select", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](43, CbsComponent_div_43_Template, 5, 2, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function CbsComponent_Template_dx_button_click_45_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function CbsComponent_Template_dx_popup_visibleChange_46_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function CbsComponent_Template_dx_popup_onHidden_46_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](51, "textarea", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_Template_dx_button_onClick_53_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "dx-popup", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function CbsComponent_Template_dx_popup_visibleChange_54_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function CbsComponent_Template_dx_popup_onHidden_54_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](57, CbsComponent_dx_data_grid_57_Template, 4, 8, "dx-data-grid", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "dx-popup", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function CbsComponent_Template_dx_popup_visibleChange_58_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "p", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](62, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](64, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](66, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_Template_dx_button_onClick_66_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](67, "dx-button", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_Template_dx_button_onClick_67_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](68, "dx-popup", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function CbsComponent_Template_dx_popup_visibleChange_68_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function CbsComponent_Template_dx_popup_onHidden_68_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "div", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](71, "p", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](72, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](73, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](74, "dx-button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_Template_dx_button_onClick_74_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](75, "dx-button", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function CbsComponent_Template_dx_button_onClick_75_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.ProductCategoryLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductCategory));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.CompanyLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Company));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.MasterBrandLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.MasterBrand));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.BrandLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Brand));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.SegmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](58, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYnMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 14936:
/*!************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/fs/fs.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FsComponent": () => (/* binding */ FsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function FsComponent_dx_data_grid_6_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function FsComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, FsComponent_dx_data_grid_6_div_8_div_3_Template, 2, 2, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function FsComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, FsComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, FsComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, FsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function FsComponent_dx_data_grid_6_dxi_column_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 66);
} if (rf & 2) {
    const volumeYear_r36 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowFiltering", false)("dataField", volumeYear_r36.field)("caption", volumeYear_r36.year)("allowEditing", !ctx_r7.isStudyEditable);
} }
function FsComponent_dx_data_grid_6_dxi_column_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 67);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function FsComponent_dx_data_grid_6_div_17_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_div_17_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const d_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r39.deleteRow(d_r37.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, FsComponent_dx_data_grid_6_div_17_dx_button_1_Template, 1, 0, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r37.data.DataRowId !== null);
} }
function FsComponent_dx_data_grid_6_div_18_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 72);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function FsComponent_dx_data_grid_6_div_18_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function FsComponent_dx_data_grid_6_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, FsComponent_dx_data_grid_6_div_18_input_1_Template, 1, 1, "input", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, FsComponent_dx_data_grid_6_div_18_span_2_Template, 2, 1, "span", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function FsComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value > 0 ? data_r47.value.toFixed(1) : "");
} }
function FsComponent_dx_data_grid_6_div_20_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_dx_data_grid_6_div_20_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r50.addNotes(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function FsComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, FsComponent_dx_data_grid_6_div_20_dx_button_2_Template, 1, 0, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function FsComponent_dx_data_grid_6_div_20_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const data_r48 = restoredCtx.$implicit; const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r53.showNotePopup(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value);
} }
function FsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function FsComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onRowSaved($event); })("onCellPrepared", function FsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellPreparedHighlighter($event); })("onCellHoverChanged", function FsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onCellHoverChanged($event); })("onRowPrepared", function FsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, FsComponent_dx_data_grid_6_div_8_Template, 4, 2, "div", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, FsComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, FsComponent_dx_data_grid_6_dxi_column_12_Template, 1, 5, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, FsComponent_dx_data_grid_6_dxi_column_16_Template, 1, 1, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, FsComponent_dx_data_grid_6_div_17_Template, 2, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, FsComponent_dx_data_grid_6_div_18_Template, 3, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, FsComponent_dx_data_grid_6_div_19_Template, 3, 1, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, FsComponent_dx_data_grid_6_div_20_Template, 6, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function FsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 78);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function FsComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 79);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.SHC_FC_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
function FsComponent_div_28_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r61.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r61.field);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function FsComponent_dx_data_grid_42_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class FsComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.ProductCategoryLists = [];
        this.SegmentLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = [
            'ForecastYear5',
            'ForecastYear4',
            'ForecastYear3',
            'ForecastYear2',
            'ForecastYear1',
            'CurrentYear',
        ];
        this.studyTypeValue = 'ForecastSales';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            ProductCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ForecastYear1: [null],
            ForecastYear2: [null],
            ForecastYear3: [null],
            ForecastYear4: [null],
            ForecastYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getSegmentLists();
        this.getProductCategoryLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData('ForecastSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .ForecastSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                for (let i = currentYear + 1, j = 1; i <= currentYear + 5; i++, j++) {
                    this.volumeYears.push({ field: `ForecastYear${j}`, year: i });
                }
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            ProductCategory: item.ProductCategory,
                            Segment: item.Segment,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                dataType: 'string',
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    getSegmentLists() {
        this.sharedService
            .getSHCDataEntryData('SegmentSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.SegmentLists = data.Data;
            }
        });
    }
    getProductCategoryLists() {
        this.sharedService
            .getSHCDataEntryData('ProductCategorySHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.ProductCategoryLists = data.Data;
            }
        });
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.ForecastYear1 = +data.ForecastYear1;
            data.ForecastYear2 = +data.ForecastYear2;
            data.ForecastYear3 = +data.ForecastYear3;
            data.ForecastYear4 = +data.ForecastYear4;
            data.ForecastYear5 = +data.ForecastYear5;
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            ForecastYear1: +newRowData.ForecastYear1,
            ForecastYear2: +newRowData.ForecastYear2,
            ForecastYear3: +newRowData.ForecastYear3,
            ForecastYear4: +newRowData.ForecastYear4,
            ForecastYear5: +newRowData.ForecastYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            SegmentId: newRowData.Segment.Id,
            Segment: newRowData.Segment.Name,
            ProductCategoryId: newRowData.ProductCategory.Id,
            ProductCategory: newRowData.ProductCategory.Name,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.SegmentId == newRow.SegmentId &&
            item.ProductCategoryId == newRow.ProductCategoryId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.SegmentId || 0) - (b.SegmentId || 0) ||
                (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { ForecastYear1: item.ForecastYear1 > 0 ? item.ForecastYear1 : 0, ForecastYear2: item.ForecastYear2 > 0 ? item.ForecastYear2 : 0, ForecastYear3: item.ForecastYear3 > 0 ? item.ForecastYear3 : 0, ForecastYear4: item.ForecastYear4 > 0 ? item.ForecastYear4 : 0, ForecastYear5: item.ForecastYear5 > 0 ? item.ForecastYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            forecastSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData('ForecastSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            forecastSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData('ForecastSales', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductCategory:
                this.getProductCategoryLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Segment:
                this.getSegmentLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
FsComponent.ɵfac = function FsComponent_Factory(t) { return new (t || FsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService)); };
FsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: FsComponent, selectors: [["app-fs"]], viewQuery: function FsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 61, vars: 54, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "ProductCategory", "placeholder", "Select Product Category", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "ProductCategory", 3, "allowEditing"], ["dataField", "Segment", 3, "allowEditing"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing", 4, "ngFor", "ngForOf"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [1, "col-md-6"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function FsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, FsComponent_dx_data_grid_6_Template, 21, 28, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, FsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, FsComponent_app_shc_preview_11_Template, 1, 10, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function FsComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Product Category");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](28, FsComponent_div_28_Template, 5, 2, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "dx-button", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function FsComponent_Template_dx_button_click_30_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "dx-popup", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function FsComponent_Template_dx_popup_visibleChange_31_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function FsComponent_Template_dx_popup_onHidden_31_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](36, "textarea", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_Template_dx_button_onClick_38_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "dx-popup", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function FsComponent_Template_dx_popup_visibleChange_39_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function FsComponent_Template_dx_popup_onHidden_39_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](42, FsComponent_dx_data_grid_42_Template, 4, 8, "dx-data-grid", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "dx-popup", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function FsComponent_Template_dx_popup_visibleChange_43_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "p", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](47, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](49, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "dx-button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_Template_dx_button_onClick_51_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](52, "dx-button", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_Template_dx_button_onClick_52_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-popup", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function FsComponent_Template_dx_popup_visibleChange_53_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function FsComponent_Template_dx_popup_onHidden_53_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "p", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](57, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](59, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_Template_dx_button_onClick_59_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "dx-button", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function FsComponent_Template_dx_button_onClick_60_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.ProductCategoryLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductCategory));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.SegmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](52, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmcy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 34344:
/*!************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/ir/ir.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IrComponent": () => (/* binding */ IrComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function IrComponent_dx_data_grid_6_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function IrComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, IrComponent_dx_data_grid_6_div_8_div_3_Template, 2, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function IrComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, IrComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, IrComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, IrComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function IrComponent_dx_data_grid_6_dxi_column_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 64);
} if (rf & 2) {
    const volumeYear_r36 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowFiltering", false)("dataField", volumeYear_r36.field)("caption", volumeYear_r36.year)("allowEditing", !ctx_r7.isStudyEditable)("allowFiltering", false);
} }
function IrComponent_dx_data_grid_6_dxi_column_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 65);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function IrComponent_dx_data_grid_6_div_16_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_div_16_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const d_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r39.deleteRow(d_r37.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_div_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, IrComponent_dx_data_grid_6_div_16_dx_button_1_Template, 1, 0, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r37.data.DataRowId !== null);
} }
function IrComponent_dx_data_grid_6_div_17_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 70);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function IrComponent_dx_data_grid_6_div_17_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function IrComponent_dx_data_grid_6_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, IrComponent_dx_data_grid_6_div_17_input_1_Template, 1, 1, "input", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, IrComponent_dx_data_grid_6_div_17_span_2_Template, 2, 1, "span", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function IrComponent_dx_data_grid_6_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value > 0 ? data_r47.value.toFixed(1) : "");
} }
function IrComponent_dx_data_grid_6_div_19_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_dx_data_grid_6_div_19_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r50.addNotes(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function IrComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, IrComponent_dx_data_grid_6_div_19_dx_button_2_Template, 1, 0, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function IrComponent_dx_data_grid_6_div_19_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const data_r48 = restoredCtx.$implicit; const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r53.showNotePopup(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value);
} }
function IrComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function IrComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onRowSaved($event); })("onCellPrepared", function IrComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellPreparedHighlighter($event); })("onCellHoverChanged", function IrComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onCellHoverChanged($event); })("onRowPrepared", function IrComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, IrComponent_dx_data_grid_6_div_8_Template, 4, 2, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, IrComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, IrComponent_dx_data_grid_6_dxi_column_11_Template, 1, 6, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](15, IrComponent_dx_data_grid_6_dxi_column_15_Template, 1, 1, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, IrComponent_dx_data_grid_6_div_16_Template, 2, 1, "div", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, IrComponent_dx_data_grid_6_div_17_Template, 3, 2, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, IrComponent_dx_data_grid_6_div_18_Template, 3, 1, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, IrComponent_dx_data_grid_6_div_19_Template, 6, 2, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function IrComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 76);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function IrComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 77);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.SHC_IR_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
function IrComponent_div_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r61.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r61.field);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function IrComponent_dx_data_grid_37_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class IrComponent {
    constructor(isLoadingService, alertService, route, sharedService, formBuilder, localStorageService, studyService, router) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.router = router;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.ServiceLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.studyTypeValue = 'IndustryRevenues';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Service: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PCS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getServiceLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData('IndustryRevenues', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .IndustryRevenues;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            Service: item.Service,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'Service',
                area: 'row',
                caption: 'Service',
                dataType: 'string',
                id: 0,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 1,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 2,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    getServiceLists() {
        this.sharedService
            .getSHCDataEntryData('ServiceSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.ServiceLists = data.Data;
            }
        });
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => typeof event.column.dataField !== 'undefined' &&
                item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            Service: newRowData.Service.Name,
            ServiceId: newRowData.Service.Id,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ServiceId == newRow.ServiceId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ServiceId || 0) - (b.ServiceId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            industryRevenues: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData('IndustryRevenues', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            industryRevenues: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData('IndustryRevenues', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Service:
                this.getServiceLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
IrComponent.ɵfac = function IrComponent_Factory(t) { return new (t || IrComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router)); };
IrComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: IrComponent, selectors: [["app-ir"]], viewQuery: function IrComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 56, vars: 52, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "Service", "placeholder", "Select Service", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Service", 3, "allowEditing"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing", 4, "ngFor", "ngForOf"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [1, "col-md-6"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function IrComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, IrComponent_dx_data_grid_6_Template, 20, 29, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, IrComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, IrComponent_app_shc_preview_11_Template, 1, 10, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function IrComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Service");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, IrComponent_div_23_Template, 5, 2, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "dx-button", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function IrComponent_Template_dx_button_click_25_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function IrComponent_Template_dx_popup_visibleChange_26_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function IrComponent_Template_dx_popup_onHidden_26_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "textarea", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_Template_dx_button_onClick_33_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function IrComponent_Template_dx_popup_visibleChange_34_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function IrComponent_Template_dx_popup_onHidden_34_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](37, IrComponent_dx_data_grid_37_Template, 4, 8, "dx-data-grid", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "dx-popup", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function IrComponent_Template_dx_popup_visibleChange_38_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "p", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](42, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](44, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "dx-button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_Template_dx_button_onClick_46_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "dx-button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_Template_dx_button_onClick_47_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "dx-popup", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function IrComponent_Template_dx_popup_visibleChange_48_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function IrComponent_Template_dx_popup_onHidden_48_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "p", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](52, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "dx-button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_Template_dx_button_onClick_54_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function IrComponent_Template_dx_button_onClick_55_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.ServiceLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Service));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](50, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpci5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 91823:
/*!************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/os/os.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OsComponent": () => (/* binding */ OsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function OsComponent_dx_data_grid_6_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function OsComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, OsComponent_dx_data_grid_6_div_8_div_3_Template, 2, 2, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function OsComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, OsComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, OsComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, OsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function OsComponent_dx_data_grid_6_dxi_column_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 70);
} if (rf & 2) {
    const volumeYear_r36 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowFiltering", false)("dataField", volumeYear_r36.field)("caption", volumeYear_r36.year)("allowEditing", !ctx_r7.isStudyEditable);
} }
function OsComponent_dx_data_grid_6_dxi_column_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 71);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function OsComponent_dx_data_grid_6_div_19_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_div_19_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const d_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r39.deleteRow(d_r37.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, OsComponent_dx_data_grid_6_div_19_dx_button_1_Template, 1, 0, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r37.data.DataRowId !== null);
} }
function OsComponent_dx_data_grid_6_div_20_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 76);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function OsComponent_dx_data_grid_6_div_20_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function OsComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, OsComponent_dx_data_grid_6_div_20_input_1_Template, 1, 1, "input", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, OsComponent_dx_data_grid_6_div_20_span_2_Template, 2, 1, "span", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function OsComponent_dx_data_grid_6_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value > 0 ? data_r47.value.toFixed(1) : "");
} }
function OsComponent_dx_data_grid_6_div_22_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_dx_data_grid_6_div_22_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r50.addNotes(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function OsComponent_dx_data_grid_6_div_22_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, OsComponent_dx_data_grid_6_div_22_dx_button_2_Template, 1, 0, "dx-button", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function OsComponent_dx_data_grid_6_div_22_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const data_r48 = restoredCtx.$implicit; const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r53.showNotePopup(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value);
} }
function OsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function OsComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onRowSaved($event); })("onCellPrepared", function OsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellPreparedHighlighter($event); })("onCellHoverChanged", function OsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onCellHoverChanged($event); })("onRowPrepared", function OsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, OsComponent_dx_data_grid_6_div_8_Template, 4, 2, "div", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, OsComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](14, OsComponent_dx_data_grid_6_dxi_column_14_Template, 1, 5, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, OsComponent_dx_data_grid_6_dxi_column_18_Template, 1, 1, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, OsComponent_dx_data_grid_6_div_19_Template, 2, 1, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, OsComponent_dx_data_grid_6_div_20_Template, 3, 2, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, OsComponent_dx_data_grid_6_div_21_Template, 3, 1, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, OsComponent_dx_data_grid_6_div_22_Template, 6, 2, "div", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function OsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 82);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function OsComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 83);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.SHC_OS_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
function OsComponent_div_38_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r61.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r61.field);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function OsComponent_dx_data_grid_52_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class OsComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.CompanyLists = [];
        this.MasterBrandLists = [];
        this.SegmentLists = [];
        this.OutletLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.studyTypeValue = 'OutletSales';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Company: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            MasterBrand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Outlet: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getCompanyLists();
        this.getMasterBrandLists();
        this.getSegmentLists();
        this.getOutletLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData('OutletSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj.OutletSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            Company: item.Company,
                            MasterBrand: item.MasterBrand,
                            Segment: item.Segment,
                            Outlet: item.Outlet,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'Company',
                area: 'row',
                caption: 'Company',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'MasterBrand',
                area: 'row',
                caption: 'Master Brand',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'Outlet',
                area: 'row',
                caption: 'Outlet',
                dataType: 'string',
                id: 3,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 4,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 5,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    getSegmentLists() {
        this.sharedService
            .getSHCDataEntryData('SegmentSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.SegmentLists = data.Data;
            }
        });
    }
    getCompanyLists() {
        this.sharedService
            .getSHCDataEntryData('CompanySHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.CompanyLists = data.Data;
            }
        });
    }
    getMasterBrandLists() {
        this.sharedService
            .getSHCDataEntryData('MasterBrandSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.MasterBrandLists = data.Data;
            }
        });
    }
    getOutletLists() {
        this.sharedService
            .getSHCDataEntryData('OutletSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.OutletLists = data.Data;
            }
        });
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            SegmentId: newRowData.Segment.Id,
            Segment: newRowData.Segment.Name,
            OutletId: newRowData.Outlet.Id,
            Outlet: newRowData.Outlet.Name,
            CompanyId: newRowData.Company.Id,
            Company: newRowData.Company.Name,
            MasterBrandId: newRowData.MasterBrand.Id,
            MasterBrand: newRowData.MasterBrand.Name,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.SegmentId == newRow.SegmentId &&
            item.OutletId == newRow.OutletId &&
            item.CompanyId == newRow.CompanyId &&
            item.MasterBrandId == newRow.MasterBrandId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.SegmentId || 0) - (b.SegmentId || 0) ||
                (a.OutletId || 0) - (b.OutletId || 0) ||
                (a.CompanyId || 0) - (b.CompanyId || 0) ||
                (a.MasterBrandId || 0) - (b.MasterBrandId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            outletSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData('OutletSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            outletSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData('OutletSales', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Company:
                this.getCompanyLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.MasterBrand:
                this.getMasterBrandLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Segment:
                this.getSegmentLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Outlet:
                this.getOutletLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
OsComponent.ɵfac = function OsComponent_Factory(t) { return new (t || OsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService)); };
OsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: OsComponent, selectors: [["app-os"]], viewQuery: function OsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 71, vars: 58, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "Company", "placeholder", "Select Company", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "MasterBrand", "placeholder", "Select Master Brand", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Outlet", "placeholder", "Select Outlet", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Company", 3, "allowEditing"], ["dataField", "MasterBrand", 3, "allowEditing"], ["dataField", "Segment", 3, "allowEditing"], ["dataField", "Outlet", 3, "allowEditing"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing", 4, "ngFor", "ngForOf"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["cellTemplate", "EditCellTemplate", 3, "width", "allowFiltering", "dataField", "caption", "allowEditing"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [1, "col-md-6"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function OsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, OsComponent_dx_data_grid_6_Template, 23, 30, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, OsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, OsComponent_app_shc_preview_11_Template, 1, 10, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function OsComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Company");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](25, "Master Brand");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "ng-select", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "ng-select", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](35, "Outlet");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](36, "ng-select", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](38, OsComponent_div_38_Template, 5, 2, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "dx-button", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function OsComponent_Template_dx_button_click_40_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "dx-popup", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function OsComponent_Template_dx_popup_visibleChange_41_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function OsComponent_Template_dx_popup_onHidden_41_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](46, "textarea", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "dx-button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_Template_dx_button_onClick_48_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "dx-popup", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function OsComponent_Template_dx_popup_visibleChange_49_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function OsComponent_Template_dx_popup_onHidden_49_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](52, OsComponent_dx_data_grid_52_Template, 4, 8, "dx-data-grid", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "dx-popup", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function OsComponent_Template_dx_popup_visibleChange_53_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](56, "p", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](57, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](58, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](59, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](60, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](61, "dx-button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_Template_dx_button_onClick_61_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](62, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_Template_dx_button_onClick_62_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](63, "dx-popup", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function OsComponent_Template_dx_popup_visibleChange_63_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function OsComponent_Template_dx_popup_onHidden_63_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](64, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](65, "div", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](66, "p", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](67, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](68, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](69, "dx-button", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_Template_dx_button_onClick_69_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](70, "dx-button", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function OsComponent_Template_dx_button_onClick_70_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.CompanyLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Company));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.MasterBrandLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.MasterBrand));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.SegmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.OutletLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Outlet));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](56, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJvcy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 77047:
/*!**************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/pcs/pcs.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PcsComponent": () => (/* binding */ PcsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shc-preview/shc-preview.component */ 17640);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























function PcsComponent_dx_data_grid_6_div_8_div_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"](" Currency: ", ctx_r13.currentCurrency.CurrencyName, " (", ctx_r13.currentCurrency.CurrencyCode, ") ");
} }
function PcsComponent_dx_data_grid_6_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](3, PcsComponent_dx_data_grid_6_div_8_div_3_Template, 2, 2, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r5.currentCurrency);
} }
function PcsComponent_dx_data_grid_6_ng_container_9_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_ng_container_9_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r20.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_ng_container_9_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r26); const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r25.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r29); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r28.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r31.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r30.disabledSignOffButton);
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_div_1_Template, 2, 1, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_div_1_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PcsComponent_dx_data_grid_6_ng_container_9_div_2_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, PcsComponent_dx_data_grid_6_ng_container_9_div_4_Template, 2, 0, "div", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_5_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_6_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_7_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PcsComponent_dx_data_grid_6_ng_container_9_dxi_item_8_Template, 2, 0, "dxi-item", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function PcsComponent_dx_data_grid_6_dxi_column_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 64);
} if (rf & 2) {
    const volumeYear_r36 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("dataField", volumeYear_r36.field)("allowFiltering", false)("caption", volumeYear_r36.year)("allowEditing", !ctx_r7.isStudyEditable);
} }
function PcsComponent_dx_data_grid_6_dxi_column_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 65);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function PcsComponent_dx_data_grid_6_div_16_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_div_16_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const d_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r39.deleteRow(d_r37.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_div_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PcsComponent_dx_data_grid_6_div_16_dx_button_1_Template, 1, 0, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r37.data.DataRowId !== null);
} }
function PcsComponent_dx_data_grid_6_div_17_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 70);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function PcsComponent_dx_data_grid_6_div_17_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? data_r42.value.toFixed(1) : "");
} }
function PcsComponent_dx_data_grid_6_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, PcsComponent_dx_data_grid_6_div_17_input_1_Template, 1, 1, "input", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PcsComponent_dx_data_grid_6_div_17_span_2_Template, 2, 1, "span", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r10.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r10.isStudyEditable);
} }
function PcsComponent_dx_data_grid_6_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value > 0 ? data_r47.value.toFixed(1) : "");
} }
function PcsComponent_dx_data_grid_6_div_19_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_dx_data_grid_6_div_19_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r52); const data_r48 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r50.addNotes(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function PcsComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, PcsComponent_dx_data_grid_6_div_19_dx_button_2_Template, 1, 0, "dx-button", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function PcsComponent_dx_data_grid_6_div_19_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const data_r48 = restoredCtx.$implicit; const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r53.showNotePopup(data_r48); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r48 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r48.value);
} }
function PcsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function PcsComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r55.onRowSaved($event); })("onCellPrepared", function PcsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellPreparedHighlighter($event); })("onCellHoverChanged", function PcsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onCellHoverChanged($event); })("onRowPrepared", function PcsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PcsComponent_dx_data_grid_6_div_8_Template, 4, 2, "div", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, PcsComponent_dx_data_grid_6_ng_container_9_Template, 9, 4, "ng-container", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, PcsComponent_dx_data_grid_6_dxi_column_11_Template, 1, 5, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](15, PcsComponent_dx_data_grid_6_dxi_column_15_Template, 1, 1, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](16, PcsComponent_dx_data_grid_6_div_16_Template, 2, 1, "div", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, PcsComponent_dx_data_grid_6_div_17_Template, 3, 2, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, PcsComponent_dx_data_grid_6_div_18_Template, 3, 1, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, PcsComponent_dx_data_grid_6_div_19_Template, 6, 2, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.volumeYears);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "EditCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYearsCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function PcsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 76);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function PcsComponent_app_shc_preview_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 77);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r2.getGridFields())("setPreviewData", ctx_r2.previewGridData)("setPreviewGridKey", ctx_r2.previewGridStorageKey)("setSelectedCurrency", ctx_r2.currentCurrency)("setStudyType", ctx_r2.studyDataUrlEnum.SHC_PC_SALES)("setVolumeYears", ctx_r2.volumeYears)("currentYear", ctx_r2.currentYear)("setSelectedCurrency", ctx_r2.currentCurrency)("setVolumeYears", ctx_r2.volumeYears)("setViewId", ctx_r2.studyDataViewId);
} }
function PcsComponent_div_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "input", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r61 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](volumeYear_r61.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formControlName", volumeYear_r61.field);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function PcsComponent_dx_data_grid_37_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class PcsComponent {
    constructor(isLoadingService, alertService, route, sharedService, formBuilder, localStorageService, studyService, router) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.router = router;
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.productClassificationLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.studyTypeValue = 'ProductClassificationSales';
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            ProductClassification: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PCS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.getProductClassificationLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData(this.studyTypeValue, this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .ProductClassificationSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            ProductClassification: item.ProductClassification,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'ProductClassification',
                area: 'row',
                caption: 'Product Classification',
                dataType: 'string',
                id: 0,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 1,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 2,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    getProductClassificationLists() {
        this.sharedService
            .getSHCDataEntryData('ProductClassificationSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.productClassificationLists = data.Data;
            }
        });
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            ProductClassification: newRowData.ProductClassification.Name,
            ProductClassificationId: newRowData.ProductClassification.Id,
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ProductClassificationId == newRow.ProductClassificationId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.ProductClassificationId || 0) - (b.ProductClassificationId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0 })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            productClassificationSales: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData(this.studyTypeValue, studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            productClassificationSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData(this.studyTypeValue, formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ProductClassification:
                this.getProductClassificationLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
PcsComponent.ɵfac = function PcsComponent_Factory(t) { return new (t || PcsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_6__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_7__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router)); };
PcsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: PcsComponent, selectors: [["app-pcs"]], viewQuery: function PcsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 56, vars: 52, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "ProductClassification", "placeholder", "Select Product Classification", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "ProductClassification", 3, "allowEditing"], ["cellTemplate", "EditCellTemplate", 3, "width", "dataField", "allowFiltering", "caption", "allowEditing", 4, "ngFor", "ngForOf"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible"], ["dataField", "EditNote", 3, "allowEditing", "visible"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["class", "font-weight-bold1", 4, "ngIf"], [1, "font-weight-bold1"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["cellTemplate", "EditCellTemplate", 3, "width", "dataField", "allowFiltering", "caption", "allowEditing"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setSelectedCurrency", "setStudyType", "setVolumeYears", "currentYear", "setViewId"], [1, "col-md-6"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function PcsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, PcsComponent_dx_data_grid_6_Template, 20, 27, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, PcsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](11, PcsComponent_app_shc_preview_11_Template, 1, 10, "app-shc-preview", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "dx-popup", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PcsComponent_Template_dx_popup_visibleChange_12_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](20, "Product Category");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, PcsComponent_div_23_Template, 5, 2, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "dx-button", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function PcsComponent_Template_dx_button_click_25_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PcsComponent_Template_dx_popup_visibleChange_26_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function PcsComponent_Template_dx_popup_onHidden_26_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "form", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](31, "textarea", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_Template_dx_button_onClick_33_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PcsComponent_Template_dx_popup_visibleChange_34_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function PcsComponent_Template_dx_popup_onHidden_34_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](37, PcsComponent_dx_data_grid_37_Template, 4, 8, "dx-data-grid", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "dx-popup", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PcsComponent_Template_dx_popup_visibleChange_38_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "p", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](42, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](44, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](45, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](46, "dx-button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_Template_dx_button_onClick_46_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](47, "dx-button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_Template_dx_button_onClick_47_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](48, "dx-popup", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function PcsComponent_Template_dx_popup_visibleChange_48_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function PcsComponent_Template_dx_popup_onHidden_48_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](49, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](50, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](51, "p", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](52, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](53, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](54, "dx-button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_Template_dx_button_onClick_54_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](55, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function PcsComponent_Template_dx_button_onClick_55_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx.productClassificationLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductClassification));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](50, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwY3MuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 83469:
/*!**************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/pts/pts.component.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PtsComponent": () => (/* binding */ PtsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_assets_lubesNetTrendViewDataSample_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/assets/lubesNetTrendViewDataSample.json */ 14591);
/* harmony import */ var hyperformula__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! hyperformula */ 22431);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var _shared_handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../shared/handsontable/handsontable.component */ 92315);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);























function PtsComponent_div_30_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](4, "input", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const volumeYear_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](volumeYear_r2.year);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("formControlName", volumeYear_r2.field);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function PtsComponent_dx_data_grid_44_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "dx-data-grid", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](1, "dxi-column", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "dxi-column", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "dxi-column", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("dataSource", ctx_r1.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class PtsComponent {
    constructor(isLoadingService, alertService, route, sharedService, formBuilder, localStorageService, studyService, router) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.router = router;
        this.lubesNetTrendViewData = src_assets_lubesNetTrendViewDataSample_json__WEBPACK_IMPORTED_MODULE_5__;
        this.hyperformulaInstance = hyperformula__WEBPACK_IMPORTED_MODULE_6__.HyperFormula.buildEmpty({
            // to use an external HyperFormula instance,
            // initialize it with the `'internal-use-in-handsontable'` license key
            licenseKey: 'internal-use-in-handsontable',
        });
        this.settings = {
            colHeaders: true,
            rowHeaders: true,
            height: 'auto',
            formulas: {
                engine: this.hyperformulaInstance,
                sheetName: 'Sheet1'
            },
            licenseKey: 'non-commercial-and-evaluation'
        };
        this.studyTitle = '';
        this.volumeYear = 0;
        this.currentYear = 0;
        this.years = [];
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.productCategoryLists = [];
        this.productTypeLists = [];
        this.segmentLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.studyTypeValue = 'ProductTypeSales';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            ProductCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.displayJson();
        this.getProductTypeLists();
        this.getProductCategoryLists();
        this.getSegmentLists();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData('ProductTypeSales', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj
                    .ProductTypeSalesSHC;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            ProductCategory: item.ProductCategory,
                            ProductType: item.ProductType,
                            Segment: item.Segment,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
        this.setColumnHeaders();
        this.setUpColumnsToShow();
    }
    getGridFields() {
        return [
            {
                dataField: 'ProductCategory',
                area: 'row',
                caption: 'Product Category',
                dataType: 'string',
            },
            {
                dataField: 'ProductType',
                area: 'row',
                caption: 'Product Type',
                dataType: 'string',
            },
            {
                dataField: 'Segment',
                area: 'row',
                caption: 'Segment',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
        }
    }
    getProductTypeLists() {
        this.sharedService
            .getSHCDataEntryData('ProductTypeSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.productTypeLists = data.Data;
            }
        });
    }
    getProductCategoryLists() {
        this.sharedService
            .getSHCDataEntryData('ProductCategorySHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.productCategoryLists = data.Data;
            }
        });
    }
    getSegmentLists() {
        this.sharedService
            .getSHCDataEntryData('SegmentSHC')
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.segmentLists = data.Data;
            }
        });
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: +newRowData.CurrentYear,
            DataRelationId: null,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: +newRowData.PreviousYear1,
            PreviousYear2: +newRowData.PreviousYear2,
            PreviousYear3: +newRowData.PreviousYear3,
            PreviousYear4: +newRowData.PreviousYear4,
            PreviousYear5: +newRowData.PreviousYear5,
            ChangeLog: '',
            ChangeLogObj: [],
            OldCurrentYear: 0,
            CurrencyCode: this.currentCurrency.CurrencyCode,
            CurrencyId: this.currentCurrency.CurrencyId,
            CurrencyName: this.currentCurrency.CurrencyName,
            ProductType: newRowData.ProductType.Name,
            ProductTypeId: newRowData.ProductType.Id,
            ProductCategory: newRowData.ProductCategory.Name,
            ProductCategoryId: newRowData.ProductCategory.Id,
            SegmentId: newRowData.Segment.Id,
            Segment: newRowData.Segment.Name,
        };
        const isFound = this.studyData.find((item) => item.SegmentId == newRow.SegmentId &&
            item.ProductCategoryId == newRow.ProductCategoryId &&
            item.ProductTypeId == newRow.ProductTypeId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => (a.SegmentId || 0) - (b.SegmentId || 0) ||
                (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0) ||
                (a.ProductTypeId || 0) - (b.ProductTypeId || 0));
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : null, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : null, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : null, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : null, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : null, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : null })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            productTypeSalesSHC: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData('ProductTypeSales', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            productTypeSalesSHC: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData('ProductTypeSales', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductCategory:
                this.getProductCategoryLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.ProductType:
                this.getProductTypeLists();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Segment:
                this.getSegmentLists();
                break;
            default:
                break;
        }
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    displayJson() {
        this.lubesNetTrendViewData = src_assets_lubesNetTrendViewDataSample_json__WEBPACK_IMPORTED_MODULE_5__;
        this.years = [];
        this.lubesNetTrendViewData.forEach(item => {
            if (!this.years.includes(item.Year))
                this.years.push(item.Year);
        });
        this.lubesNetTrendViewData.forEach(item => {
            this.years.forEach((y) => {
                if (item.Year === y)
                    Object.assign(item, { [y]: item.Volume });
                else
                    Object.assign(item, { [y]: null });
            });
        });
        this.lubesNetTrendViewData.map((data) => {
            Object.assign(data, { formula: "=SUM(J:J)" });
            Object.assign(data, { Avg: "=AVERAGE(J:J)" });
            Object.assign(data, { Median: "=MEDIAN(J:J)" });
            Object.assign(data, { Max: "=MAX(J:J)" });
            Object.assign(data, { Min: "=MIN(J:J)" });
        });
        //  console.log(this.years)
        //  console.log(this.lubesNetTrendViewData)
        this.setColumnHeaders();
        this.setColumnHeaders();
    }
    setColumnHeaders() {
        this.columnHeaders =
            [
                'Market Segment(A)',
                'Product Category (B)',
                'SubProduct (C)',
                'ViscosityGrade (D)',
                'Country(E)',
                '2016(F)',
                '2017(G)',
                '2018(H)',
                '2019(I)',
                '2020(J)',
                '2021(K)',
                '2025(L)',
                '2030(M)',
                'Sum(Fx)',
                'Avg(Fx)',
                'Median(Fx)',
                'Max(Fx)',
                'Min(Fx)'
            ];
    }
    setUpColumnsToShow() {
        this.columns = [
            { data: 'MarketSegment' },
            { data: 'ProductCategory' },
            { data: 'SubProduct' },
            { data: 'ViscosityGrade' },
            { data: 'Country' },
            { data: '2016' },
            { data: '2017' },
            { data: '2018' },
            { data: '2019' },
            { data: '2020' },
            { data: '2021' },
            { data: '2025' },
            { data: '2030' },
            { data: 'formula' },
            { data: 'Avg' },
            { data: 'Median' },
            { data: 'Max' },
            { data: 'Min' }
        ];
        // console.log(this.columns)
    }
}
PtsComponent.ɵfac = function PtsComponent_Factory(t) { return new (t || PtsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_14__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_15__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_9__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_16__.Router)); };
PtsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: PtsComponent, selectors: [["app-pts"]], viewQuery: function PtsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 63, vars: 52, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], [1, "mb-3", 2, "float", "right"], ["icon", "plus", "text", "Add New Row", 1, "ml-2", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 1, "ml-2", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 1, "ml-2", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 1, "ml-2", 3, "onClick"], [3, "colHeaders", "data", "columns", "settings"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "row"], [1, "col"], [1, "form-group"], ["bindLabel", "Name", "formControlName", "ProductCategory", "placeholder", "Select Product Category", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ProductType", "placeholder", "Select Product Type", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Segment", "addTagText", "Create New", 3, "items", "addTag"], ["class", "col-md-6", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], [1, "col-md-6"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function PtsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "dx-button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_3_listener() { return ctx.addNewRowPopup(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "dx-button", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_4_listener() { return ctx.saveStudyData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "dx-button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_5_listener() { return ctx.onRequestForSignOffClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "dx-button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_6_listener() { return ctx.onRequestForChangeDataClick(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](8, "app-handsontable", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "dx-popup", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("visibleChange", function PtsComponent_Template_dx_popup_visibleChange_9_listener($event) { return ctx.popupVisible = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "form", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17, "Product Category");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](18, "ng-select", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](22, "Product Type");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](23, "ng-select", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](24, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](25, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](26, "label");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](27, "Segment");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](28, "ng-select", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](30, PtsComponent_div_30_Template, 5, 2, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](31, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](32, "dx-button", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function PtsComponent_Template_dx_button_click_32_listener() { return ctx.submitNewRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](33, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("visibleChange", function PtsComponent_Template_dx_popup_visibleChange_33_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function PtsComponent_Template_dx_popup_onHidden_33_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](34, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](35, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](36, "form", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](37, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](38, "textarea", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](39, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](40, "dx-button", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_40_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](41, "dx-popup", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("visibleChange", function PtsComponent_Template_dx_popup_visibleChange_41_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function PtsComponent_Template_dx_popup_onHidden_41_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](42, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](43, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](44, PtsComponent_dx_data_grid_44_Template, 4, 8, "dx-data-grid", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](45, "dx-popup", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("visibleChange", function PtsComponent_Template_dx_popup_visibleChange_45_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](46, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](47, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](48, "p", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](49, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](50, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](51, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](52, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](53, "dx-button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_53_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](54, "dx-button", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_54_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](55, "dx-popup", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("visibleChange", function PtsComponent_Template_dx_popup_visibleChange_55_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function PtsComponent_Template_dx_popup_onHidden_55_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](56, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](57, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](58, "p", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](59, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](60, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](61, "dx-button", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_61_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](62, "dx-button", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("onClick", function PtsComponent_Template_dx_button_onClick_62_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("colHeaders", ctx.columnHeaders)("data", ctx.lubesNetTrendViewData)("columns", ctx.columns)("settings", ctx.settings);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("formGroup", ctx.newRowForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("items", ctx.productCategoryLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductCategory));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("items", ctx.productTypeLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.ProductType));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("items", ctx.segmentLists)("addTag", ctx.createNewDataEntry.bind(ctx, ctx.dataRelationsEnum.Segment));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.volumeYears);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("disabled", ctx.newRowForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction1"](50, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_10__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxButtonComponent, _shared_handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_11__.HandsontableComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_19__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_20__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.FormControlName, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgForOf, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_13__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_21__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_22__.DxiColumnComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwdHMuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 37527:
/*!************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/sc/sc.component.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ScComponent": () => (/* binding */ ScComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_assets_mock_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/assets/mock.json */ 33467);
/* harmony import */ var src_assets_mocke_json__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/assets/mocke.json */ 40478);
/* harmony import */ var src_assets_updatejson_json__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/assets/updatejson.json */ 36759);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var _shared_handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../../../../shared/handson-table/handson-table.component */ 44911);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);























const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function ScComponent_dx_data_grid_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "dx-data-grid", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](1, "dxi-column", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](2, "dxi-column", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](3, "dxi-column", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("dataSource", ctx_r0.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction0"](7, _c0));
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class ScComponent {
    constructor(isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService, studyService) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyService = studyService;
        this.mockData = src_assets_mock_json__WEBPACK_IMPORTED_MODULE_5__;
        this.secondMockeData = src_assets_mocke_json__WEBPACK_IMPORTED_MODULE_6__;
        this.updatedJson = src_assets_updatejson_json__WEBPACK_IMPORTED_MODULE_7__;
        this.columnHeaders = [];
        this.studyTitle = '';
        this.currentYear = 0;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isMidYear = false;
        this.studyDataObj = {
            MarketYearCategoryId: 0,
            InitialSetup: new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup(),
            ProductTypeSalesSHC: [],
        };
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.isStudyEditable = false;
        this.volumeYears = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.CompanyLists = [];
        this.MasterBrandLists = [];
        this.SegmentLists = [];
        this.OutletLists = [];
        this.currentCurrency = {};
        this.previewGridData = [];
        this.allowedCols = [
            'PreviousYear1',
            'PreviousYear2',
            'PreviousYear3',
            'PreviousYear4',
            'PreviousYear5',
            'CurrentYear',
        ];
        this.studyTypeValue = 'SalonCount';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.currentYear = new Date().getFullYear();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.newRowForm = this.formBuilder.group({
            Company: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required],
            MasterBrand: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required],
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required],
            Outlet: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required],
            ProductType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required],
            PreviousYear1: [null],
            PreviousYear2: [null],
            PreviousYear3: [null],
            PreviousYear4: [null],
            PreviousYear5: [null],
            CurrentYear: [null],
        });
        this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.datRelationsData = data;
            this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
            if (this.studyDataRelations) {
                this.studyDataViewId = this.studyDataRelations.ViewId;
            }
        }
    }
    ngOnInit() {
        this.getSalesData();
        this.displayJson();
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getShcStudyData('SalonCount', this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyDataObj = res.Data;
                this.studyMarketYearCategoryId =
                    this.studyDataObj.MarketYearCategoryId;
                this.studyData = this.studyDataObj.SalonCount;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(this.studyDataObj.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.volumeYears = [];
                for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {
                    this.volumeYears.push({ field: `PreviousYear${j}`, year: i });
                }
                this.volumeYears.push({
                    field: `CurrentYear`,
                    year: this.currentYear,
                });
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.currentCurrency = {
                        CurrencyId: item.CurrencyId,
                        CurrencyName: item.CurrencyName,
                        CurrencyCode: item.CurrencyCode,
                    };
                    this.volumeYears.map((d) => {
                        this.previewGridData.push({
                            Market: this.studySummary.MarketName,
                            Year: d.year,
                            Value: item[d.field],
                        });
                    });
                    this.studyData[i].Market = this.studySummary.MarketName;
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const errorShow = typeof err.error !== 'undefined'
                ? err.error
                : 'Something went wrong. Please try again later.';
            this.alertService.danger(errorShow);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'Market',
                area: 'row',
                caption: 'Market',
                dataType: 'string',
                id: 0,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 1,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 2,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            data.CurrentYear = +data.CurrentYear;
            data.PreviousYear1 = +data.PreviousYear1;
            data.PreviousYear2 = +data.PreviousYear2;
            data.PreviousYear3 = +data.PreviousYear3;
            data.PreviousYear4 = +data.PreviousYear4;
            data.PreviousYear5 = +data.PreviousYear5;
        }
    }
    get n() {
        return this.newNoteForm.controls;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    saveStudyData() {
        const studyData = this.studyData.map((item) => (Object.assign(Object.assign({}, item), { PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : null, PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : null, PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : null, PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : null, PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : null, CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : null })));
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            salonCount: studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSHCData('SalonCount', studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                // this.getSalesData();
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            salonCount: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSHCData('SalonCount', formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.isLoadingService.remove();
                this.getSalesData();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometimes.');
            this.isLoadingService.remove();
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    displayJson() {
        this.secondMockeData = src_assets_mocke_json__WEBPACK_IMPORTED_MODULE_6__;
        let data = this.secondMockeData.Data;
        // console.log(this.secondMockeData);
        this.secondFormattedData = [];
        let data2 = this.updatedJson.Data;
        const settingsJson = data2.settings;
        console.log(settingsJson);
        // this.columnHeaders = data2.ColumnList;
        const columnLists = [];
        const nestedColumnList = [];
        const columnBinding = [];
        data2.ColumnList.map((list) => {
            if (list.IsVisible) {
                columnLists.push(list.Title);
                nestedColumnList.push(null);
                columnBinding.push({ data: `ColumnsData.${list.Title}` });
            }
        });
        data2.YearsList.sort((a, b) => a.Index - b.Index);
        data2.YearsList.map((year) => {
            columnLists.push({
                label: year.Year,
                colspan: year.AttributeList.length,
            });
            if (year.AttributeList) {
                // const lastIndex = this.columnHeaders.length - 1;
                // if (!this.columnHeaders[lastIndex]['sub']) {
                //   this.columnHeaders[lastIndex]['sub'] = [];
                // }
                year.AttributeList.map((attr) => {
                    if (year.AttributeList.length > 1) {
                        nestedColumnList.push(attr.Title);
                    }
                    columnBinding.push({ data: `YearsData.${year.Year}.${attr.Title}` });
                    // this.columnHeaders[lastIndex]['sub'].push({
                    //   CoulmnTitle: attr.CoulmnTitle,
                    //   CoulmnIndex: attr.CoulmnIndex,
                    //   IsVisible: 1,
                    // });
                });
            }
        });
        this.columnHeaders.push(columnLists);
        if (data2.HasAttribute) {
            this.columnHeaders.push(nestedColumnList);
        }
        this.columns = columnBinding;
        data2.DataList.map((item, i) => {
            if (!this.secondFormattedData[i]) {
                this.secondFormattedData[i] = { ColumnsData: {}, YearsData: {} };
            }
            data2.ColumnList.forEach((col) => {
                if (col.IsVisible) {
                    Object.assign(this.secondFormattedData[i]['ColumnsData'], {
                        [col.Title]: item.ColumnsData[col.Index],
                    });
                }
            });
            data2.YearsList.forEach((year, j) => {
                if (!this.secondFormattedData[i]['YearsData'][year.Year]) {
                    this.secondFormattedData[i]['YearsData'][year.Year] = {};
                }
                // this.columnHeaders.push({
                //   label: year.Year,
                //   colspan: data2.YearsList.length,
                // });
                year.AttributeList.map((attribute) => {
                    Object.assign(this.secondFormattedData[i]['YearsData'][year.Year], {
                        [attribute.Title]: typeof item.YearsData[year.Year] !== 'undefined'
                            ? item.YearsData[year.Year][attribute.Index]
                            : 0,
                    });
                });
            });
        });
        console.log(this.columnHeaders);
        // data2.YearsList.forEach((year) => {
        //   let yearIndex = data2.YearsList.indexOf(year);
        //   Object.assign(this.secondFormattedData, {
        //     [year.YearType]: {
        //       [year.Attributes[0].CoulmnTitle]:
        //         data2.DataItems[0].YearsData[0][2021],
        //       [year.Attributes[1].CoulmnTitle]:
        //         data2.DataItems[0].YearsData[1][2022],
        //     },
        //   });
        // });
        // console.log(data2);
        // this.secondFormattedData = [this.secondFormattedData];
        // console.log(this.secondFormattedData);
        // this.formattedData = [];
        // data.ColumnList.forEach((col) => {
        //   let idx = data.ColumnList.indexOf(col);
        //   Object.assign(this.formattedData, {
        //     [col.CoulmnTitle]: data.DataItems[0].DataAttributes[idx],
        //   });
        //   // formattedData.push({
        //   //   [col.CoulmnTitle]: data.DataItems[0].DataAttributes[idx]
        //   // })
        // });
        // data.YearsList.forEach((year) => {
        //   Object.assign(this.formattedData, {
        //     [year.YearType]: {
        //       [data.UnitOfValue[0].ValueTitle]: year.Values[0].CoulmnTitle,
        //       [data.UnitOfValue[1].ValueTitle]: year.Values[1].CoulmnTitle,
        //     },
        //   });
        // });
        // this.formattedData = [this.formattedData];
        // const YearsData = pluck(data2.DataItems, '2021');
        // console.log(YearsData);
        // console.log(this.formattedData);
        // this.setColumnHeaders();
        // this.setColumnData();
    }
    setColumnHeaders() {
        this.columnHeaders = [
            [
                'Company',
                'Brand',
                'Channel',
                { label: '2021', colspan: 2 },
                { label: '2022', colspan: 2 },
                { label: '2023', colspan: 2 },
            ],
            [
                null,
                null,
                null,
                { label: 'Volume' },
                { label: 'Sales' },
                { label: 'Volume' },
                { label: 'Sales' },
                { label: 'Volume' },
                { label: 'Sales' },
            ],
        ];
    }
    setColumnData() {
        this.columns = [
            { data: 'Company' },
            { data: 'Brand' },
            { data: 'Channel' },
            { data: '2021.Volume' },
            { data: '2021.Sales' },
            { data: '2022.Volume' },
            { data: '2022.Sales' },
            { data: '2023.Volume' },
            { data: '2023.Sales' },
        ];
    }
}
ScComponent.ɵfac = function ScComponent_Factory(t) { return new (t || ScComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_15__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_16__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_17__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_17__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_8__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_9__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_10__.StudyService)); };
ScComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdefineComponent"]({ type: ScComponent, selectors: [["app-sc"]], viewQuery: function ScComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxDataGridComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
    } }, inputs: { setSelectedCurrency: "setSelectedCurrency" }, decls: 33, vars: 35, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], [3, "setDataSource"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function ScComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](2, "app-handson-table", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "dx-popup", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("visibleChange", function ScComponent_Template_dx_popup_visibleChange_3_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function ScComponent_Template_dx_popup_onHidden_3_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "form", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](8, "textarea", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](9, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](10, "dx-button", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("onClick", function ScComponent_Template_dx_button_onClick_10_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "dx-popup", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("visibleChange", function ScComponent_Template_dx_popup_visibleChange_11_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function ScComponent_Template_dx_popup_onHidden_11_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](12, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](13, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](14, ScComponent_dx_data_grid_14_Template, 4, 8, "dx-data-grid", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](15, "dx-popup", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("visibleChange", function ScComponent_Template_dx_popup_visibleChange_15_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](16, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](17, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](18, "p", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](19, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](20, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](21, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](22, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](23, "dx-button", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("onClick", function ScComponent_Template_dx_button_onClick_23_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](24, "dx-button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("onClick", function ScComponent_Template_dx_button_onClick_24_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](25, "dx-popup", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("visibleChange", function ScComponent_Template_dx_popup_visibleChange_25_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function ScComponent_Template_dx_popup_onHidden_25_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](26, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](27, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](28, "p", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](29, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](30, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](31, "dx-button", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("onClick", function ScComponent_Template_dx_button_onClick_31_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](32, "dx-button", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("onClick", function ScComponent_Template_dx_button_onClick_32_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("setDataSource", ctx.updatedJson);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](33, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_11__.ShowInitialSetupComponent, _shared_handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_12__.HandsonTableComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_19__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_14__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_14__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgClass, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_20__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_22__.DxiColumnComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzYy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 57952:
/*!****************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/shc-preview/preview-top-menu/preview-top-menu.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PreviewTopMenuComponent": () => (/* binding */ PreviewTopMenuComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_currencyConversionType_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/currencyConversionType.enum */ 79995);
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../animations */ 54000);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! devextreme-angular */ 21856);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme-angular */ 38772);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular/core */ 85915);










function PreviewTopMenuComponent_div_1_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "button", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_1_div_9_Template_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r10); const item_r8 = restoredCtx.$implicit; const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2); return ctx_r9.onCalcItemSelected(item_r8.name, ""); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r8 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", item_r8.name, " ");
} }
function PreviewTopMenuComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseover", function PreviewTopMenuComponent_div_1_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r11.onHover("calculateFieldSelector"); })("mouseenter", function PreviewTopMenuComponent_div_1_Template_div_mouseenter_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r13.onHover("calculateFieldSelector"); })("mouseout", function PreviewTopMenuComponent_div_1_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r14.onLeave("calculateFieldSelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "dx-button", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClick", function PreviewTopMenuComponent_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r15.toggleMenuItem("calculateFieldSelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, "Add Calculated Field for:");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "button", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseenter", function PreviewTopMenuComponent_div_1_Template_button_mouseenter_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r16.calculatedFieldOnHover("calculated-0"); })("mouseout", function PreviewTopMenuComponent_div_1_Template_button_mouseout_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r17.calculatedFieldOnLeave("calculated-0"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](7, " Sales ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseenter", function PreviewTopMenuComponent_div_1_Template_div_mouseenter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r18.calculatedFieldOnHover("calculated-0"); })("mouseover", function PreviewTopMenuComponent_div_1_Template_div_mouseover_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r19.calculatedFieldOnHover("calculated-0"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](9, PreviewTopMenuComponent_div_1_div_9_Template, 3, 1, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("type", ctx_r0.getButtonStatus(ctx_r0.calculatedFieldSelectorClicked))("width", ctx_r0.getWidth("chartBtn"))("height", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@slideInOut", ctx_r0.calculatedFieldVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("id", "calculated-0");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", ctx_r0.calculatedItems);
} }
const _c0 = function (a0) { return { "selected-item": a0 }; };
function PreviewTopMenuComponent_div_2_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_2_div_6_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r23); const data_r21 = restoredCtx.$implicit; const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2); return ctx_r22.currencySelectionOnChanged(data_r21); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r21 = ctx.$implicit;
    const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction1"](2, _c0, data_r21.CurrencyCode === (ctx_r20.currencyDropdownSelected == null ? null : ctx_r20.currencyDropdownSelected.Code)));
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", data_r21.CurrencyName, " ");
} }
function PreviewTopMenuComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseover", function PreviewTopMenuComponent_div_2_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r24.onHover("currencySelector"); })("mouseenter", function PreviewTopMenuComponent_div_2_Template_div_mouseenter_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r25); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r26.onHover("currencySelector"); })("mouseout", function PreviewTopMenuComponent_div_2_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r25); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r27.onLeave("currencySelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "dx-button", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_2_Template_dx_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r25); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r28.toggleMenuItem("currencySelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, "Currency");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "dx-list", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](6, PreviewTopMenuComponent_div_2_div_6_Template, 3, 4, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("type", ctx_r1.getButtonStatus(ctx_r1.currencySelectorClicked))("width", ctx_r1.getWidth("currencySelectorBtn"))("height", 35)("text", ctx_r1.currencyDropdownSelected == null ? null : ctx_r1.currencyDropdownSelected.CurrencyCode);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@slideInOut", ctx_r1.currencySelectorVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dataSource", ctx_r1.currencyDropdown)("width", 255)("height", 250)("searchEnabled", true)("scrollByContent", true)("scrollByThumb", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dxTemplateOf", "item");
} }
function PreviewTopMenuComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseover", function PreviewTopMenuComponent_div_3_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r30); const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r29.onHover("currencyConversionSelector"); })("mouseout", function PreviewTopMenuComponent_div_3_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r30); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r31.onLeave("currencyConversionSelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "dx-button", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_3_Template_dx_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r30); const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r32.toggleMenuItem("currencyConversionSelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, "Currency Conversion");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "dx-radio-group", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("valueChange", function PreviewTopMenuComponent_div_3_Template_dx_radio_group_valueChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r30); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r33.currencyConversionTypeSelected = $event; })("onValueChanged", function PreviewTopMenuComponent_div_3_Template_dx_radio_group_onValueChanged_5_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r30); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r34.currencyConversionTypeOnChanged(ctx_r34.currencyConversionTypeSelected); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("type", ctx_r2.getButtonStatus(ctx_r2.currencyConversionSelectorClicked))("width", ctx_r2.getWidth("currencyConversionSelectorBtn"))("height", 35)("text", ctx_r2.currencyConversionTypeSelected);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@slideInOut", ctx_r2.currencyConversionSelectorVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("items", ctx_r2.currencyConversionType)("value", ctx_r2.currencyConversionTypeSelected);
} }
function PreviewTopMenuComponent_div_4_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_4_div_6_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r38); const data_r36 = restoredCtx.$implicit; const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2); return ctx_r37.massUnitSelectionChange(data_r36); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r36 = ctx.$implicit;
    const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpureFunction1"](2, _c0, data_r36.Name === (ctx_r35.unitOfMassDropdownSelected == null ? null : ctx_r35.unitOfMassDropdownSelected.Name)));
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](data_r36.Name);
} }
function PreviewTopMenuComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r40 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseover", function PreviewTopMenuComponent_div_4_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r40); const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r39.onHover("massUnitSelector"); })("mouseout", function PreviewTopMenuComponent_div_4_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r40); const ctx_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r41.onLeave("massUnitSelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "dx-button", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_4_Template_dx_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r40); const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r42.toggleMenuItem("massUnitSelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, "Units of Mass");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "dx-list", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](6, PreviewTopMenuComponent_div_4_div_6_Template, 3, 4, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("type", ctx_r3.getButtonStatus(ctx_r3.massUnitSelectorClicked))("width", ctx_r3.getWidth("massUnitSelectorBtn"))("height", 35)("text", ctx_r3.unitOfMassDropdownSelected == null ? null : ctx_r3.unitOfMassDropdownSelected.Name);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@slideInOut", ctx_r3.massUnitSelectorVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dataSource", ctx_r3.massUnitDropdown)("width", 180)("height", 250)("searchEnabled", false)("scrollByContent", true)("scrollByThumb", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dxTemplateOf", "item");
} }
function PreviewTopMenuComponent_div_9_i_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "i", 35);
} }
function PreviewTopMenuComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "dx-load-indicator", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, PreviewTopMenuComponent_div_9_i_2_Template, 1, 0, "i", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("visible", ctx_r4.dataLoadingIndicatorVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx_r4.dataLoadingIndicatorVisible);
} }
function PreviewTopMenuComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r47 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function PreviewTopMenuComponent_div_12_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r47); const data_r45 = restoredCtx.$implicit; const ctx_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return ctx_r46.exportToExcelSelectionOnChanged(data_r45); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r45 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ", data_r45.value, " ");
} }
function PreviewTopMenuComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1, "Export in progress");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
class PreviewTopMenuComponent {
    constructor(sharedService) {
        this.sharedService = sharedService;
        this.selectedCurrency = {
            Id: 0,
            IsActive: false,
            Name: '',
        };
        // @Input() pivotCalculatedFields: Observable<any>;
        this.currencySelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.currencyConversionSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.massUnitSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.openAddCalculatedFieldChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.calculatedFieldItemSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.onExportToExcel = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.onExportToCvs = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.onExportSnapshot = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.onChangeAutoSaveStatus = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this._destroyed$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__.Subject();
        this.othersSelectorVisible = false;
        this.timePeriodSelectorVisible = false;
        this.massUnitSelectorVisible = false;
        this.volumeUnitSelectorVisible = false;
        this.currencyConversionSelectorVisible = false;
        this.currencySelectorVisible = false;
        this.parametersSelectorVisible = false;
        this.othersSelectorClicked = false;
        this.timePeriodSelectorClicked = false;
        this.massUnitSelectorClicked = false;
        this.volumeUnitSelectorClicked = false;
        this.currencyConversionSelectorClicked = false;
        this.currencySelectorClicked = false;
        this.parametersSelectorClicked = false;
        this.exportToExcelSelectorVisible = false;
        this.exportToExcelSelectorClicked = false;
        this.currencyDropdownSelected = undefined;
        this.unitOfMassDropdownSelected = undefined;
        this.unitOfVolumeDropdownSelected = undefined;
        this.pivotWidth = 0;
        this.currencyDropdown = [];
        this.massUnitDropdown = [];
        this.volumeUnitDropdown = [];
        this.timePeriod = [];
        this.timePeriodFrom = 0;
        this.timePeriodTo = 0;
        this.currencyConversionType = ['Current', 'Constant'];
        this.currencyConversionTypeSelected = 'Constant';
        this.exportType = [
            { id: 1, value: 'Export All Data' },
            { id: 2, value: 'Export All Data to CSV' },
            { id: 3, value: 'Export Snapshot' },
        ];
        this.parametersList = [];
        this.allStateDataList = [];
        this.activeStateDataList = [];
        this.isUndone = false;
        this.count = 0;
        this.isButtonPressed = false;
        this.pivotGridOptionsValues = undefined;
        this.pivotGridstateValues = undefined;
        this.calculateFieldsItems = [];
        this.calculatedFieldCaption = '';
        this.calculatedFieldVisible = false;
        this.dataLoadingIndicatorVisible = false;
        this.calculatedItems = [
            { name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.CalculatedFieldType.percentOfTotal, value: 'percentOfTotal' },
            { name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.CalculatedFieldType.changePercent, value: 'changePercent' },
            { name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.CalculatedFieldType.cagr, value: 'cagr' },
        ];
        this.autoSaveStateStatus = false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.selectedCurrency = data;
            this.setTopMenuValues();
        }
    }
    set pivotGridOptions(value) {
        this.pivotGridOptionsValues = value;
        this.autoSaveStateStatus = this.getAutoSaveStateStatus(this.pivotGridOptionsValues, this.pivotGridstateValues);
    }
    ngOnInit() {
        // this.pivotCalculatedFields
        //   .pipe(takeUntil(this._destroyed$))
        //   .subscribe((item: any) => (this.calculatedFieldCaption = item));
        this.setTopMenuValues();
        this.getCurrencyList();
        this.getUnitOfMassList();
    }
    setTopMenuValues() {
        this.currencyDropdownSelected = this.selectedCurrency;
        // this.unitOfVolumeDropdownSelected = pivotGridState.settings.unitOfVolume;
        // this.unitOfMassDropdownSelected = pivotGridState.settings.unitOfMass;
        // this.currencyConversionTypeSelected =
        //   CurrencyConversionTypeEnum[
        //     pivotGridState.settings.currencyConversionType
        //   ];
    }
    // call for support data
    getCurrencyList() {
        this.sharedService.getSEDataEntryData('Currencies').subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.currencyDropdown = res.Data;
                this.currencyDropdown.map((item) => {
                    item.CurrencyName = `${item.Name} (${item.CurrencyCode})`;
                });
            }
        }, (error) => {
            throw new Error(error);
        });
    }
    getUnitOfMassList() {
        this.sharedService.getSEDataEntryData('VolumeUnits').subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.massUnitDropdown = res.Data;
            }
        }, (error) => {
            throw new Error(error);
        });
    }
    onHover(item) {
        switch (item) {
            case 'othersSelector':
                if (this.othersSelectorClicked) {
                    break;
                }
                this.othersSelectorVisible = !this.othersSelectorVisible;
                break;
            case 'timePeriodSelector':
                if (this.timePeriodSelectorClicked) {
                    break;
                }
                this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;
                break;
            case 'massUnitSelector':
                if (this.massUnitSelectorClicked) {
                    break;
                }
                this.massUnitSelectorVisible = !this.massUnitSelectorVisible;
                break;
            case 'volumeUnitSelector':
                if (this.volumeUnitSelectorClicked) {
                    break;
                }
                this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;
                break;
            case 'currencyConversionSelector':
                if (this.currencyConversionSelectorClicked) {
                    break;
                }
                this.currencyConversionSelectorVisible =
                    !this.currencyConversionSelectorVisible;
                break;
            case 'calculateFieldSelector':
                // this.openAddCalculatedField();
                if (this.calculatedFieldSelectorClicked) {
                    break;
                }
                this.calculatedFieldVisible = !this.calculatedFieldVisible;
                break;
            case 'currencySelector':
                if (this.currencySelectorClicked) {
                    break;
                }
                this.currencySelectorVisible = !this.currencySelectorVisible;
                break;
            case 'parametersSelector':
                if (this.parametersSelectorClicked) {
                    break;
                }
                this.parametersSelectorVisible = !this.parametersSelectorVisible;
                break;
            case 'exportToExcel':
                if (this.exportToExcelSelectorClicked) {
                    break;
                }
                this.exportToExcelSelectorVisible = true;
                break;
        }
    }
    onLeave(item) {
        switch (item) {
            case 'othersSelector':
                if (this.othersSelectorClicked) {
                    break;
                }
                this.othersSelectorVisible = false;
                break;
            case 'timePeriodSelector':
                if (this.timePeriodSelectorClicked) {
                    break;
                }
                this.timePeriodSelectorVisible = false;
                break;
            case 'massUnitSelector':
                if (this.massUnitSelectorClicked) {
                    break;
                }
                this.massUnitSelectorVisible = false;
                break;
            case 'volumeUnitSelector':
                if (this.volumeUnitSelectorClicked) {
                    break;
                }
                this.volumeUnitSelectorVisible = false;
                break;
            case 'currencyConversionSelector':
                if (this.currencyConversionSelectorClicked) {
                    break;
                }
                this.currencyConversionSelectorVisible = false;
                break;
            case 'calculateFieldSelector':
                if (this.calculatedFieldSelectorClicked) {
                    break;
                }
                this.calculatedFieldVisible = false;
                break;
            case 'currencySelector':
                if (this.currencySelectorClicked) {
                    break;
                }
                this.currencySelectorVisible = false;
                break;
            case 'parametersSelector':
                if (this.parametersSelectorClicked) {
                    break;
                }
                this.parametersSelectorVisible = false;
                break;
            case 'parametersSelector':
                if (this.parametersSelectorClicked) {
                    break;
                }
                this.parametersSelectorVisible = false;
                break;
            case 'exportToExcel':
                if (this.exportToExcelSelectorClicked) {
                    break;
                }
                this.exportToExcelSelectorVisible = false;
                break;
        }
    }
    // openAddCalculatedField() {
    //   this.openAddCalculatedFieldChanged.emit();
    //   if (this.calculatedFieldCaption) {
    //     for (let item of this.calculatedFieldCaption) {
    //       let text = '';
    //       const isCurrencyText = item.caption.includes('<XTS>');
    //       const isMassText = item.caption.includes('<UNIT>');
    //       const isVolumeText = item.caption.includes('<UNIT-VOLUME>');
    //       if (isCurrencyText) {
    //         text = item.caption.replace(
    //           '<XTS>',
    //           this.currencyDropdownSelected.Code
    //         );
    //       } else if (isVolumeText) {
    //         text = item.caption.replace(
    //           '<UNIT-VOLUME>',
    //           this.unitOfVolumeDropdownSelected.Name
    //         );
    //       } else if (isMassText) {
    //         text = item.caption.replace(
    //           '<UNIT>',
    //           this.unitOfMassDropdownSelected.Name
    //         );
    //       } else {
    //         text = item.caption;
    //       }
    //       const isExist = this.calculateFieldsItems.find(
    //         (fieldItem) => fieldItem.name === text
    //       );
    //       if (!isExist) {
    //         let calculatedItems: any[] = [];
    //         if (
    //           this.pivotGridOptionsValues.settings.calculatedFields
    //             .isPercentOfTotal
    //         ) {
    //           calculatedItems.push({
    //             name: CalculatedFieldType.percentOfTotal,
    //             value: 'percentOfTotal',
    //           });
    //         }
    //         if (
    //           this.pivotGridOptionsValues.settings.calculatedFields
    //             .isPercentOfChange
    //         ) {
    //           calculatedItems.push({
    //             name: CalculatedFieldType.changePercent,
    //             value: 'changePercent',
    //           });
    //         }
    //         if (this.pivotGridOptionsValues.settings.calculatedFields.isCagr) {
    //           calculatedItems.push({
    //             name: CalculatedFieldType.cagr,
    //             value: 'cagr',
    //           });
    //         }
    //         this.calculateFieldsItems.push({
    //           name: text,
    //           value: item.dataField,
    //           items: calculatedItems,
    //         });
    //       } else {
    //         for (let i of this.calculateFieldsItems) {
    //           const exist = this.calculateFieldsItems.filter(
    //             (x) => x.value === i.value
    //           );
    //           if (exist.length > 1) {
    //             const index = this.calculateFieldsItems.indexOf(exist[0]);
    //             this.calculateFieldsItems.splice(index, 1);
    //             this.calculateFieldsItems.shift();
    //           }
    //         }
    //       }
    //     }
    //   }
    // }
    calculatedFieldOnHover(id) {
        for (let i = 0; i <= this.calculateFieldsItems.length;) {
            let elem = 'calculated-' + i;
            if (elem === id) {
                $('#' + id).addClass('show');
            }
            else {
                $('#' + elem).removeClass('show');
            }
            i++;
        }
    }
    calculatedFieldOnLeave(id) {
        $('#' + id).removeClass('show');
    }
    onCalcItemSelected(itemName, dataField) {
        this.calculatedFieldItemSelected.emit({ itemName, dataField });
    }
    getButtonStatus(status) {
        return status ? 'success' : 'normal';
    }
    getWidth(elementName) {
        if (this.pivotWidth > 0 && this.pivotWidth < 700) {
            return this.pivotWidth;
        }
        switch (elementName) {
            case 'othersSelectorBtn':
                return 45;
            case 'chartBtn':
                return 45;
            case 'expandCollapseBtn':
                return 45;
            case 'currencySelectorBtn':
                return 100;
            case 'currencyConversionSelectorBtn':
                return 130;
            case 'massUnitSelectorBtn':
                return 175;
            case 'volumeUnitSelectorBtn':
                return 175;
            case 'timePeriodSelectorBtn':
                return 180;
            case 'parameters':
                return 190;
            default:
                return 100;
        }
    }
    toggleMenuItem(item, isClick) {
        switch (item) {
            case 'othersSelector':
                if (isClick) {
                    this.othersSelectorClicked = !this.othersSelectorClicked;
                    // this.getStateSaveByMe(this.viewId, this.userId);
                    // this.getStateSharedWithMe(this.viewId, this.userId);
                }
                if (this.othersSelectorClicked) {
                    this.othersSelectorVisible = true;
                    break;
                }
                this.othersSelectorVisible = !this.othersSelectorVisible;
                break;
            case 'timePeriodSelector':
                if (isClick) {
                    this.timePeriodSelectorClicked = !this.timePeriodSelectorClicked;
                }
                if (this.timePeriodSelectorClicked) {
                    this.timePeriodSelectorVisible = true;
                    break;
                }
                this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;
                break;
            case 'volumeUnitSelector':
                if (isClick) {
                    this.volumeUnitSelectorClicked = !this.volumeUnitSelectorClicked;
                }
                if (this.volumeUnitSelectorClicked) {
                    this.volumeUnitSelectorVisible = true;
                    break;
                }
                this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;
                break;
            case 'massUnitSelector':
                if (isClick) {
                    this.massUnitSelectorClicked = !this.massUnitSelectorClicked;
                }
                if (this.massUnitSelectorClicked) {
                    this.massUnitSelectorVisible = true;
                    break;
                }
                this.massUnitSelectorVisible = !this.massUnitSelectorVisible;
                break;
            case 'currencyConversionSelector':
                if (isClick) {
                    this.currencyConversionSelectorClicked =
                        !this.currencyConversionSelectorClicked;
                }
                if (this.currencyConversionSelectorClicked) {
                    this.currencyConversionSelectorVisible = true;
                    break;
                }
                this.currencyConversionSelectorVisible =
                    !this.currencyConversionSelectorVisible;
                break;
            case 'calculateFieldSelector':
                // this.openAddCalculatedField();
                if (isClick) {
                    this.calculatedFieldSelectorClicked =
                        !this.calculatedFieldSelectorClicked;
                }
                if (this.calculatedFieldSelectorClicked) {
                    // this.intervalCalculatedField = setInterval(
                    //   () => this.openAddCalculatedField(),
                    //   50
                    // );
                    this.calculatedFieldVisible = true;
                    break;
                }
                this.calculatedFieldVisible = !this.calculatedFieldVisible;
                clearInterval(this.intervalCalculatedField);
                break;
            case 'currencySelector':
                if (isClick) {
                    this.currencySelectorClicked = !this.currencySelectorClicked;
                }
                if (this.currencySelectorClicked) {
                    this.currencySelectorVisible = true;
                    break;
                }
                this.currencySelectorVisible = !this.currencySelectorVisible;
                break;
            case 'parametersSelector':
                if (isClick) {
                    this.parametersSelectorClicked = !this.parametersSelectorClicked;
                }
                if (this.parametersSelectorClicked) {
                    this.parametersSelectorVisible = true;
                    break;
                }
                this.parametersSelectorVisible = !this.parametersSelectorVisible;
                break;
        }
        // focus on first opened texteditor
        $('.dx-texteditor-input').first().focus();
    }
    currencySelectionOnChanged(data) {
        if (this.currencyDropdownSelected != data) {
            this.currencyDropdownSelected = data;
            this.currencySelectionChanged.emit(data);
        }
    }
    currencyConversionTypeOnChanged(data) {
        this.currencyConversionSelectionChanged.emit(parseInt(src_model_enums_currencyConversionType_enum__WEBPACK_IMPORTED_MODULE_1__.CurrencyConversionTypeEnum[data]));
    }
    massUnitSelectionChange(data) {
        if (this.unitOfMassDropdownSelected != data) {
            this.unitOfMassDropdownSelected = data;
            this.massUnitSelectionChanged.emit(data);
        }
    }
    exportToExcelSelectionOnChanged(data) {
        this.exportTypeDropdownSelected = data;
        switch (data.id) {
            case 1:
                this.exportToExcelSelectorVisible = false;
                this.exportToExcel();
                break;
            case 2:
                this.exportToExcelSelectorVisible = false;
                this.onExportToCvs.emit(true);
                break;
            case 3:
                this.exportToExcelSelectorVisible = false;
                this.onExportSnapshot.emit(true);
                break;
            default:
                break;
        }
    }
    exportToExcel() {
        this.onExportToExcel.emit(true);
    }
    getAutoSaveStateStatus(pivotGridOptions, userStateAndSetttings) {
        if (pivotGridOptions && userStateAndSetttings) {
            if (userStateAndSetttings.settings.rememberLatestState == undefined) {
                return pivotGridOptions.canSaveUserState;
            }
            else {
                return userStateAndSetttings.settings.rememberLatestState;
            }
        }
    }
    changeAutoSaveStatus(currentStatus) {
        this.autoSaveStateStatus = !currentStatus;
        this.onChangeAutoSaveStatus.emit(this.autoSaveStateStatus);
    }
}
PreviewTopMenuComponent.ɵfac = function PreviewTopMenuComponent_Factory(t) { return new (t || PreviewTopMenuComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__.SharedService)); };
PreviewTopMenuComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: PreviewTopMenuComponent, selectors: [["app-preview-top-menu"]], inputs: { setSelectedCurrency: "setSelectedCurrency", pivotGridOptions: "pivotGridOptions" }, outputs: { currencySelectionChanged: "currencySelectionChanged", currencyConversionSelectionChanged: "currencyConversionSelectionChanged", massUnitSelectionChanged: "massUnitSelectionChanged", openAddCalculatedFieldChanged: "openAddCalculatedFieldChanged", calculatedFieldItemSelected: "calculatedFieldItemSelected", onExportToExcel: "onExportToExcel", onExportToCvs: "onExportToCvs", onExportSnapshot: "onExportSnapshot", onChangeAutoSaveStatus: "onChangeAutoSaveStatus" }, decls: 15, vars: 22, consts: [[1, "buttons", "topmenu-buttons"], ["class", "menu-dropdown", 3, "mouseover", "mouseenter", "mouseout", 4, "ngIf"], ["class", "menu-dropdown", 3, "mouseover", "mouseout", 4, "ngIf"], [1, "menu-dropdown", "auto-save-state"], ["id", "autoSaveState", "type", "success", "icon", "far fa-save", 3, "width", "height", "type", "hint", "onClick"], [1, "menu-dropdown", "export-to-exel", 3, "mouseover", "mouseenter", "mouseout"], ["id", "exportBtn", "stylingMode", "outlined", "icon", "fas fa-download", "type", "normal", "hint", "Export to Excel", 3, "width", "height", "disabled"], [4, "dxTemplate", "dxTemplateOf"], ["id", "exportTypeSelector", 1, "menu-dropdown-content"], [3, "dataSource", "width", "height", "scrollByContent", "scrollByThumb"], ["target", "#exportBtn", 3, "visible", "closeOnOutsideClick"], [1, "menu-dropdown", 3, "mouseover", "mouseenter", "mouseout"], ["stylingMode", "outlined", "icon", "fas fa-calculator", 3, "type", "width", "height", "onClick"], ["id", "currencySelector", 1, "menu-dropdown-content"], [1, "calculated-title"], [1, "btn-group", "dropright", 2, "width", "100%"], ["type", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "btn", "btn-secondary", "dropdown-toggle", "text-left", 3, "mouseenter", "mouseout"], [1, "dropdown-menu", 3, "id", "mouseenter", "mouseover"], [4, "ngFor", "ngForOf"], ["type", "button", 1, "btn", "btn-light", "btn-calc-item", 3, "click"], ["stylingMode", "outlined", "icon", "fa fa-money", 3, "type", "width", "height", "text", "click"], [1, "list-header"], ["searchExpr", "CurrencyName", "searchMode", "contains", 3, "dataSource", "width", "height", "searchEnabled", "scrollByContent", "scrollByThumb"], [3, "ngClass", 4, "dxTemplate", "dxTemplateOf"], [3, "ngClass"], [3, "click"], [1, "menu-dropdown", 3, "mouseover", "mouseout"], ["stylingMode", "outlined", "icon", "fa fa-exchange-alt", 3, "type", "width", "height", "text", "click"], ["id", "currencyConversionSelector", 1, "menu-dropdown-content"], ["type", "normal", "layout", "horizontal", 1, "outline", 3, "items", "value", "valueChange", "onValueChanged"], ["stylingMode", "outlined", "icon", "fa fa-balance-scale", 3, "type", "width", "height", "text", "click"], ["id", "massUnitSelector", 1, "menu-dropdown-content"], ["searchExpr", "Name", 3, "dataSource", "width", "height", "searchEnabled", "scrollByContent", "scrollByThumb"], [1, "button-indicator", 3, "visible"], ["class", "fas fa-download", 4, "ngIf"], [1, "fas", "fa-download"]], template: function PreviewTopMenuComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, PreviewTopMenuComponent_div_1_Template, 10, 6, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, PreviewTopMenuComponent_div_2_Template, 7, 12, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](3, PreviewTopMenuComponent_div_3_Template, 6, 7, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](4, PreviewTopMenuComponent_div_4_Template, 7, 12, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "dx-button", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClick", function PreviewTopMenuComponent_Template_dx_button_onClick_6_listener() { return ctx.changeAutoSaveStatus(ctx.autoSaveStateStatus); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("mouseover", function PreviewTopMenuComponent_Template_div_mouseover_7_listener() { return ctx.onHover("exportToExcel"); })("mouseenter", function PreviewTopMenuComponent_Template_div_mouseenter_7_listener() { return ctx.onHover("exportToExcel"); })("mouseout", function PreviewTopMenuComponent_Template_div_mouseout_7_listener() { return ctx.onLeave("exportToExcel"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "dx-button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](9, PreviewTopMenuComponent_div_9_Template, 3, 2, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](10, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](11, "dx-list", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](12, PreviewTopMenuComponent_div_12_Template, 3, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](13, "dx-tooltip", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](14, PreviewTopMenuComponent_div_14_Template, 2, 0, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isCalculatedFieldsSelection);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isCurrencySelection);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isCurrencyConversion);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isUnitsOfMass);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("width", 35)("height", 35)("type", ctx.autoSaveStateStatus == true ? "success" : "normal")("hint", ctx.autoSaveStateStatus == true ? "State is saved automatically" : "System keeps latest used state and settings");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("width", 50)("height", 35)("disabled", ctx.dataLoadingIndicatorVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@slideInOut", ctx.exportToExcelSelectorVisible && !ctx.dataLoadingIndicatorVisible ? "in" : "out");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dataSource", ctx.exportType)("width", 155)("height", 120)("scrollByContent", true)("scrollByThumb", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dxTemplateOf", "item");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("visible", ctx.dataLoadingIndicatorVisible)("closeOnOutsideClick", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("dxTemplateOf", "content");
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_6__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_8__.DxListComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_9__.DxTemplateDirective, _angular_common__WEBPACK_IMPORTED_MODULE_6__.NgClass, devextreme_angular__WEBPACK_IMPORTED_MODULE_10__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_11__.DxLoadIndicatorComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_12__.DxTooltipComponent], styles: [".buttons[_ngcontent-%COMP%] {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.timePeriodfromToText[_ngcontent-%COMP%] {\r\n    font-size: 12px;\r\n    font-weight: lighter;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    position: absolute;\r\n    background-color: #f1f1f1;\r\n    min-width: 160px;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    z-index: 1499;\r\n    padding: 7px 7px 7px 7px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    background-color: #f1f1f1;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    border-top: 1px solid #ddd;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover {\r\n    background-color: #e8e8e8;\r\n}\r\n\r\n.dropright[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    margin-left: 0px !important;\r\n}\r\n\r\n#othersSelector[_ngcontent-%COMP%] {\r\n    width: 350px;\r\n}\r\n\r\n.menu-dropdown[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.dx-button-mode-outlined.dx-button-success[_ngcontent-%COMP%] {\r\n    background-color: #0d3b5a;\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #6c757d;\r\n}\r\n\r\n.list-header[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\ndiv.selected-item[_ngcontent-%COMP%] {\r\n    background-color: rgba(99, 97, 97, 0.3);\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #ffff !important;\r\n    \r\n}\r\n\r\ndiv.calculated-title[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: black;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.show[_ngcontent-%COMP%] > .btn-secondary.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.btn-calc-item[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n    font-size: 14px !important;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n\r\n.dropdown[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    display: inline-block;\r\n    line-height: 39px;\r\n    padding-left: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.badge-left[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: green;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: -1px;\r\n}\r\n\r\n.badge-right[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: blue;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: auto;\r\n    right: -1px;\r\n}\r\n\r\n  #exportBtn,   #exportBtn .dx-button-content {\r\n    padding: 0;\r\n}\r\n\r\n  #exportBtn .button-indicator {\r\n    height: 32px;\r\n    width: 32px;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-right: 5px;\r\n}\r\n\r\n#exportBtn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    background-position: 0 0;\r\n    background-size: 18px 18px;\r\n    padding: 0;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n    margin-top: 8px;\r\n}\r\n\r\n.export-to-exel[_ngcontent-%COMP%] {\r\n    right: 25px;\r\n    position: absolute;\r\n}\r\n\r\n.auto-save-state[_ngcontent-%COMP%] {\r\n    right: 80px;\r\n    position: absolute;\r\n}\r\n\r\n#exportTypeSelector.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    right: 2%;\r\n}\n/*# sourceMappingURL=data:application/json;base64, */"], data: { animation: [_animations__WEBPACK_IMPORTED_MODULE_2__.SlideInOutAnimation] } });


/***/ }),

/***/ 17640:
/*!******************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/shc/sub/shc-preview/shc-preview.component.ts ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShcPreviewComponent": () => (/* binding */ ShcPreviewComponent)
/* harmony export */ });
/* harmony import */ var D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exceljs */ 34498);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataFieldArea.enum */ 29368);
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/model/userStateAndSetttings.model */ 69893);
/* harmony import */ var src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/model/enums/specialValueType.enum */ 59591);
/* harmony import */ var devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme/excel_exporter */ 47081);
/* harmony import */ var src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/guard/commonHelper */ 83518);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/model/enums/computingType.enum */ 11892);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./preview-top-menu/preview-top-menu.component */ 57952);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular/core */ 85915);






























function ShcPreviewComponent_div_5_div_2_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtext"](2, "In Direction");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](4, "dx-select-box", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("valueChange", function ShcPreviewComponent_div_5_div_2_div_10_Template_dx_select_box_valueChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](3);
      return ctx_r7.percentInDirection = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("items", ctx_r6.summaryDisplayModeItems)("value", ctx_r6.percentInDirection);
  }
}

const _c0 = function () {
  return ["Subtotals", "Grand Totals"];
};

function ShcPreviewComponent_div_5_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtext"](4, "Compute '% Of Total':");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtext"](7, "Based on");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](8, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](9, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("valueChange", function ShcPreviewComponent_div_5_div_2_Template_dx_radio_group_valueChange_9_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r9.percentOfTotalBasedOn = $event;
    })("onValueChanged", function ShcPreviewComponent_div_5_div_2_Template_dx_radio_group_onValueChanged_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r10);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r11.onBasedOnChange(false);
    })("onInitialized", function ShcPreviewComponent_div_5_div_2_Template_dx_radio_group_onInitialized_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r10);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r12.onBasedOnChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](10, ShcPreviewComponent_div_5_div_2_div_10_Template, 5, 2, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](11, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](12, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](13, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](14, "dx-button", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("onClick", function ShcPreviewComponent_div_5_div_2_Template_dx_button_onClick_14_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r10);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r13.addPercentOfTotalsToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵpureFunction0"](5, _c0))("value", ctx_r4.percentOfTotalBasedOn);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("ngIf", ctx_r4.summaryDisplayModeItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("width", 120)("disabled", false);
  }
}

function ShcPreviewComponent_div_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("visibleChange", function ShcPreviewComponent_div_5_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"]();
      return ctx_r14.isPercentOfTotalPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](2, ShcPreviewComponent_div_5_div_2_Template, 15, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("width", 400)("height", 250)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r1.isPercentOfTotalPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c1 = function (a0, a1) {
  return [a0, a1];
};

function ShcPreviewComponent_div_6_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtext"](4, "Compute change, %:");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("valueChange", function ShcPreviewComponent_div_6_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r19);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r18.percentOfChangeComputeType = $event;
    })("onValueChanged", function ShcPreviewComponent_div_6_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r19);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r20.onComputeTypeChange(false);
    })("onInitialized", function ShcPreviewComponent_div_6_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r19);
      const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r21.onComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("onClick", function ShcPreviewComponent_div_6_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r19);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r22.addPrecentOfChangeToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵpureFunction2"](3, _c1, ctx_r16.computingType.FirstYear, ctx_r16.computingType.PreviousYear))("value", ctx_r16.percentOfChangeComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("width", 120);
  }
}

function ShcPreviewComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r24 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("visibleChange", function ShcPreviewComponent_div_6_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r24);
      const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"]();
      return ctx_r23.isPercentOfChangePopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](2, ShcPreviewComponent_div_6_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r2.isPercentOfChangePopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

function ShcPreviewComponent_div_7_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](2, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtext"](4, "Compute CAGR:");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](5, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](7, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](8, "dx-radio-group", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("valueChange", function ShcPreviewComponent_div_7_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r28);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r27.cagrComputeType = $event;
    })("onValueChanged", function ShcPreviewComponent_div_7_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r28);
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r29.onCagrComputeTypeChange(false);
    })("onInitialized", function ShcPreviewComponent_div_7_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r28);
      const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r30.onCagrComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](9, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](10, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](11, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](12, "dx-button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("onClick", function ShcPreviewComponent_div_7_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r28);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
      return ctx_r31.addCAGRToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵpureFunction2"](3, _c1, ctx_r25.computingType.FirstYear, ctx_r25.computingType.PreviousYear))("value", ctx_r25.cagrComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("width", 120);
  }
}

function ShcPreviewComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r33 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "dx-popup", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("visibleChange", function ShcPreviewComponent_div_7_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵrestoreView"](_r33);
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"]();
      return ctx_r32.isCagrPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](2, ShcPreviewComponent_div_7_div_2_Template, 13, 6, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r3.isCagrPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c2 = function () {
  return {
    showColumnFields: true,
    showDataFields: true,
    showFilterFields: true,
    showRowFields: true,
    allowFieldDragging: true,
    visible: true
  };
};

const _c3 = function () {
  return {
    enabled: true
  };
};

class ShcPreviewComponent {
  constructor(route, isLoadingService, studyService, alertService, sharedService) {
    this.route = route;
    this.isLoadingService = isLoadingService;
    this.studyService = studyService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.currentYear = 0;
    this.previewData = [];
    this.saveStateEnabled = false;
    this.gridFields = [];
    this.previewGridKey = '';
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.studyAreaId = 0;
    this.selectedCurrency = {
      Id: 0,
      IsActive: false,
      Name: ''
    };
    this.studyType = '';
    this.isLubesnetStudy = false;
    this.volumeYears = [];
    this.viewId = 0;
    this.currencyConversionTypeSelected = 1;
    this.computingType = src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType;
    this.eventsCustomAction = new rxjs__WEBPACK_IMPORTED_MODULE_20__.Subject();
    this.pivotGridNoDataMessage = '';
    this.isPercentOfTotalPopup = false;
    this.isPercentOfChangePopup = false;
    this.isCagrPopup = false;
    this.firstAvailableId = 0;
    this.yearDataFieldName = '';
    this.isHeaderFilterLoading = false;
    this.canCallSaveState = false;
    this.adminSetNewState = false;
    this.pivotSummaryDisplayModesSubtotals = [{
      id: undefined,
      name: 'Same as the Data Fields'
    }, {
      id: 'percentOfColumnTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowTotal',
      name: 'Always Rows'
    }];
    this.pivotSummaryDisplayModesGrandTotals = [{
      id: 'percentOfColumnGrandTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowGrandTotal',
      name: 'Always Rows'
    }, {
      id: 'percentOfGrandTotal',
      name: 'Table (Absolute) Grand Total'
    }];
    this.shownYears = undefined;
    this.invisibleFields = [];
    this.saveStateToDbTimeout = setTimeout(() => {}, 0);
    this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_20__.Subject();
    this.shownYearsPrev = undefined;
    this.isAdmin = false;
    this.pivotStateId = 0;
    this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_15__.StudyDataUrlEnum;
    this.percentOfTotalBasedOn = 'Subtotals';
    this.percentInDirection = '';
    this.percentOfChangeComputeType = '';
    this.cagrComputeType = '';
    this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.customSaveState = this.customSaveState.bind(this);
    this.customLoadState = this.customLoadState.bind(this);
    this.pivotGridOptions = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridOptions();
  }

  set setPreviewData(data) {
    if (data) {
      this.previewData = data;
    }
  }

  set setGridFields(data) {
    if (data) {
      this.gridFields = data;
    }
  }

  set setPreviewGridKey(data) {
    if (data) {
      this.previewGridKey = data;
    }
  }

  set setSelectedCurrency(data) {
    if (data) {
      this.selectedCurrency = {
        Id: data.CurrencyId,
        IsActive: true,
        Name: data.CurrencyName,
        CurrencyCode: data.CurrencyCode,
        CurrencyName: data.CurrencyName
      };
      this.currencyDropdownSelected = this.selectedCurrency;
    }
  }

  set setStudyType(data) {
    if (data) {
      this.studyType = data;
    }
  }

  set setIsLubesnetStudy(data) {
    if (data) {
      this.isLubesnetStudy = data;
    }
  }

  set setVolumeYears(data) {
    if (data) {
      this.volumeYears = data;
    }
  }

  set setViewId(data) {
    if (data) {
      this.viewId = data;
      this.getPivotSettings();
      this.getPivotState();
    }
  }

  ngOnInit() {
    // this.pivotGridDataSource = new PivotGridDataSource({
    //   store: this.previewData,
    //   fields: this.gridFields,
    // });
    if (typeof this.pivotGridOptions !== 'undefined') {
      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
      this.pivotGridOptions.pivotGridSource.store = this.previewData;
      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
    }
  }

  getPivotSettings() {
    this.sharedService.getPivotSettings(this.viewId).subscribe(res => {
      this.pivotGridOptions = res.Data;

      if (this.pivotGridOptions) {
        this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
        this.pivotGridOptions.settings.specialSorting = [];
        this.pivotGridOptions.viewId = this.viewId;
      }
    });
  }

  getPivotState() {
    if (!this.stateData) {
      let stateData = undefined;
      this.sharedService.getPivotState(this.viewId).subscribe(res => {
        // in case state is not exists yet
        try {
          const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
          stateData = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.realMerge(new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(), JSON.parse(stateRes.StateData));
          this.pivotStateId = stateRes.PivotStateId;
        } catch (_a) {
          stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(); // stateData.state.fields = this.getGridFields();
        }

        this.directDatasourceRenderPivot(stateData);
      });
    } else {
      this.directDatasourceRenderPivot(this.stateData);
    }
  }

  directDatasourceRenderPivot(stateData) {
    var _this = this;

    return (0,D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (_this.pivotGridOptions.settings.isCube) {// let token = await this.getAzureAnalysisToken();
        // let cubesStore = CubeStoreHelper.setCubeStore(
        //   this.pivotGridOptions.settings.cubeSettings.catalog,
        //   this.pivotGridOptions.settings.cubeSettings.cube,
        //   token,
        //   this.devEndpoint
        // );
        // this.pivotGridOptions.pivotGridSource.store = cubesStore;
        // this.pivotGridDataSource = new PivotGridDataSource(
        //   this.pivotGridOptions.pivotGridSource as any
        // );
        // setTimeout(() => {
        //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);
        // }, 5000);
        // this.saveStateEnabled = true;
        // if (stateData.settings) {
        //   if (!stateData.settings.currency) {
        //     stateData.settings.currency =
        //       this.pivotGridOptions.pivotGridDefaultValues.currency;
        //   }
        //   if (!stateData.settings.currencyConversionType) {
        //     stateData.settings.currencyConversionType =
        //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
        //   }
        //   if (!stateData.settings.selectedYear) {
        //     stateData.settings.selectedYear.PeriodKey = 2021;
        //   }
        // }
        // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.stateData = stateData;
        // this.fillPivotCube();
        // setTimeout(() => {
        //   this.canCallSaveState = true;
        // }, 300);
      } else {
        if (stateData.settings) {
          if (!stateData.settings.currency) {
            stateData.settings.currency = _this.pivotGridOptions.pivotGridDefaultValues.currency;
          }

          if (!stateData.settings.currencyConversionType) {
            stateData.settings.currencyConversionType = _this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
          }

          if (!((_a = stateData.settings.selectedYear) === null || _a === void 0 ? void 0 : _a.PeriodKey)) {
            // stateData.settings.selectedYear = await this.getLatestAccessibleYear(
            //   this.sharedService.getUserData().userId,
            //   this.requestedView.databaseId,
            //   this.requestedView.viewId
            // );
            stateData.settings.selectedYear = _this.currentYear;
          } // if (!stateData.settings.unitOfVolume) {
          //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(
          //     this.requestedView.databaseId
          //   );
          // }


          if (!stateData.settings.unitOfMass) {
            // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(
            //   this.requestedView.databaseId
            // );
            stateData.settings.unitOfMass = {
              Id: 105,
              Name: 'Thousand Tonnes'
            };
          }
        } // this.listOfAccessileYears = await this.getListAccessibleYears(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );
        // this.latestAccessibleYear = await this.getLatestAccessibleYear(
        //   this.sharedService.getUserData().userId,
        //   this.requestedView.databaseId,
        //   this.requestedView.viewId
        // );


        _this.stateData = stateData;

        if (_this.previewData && _this.previewData.length) {
          //get all invisible fields
          _this.invisibleFields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => f.visible === false); //filter invisible fields

          _this.pivotGridOptions.pivotGridSource.fields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => !f.visible || !f.isCalculated); //get count of visible fields for calculated fields ids

          _this.firstAvailableId = _this.pivotGridOptions.pivotGridSource.fields.length; // remove all invisible data from the datasource

          if (_this.invisibleFields && _this.invisibleFields.length > 0) {
            for (const invisibleField of _this.invisibleFields) {
              _this.previewData.forEach(obj => {
                delete obj[invisibleField.dataField];
              });
            }
          }

          _this.fillPivot(_this.pivotGridOptions, _this.previewData);
        } else {
          _this.readPivotDataFromApi();
        }
      }
    })();
  }

  customSaveState(data, isChangeAutoSaveStatus) {
    var _a; // do not save state to db in case, states are emited too intensively


    clearTimeout(this.saveStateToDbTimeout);
    this.canCallSaveState = true; // const userData = this.sharedService.getUserData();
    // this.initChart();
    // allow to save state only in case all requested data is available

    if (this.viewId && this.canCallSaveState && this.pivotGridOptions && this.stateData) {
      this.stateData.state = data;
      this.stateChange.next(this.stateData); // find all shown years and reload pivot grid on change

      const yearField = this.stateData.state.fields.filter(f => f.dataField === this.yearDataFieldName);
      const hasCagrOrChange = this.stateData.settings.cagrState.isSet || this.stateData.settings.changePercentState.isSet;

      if (yearField && hasCagrOrChange) {
        const pivotGridInstance = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance;
        const pivotFridDataSource = pivotGridInstance.getDataSource();
        const areaIndex = yearField[0].areaIndex;
        const uniqArrByText = lodash__WEBPACK_IMPORTED_MODULE_3__.uniqBy(pivotGridInstance._dataController._columnsInfo[areaIndex], 'text');
        this.shownYears = uniqArrByText.map(t => parseInt(t.text)); // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists

        if (yearField[0].sortOrder === 'desc') {
          pivotFridDataSource.field(this.yearDataFieldName, {
            sortOrder: 'asc'
          });
          pivotFridDataSource.load();
        }

        if (!lodash__WEBPACK_IMPORTED_MODULE_3__.isEqual(this.shownYears, this.shownYearsPrev)) {
          this.shownYearsPrev = this.shownYears;
          pivotFridDataSource.load();
        }
      } // in case user is NOT admin and has disable automatic saving state or remember latest state
      else if (!isChangeAutoSaveStatus) {
        if (this.stateData.settings.rememberLatestState == undefined) {
          this.stateData.settings.rememberLatestState = this.pivotGridOptions.canSaveUserState;
        }

        if (this.stateData.settings.rememberLatestState == false) {
          return;
        }
      }

      this.saveStateToDbTimeout = setTimeout(() => {
        this.sharedService.setPivotState(this.viewId, 0, this.isAdmin, JSON.stringify(this.stateData)).subscribe(data => {
          if (data && this.pivotGridOptions.canSaveDefaultStateAndOptions && this.isAdmin) {
            this.alertService.info('The system will remember the last state!'); // after save state, save also settings

            this.saveSettings(this.viewId, this.pivotGridOptions); // set can save default state to false

            this.pivotGridOptions.canSaveDefaultStateAndOptions = false;
          }
        }, error => {
          throw new Error(error);
        });
      }, 2000);
    }
  }

  customLoadState() {
    if (this.stateData) {
      return this.stateData.state;
    }
  }

  deleteCustomState() {
    this.adminSetNewState = false;

    if (this.viewId && this.pivotStateId) {
      this.sharedService.deletePivotState(this.viewId, this.pivotStateId).subscribe(data => data, error => {
        throw new Error(error);
      }, () => {
        // finally read all data again
        // this.readPivotOptionsAndData();
        // this.readPivotDataFromApi();
        const stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings();
        this.directDatasourceRenderPivot(stateData);
      });
    }
  }

  saveSettings(currentlySelectedViewId, optionsDataSource) {
    let saveResult = false;
    const optionsDataSourceTemp = Object.assign({}, optionsDataSource);
    optionsDataSourceTemp.pivotGridSource.fields = optionsDataSourceTemp.pivotGridSource.fields.filter(f => !f.isCalculated); // set store to empty, system will read fresh data from backend next time

    optionsDataSourceTemp.pivotGridSource.store = [];
  }

  readPivotDataFromApi() {
    this.isLoadingService.add();
    this.yearDataFieldName = 'Year';
    this.studyService.getPreviewStudyData(this.studyType, this.marketYearCategoryId, this.studyProjectMarketYearId, typeof this.currencyDropdownSelected !== 'undefined' ? this.currencyDropdownSelected.Id : 0, typeof this.unitOfMassDropdownSelected !== 'undefined' ? this.unitOfMassDropdownSelected.Id : 0, typeof this.currencyConversionTypeSelected !== 'undefined' ? this.currencyConversionTypeSelected : 0).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const studyDataObj = res.Data;
        const studyData = studyDataObj[`${this.getDataFieldName(this.studyType)}`];
        const previewData = [];
        let index = 0;
        studyData.map((item, i) => {
          this.volumeYears.map(d => {
            this.gridFields.map(field => {
              if (typeof previewData[index] === 'undefined') {
                previewData[index] = {};
              }

              previewData[index][field.dataField] = item[field.dataField];

              if (field.dataField === 'Year') {
                previewData[index][field.dataField] = d.year;
              }

              if (field.dataField === 'Sales' || field.dataField === 'Value') {
                previewData[index][field.dataField] = item[d.field];
              }
            });
            index++;
          });
        });
        this.previewData = previewData; // this.pivotGridDataSource = new PivotGridDataSource({
        //   store: this.previewData,
        //   fields: this.gridFields,
        // });

        if (typeof this.pivotGridOptions !== 'undefined') {
          this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
          this.pivotGridOptions.pivotGridSource.store = this.previewData;
          this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource);
        }

        this.fillPivot(this.pivotGridOptions, this.previewData); // when pivot data is loaded allow with small delay save state to the database

        setTimeout(() => {
          this.canCallSaveState = true;
        }, 300); // console.log(this.previewData);

        this.isLoadingService.remove();
      } else {
        this.alertService.danger(res.Data);
      }
    }, err => {
      const errorShow = typeof err.error !== 'undefined' ? err.error : 'Something went wrong. Please try again later.';
      this.alertService.danger(errorShow);
      this.isLoadingService.remove();
    });
  }

  getDataFieldName(fieldName) {
    if (fieldName == this.studyDataUrlEnum.SHC_PT_SALES) {
      return 'ProductTypeSalesSHC';
    } else if (fieldName == this.studyDataUrlEnum.SHC_FC_SALES) {
      return 'ForecastSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_PC_SALES) {
      return 'ProductClassificationSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_CB_SALES) {
      return 'CompanyBrandSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_OS_SALES) {
      return 'OutletSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_IR_SALES) {
      return 'IndustryRevenues';
    } else if (fieldName == this.studyDataUrlEnum.SHC_SC_SALES) {
      return 'SalonCount';
    } else {
      return 'dataItems';
    }

    return fieldName;
  }

  onOptionChanged(e) {}

  onInitialized(e) {}

  cellPrepared(e) {
    var _a, _b, _c, _d; // customize change % columns captions
    // console.log(this.stateData?.settings.changePercentState.computingType);


    const shownYearsInPivot = this.shownYears;

    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {
      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex].toString() + ' to ' + shownYearsInPivot[yearIndex].toString();
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      } //customize cagr columns captions


      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex] + ' to ' + shownYearsInPivot[yearIndex];
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      }
    }

    if (e.area === 'data') {
      if (e.cell.value) {
        e.cell.value.hasCd && e.cellElement.classList.add('pivot-grid-cell-has-cd');
      }
    }
  }

  onContentReady(e) {
    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource && this.pivotGridOptions.pivotGridSource.fields) {
      const calculatedFields = this.pivotGridOptions.pivotGridSource.fields.filter(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      for (const calculatedField of calculatedFields) {
        this.addCloseButtonToCalculatedField(calculatedField.id, calculatedField.calculatedFieldType);
      }
    } // change style for no data message


    const noDataElement = e.component.element().querySelector('.dx-pivotgrid-nodata');

    if (noDataElement) {
      setTimeout(() => {
        if (this.pivotGridNoDataMessage) {
          noDataElement.classList.add('noDataMessage');
        } else {
          noDataElement.classList.remove('noDataMessage');
        }
      }, 100);
    }

    if (this.pivotGrid && this.stateData && this.stateData.state) {// Allow next rows if you want to enable disabling pivot during waiting for component response
      //this.pivot.disabled = true;
      // not allow to user change state too fast, pivot component needs some time to save emit state
      //setTimeout(() => { this.pivot.disabled = false; }, 1000)
    }
  }

  onContextMenuPreparing(e) {
    // this.pivot.disabled = true;
    this.customizeContextMenu(e); //if (e.area == "row" || e.area == "column") {
    //    let id = e.columnIndex + "" + e.rowIndex;
    //    let tooltip = $("<span></span>").append($("<span id='" + id + "'></span>").html("")).appendTo(e.cellElement);
    //    let field = $("#" + id).closest('td');
    //    field.attr('title', e.cell.text);
    //}
  }

  customizeContextMenu(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    this.updateDefaultContextMenuTextsAndIcons(e);

    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {
      e.items.push({
        beginGroup: true,
        text: 'Delete Calculated Field',
        icon: 'fa fa-trash-alt',
        onItemClick: () => {
          const fieldToDelete = e.field;

          if (typeof this.stateData !== 'undefined') {
            switch (fieldToDelete.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }

          this.deleteCalculatedField(e.field.id);
        }
      });
      e.items.push({
        beginGroup: true,
        text: 'Edit Calculated Field',
        icon: 'fa fa-pencil-alt',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            switch (e.field.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.isPercentOfTotalPopup = true;
                this.stateData.settings.percentOfTotalState.summaryDisplayMode =  false || '';
                this.pivotSummaryDisplayModesSubtotals[0].id = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.isPercentOfChangePopup = true;
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.isCagrPopup = true;
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }
        }
      });
      return;
    }

    let openMenuItems = [];

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.menuSettings.isCurrencySelection) {
      openMenuItems.push({
        icon: 'fa fa-money',
        text: 'Change Currency',
        onItemClick: () => {
          this.eventsCustomAction.next('currencySelector');
        }
      });
    }

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.menuSettings.isCurrencyConversion) {
      openMenuItems.push({
        icon: 'fa fa-exchange-alt',
        text: 'Constant',
        onItemClick: () => {
          this.eventsCustomAction.next('currencyConversionSelector');
        }
      });
    }

    if ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.menuSettings.isUnitsOfVolume) {
      openMenuItems.push({
        icon: 'fa fa-fill-drip',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('massUnitSelector');
        }
      });
    }

    if ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.menuSettings.isUnitsOfMass) {
      openMenuItems.push({
        icon: 'fa fa-balance-scale',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('volumeUnitSelector');
        }
      });
    }

    e.items.push({
      beginGroup: true,
      text: 'Reset to Default',
      icon: 'fas fa-sync-alt',
      onItemClick: () => {
        this.deleteCustomState();
      }
    });
    e.items.push({
      beginGroup: true,
      text: 'Adjust Parameters',
      icon: 'fa fa-sliders-h',
      items: openMenuItems
    });

    if (e.field && e.field.area === 'data' && this.enabledInContextMenu(e.field)) {
      let calculatedFieldsItems = [];

      if ((_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.settings.calculatedFields.isPercentOfTotal) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal,
          onItemClick: () => {
            var _a, _b;

            this.isPercentOfTotalPopup = true;
            this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

            if (((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.percentOfTotalState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.percentOfTotalState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.isPercentOfChange) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent,
          onItemClick: () => {
            var _a;

            this.isPercentOfChangePopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.changePercentState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.changePercentState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_g = this.pivotGridOptions) === null || _g === void 0 ? void 0 : _g.settings.calculatedFields.isCagr) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr,
          onItemClick: () => {
            var _a;

            this.isCagrPopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.cagrState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.cagrState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      e.items.push({
        beginGroup: true,
        text: 'Add Calculated Field',
        icon: 'fa fa-calculator',
        items: calculatedFieldsItems
      });
    } // show only case if exist two or more datafields


    if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType)).length >= 2) {
      const dataFieldsHeaders = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'Rows' : 'Columns';
      e.items.push({
        beginGroup: true,
        text: 'Show Data Field Headers in ' + dataFieldsHeaders,
        icon: 'fa fa-table',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            this.stateData.settings.dataFieldArea = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.row : src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column;
          }
        }
      });
    }
  }

  deleteCalculatedField(fieldId) {
    var _a, _b;

    (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.splice(this.pivotGridOptions.pivotGridSource.fields.map(m => m.id).indexOf(fieldId), 1);
    this.firstAvailableId--;

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) {
      this.readPivotDataFromApi();
    } else {
      if (typeof this.pivotGridOptions !== 'undefined') {
        this.fillPivot(this.pivotGridOptions, this.previewData);
      }
    }
  }

  updateDefaultContextMenuTextsAndIcons(e) {
    var _a;

    let rowName = undefined;
    let rowCaption;

    if ((_a = e.cell) === null || _a === void 0 ? void 0 : _a.path) {
      if (e.cell && e.area === 'row') {
        const path = e.cell.path.length - 1;
        rowName = e.rowFields[path].dataField;
        rowCaption = e.rowFields[path].caption;
      } else if (e.cell && e.area === 'column') {
        const path = e.cell.path.length - 1;
        rowName = e.columnFields[path].dataField;
        rowCaption = e.columnFields[path].caption;
      }

      const expandAll = e.items.find(f => f.text.includes('Expand All'));

      if (expandAll) {
        expandAll.icon = 'fas fa-plus';
        expandAll.text = 'Expand' + ' ' + rowCaption;
      }

      const collapseAll = e.items.find(f => f.text.includes('Collapse All'));

      if (collapseAll) {
        collapseAll.icon = 'fas fa-minus';
        collapseAll.text = 'Collapse' + ' ' + rowCaption;
      }
    }

    const fieldChooser = e.items.find(f => f.text.includes('Show Field Chooser'));

    if (fieldChooser) {
      fieldChooser.text = 'FieldChooser Text';
    }

    const exportToExcel = e.items.find(f => f.text.includes('Export to'));

    if (exportToExcel) {
      exportToExcel.text = 'Export to excel';
    }

    const sorts = e.items.filter(f => f.text.includes('Sort'));

    if (sorts) {
      for (let sort of sorts) {
        sort.icon = 'fas fa-sort';
      }
    }
  }

  enabledInContextMenu(field) {
    if (field.dataFieldType === src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.AvgPrice) {
      return false;
    } else {
      return true;
    }
  }

  addCloseButtonToCalculatedField(fieldId, datafieldType) {
    const calculatedFieldObj = $(".dx-area-field-content:contains('" + datafieldType + "')").append("<i id='" + src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.removeAllSpaces(datafieldType) + "' class='closeButton fas fa-times-circle'></i>");
    calculatedFieldObj.parent().parent().css('padding-right', '0').css('margin-right', '0 !important');
    calculatedFieldObj.children().off().on('click', () => {
      if (typeof this.stateData !== 'undefined') {
        switch (datafieldType) {
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
            this.stateData.settings.percentOfTotalState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
            this.stateData.settings.changePercentState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
            this.stateData.settings.cagrState.isSet = false;
            break;
        }
      }

      this.deleteCalculatedField(fieldId);
    });
  }

  currencySelectionChanged(currency) {
    this.currencyDropdownSelected = currency; // this.stateData.settings.currency = currency;

    this.readPivotDataFromApi(); // // on currency change update % of total caption if exists
    // const percentOfTotalField =
    //   this.pivotGridOptions.pivotGridSource.fields.find(
    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal
    //   );
    // if (percentOfTotalField) {
    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();
    // }
  }

  currencyConversionSelectionChanged(currencyConversionType) {
    this.currencyConversionTypeSelected = currencyConversionType; // this.stateData.settings.currencyConversionType = currencyConversionType;

    this.readPivotDataFromApi();
  }

  massUnitSelectionChanged(unitOfMass) {
    this.unitOfMassDropdownSelected = unitOfMass; // this.stateData.settings.unitOfMass = unitOfMass;

    this.readPivotDataFromApi();
  }

  getUserSettings() {
    const userSettings = {
      currency: {
        Id: this.selectedCurrency.Id,
        Code: this.selectedCurrency.CurrencyCode,
        Name: this.selectedCurrency.CurrencyName
      },
      currencyConversionType: 1,
      unitOfMass: {
        Id: 103,
        Name: 'Thousand Lbs'
      },
      unitOfMeasure: {
        Id: 101,
        Name: 'Metric Tonnes'
      },
      unitOfVolume: {
        Id: 7,
        Name: 'Quart (US)'
      },
      selectedYear: {
        PeriodKey: this.currentYear,
        Name: this.currentYear.toString()
      },
      percentOfTotalState: {
        isSet: true,
        dataField: 'Value',
        basedOn: 'Subtotals',
        summaryDisplayMode: 'percentOfColumnTotal'
      },
      changePercentState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'Previous (Shown) Year'
      },
      cagrState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'First (Shown) Year'
      },
      dataFieldArea: 'column',
      userChartSetting: {
        dataFieldsDisplayMode: 'singleAxis',
        chartType: 'Column'
      },
      isReducedDataSource: false,
      rememberLatestState: true
    };
    return userSettings;
  }

  exportToExcel() {
    var _a, _b;

    this.getUserSettings();
    this.studyService.changeExcelLoading(true);
    let title = '...';
    const menuSettings = (_b = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.menuSettings;
    const pivotFields = this.pivotGridDataSource.fields();
    const userSettings = this.getUserSettings();
    let finalData;

    if (this.previewData[0].hasOwnProperty('Year')) {
      finalData = this.previewData.sort((a, b) => a.Year - b.Year);
    } else {
      finalData = this.previewData;
    }

    this.studyService.exportToExcel(finalData, pivotFields, userSettings, title, menuSettings, 0).subscribe(res => {
      let fileName = 'PivotTest';

      if (title.length > 3) {
        fileName = title.split(' ').join('');
        fileName = fileName.split('-').join('_');
      }

      var file = new Blob([res], {
        type: 'application/vnd.ms-excel'
      });
      var fileURL = URL.createObjectURL(file);
      let a = document.createElement('a');
      document.body.appendChild(a);
      a.style.display = 'none';
      a.href = fileURL;
      a.target = '_blank';
      a.download = `${fileName}.xlsx`;
      a.click();
      a.remove();
      this.studyService.changeExcelLoading(false);
    }, error => {
      this.studyService.changeExcelLoading(false);
      console.log(error);
    });
  }

  exportToCvs() {
    this.studyService.changeExcelLoading(true);
    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    this.studyService.exportToCsv(this.previewData, fileName);
  }

  exportToShanptshot() {
    var _a;

    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_2__.Workbook();
    const worksheet = workbook.addWorksheet('Main sheet');
    (0,devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__.exportPivotGrid)({
      component: (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance,
      worksheet: worksheet,
      customizeCell: function (options) {
        const excelCell = options;
        excelCell.excelCell.font = {
          name: 'Calibri',
          size: 11
        };
        excelCell.excelCell.alignment = {
          horizontal: 'left',
          vertical: 'top'
        };
      }
    }).then(function () {
      workbook.xlsx.writeBuffer().then(function (buffer) {
        (0,file_saver__WEBPACK_IMPORTED_MODULE_4__.saveAs)(new Blob([buffer], {
          type: 'application/octet-stream'
        }), fileName + '.xlsx');
      });
    });
  }

  fillPivot(pivotGridOptions, pivotData) {
    var _a;

    this.saveStateEnabled = false;
    const selectedYear = this.stateData ? this.stateData.settings.selectedYear : this.currentYear;

    if (pivotGridOptions && ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings)) {
      // If is visible like default, add % of total to pivot
      if (this.stateData.settings.percentOfTotalState.isSet) {
        this.addPercentOfTotalsToPivot(true);
      } // If is visible like default, add change % to pivot


      if (this.stateData.settings.changePercentState.isSet) {
        this.addPrecentOfChangeToPivot(true);
      } // If is visible like default, add CAGR to pivot


      if (this.stateData.settings.cagrState.isSet) {
        this.addCAGRToPivot(true);
      }

      const pivotGridSource = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridSource();
      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;
      pivotGridSource.store = pivotData; // make copy of datasource without reference to old object

      let sourceCopy = lodash__WEBPACK_IMPORTED_MODULE_3__.cloneDeep(pivotGridSource); // if administrator set default sorting to true do not use any special sorting

      if (!pivotGridOptions.settings.useDefaultSorting) {
        // if some special sorting is applied
        if (pivotGridOptions.settings.specialSorting && pivotGridOptions.settings.specialSorting.length) {
          for (let specialSorting of pivotGridOptions.settings.specialSorting) {
            if (specialSorting.fieldName) {
              let orderAray = [];

              if (pivotData) {
                let rowData = 0;

                for (let row of pivotData) {
                  // if (row.Year == selectedYear.PeriodKey) {
                  // in case value datafield is not exists, must exists unit
                  rowData = row.Value === undefined ? row.Unit : row.Value;

                  if (orderAray.some(r => r.field === row[specialSorting.fieldName])) {
                    orderAray.find(r => r.field === row[specialSorting.fieldName]).valueSum += rowData;
                  } else {
                    orderAray.push({
                      field: row[specialSorting.fieldName],
                      valueSum: rowData
                    });
                  } // }

                }

                orderAray = orderAray.sort((a, b) => b.valueSum - a.valueSum).map(m => m.field);
                orderAray.forEach((item, index) => {
                  if (item.startsWith(specialSorting.beginningWith)) {
                    orderAray.push(orderAray.splice(index, 1)[0]);
                  }
                });
                const sortingField = sourceCopy.fields.find(f => f.dataField === specialSorting.fieldName);

                if (sortingField) {
                  sortingField.sortOrder = 'asc';

                  sortingField.sortingMethod = (b, a) => {
                    // if (!this.isHeaderFilterLoading) {
                    //   for (const item of orderAray) {
                    //     if (a.value === item) {
                    //       return 1;
                    //     }
                    //     if (b.value === item) {
                    //       return -1;
                    //     }
                    //   }
                    // }
                    return b.value.localeCompare(a.value);
                  };
                }
              }
            }
          }
        } else {
          this.applySortingRolesByYear();
        }
      }

      if (this.pivotGridDataSource) {
        this.pivotGridDataSource.dispose();
      } // check if source contains dataType property and set visibility to false


      if (pivotGridSource.store && pivotGridSource.store.length && pivotGridSource.store[0].DataType) {
        let dataType = sourceCopy.fields.filter(d => d.dataField === 'DataType');
        dataType[0].visible = false;
      } // check all datafields if contains an exception in calculating


      const allDatafields = sourceCopy.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false);

      for (let field of allDatafields) {
        let newField = this.returnSpecialSumamryField(field);

        if (newField) {
          sourceCopy.fields.push(newField);
          field.visible = false;
        }
      } // remove unused properties


      for (let field of sourceCopy.fields) {
        // remove group properties when group is empty
        if (field.groupName == '') {// delete field.groupName;
          // delete field.groupIndex;
        } // in case fileld is grouped field parse index to int
        else if (field.groupName && field.groupName.length > 0) {
          let groupIndex = field.groupIndex ? parseInt(field.groupIndex.toString()) : 0;
          field.groupIndex = groupIndex;
        }
      }

      if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.settings.groupedFields) {
        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {
          let field = {
            groupName: groupedField.groupName,
            area: groupedField.area
          };
          sourceCopy.fields.push(field);
        }
      }

      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](sourceCopy); // this solves alphabetical filtering in filters

      setTimeout(() => {
        var _a;

        const source = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
        const getFieldValues = source.getFieldValues;
        this.isHeaderFilterLoading = false;
        let that = this;

        source.getFieldValues = function () {
          that.isHeaderFilterLoading = true;
          return getFieldValues.apply(this, arguments).always(function () {
            that.isHeaderFilterLoading = false;
          });
        };
      }, 1);
      src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);

      if (pivotGridOptions.settings && (pivotGridOptions.settings.menuSettings.isChart || pivotGridOptions.settings.charts.isVisible)) {// this.initChart();
      }
    } //cutomize texts in pivot
    // this.updateDefaultPivotTexts();
    // apply special filtering
    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {
    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);
    //}


    setTimeout(() => {
      this.saveStateEnabled = true;
    }, 1);
  }

  returnSpecialSumamryField(fieldOriginal) {
    if (fieldOriginal.summaryType === 'range') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption || '';
      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.dataField = fieldOriginal.dataField || '';

      fieldNew.calculateCustomSummary = e => this.calculateSummaryValueRange(e, fieldOriginal);

      fieldNew.customizeText = e => this.customizeRangeText(e);

      fieldNew.isCalculated = true;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.range;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else if (fieldOriginal.summaryType === 'sumCdOd') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption;

      fieldNew.calculateCustomSummary = options => this.calculateSummaryValueCdOd(options, fieldOriginal);

      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.isCalculated = false;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.none;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else {
      return undefined;
    }
  }

  calculateSummaryValueRange(e, field) {
    var _a, _b;

    const valueNearZero = Number.EPSILON;

    switch (e.summaryProcess) {
      case 'start':
        e.totalValue = 0;
        e.values = [0, 0];
        break;

      case 'calculate':
        if (e.value != -1.7976931348623157e308) {
          if (!e.values[0] || !e.values[1]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value < e.values[0]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value > e.values[1]) {
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }
        }

        break;

      case 'finalize':
        let min = e.values[0] ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision) : 0;
        let max = e.values[1] ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed((_b = field.format) === null || _b === void 0 ? void 0 : _b.precision) : 0; // if (
        //   GlobalSettings.SpecialValueForSqlMoney.find(
        //     (v) => v === Number(min)
        //   ) ||
        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))
        // ) {
        //   ErrorHelper.informAdministrator(
        //     this.appCommonDataService,
        //     'Unhandled range value - (' +
        //       min +
        //       ')(' +
        //       max +
        //       ') ' +
        //       Common.objToString(this.requestedView) +
        //       'Environment: ' +
        //       Common.objToString(
        //         this.appEnvironmentData.getEnvironmentSettings()
        //       ) +
        //       ' User: ' +
        //       Common.objToString(this.sharedService.getUserData())
        //   );
        // }

        if (min === max) {
          e.totalValue = min;
        } else if (!min) {
          e.totalValue = max;
        } else {
          e.totalValue = min + ' - ' + max;
        }

        break;
    }
  }

  customizeRangeText(e) {
    if (e.value === undefined) {
      return src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === null || src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === void 0 ? void 0 : src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash;
    } else {
      return e.value;
    }
  }

  calculateSummaryValueCdOd(options, field) {
    var _a;

    switch (options.summaryProcess) {
      case 'start':
        options.totalValue = {
          value: 0,
          hasCd: false,

          valueOf() {
            return this.value;
          },

          toString() {
            return this.value.toString();
          },

          indexOf() {
            const stringValue = this.toString();
            return stringValue.indexOf.apply(this, arguments);
          }

        };
        break;

      case 'calculate':
        options.totalValue.value += options.value[field.dataField] || 0;
        options.totalValue.hasCd = options.totalValue.hasCd || options.value.DataType === 'cd';
        break;

      case 'finalize':
        let totalValue = options.totalValue;
        totalValue.value = totalValue.value.toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        options.totalValue = totalValue;
        break;
    }
  }

  applySortingRolesByYear() {
    this.yearDataFieldName = 'Year';
    setTimeout(() => {
      var _a;

      const pivotGridDataSource = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();

      const columnFields = pivotGridDataSource._fields.filter(f => f.area === 'column');

      const datafields = pivotGridDataSource._fields.filter(f => f.area === 'data');

      const yearFieldOnFirstPositon = columnFields.filter(f => f.areaIndex === 0 && f.dataField === this.yearDataFieldName); // apply this role only in case, year field is on first column position

      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {
        const rowFields = pivotGridDataSource._fields.filter(f => f.area === 'row');

        const selectedYear = this.currentYear; // const selectedYear = this.stateData
        //   ? this.stateData.settings.selectedYear.PeriodKey
        //   : 2021;

        if (selectedYear) {
          for (const field of rowFields) {
            pivotGridDataSource.field(field.dataField, {
              sortBySummaryField: datafields ? datafields.filter(f => f.areaIndex === 0)[0].dataField : undefined,
              sortBySummaryPath: [selectedYear],
              sortOrder: 'desc'
            });
          }

          pivotGridDataSource.load();
        }
      }
    }, 100);
  }

  setCalculatedFieldFromTopMenu(value) {
    var _a;

    const type = value.itemName;
    const dataField = value.dataField;

    switch (type) {
      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
        this.isPercentOfTotalPopup = true;
        this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.percentOfTotalState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
        this.isPercentOfChangePopup = true;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.changePercentState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
        this.isCagrPopup = true; // this.stateData?.settings.cagrState.dataField = dataField;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.cagrState.dataField = dataField;
        }

        break;
    }
  }

  onBasedOnChange(isInit) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.basedOn = this.percentOfTotalBasedOn;
    }

    this.summaryDisplayModeItems = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.basedOn) === 'Subtotals' ? this.pivotSummaryDisplayModesSubtotals : this.pivotSummaryDisplayModesGrandTotals;

    if (isInit === false && typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';
    }
  }

  onComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.changePercentState.computingType = this.percentOfChangeComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.changePercentState.computingType =
    //     ComputingType.FirstYear;
    // }

  }

  onCagrComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.cagrState.computingType = this.cagrComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;
    // }

  }

  addPercentOfTotalsToPivot(iSCallFromFillPivot) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = this.percentInDirection;
    }

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);
    } else {
      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);
    }
  }

  addPercentOfTotalsToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of total exists

      const percentOfTotal = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal);

      if (percentOfTotal && this.pivotGridDataSource) {
        fieldId = percentOfTotal.id;
        percentOfTotal.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
        percentOfTotal.caption = this.getCaptionForPercentOfTotal();
        percentOfTotal.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.dataField) || 'Value';
        percentOfTotal.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        this.pivotGridDataSource.field(percentOfTotal.id, {
          summaryDisplayMode: percentOfTotal.summaryDisplayMode,
          caption: percentOfTotal.caption,
          calculatedFieldType: percentOfTotal.calculatedFieldType,
          dataField: ((_e = this.stateData) === null || _e === void 0 ? void 0 : _e.settings.percentOfTotalState.dataField) || 'Value'
        });
        this.pivotGridDataSource.load(); // CommonHelper.updatePlaceholders(
        //   this.pivotGridDataSource,
        //   this.stateData
        // );
      } else {
        this.firstAvailableId = ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.pivotGridSource.fields.length) || 0;
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfTotal();
        field.dataField = ((_g = this.stateData) === null || _g === void 0 ? void 0 : _g.settings.percentOfTotalState.dataField) || 'Value';
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.isMeasure = true;
        field.visible = true;
        field.calculateSummaryValue = undefined;
        field.summaryDisplayMode = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.percentOfTotalState.summaryDisplayMode) || '';
        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_j = this.pivotGridOptions) === null || _j === void 0 ? void 0 : _j.settings.calculatedFields.formatPrecision) || 1
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = ((_k = this.stateData) === null || _k === void 0 ? void 0 : _k.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        (_l = this.pivotGridOptions) === null || _l === void 0 ? void 0 : _l.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && typeof this.pivotGridOptions !== 'undefined') {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfTotalPopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.percentOfTotalState.isSet = true;
      }
    }
  }

  addPercentOfTotalsToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    this.removeAllHiddenCalculatedFields();
    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForPercentOfTotal();
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.dataField) || '';
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.isMeasure = true;
    field.visible = true;
    field.calculateSummaryValue = undefined;
    field.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isPercentOfTotalPopup = false;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  removeAllHiddenCalculatedFields() {
    var _a;

    if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state) && this.pivotGridDataSource) {
      this.stateData.state.fields = this.stateData.state.fields.filter(a => a.area !== undefined);
      this.pivotGridDataSource.state(this.stateData.state);
    }
  }

  getCaptionForPercentOfTotal() {
    var _a, _b, _c, _d;

    let caption = ''; //check if exist 2 or more datafields

    if (typeof this.pivotGridOptions !== 'undefined' && ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length) >= 2) {
      const percentOfTotaldatafield = (_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.dataField;
      let currentDatafieldCaption = '';

      if (this.pivotGridOptions.settings.isCube) {
        currentDatafieldCaption = // this.pivotGridOptions.pivotGridSource.fields.find(
        //   (f) => f.dataField === percentOfTotaldatafield
        // ).caption;
        'Cube Caption';
      } else {
        if (typeof this.pivotGridOptions !== 'undefined') {
          const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfTotaldatafield);

          if (fieldCaption) {
            currentDatafieldCaption = fieldCaption.caption;
          }
        }
      }

      caption = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal + ' ' + currentDatafieldCaption;
    } else {
      caption = ((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    }

    return caption;
  }

  addPrecentOfChangeToPivot(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of change exists

      const percentOfChange = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent);

      if (percentOfChange && this.pivotGridDataSource) {
        fieldId = percentOfChange.id;
        this.pivotGridDataSource.field(percentOfChange.id, {
          caption: this.getCaptionForPercentOfChange(),
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.dataField) || 'Value',
          calculateSummaryValue: e => this.calculateSummaryValuePercentOfChange(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfChange();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.changePercentState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValuePercentOfChange(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfChangePopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.changePercentState.isSet = true;
      }
    }
  }

  calculateSummaryValuePercentOfChange(e) {
    var _a, _b;

    if (e.parent('column')) {
      let base;

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        let yearIndex = 0;

        for (const index in e.parent('column').children()) {
          if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
            yearIndex = parseInt(index);
            break;
          }
        }

        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const returnValue = e.value() / base.value() - 1;
      return isNaN(returnValue) || returnValue && returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  getCaptionForPercentOfChange() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const percentOfChangeDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfChangeDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (percentOfChangeDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
    }

    return caption;
  }

  addCAGRToPivot(iSCallFromFillPivot) {
    var _a;

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addCAGRToPivotCube(iSCallFromFillPivot);
    } else {
      this.addCAGRToPivotArray(iSCallFromFillPivot);
    }
  }

  addCAGRToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case cagr exists, remove and recreate it (case for edit)

      const cagr = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      if (cagr && this.pivotGridDataSource) {
        fieldId = cagr.id;
        this.pivotGridDataSource.field(cagr.id, {
          dataField: ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.dataField) || 'Value',
          caption: this.getCaptionForCagr(),
          calculateSummaryValue: e => this.calculateSummaryValueCagr(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForCagr();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.dataField) || 'Value';
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
        (_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isCagrPopup = false;
      if (this.stateData) this.stateData.settings.cagrState.isSet = true;
    }
  }

  addCAGRToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c;

    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForCagr();
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.dataField = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField) || 'Value';
    field.isMeasure = true;
    field.visible = true;

    field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isCagrPopup = false;

    if (this.stateData) {
      this.stateData.settings.cagrState.isSet = true;
    }

    if (!iSCallFromFillPivot) {
      this.readPivotDataFromApi();
    }
  }

  getCaptionForCagr() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const cagrDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataField === cagrDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (cagrDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    }

    return caption;
  }

  calculateSummaryValueCagr(e) {
    var _a, _b;

    const shownYearsInPivot = this.shownYears;

    if (e.parent('column') && shownYearsInPivot) {
      let base;
      let yearIndex = 0;
      let prevYearIndex = 0;

      for (const index in e.parent('column').children()) {
        if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
          yearIndex = parseInt(index);
          break;
        }
      }

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
        prevYearIndex = 0;
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();
      const yearSpan = shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];
      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;
      return isNaN(returnValue) || returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  onChangeAutoSaveStatus(statusValue) {
    var _a;

    if (this.stateData) {
      this.stateData.settings.rememberLatestState = statusValue;
    }

    if (statusValue == false) {
      this.alertService.info('The system will remember this state!');
    } else {
      this.alertService.info('The system will remember the last used state!');
    }

    this.canCallSaveState = true;
    this.customSaveState((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state, true);
  }

}

ShcPreviewComponent.ɵfac = function ShcPreviewComponent_Factory(t) {
  return new (t || ShcPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_21__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_22__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_16__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_23__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_17__.SharedService));
};

ShcPreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵdefineComponent"]({
  type: ShcPreviewComponent,
  selectors: [["app-shc-preview"]],
  viewQuery: function ShcPreviewComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxPivotGridComponent, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    }
  },
  inputs: {
    currentYear: "currentYear",
    setPreviewData: "setPreviewData",
    setGridFields: "setGridFields",
    setPreviewGridKey: "setPreviewGridKey",
    setSelectedCurrency: "setSelectedCurrency",
    setStudyType: "setStudyType",
    setIsLubesnetStudy: "setIsLubesnetStudy",
    setVolumeYears: "setVolumeYears",
    setViewId: "setViewId"
  },
  decls: 8,
  vars: 33,
  consts: [[3, "setSelectedCurrency", "pivotGridOptions", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus"], ["id", "pivotGrid", "showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser", "showTotalsPrior", "dataFieldArea", "onContextMenuPreparing", "onOptionChanged", "onInitialized", "onContentReady", "onCellPrepared"], ["pivotGrid", ""], [3, "allowSearch"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], [4, "ngIf"], [1, "popup", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "visible", "visibleChange"], [4, "dxTemplate", "dxTemplateOf"], [1, "form"], [1, "dx-fieldset"], [1, "dx-field"], [1, "dx-field-label"], [1, "dx-field-value"], [3, "items", "value", "valueChange", "onValueChanged", "onInitialized"], ["class", "dx-field", 4, "ngIf"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "disabled", "onClick"], ["displayExpr", "name", "valueExpr", "id", 3, "items", "value", "valueChange"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "onClick"]],
  template: function ShcPreviewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](0, "app-preview-top-menu", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("currencySelectionChanged", function ShcPreviewComponent_Template_app_preview_top_menu_currencySelectionChanged_0_listener($event) {
        return ctx.currencySelectionChanged($event);
      })("currencyConversionSelectionChanged", function ShcPreviewComponent_Template_app_preview_top_menu_currencyConversionSelectionChanged_0_listener($event) {
        return ctx.currencyConversionSelectionChanged($event);
      })("massUnitSelectionChanged", function ShcPreviewComponent_Template_app_preview_top_menu_massUnitSelectionChanged_0_listener($event) {
        return ctx.massUnitSelectionChanged($event);
      })("onExportToExcel", function ShcPreviewComponent_Template_app_preview_top_menu_onExportToExcel_0_listener() {
        return ctx.exportToExcel();
      })("onExportToCvs", function ShcPreviewComponent_Template_app_preview_top_menu_onExportToCvs_0_listener() {
        return ctx.exportToCvs();
      })("onExportSnapshot", function ShcPreviewComponent_Template_app_preview_top_menu_onExportSnapshot_0_listener() {
        return ctx.exportToShanptshot();
      })("calculatedFieldItemSelected", function ShcPreviewComponent_Template_app_preview_top_menu_calculatedFieldItemSelected_0_listener($event) {
        return ctx.setCalculatedFieldFromTopMenu($event);
      })("onChangeAutoSaveStatus", function ShcPreviewComponent_Template_app_preview_top_menu_onChangeAutoSaveStatus_0_listener($event) {
        return ctx.onChangeAutoSaveStatus($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementStart"](1, "dx-pivot-grid", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵlistener"]("onContextMenuPreparing", function ShcPreviewComponent_Template_dx_pivot_grid_onContextMenuPreparing_1_listener($event) {
        return ctx.onContextMenuPreparing($event);
      })("onOptionChanged", function ShcPreviewComponent_Template_dx_pivot_grid_onOptionChanged_1_listener($event) {
        return ctx.onOptionChanged($event);
      })("onInitialized", function ShcPreviewComponent_Template_dx_pivot_grid_onInitialized_1_listener($event) {
        return ctx.onInitialized($event);
      })("onContentReady", function ShcPreviewComponent_Template_dx_pivot_grid_onContentReady_1_listener($event) {
        return ctx.onContentReady($event);
      })("onCellPrepared", function ShcPreviewComponent_Template_dx_pivot_grid_onCellPrepared_1_listener($event) {
        return ctx.cellPrepared($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](3, "dxo-field-chooser", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelement"](4, "dxo-state-storing", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](5, ShcPreviewComponent_div_5_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](6, ShcPreviewComponent_div_6_Template, 3, 7, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵtemplate"](7, ShcPreviewComponent_div_7_Template, 3, 7, "div", 5);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("setSelectedCurrency", ctx.selectedCurrency)("pivotGridOptions", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵpureFunction0"](31, _c2))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵpureFunction0"](32, _c3))("allowFiltering", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowFiltering) || false)("allowExpandAll", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowExpandAll) || false)("showBorders", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showBorders) || false)("showColumnGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnGrandTotals) || false)("showRowGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowGrandTotals) || false)("showRowTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowTotals) || false)("showColumnTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnTotals) || false)("showTotalsPrior", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showTotalsPrior) || "")("dataFieldArea", (ctx.stateData == null ? null : ctx.stateData.settings == null ? null : ctx.stateData.settings.dataFieldArea) || "");
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("allowSearch", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("enabled", ctx.saveStateEnabled)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_19__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
    }
  },
  directives: [_preview_top_menu_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_18__.PreviewTopMenuComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_25__.DxoFieldChooserComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_25__.DxoStateStoringComponent, _angular_common__WEBPACK_IMPORTED_MODULE_26__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_27__.DxPopupComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_28__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxSelectBoxComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_31__.DxButtonComponent],
  styles: [".buttons[_ngcontent-%COMP%] {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.timePeriodfromToText[_ngcontent-%COMP%] {\r\n    font-size: 12px;\r\n    font-weight: lighter;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    position: absolute;\r\n    background-color: #f1f1f1;\r\n    min-width: 160px;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    z-index: 1499;\r\n    padding: 7px 7px 7px 7px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    background-color: #f1f1f1;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    border-top: 1px solid #ddd;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover {\r\n    background-color: #e8e8e8;\r\n}\r\n\r\n.dropright[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    margin-left: 0px !important;\r\n}\r\n\r\n#othersSelector[_ngcontent-%COMP%] {\r\n    width: 350px;\r\n}\r\n\r\n.menu-dropdown[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.dx-button-mode-outlined.dx-button-success[_ngcontent-%COMP%] {\r\n    background-color: #0d3b5a;\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #6c757d;\r\n}\r\n\r\n.list-header[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\ndiv.selected-item[_ngcontent-%COMP%] {\r\n    background-color: rgba(99, 97, 97, 0.3);\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #ffff !important;\r\n    \r\n}\r\n\r\ndiv.calculated-title[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: black;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.show[_ngcontent-%COMP%] > .btn-secondary.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.btn-calc-item[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n    font-size: 14px !important;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n\r\n.dropdown[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    display: inline-block;\r\n    line-height: 39px;\r\n    padding-left: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.badge-left[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: green;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: -1px;\r\n}\r\n\r\n.badge-right[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: blue;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: auto;\r\n    right: -1px;\r\n}\r\n\r\n  #exportBtn,   #exportBtn .dx-button-content {\r\n    padding: 0;\r\n}\r\n\r\n  #exportBtn .button-indicator {\r\n    height: 32px;\r\n    width: 32px;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-right: 5px;\r\n}\r\n\r\n#exportBtn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    background-position: 0 0;\r\n    background-size: 18px 18px;\r\n    padding: 0;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n    margin-top: 8px;\r\n}\r\n\r\n.export-to-exel[_ngcontent-%COMP%] {\r\n    right: 25px;\r\n    position: absolute;\r\n}\r\n\r\n.auto-save-state[_ngcontent-%COMP%] {\r\n    right: 80px;\r\n    position: absolute;\r\n}\r\n\r\n#exportTypeSelector.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    right: 2%;\r\n}\n/*# sourceMappingURL=data:application/json;base64, */"]
});

/***/ }),

/***/ 78351:
/*!************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/show-initial-setup/show-initial-setup.component.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShowInitialSetupComponent": () => (/* binding */ ShowInitialSetupComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 36362);



function ShowInitialSetupComponent_div_5_div_29_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r1.studySummaryDataObj.AnalystNameList.join(", "), " ");
} }
function ShowInitialSetupComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](3, "Study Name:");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](8, "Data Set:");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](11, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](13, "Study Year:");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](15);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](16, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](17, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](18, "Project:");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](19, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](20);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](21, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](22, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](23, "Project Lead:");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](24, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](25);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](26, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](27, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](28, "Analyst:");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](29, ShowInitialSetupComponent_div_5_div_29_Template, 2, 1, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r0.studySummaryDataObj.Name);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r0.studySummaryDataObj.StudyDataSetName, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx_r0.studySummaryDataObj.StudyYear);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r0.studySummaryDataObj.ProjectName, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate1"](" ", ctx_r0.studySummaryDataObj.ProjectLead, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx_r0.studySummaryDataObj.AnalystNameList);
} }
class ShowInitialSetupComponent {
    constructor() {
        this.studySummaryDataObj = [];
        // this.studySummaryData = new InitialSetup().deserialize(
        //   this.studySummaryData
        // );
        // if (typeof this.studySummaryData.analystNameList !== 'undefined') {
        //   this.analystNameList = this.studySummaryData.analystNameList.join(', ');
        // }
    }
    set studySummaryData(data) {
        this.studySummaryDataObj = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(data);
    }
    ngOnInit() { }
}
ShowInitialSetupComponent.ɵfac = function ShowInitialSetupComponent_Factory(t) { return new (t || ShowInitialSetupComponent)(); };
ShowInitialSetupComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ShowInitialSetupComponent, selectors: [["app-show-initial-setup"]], inputs: { studySummaryData: "studySummaryData" }, decls: 6, vars: 1, consts: [[1, "container-fluid", "my-4"], [1, "row", "justify-content-center"], [1, "col"], [1, "card"], [1, "card-body", "p-2", "small"], ["class", "row", 4, "ngIf"], [1, "row"], [1, "text-secondary"], [1, "field-value"], ["class", "field-value", 4, "ngIf"]], template: function ShowInitialSetupComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtemplate"](5, ShowInitialSetupComponent_div_5_Template, 30, 6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("ngIf", ctx.studySummaryDataObj);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaG93LWluaXRpYWwtc2V0dXAuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 69193:
/*!********************************************************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/specialty-excipient-sales/specialty-excipient-sales-preview/specialty-excipient-sales-preview.component.ts ***!
  \********************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpecialtyExcipientSalesPreviewComponent": () => (/* binding */ SpecialtyExcipientSalesPreviewComponent)
/* harmony export */ });
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);




const _c0 = function () { return { showColumnFields: true, showDataFields: true, showFilterFields: true, showRowFields: true, allowFieldDragging: true, visible: true }; };
const _c1 = function () { return { enabled: true }; };
class SpecialtyExcipientSalesPreviewComponent {
    constructor() {
        this.studyData = [];
        this.currentYear = 0;
        this.previousYear = 0;
        this.gridFields = [];
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]();
    }
    ngOnInit() { }
    ngOnChanges(changes) {
        this.getPreviewData(this.studyData);
    }
    getPreviewData(studyData) {
        const previewData = [];
        studyData.map((item) => {
            previewData.push({
                ExcipientCategory: item.ExcipientCategoryName,
                ExcipientGroup: item.ExcipientGroupName,
                Excipient: item.ExcipientName,
                Supplier: item.SupplierName,
                Year: this.previousYear,
                Sales: item.Value1,
                Volume: item.Volume1,
                CAGR: item.CAGR1,
            });
            previewData.push({
                ExcipientCategory: item.ExcipientCategoryName,
                ExcipientGroup: item.ExcipientGroupName,
                Excipient: item.ExcipientName,
                Supplier: item.SupplierName,
                Year: this.currentYear,
                Sales: item.Value2,
                Volume: item.Volume2,
                CAGR: item.CAGR2,
            });
        });
        this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_0__["default"]({
            store: previewData,
            fields: this.getGridFields(),
        });
    }
    getGridFields() {
        return (this.gridFields = [
            {
                dataField: 'ExcipientCategory',
                area: 'row',
                caption: 'Excipient Category',
                dataType: 'string',
            },
            {
                dataField: 'ExcipientGroup',
                area: 'row',
                caption: 'Excipient Group',
                dataType: 'string',
            },
            {
                dataField: 'Excipient',
                area: 'row',
                caption: 'Excipient',
                dataType: 'string',
            },
            {
                dataField: 'Supplier',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Sales',
                dataField: 'Sales',
                dataFieldType: 'Sales',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'Volume',
                dataField: 'Volume',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'CAGR(%)',
                dataField: 'CAGR',
                dataFieldType: 'CAGR',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ]);
    }
}
SpecialtyExcipientSalesPreviewComponent.ɵfac = function SpecialtyExcipientSalesPreviewComponent_Factory(t) { return new (t || SpecialtyExcipientSalesPreviewComponent)(); };
SpecialtyExcipientSalesPreviewComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: SpecialtyExcipientSalesPreviewComponent, selectors: [["app-specialty-excipient-sales-preview"]], inputs: { studyData: "studyData", currentYear: "currentYear", previousYear: "previousYear" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]], decls: 2, vars: 15, consts: [["showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "allowFiltering", "allowExpandAll", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showBorders", "dataSource", "fieldPanel", "fieldChooser"], [3, "allowSearch"]], template: function SpecialtyExcipientSalesPreviewComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dx-pivot-grid", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "dxo-field-chooser", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("allowFiltering", true)("allowExpandAll", true)("showColumnGrandTotals", false)("showRowGrandTotals", true)("showRowTotals", true)("showColumnTotals", false)("showBorders", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](13, _c0))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵpureFunction0"](14, _c1));
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("allowSearch", true);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_2__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_3__.DxoFieldChooserComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcGVjaWFsdHktZXhjaXBpZW50LXNhbGVzLXByZXZpZXcuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 16281:
/*!**************************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/specialty-excipient-sales/specialty-excipient-sales.component.ts ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpecialtyExcipientSalesComponent": () => (/* binding */ SpecialtyExcipientSalesComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../shc/sub/shc-preview/shc-preview.component */ 17640);
























function SpecialtyExcipientSalesComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "button", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SpecialtyExcipientSalesComponent_div_5_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r7); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r6.onCalculatorbuttonClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2, " Calculator ");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r8.studyTitle);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "ng-select", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("ngModelChange", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_10_Template_ng_select_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r17.selectedCurrency = $event; })("change", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_10_Template_ng_select_change_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r18); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r19.onCurrencyChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r9.currencies)("ngModel", ctx_r9.selectedCurrency)("clearable", false);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_12_Template(rf, ctx) { if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "ng-select", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("ngModelChange", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_12_Template_ng_select_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r20.selectedVolumeUnitObj = $event; })("change", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_12_Template_ng_select_change_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r21); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r22.onVolumeChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r10.volumeUnits)("clearable", false)("ngModel", ctx_r10.selectedVolumeUnitObj);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r30); const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r29.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r32); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r31.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r35); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r34.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_5_div_1_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r38); const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r37.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_6_div_1_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r40.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r39.disabledSignOffButton);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_7_div_1_Template, 2, 1, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r44); const ctx_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r43.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_8_div_1_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_div_2_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_div_4_Template, 2, 0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_5_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_6_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_7_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_dxi_item_8_Template, 2, 0, "dxi-item", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isLockedStudy);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_dxi_column_29_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 72);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_30_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r49 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_30_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r49); const d_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r47.deleteRow(d_r45.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_30_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_30_dx_button_1_Template, 1, 0, "dx-button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r45 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r45.data.DataRowId !== null);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_31_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r50 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r50.value > 0 ? data_r50.value.toFixed(1) : "");
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_32_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 77);
} if (rf & 2) {
    const data_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r51.value > 0 ? (data_r51.value * 1).toFixed(1) : "");
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_32_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r51.value > 0 ? (data_r51.value * 1).toFixed(1) : "");
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_32_input_1_Template, 1, 1, "input", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_32_span_2_Template, 2, 1, "span", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r15.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r15.isStudyEditable);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_33_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_33_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r60); const data_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r58.addNotes(data_r56); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_33_Template(rf, ctx) { if (rf & 1) {
    const _r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_33_dx_button_2_Template, 1, 0, "dx-button", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SpecialtyExcipientSalesComponent_dx_data_grid_7_div_33_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r62); const data_r56 = restoredCtx.$implicit; const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r61.showNotePopup(data_r56); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r56 = ctx.$implicit;
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r16.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r56.value);
} }
function SpecialtyExcipientSalesComponent_dx_data_grid_7_Template(rf, ctx) { if (rf & 1) {
    const _r64 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function SpecialtyExcipientSalesComponent_dx_data_grid_7_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r63.onRowSaved($event); })("onCellPrepared", function SpecialtyExcipientSalesComponent_dx_data_grid_7_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.onCellPreparedHighlighter($event); })("onCellHoverChanged", function SpecialtyExcipientSalesComponent_dx_data_grid_7_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const ctx_r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r66.onCellHoverChanged($event); })("onRowPrepared", function SpecialtyExcipientSalesComponent_dx_data_grid_7_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r64); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r67.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-paging", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-scrolling", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-editing", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_8_Template, 3, 1, "div", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_10_Template, 2, 3, "div", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "dxi-item", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_12_Template, 2, 3, "div", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](13, SpecialtyExcipientSalesComponent_dx_data_grid_7_ng_container_13_Template, 9, 4, "ng-container", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](21, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](23, "dxi-column", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "dxi-column", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](25, "dxi-column", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](26, "dxi-column", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](27, "dxi-column", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](28, "dxi-column", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](29, SpecialtyExcipientSalesComponent_dx_data_grid_7_dxi_column_29_Template, 1, 1, "dxi-column", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](30, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_30_Template, 2, 1, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](31, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_31_Template, 3, 1, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](32, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_32_Template, 3, 2, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](33, SpecialtyExcipientSalesComponent_dx_data_grid_7_div_33_Template, 6, 2, "div", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r1.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r1.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate2"]("caption", "Year: ", ctx_r1.previousYear, " (", ctx_r1.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate2"]("caption", "Year: ", ctx_r1.currentYear, " (", ctx_r1.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", !ctx_r1.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", !ctx_r1.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 80)("allowEditing", !ctx_r1.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r1.isStudyEditable && !ctx_r1.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function SpecialtyExcipientSalesComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 83);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r2.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function SpecialtyExcipientSalesComponent_app_shc_preview_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-shc-preview", 84, 85);
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setGridFields", ctx_r3.getGridFields())("setPreviewData", ctx_r3.previewGridData)("setPreviewGridKey", ctx_r3.previewGridStorageKey)("setStudyType", ctx_r3.studyDataUrlEnum.SE_SALES)("setVolumeYears", ctx_r3.volumeYears)("currentYear", ctx_r3.currentYear)("setSelectedCurrency", ctx_r3.currentCurrency)("setViewId", ctx_r3.studyDataViewId);
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function SpecialtyExcipientSalesComponent_dx_data_grid_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 87);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 88);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 89);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c0));
} }
function SpecialtyExcipientSalesComponent_dx_popup_25_Template(rf, ctx) { if (rf & 1) {
    const _r71 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 90);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SpecialtyExcipientSalesComponent_dx_popup_25_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r71); const ctx_r70 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r70.popupVisible = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 91);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 92);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "div", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](8, "Excipient Category");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "ng-select", 94);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](13, "Excipient Group");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "ng-select", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](18, "Excipient");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "ng-select", 96);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "div", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](23, "Supplier");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](24, "ng-select", 97);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "div", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](28);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](29, "input", 98);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "div", 93);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](34, "input", 99);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "div", 100);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "dx-button", 101);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_dx_popup_25_Template_dx_button_onClick_36_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r71); const ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r72.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("width", 600)("height", 380)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r5.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r5.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r5.excipientCategories)("addTag", ctx_r5.createNewDataEntry.bind(ctx_r5, ctx_r5.dataRelationsEnum.ExcipientCategory));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r5.excipientGroups)("addTag", ctx_r5.createNewDataEntry.bind(ctx_r5, ctx_r5.dataRelationsEnum.ExcipientGroup));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r5.excipients)("addTag", ctx_r5.createNewDataEntry.bind(ctx_r5, ctx_r5.dataRelationsEnum.Excipient));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r5.suppliers)("addTag", ctx_r5.createNewDataEntry.bind(ctx_r5, ctx_r5.dataRelationsEnum.Supplier));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Sales (", ctx_r5.selectedCurrencyCode, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Volume (", ctx_r5.selectedVolumeUnitObj.Name, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r5.newRowForm.invalid);
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class SpecialtyExcipientSalesComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyTitle = '';
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize({});
        this.currentYear = 2022;
        this.previousYear = 2019;
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.selectedDosageFormId = 0;
        this.selectedDosageFormName = '';
        this.isStudyEditable = false;
        this.isManage = false;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.selectedCurrency = {
            CurrencyCode: 'USD',
            Id: 27,
            IsActive: true,
            Name: 'United States Dollar',
        };
        this.selectedCurrencyCode = 'USD';
        this.selectedVolumeUnitObj = {
            Id: 106,
            IsActive: true,
            Name: 'Kg',
            Rate: 1000,
        };
        this.selectedVolumeUnitId = 106;
        this.selectedCurrencyCodeDefault = '';
        this.previousSelectedCurrencyCode = '';
        this.currencies = [];
        this.volumeUnits = [];
        this.excipientCategories = [];
        this.excipientGroups = [];
        this.excipients = [];
        this.suppliers = [];
        this.currencyRates = {};
        this.CalculatorId = 0;
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.previewGridStorageKey = '';
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.previewGridData = [];
        this.volumeYears = [];
        this.currentCurrency = {};
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.allowedCols = ['Value2', 'Volume2', 'CAGR2'];
        if (this.isLoadingService.isLoading$()) {
            this.isLoadingService.remove();
        }
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            ExcipientCategory: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            ExcipientGroup: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Excipient: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Supplier: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Currency: [null],
            VolumeUnit: [null],
            DosageForm: [null],
            Sales: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            Volume: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getDataRelations();
        this.getCurrencies();
        this.getVolumeUnits();
        this.getExcipientCategory();
        this.getExcipientGroups();
        this.getExcipients();
        this.getSuppliers();
    }
    ngOnInit() {
        this.getSalesData();
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
                this.studyDataRelations = this.datRelationsData.find((item) => item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
                if (this.studyDataRelations) {
                    this.studyDataViewId = this.studyDataRelations.ViewId;
                }
            }
        });
    }
    getCurrencies() {
        this.sharedService
            .getSEDataEntryData('Currencies')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.currencies = res.Data;
            }
        });
    }
    getExcipientCategory() {
        this.sharedService
            .getSEDataEntryData('ExcipientCategories')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.excipientCategories = res.Data;
            }
        });
    }
    getExcipientGroups() {
        this.sharedService
            .getSEDataEntryData('ExcipientGroups')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.excipientGroups = res.Data;
            }
        });
    }
    getExcipients() {
        this.sharedService
            .getSEDataEntryData('Excipients')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.excipients = res.Data;
            }
        });
    }
    getSuppliers() {
        this.sharedService
            .getSEDataEntryData('Suppliers')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.suppliers = res.Data;
            }
        });
    }
    getCurrencyConversionRate(years) {
        const p = [];
        if (years.length > 0) {
            years.map((year) => {
                p.push({ key: 'Years', value: year });
            });
        }
        this.sharedService
            .getSEDataEntryData('CurrencyRates', p)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                res.Data.map((item) => {
                    if (typeof this.currencyRates[item.CurrencyCode] === 'undefined') {
                        this.currencyRates[item.CurrencyCode] = [];
                    }
                    this.currencyRates[item.CurrencyCode].push({
                        currencyCode: item.CurrencyCode,
                        Rate: item.Rate,
                        Year: item.Year,
                    });
                });
            }
        });
    }
    getVolumeUnits() {
        this.sharedService
            .getSEDataEntryData('VolumeUnits')
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.volumeUnits = res.Data;
            }
        });
    }
    getSalesData() {
        this.isLoadingService.add();
        this.studyService
            .getSalesData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                // console.log(res.Data);
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData =
                    studyData.SpecialtyExcipientsSales;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize(studyData.InitialSetup);
                this.CalculatorId = this.studySummary.CalculatorId || 0;
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                this.currentYear = currentYear;
                this.previousYear = 0;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    this.previousYear = item.LatestDataYear;
                    this.selectedCurrencyCode = item.CurrencyCode;
                    this.selectedVolumeUnitId = item.VolumeUnitId;
                    this.selectedDosageFormId = item.DosageFormId;
                    this.selectedDosageFormName = item.DosageFormName;
                    // this.CalculatorId = item.CalculatorId;
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                changelogObj[colValueArray[4]] = {};
                                changelogObj[colValueArray[4]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.previewGridData.push({
                        ExcipientCategoryName: item.ExcipientCategoryName,
                        ExcipientGroupName: item.ExcipientGroupName,
                        ExcipientName: item.ExcipientName,
                        SupplierName: item.SupplierName,
                        Year: this.previousYear,
                        Value: item.Value1,
                        VolumeValue: item.Volume1,
                        CagrPer: item.CAGR1,
                    });
                    this.previewGridData.push({
                        ExcipientCategoryName: item.ExcipientCategoryName,
                        ExcipientGroupName: item.ExcipientGroupName,
                        ExcipientName: item.ExcipientName,
                        SupplierName: item.SupplierName,
                        Year: this.currentYear,
                        Value: item.Value2,
                        VolumeValue: item.Volume2,
                        CagrPer: item.CAGR2,
                    });
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.volumeYears.push({
                    field: `Value1`,
                    year: this.previousYear,
                    cagrField: 'CAGR1',
                    volumeField: 'Volume1',
                });
                this.volumeYears.push({
                    field: `Value2`,
                    year: this.currentYear,
                    cagrField: 'CAGR2',
                    volumeField: 'Volume2',
                });
                this.selectedCurrency = this.currencies.find((item) => item.CurrencyCode === this.selectedCurrencyCode);
                this.selectedCurrencyCodeDefault =
                    this.selectedCurrency.CurrencyCode;
                this.previousSelectedCurrencyCode =
                    this.selectedCurrency.CurrencyCode;
                this.selectedVolumeUnitObj = this.volumeUnits.find((item) => item.Id === this.selectedVolumeUnitId);
                this.previousSelectedVolume = this.selectedVolumeUnitObj;
                this.getCurrencyConversionRate([
                    this.previousYear,
                    this.currentYear,
                ]);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    getGridFields() {
        return [
            {
                dataField: 'ExcipientCategoryName',
                area: 'row',
                caption: 'Excipient Category',
                dataType: 'string',
                id: 0,
            },
            {
                dataField: 'ExcipientGroupName',
                area: 'row',
                caption: 'Excipient Group',
                dataType: 'string',
                id: 1,
            },
            {
                dataField: 'ExcipientName',
                area: 'row',
                caption: 'Excipient',
                dataType: 'string',
                id: 2,
            },
            {
                dataField: 'SupplierName',
                area: 'row',
                caption: 'Supplier',
                dataType: 'string',
                id: 3,
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 4,
                caption: 'Sales',
                dataField: 'Value',
                dataFieldType: 'Value',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 5,
                caption: 'Volume',
                dataField: 'VolumeValue',
                dataFieldType: 'Volume',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 6,
                caption: 'CAGR(%)',
                dataField: 'CagrPer',
                dataFieldType: 'CAGR',
                width: 80,
                dataType: 'number',
                summaryType: 'sum',
                summaryDisplayMode: 'none',
                format: {
                    type: 'fixedPoint',
                    precision: 1,
                },
                area: 'data',
            },
            {
                visible: true,
                isCalculated: false,
                calculatedFieldType: 'none',
                id: 7,
                caption: 'Year',
                dataField: 'Year',
                width: 30,
                dataType: 'string',
                summaryDisplayMode: 'none',
                area: 'column',
            },
        ];
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        // this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    addNewRowPopup() {
        var _a, _b, _c;
        const selectedCurrency = this.currencies.find((item) => item.CurrencyCode === this.selectedCurrencyCode);
        (_a = this.newRowForm.get('Currency')) === null || _a === void 0 ? void 0 : _a.setValue(selectedCurrency);
        const selectedVolumeUnit = this.volumeUnits.find((item) => item.Id === this.selectedVolumeUnitId);
        (_b = this.newRowForm.get('Currency')) === null || _b === void 0 ? void 0 : _b.setValue(selectedCurrency);
        (_c = this.newRowForm.get('VolumeUnit')) === null || _c === void 0 ? void 0 : _c.setValue(selectedVolumeUnit);
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            CurrencyCode: newRowData.Currency.CurrencyCode,
            CurrencyId: newRowData.Currency.Id,
            CurrencyName: newRowData.Currency.Name,
            DosageFormId: this.selectedDosageFormId,
            DosageFormName: this.selectedDosageFormName,
            ExcipientCategoryId: newRowData.ExcipientCategory.Id,
            ExcipientCategoryName: newRowData.ExcipientCategory.Name,
            ExcipientGroupId: newRowData.ExcipientGroup.Id,
            ExcipientGroupName: newRowData.ExcipientGroup.Name,
            ExcipientId: newRowData.Excipient.Id,
            ExcipientName: newRowData.Excipient.Name,
            VolumeUnitId: newRowData.VolumeUnit.Id,
            VolumeUnitName: newRowData.VolumeUnit.Name,
            VolumeUnitRate: newRowData.VolumeUnit.Rate,
            CAGR1: 0,
            CAGR2: 0,
            DataRelationId: 0,
            RowCount: 0,
            SupplierId: newRowData.Supplier.Id,
            SupplierName: newRowData.Supplier.Name,
            Value1: 0,
            Value2: +newRowData.Sales,
            Volume1: 0,
            Volume2: +newRowData.Volume,
            LatestDataYear: 0,
            CalculatorId: 0,
            ChangeLog: '',
            ChangeLogObj: [],
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.ExcipientCategoryId == newRow.ExcipientCategoryId &&
            item.ExcipientGroupId === newRow.ExcipientGroupId &&
            item.ExcipientId === newRow.ExcipientId &&
            item.SupplierId === newRow.SupplierId);
        if (!isFound) {
            this.studyData.push(newRow);
            this.studyData.sort((a, b) => a.ExcipientCategoryId - b.ExcipientCategoryId ||
                a.ExcipientGroupId - b.ExcipientGroupId ||
                a.ExcipientId - b.ExcipientId ||
                a.SupplierId - b.SupplierId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    onRowSaved(e) {
        // if (e.changes) {
        //   const data = e.changes[0].data as SpecialtyExcipientSaleItem;
        //   const years = this.currentYear - this.previousYear;
        //   // this.studyData.map((item: SpecialtyExcipientSaleItem, i) => {
        //   const previousValue = data.Value1;
        //   const currentValue = data.Value2;
        //   data.CAGR2 = +this.calculateCAGRPercentage(
        //     previousValue,
        //     currentValue,
        //     years
        //   );
        //   // });
        // }
        // console.log(this.studyData);
    }
    onCellPreparedHighlighter(e) {
        const isFound = this.allowedCols.some((item) => item === e.column.dataField);
        // console.log(e.data.ChangeLogObj);
        if (e.rowType === 'data' && isFound) {
            if (typeof e.data.ChangeLogObj !== 'undefined') {
                const cellValue = typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.dataField]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        if (typeof event.column !== 'undefined') {
            const isFound = this.allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (typeof event.data.ChangeLogObj !== 'undefined') {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.dataField] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.dataField]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    calculateCAGRPercentage(startValue, endValue, year) {
        let cargPer = '';
        if (startValue && endValue && year) {
            const cagr = Math.pow(endValue / startValue, 1 / year) - 1;
            cargPer = (cagr * 100).toFixed(1);
        }
        return cargPer;
    }
    onCurrencyChange(e) {
        const defaultCurrency = this.currencies.find((item) => item.CurrencyCode === this.selectedCurrencyCodeDefault);
        const currency = typeof e !== 'undefined' ? e : defaultCurrency;
        this.selectedCurrencyCode = currency.CurrencyCode || '';
        this.selectedCurrency = currency;
        const previousSelectedRates = this.currencyRates[this.previousSelectedCurrencyCode];
        const rates = this.currencyRates[this.selectedCurrencyCode];
        const previousSelectedObj = previousSelectedRates.find((rate) => rate.Year === this.previousYear);
        const previousSelectedRate = typeof previousSelectedObj !== 'undefined' ? previousSelectedObj.Rate : 1;
        const currentSelectedObj = previousSelectedRates.find((rate) => rate.Year === this.currentYear);
        const currentSelectedRate = typeof currentSelectedObj !== 'undefined' ? currentSelectedObj.Rate : 1;
        let previousRateObj = rates.find((rate) => rate.Year === this.previousYear);
        let previousRate = typeof previousRateObj !== 'undefined' ? previousRateObj.Rate : 1;
        let currentRateObj = rates.find((rate) => rate.Year === this.currentYear);
        let currentRate = typeof currentRateObj !== 'undefined' ? currentRateObj.Rate : 1;
        console.log(currentSelectedRate, currentRate);
        this.previousSelectedCurrencyCode = currency.CurrencyCode || '';
        this.studyData.map((item, i) => {
            const convertUSDPreviousPrice = item.Value1 / previousSelectedRate;
            const finalPreviousValue = convertUSDPreviousPrice * previousRate;
            let finalCurrentValue = 0;
            if (this.studyData[i].Value2 > 0) {
                const convertUSDCurrentPrice = item.Value2 / currentSelectedRate;
                finalCurrentValue = convertUSDCurrentPrice * currentRate;
            }
            this.studyData[i].Value1 = +finalPreviousValue.toFixed(1);
            this.studyData[i].Value2 = +finalCurrentValue.toFixed(1);
            this.studyData[i].CurrencyCode = currency.CurrencyCode || '';
            this.studyData[i].CurrencyId = currency.Id;
            this.studyData[i].CurrencyName = currency.Name;
        });
    }
    onVolumeChange(currentVolume) {
        const currentSelectedVolumeRate = currentVolume.Rate || 0;
        const previousSelectedVolumeRate = this.previousSelectedVolume.Rate;
        this.studyData.map((item, i) => {
            const studyVolumePreviousYear = item.Volume1 || 0;
            const studyVolumeCurrentYear = item.Volume2 || 0;
            let newPreviousYearVolume = 0;
            if (studyVolumePreviousYear > 0) {
                newPreviousYearVolume =
                    (studyVolumePreviousYear / previousSelectedVolumeRate) *
                        currentSelectedVolumeRate;
            }
            let newCurrentYearVolume = 0;
            if (studyVolumeCurrentYear > 0) {
                newCurrentYearVolume =
                    (studyVolumeCurrentYear / previousSelectedVolumeRate) *
                        currentSelectedVolumeRate;
            }
            this.studyData[i].Volume1 = +newPreviousYearVolume.toFixed(1);
            this.studyData[i].Volume2 = +newCurrentYearVolume.toFixed(1);
            this.studyData[i].VolumeUnitId = currentVolume.Id;
            this.studyData[i].VolumeUnitName = currentVolume.Name;
            this.studyData[i].VolumeUnitRate = currentVolume.Rate || 0;
        });
        this.previousSelectedVolume = currentVolume;
    }
    saveStudyData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            specialtyExcipientsSales: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveSESData(studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSEAPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSEAPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            specialtyExcipientsSales: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSESData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSalesData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onCalculatorbuttonClick() {
        const url = `calculator/${this.CalculatorId}/${this.marketYearCategoryId}/${this.studyProjectMarketYearId}`;
        this.router.navigateByUrl(url);
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ExcipientCategory:
                this.getExcipientCategory();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.ExcipientGroup:
                this.getExcipientGroups();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.Excipient:
                this.getExcipients();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.Supplier:
                this.getSuppliers();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
SpecialtyExcipientSalesComponent.ɵfac = function SpecialtyExcipientSalesComponent_Factory(t) { return new (t || SpecialtyExcipientSalesComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService)); };
SpecialtyExcipientSalesComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SpecialtyExcipientSalesComponent, selectors: [["app-specialty-excipient-sales"]], viewQuery: function SpecialtyExcipientSalesComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 44, vars: 44, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], ["class", "text-right mb-2", 4, "ngIf"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setStudyType", "setVolumeYears", "currentYear", "setSelectedCurrency", "setViewId", 4, "ngIf"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], [1, "text-right", "mb-2"], [1, "btn", "btn-outline-dark", 3, "click"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "enabled"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["mode", "virtual"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], ["location", "after"], ["style", "width: 150px", 4, "dxTemplate"], [4, "ngIf"], ["caption", "Excipient Category", "dataField", "ExcipientCategoryName", 3, "allowEditing"], ["caption", "Excipient Group", "dataField", "ExcipientGroupName", 3, "allowEditing"], ["dataField", "ExcipientName", "caption", "Excipient", 3, "allowEditing"], ["caption", "Supplier", "dataField", "SupplierName", 3, "allowEditing"], [3, "caption"], ["dataField", "Value1", "caption", "Sales", "cellTemplate", "previousYear1CellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Volume", "dataField", "Volume1", "cellTemplate", "previousYear1CellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Cagr (%)", "dataField", "CAGR1", "cellTemplate", "previousYear1CellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["dataField", "Value2", "caption", "Sales", "cellTemplate", "volumeYearCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Volume", "dataField", "Volume2", "cellTemplate", "volumeYearCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Cagr (%)", "dataField", "CAGR2", "cellTemplate", "volumeYearCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], [2, "width", "150px"], ["bindLabel", "Name", "placeholder", "Select Currency", 3, "items", "ngModel", "clearable", "ngModelChange", "change"], ["bindLabel", "Name", "placeholder", "Select Volume Unit", 3, "items", "clearable", "ngModel", "ngModelChange", "change"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], [3, "setGridFields", "setPreviewData", "setPreviewGridKey", "setStudyType", "setVolumeYears", "currentYear", "setSelectedCurrency", "setViewId"], ["studyPreview", ""], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body"], [1, "row"], [1, "col-6"], ["bindLabel", "Name", "formControlName", "ExcipientCategory", "placeholder", "Select Excipient Category", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "ExcipientGroup", "placeholder", "Select Excipient Group", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Excipient", "placeholder", "Select Excipient", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "Supplier", "placeholder", "Select Supplier", "addTagText", "Create New", 3, "items", "addTag"], ["type", "text", "formControlName", "Sales", 1, "form-control"], ["type", "text", "formControlName", "Volume", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "onClick"]], template: function SpecialtyExcipientSalesComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, SpecialtyExcipientSalesComponent_div_5_Template, 3, 0, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "app-disable-study-editing", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, SpecialtyExcipientSalesComponent_dx_data_grid_7_Template, 34, 53, "dx-data-grid", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "dx-tooltip", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, SpecialtyExcipientSalesComponent_div_9_Template, 1, 1, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxi-item", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](12, SpecialtyExcipientSalesComponent_app_shc_preview_12_Template, 2, 8, "app-shc-preview", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "dx-popup", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SpecialtyExcipientSalesComponent_Template_dx_popup_visibleChange_13_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function SpecialtyExcipientSalesComponent_Template_dx_popup_onHidden_13_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "form", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "textarea", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "dx-button", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_Template_dx_button_onClick_20_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "dx-popup", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SpecialtyExcipientSalesComponent_Template_dx_popup_visibleChange_21_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function SpecialtyExcipientSalesComponent_Template_dx_popup_onHidden_21_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, SpecialtyExcipientSalesComponent_dx_data_grid_24_Template, 4, 8, "dx-data-grid", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, SpecialtyExcipientSalesComponent_dx_popup_25_Template, 37, 19, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "dx-popup", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SpecialtyExcipientSalesComponent_Template_dx_popup_visibleChange_26_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "p", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](32, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_Template_dx_button_onClick_34_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_Template_dx_button_onClick_35_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "dx-popup", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SpecialtyExcipientSalesComponent_Template_dx_popup_visibleChange_36_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function SpecialtyExcipientSalesComponent_Template_dx_popup_onHidden_36_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "p", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](40, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_Template_dx_button_onClick_42_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "dx-button", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SpecialtyExcipientSalesComponent_Template_dx_button_onClick_43_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx.isStudyEditable);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.previewGridData && ctx.previewGridData.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](42, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_21__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgModel, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxTooltipComponent, _shc_sub_shc_preview_shc_preview_component__WEBPACK_IMPORTED_MODULE_10__.ShcPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcGVjaWFsdHktZXhjaXBpZW50LXNhbGVzLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 90542:
/*!**********************************************************************!*\
  !*** ./src/app/pages/study-area/components/study/study.component.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyComponent": () => (/* binding */ StudyComponent)
/* harmony export */ });
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var src_app_shared_handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../shared/handson-table/handson-table.component */ 44911);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_studyAreaSummary_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/studyAreaSummary.model */ 58101);
/* harmony import */ var _model_dropdownCurrency_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../model/dropdownCurrency.model */ 55513);
/* harmony import */ var _model_dropdownUnits_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../model/dropdownUnits.model */ 29718);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _shared_pivot_grid_preview_pivot_grid_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../shared/pivot-grid-preview/pivot-grid-preview.component */ 99361);




















const _c0 = ["studyDropDown"];
function StudyComponent_app_disable_study_editing_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-disable-study-editing", 18);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx_r0.studySummary)("marketYearCategoryId", ctx_r0.marketYearCategoryId)("setIsStudyDataFound", ctx_r0.hasStudyData);
} }
function StudyComponent_app_handson_table_6_Template(rf, ctx) { if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "app-handson-table", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onRequestForChangeClicked", function StudyComponent_app_handson_table_6_Template_app_handson_table_onRequestForChangeClicked_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r2.requestForChange($event); })("onRequestForSignOffClicked", function StudyComponent_app_handson_table_6_Template_app_handson_table_onRequestForSignOffClicked_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r4.requestForSignOff($event); })("onUnlockStudyClicked", function StudyComponent_app_handson_table_6_Template_app_handson_table_onUnlockStudyClicked_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r5.unlockStudy(); })("onSaveDataClicked", function StudyComponent_app_handson_table_6_Template_app_handson_table_onSaveDataClicked_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r6.saveStudyData($event); })("dataSourceDataChanged", function StudyComponent_app_handson_table_6_Template_app_handson_table_dataSourceDataChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r7.processDataSourceDataGrid($event); })("onDeleteRowClicked", function StudyComponent_app_handson_table_6_Template_app_handson_table_onDeleteRowClicked_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r8.onDeleteRow($event); })("onSignOffClicked", function StudyComponent_app_handson_table_6_Template_app_handson_table_onSignOffClicked_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r3); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r9.singOffData($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setDataSource", ctx_r1.studyData)("setDataRelations", ctx_r1.lookupDataRelations)("setCurrency", ctx_r1.currencyDropdown)("setVolumeUnits", ctx_r1.massUnitDropdown);
} }
class StudyComponent {
    constructor(isLoadingService, alertService, route, sharedService, studyService, router, ngZone) {
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.sharedService = sharedService;
        this.studyService = studyService;
        this.router = router;
        this.ngZone = ngZone;
        this.studyData = {};
        this.studyDataPivotGridPreview = {};
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_2__.DataRelationsEnum;
        this.studyDataViewId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
        this.hasStudyData = false;
        this.errorOccured = false;
        this.summaryData = [];
        this.deleteRowConfirmPopup = false;
        this.signOffConfirmPopup = false;
        this.currencyDropdown = [];
        this.massUnitDropdown = [];
        this.currenCurrency = new _model_dropdownCurrency_model__WEBPACK_IMPORTED_MODULE_5__.DropdownCurrency();
        this.currentVolumeUnit = new _model_dropdownUnits_model__WEBPACK_IMPORTED_MODULE_6__.DropdownUnits();
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getDataRelations();
    }
    ngOnInit() {
        this.getStudyData(this.marketYearCategoryId, this.studyProjectMarketYearId);
        this.getAllStudies();
        this.getCurrencyList(this.dataSetId);
        this.getUnitOfMassList(this.dataSetId);
    }
    getAllStudies() {
        this.sharedService.getStudyAreaSummary().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                // res.Data.sort((a,b) => b-a)
                this.summaryData = res.Data.map((item) => new src_model_studyAreaSummary_model__WEBPACK_IMPORTED_MODULE_4__.StudyAreaSummary().deserialize(item));
                this.summaryData.map((item) => {
                    item.backColour = 'white';
                    if (item.IsSignOff) {
                        item.backColour = 'lightgray';
                    }
                });
                this.summaryData.sort((a, b) => Number(b.LockedForEditBy) - Number(a.LockedForEditBy));
                this.summaryData.sort((a, b) => Number(a.IsSignOff) - Number(b.IsSignOff));
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            // if (err.status === 401) {
            //   this.isLoadingService.remove();
            // }
            this.isLoadingService.remove();
        });
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.dataRelationsData = data.find((item) => item.DatabaseId === +this.dataSetId &&
                    item.DataItemCategoryId === parseInt(this.studyAreaId.toString()));
                if (this.dataRelationsData) {
                    this.studyDataViewId = this.dataRelationsData.ViewId;
                }
                this.lookupDataRelations = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
    // Call get api for fetch data
    getStudyData(marketYearCategoryId, studyProjectMarketYearId) {
        this.isLoadingService.add();
        this.studyService
            .getStudyData(marketYearCategoryId, studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.studyData = [];
                this.studyData = res;
                this.studySummary = this.studyData.Data.StudySetup;
                this.hasStudyData =
                    this.studyData.Data.DataList !== null &&
                        this.studyData.Data.DataList.length > 0
                        ? true
                        : false;
                this.setStudyCurrencyAndUnits(this.studyData.Data);
                this.marketYearCategoryId = this.studyData.Data.MarketYearCategoryId;
                this.isLoadingService.remove();
            }
            else {
                // this.alertService.danger(res.Data);
                this.errorOccured = true;
                this.alertService.danger('Something went wrong. Please try after sometime.');
                this.isLoadingService.remove();
            }
        }, (err) => {
            // console.log(err);
            this.errorOccured = true;
            this.alertService.danger('Something went wrong. Please try after sometime.');
            this.isLoadingService.remove();
        });
    }
    processDataSourceDataGrid(dataSourceDataGrid) {
        let studyDataPivotGridPreview = [];
        for (let dataSourceItem of dataSourceDataGrid) {
            for (let yearItem in dataSourceItem.YearsData) {
                const columns = dataSourceItem.ColumnsData;
                const year = { Year: yearItem };
                const values = dataSourceItem.YearsData[yearItem];
                studyDataPivotGridPreview.push(Object.assign(Object.assign(Object.assign({}, columns), year), values));
            }
        }
        this.studyDataPivotGridPreview = studyDataPivotGridPreview;
    }
    // Call save api for saving data
    saveStudyData(data) {
        const dataSourceData = data.dataSourceData;
        const unitOfValues = data.unitOfValues;
        const saveDataSourceData = {
            marketYearCategoryId: this.studyData.Data.MarketYearCategoryId,
            studySetup: this.studySummary,
            unitOfValues: unitOfValues,
            yearsList: this.studyData.Data.YearsList,
            data: dataSourceData,
        };
        this.isLoadingService.add();
        this.studyService.saveStudyData(saveDataSourceData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.loadCurrentStudy();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometime.');
            this.isLoadingService.remove();
        });
    }
    // Call request for sign off data
    requestForSignOff(event) {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    // Call request for change data
    requestForChange(event) {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    // Call sign off data
    singOffData(dataSourceData) {
        this.signOffData = {
            data: dataSourceData,
            yearsList: this.studyData.Data.YearsList,
            marketYearCategoryId: this.studyData.Data.MarketYearCategoryId,
            studySetup: this.studySummary,
            unitOfValues: this.studyData.Data.UnitOfValues,
        };
        this.signOffConfirmPopup = true;
    }
    onSignOffData() {
        const formData = this.signOffData;
        this.isLoadingService.add();
        this.studyService.signOffStudyData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.loadCurrentStudy();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
            this.onSignOffConfirmHidden();
        }, (err) => {
            console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometime.');
            this.onSignOffConfirmHidden();
            this.isLoadingService.remove();
        });
    }
    onSignOffConfirmHidden() {
        this.signOffData = {};
        this.signOffConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
    // call when delete row button clicked
    onDeleteRow(row) {
        if (row) {
            this.deleteRowData = row;
            this.deleteRowConfirmPopup = true;
        }
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    confirmDeleteRow() {
        this.HandsonTableComponent.onDeleteRow(this.deleteRowData);
        this.onDeleteRowConfirmPopupHide();
        // this.isLoadingService.add();
        // this.sharedService
        //   .removeStudyDataRow(
        //     this.studySummary.StudyDataSetId as number,
        //     this.studySummary.StudyAreaId as number,
        //     this.marketYearCategoryId,
        //     this.deleteRowData.DataRowId
        //   )
        //   .subscribe(
        //     (res: ApiResponse) => {
        //       this.onDeleteRowConfirmPopupHide();
        //       if (res.Data) {
        //         this.alertService.success(
        //           'Your data row has been removed successfully.'
        //         );
        //         this.loadCurrentStudy();
        //       } else {
        //         this.alertService.danger(
        //           'Error: Something went wrong. Data row can not removed.'
        //         );
        //       }
        //       this.isLoadingService.remove();
        //     },
        //     (err) => {
        //       const msg =
        //         typeof err.error !== 'undefined' && err.error !== ''
        //           ? err.error
        //           : 'Error: Something went wrong.';
        //       this.onDeleteRowConfirmPopupHide();
        //       this.alertService.danger(msg);
        //       this.isLoadingService.remove();
        //     }
        //   );
    }
    loadCurrentStudy() {
        let currentUrl = this.router.url;
        this.ngZone.run(() => {
            this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
                this.router.navigate([currentUrl]);
            });
        });
    }
    // call for support data
    getCurrencyList(studyDataSetId) {
        this.sharedService.getCurrencies(studyDataSetId).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.currencyDropdown = res.Data;
                this.currencyDropdown.map((item) => {
                    item.CurrencyName = `${item.Name} (${item.CurrencyCode})`;
                    this.setStudyCurrencyAndUnits(this.studyData);
                });
            }
        }, (error) => {
            throw new Error(error);
        });
    }
    getUnitOfMassList(studyDataSetId) {
        this.sharedService.getVolumeUnits(studyDataSetId).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.massUnitDropdown = res.Data;
                this.setStudyCurrencyAndUnits(this.studyData);
            }
        }, (error) => {
            throw new Error(error);
        });
    }
    setStudyCurrencyAndUnits(data) {
        if (data === null || data === void 0 ? void 0 : data.UnitOfValues) {
            const volume = data.UnitOfValues.find((f) => f.Title === 'Volume');
            if (volume) {
                this.currentVolumeUnit = this.massUnitDropdown.find((f) => f.Id === volume.Id);
            }
            const currency = data.UnitOfValues.find((f) => f.Title === 'Currency');
            if (currency) {
                this.currenCurrency = this.currencyDropdown.find((f) => f.Id === currency.Id);
            }
        }
    }
}
StudyComponent.ɵfac = function StudyComponent_Factory(t) { return new (t || StudyComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_12__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_13__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_14__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_8__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_14__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__.NgZone)); };
StudyComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: StudyComponent, selectors: [["app-study"]], viewQuery: function StudyComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_0__.DisableStudyEditingComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_1__.HandsonTableComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.HandsonTableComponent = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.studyDropDown = _t);
    } }, decls: 28, vars: 25, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel", 1, "custom-tab-panel", 3, "swipeEnabled"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound", 4, "ngIf"], [3, "setDataSource", "setDataRelations", "setCurrency", "setVolumeUnits", "onRequestForChangeClicked", "onRequestForSignOffClicked", "onUnlockStudyClicked", "onSaveDataClicked", "dataSourceDataChanged", "onDeleteRowClicked", "onSignOffClicked", 4, "ngIf"], ["title", "Data Preview"], [3, "setPreviewData", "setStudySetup", "setMarketYearCategoryId", "setCurrency", "setCurrentCurrency", "setCurrentVolumeUnit", "setVolumeUnits"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], [1, "form-group", "text-center"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], [3, "setDataSource", "setDataRelations", "setCurrency", "setVolumeUnits", "onRequestForChangeClicked", "onRequestForSignOffClicked", "onUnlockStudyClicked", "onSaveDataClicked", "dataSourceDataChanged", "onDeleteRowClicked", "onSignOffClicked"]], template: function StudyComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, StudyComponent_app_disable_study_editing_5_Template, 1, 3, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, StudyComponent_app_handson_table_6_Template, 1, 4, "app-handson-table", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxi-item", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "pivot-grid-preview", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dx-popup", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function StudyComponent_Template_dx_popup_visibleChange_10_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function StudyComponent_Template_dx_popup_onHidden_10_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "p", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](14, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "dx-button", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function StudyComponent_Template_dx_button_onClick_16_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "dx-button", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function StudyComponent_Template_dx_button_onClick_17_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "dx-popup", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function StudyComponent_Template_dx_popup_visibleChange_18_listener($event) { return ctx.signOffConfirmPopup = $event; })("onHidden", function StudyComponent_Template_dx_popup_onHidden_18_listener() { return ctx.onSignOffConfirmHidden(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "p", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](22, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](24, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "dx-button", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function StudyComponent_Template_dx_button_onClick_26_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "dx-button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function StudyComponent_Template_dx_button_onClick_27_listener() { return ctx.signOffConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("swipeEnabled", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx.errorOccured);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("setPreviewData", ctx.studyDataPivotGridPreview)("setStudySetup", ctx.studySummary)("setMarketYearCategoryId", ctx.marketYearCategoryId)("setCurrency", ctx.currencyDropdown)("setCurrentCurrency", ctx.currenCurrency)("setCurrentVolumeUnit", ctx.currentVolumeUnit)("setVolumeUnits", ctx.massUnitDropdown);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.signOffConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_15__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_16__.DxiItemComponent, _angular_common__WEBPACK_IMPORTED_MODULE_17__.NgIf, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_0__.DisableStudyEditingComponent, src_app_shared_handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_1__.HandsonTableComponent, _shared_pivot_grid_preview_pivot_grid_preview_component__WEBPACK_IMPORTED_MODULE_10__.PivotGridPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxPopupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_19__.DxButtonComponent], styles: [".custom-dropdown[_ngcontent-%COMP%] {\r\n    margin-bottom: 0.5rem;\r\n    text-align: right;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InN0dWR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tLWRyb3Bkb3duIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcclxuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59Il19 */"] });


/***/ }),

/***/ 51491:
/*!******************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/supplier-market-share/supplier-market-share.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SupplierMarketShareComponent": () => (/* binding */ SupplierMarketShareComponent)
/* harmony export */ });
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _study_area_preview_components_supplier_market_share_preview_supplier_market_share_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component */ 36958);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























const _c0 = ["smsPreview"];
function SupplierMarketShareComponent_dx_data_grid_6_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r19.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r21.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r24.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_5_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r28); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r27.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_6_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r31); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r30.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r29.disabledSignOffButton);
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_7_div_1_Template, 2, 1, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r34); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r33.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_8_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_div_2_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_div_4_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_5_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_6_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_7_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_dxi_item_8_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function SupplierMarketShareComponent_dx_data_grid_6_dxi_column_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 63);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_22_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_div_22_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r39); const d_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r37.deleteRow(d_r35.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SupplierMarketShareComponent_dx_data_grid_6_div_22_dx_button_1_Template, 1, 0, "dx-button", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r35.data.DataRowId !== null);
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r40 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r40.value > 0 ? data_r40.value.toFixed(1) : "");
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r41 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r41.value > 0 ? data_r41.value : "");
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_25_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 68);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? (data_r42.value * 1).toFixed(1) : "");
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_25_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? (data_r42.value * 1).toFixed(1) : "");
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SupplierMarketShareComponent_dx_data_grid_6_div_25_input_1_Template, 1, 1, "input", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SupplierMarketShareComponent_dx_data_grid_6_div_25_span_2_Template, 2, 1, "span", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isStudyEditable);
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_26_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_dx_data_grid_6_div_26_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r51); const data_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r49.addNotes(data_r47); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SupplierMarketShareComponent_dx_data_grid_6_div_26_Template(rf, ctx) { if (rf & 1) {
    const _r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SupplierMarketShareComponent_dx_data_grid_6_div_26_dx_button_2_Template, 1, 0, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SupplierMarketShareComponent_dx_data_grid_6_div_26_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r53); const data_r47 = restoredCtx.$implicit; const ctx_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r52.showNotePopup(data_r47); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value);
} }
function SupplierMarketShareComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function SupplierMarketShareComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r54.onRowSaved($event); })("onCellPrepared", function SupplierMarketShareComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r56.onCellPreparedHighlighter($event); })("onCellHoverChanged", function SupplierMarketShareComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellHoverChanged($event); })("onRowPrepared", function SupplierMarketShareComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-grouping", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-paging", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "dxo-scrolling", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "dxo-editing", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "dxi-item", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, SupplierMarketShareComponent_dx_data_grid_6_div_9_Template, 3, 1, "div", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](10, SupplierMarketShareComponent_dx_data_grid_6_ng_container_10_Template, 9, 4, "ng-container", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, SupplierMarketShareComponent_dx_data_grid_6_dxi_column_21_Template, 1, 1, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, SupplierMarketShareComponent_dx_data_grid_6_div_22_Template, 2, 1, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, SupplierMarketShareComponent_dx_data_grid_6_div_23_Template, 3, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](24, SupplierMarketShareComponent_dx_data_grid_6_div_24_Template, 3, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, SupplierMarketShareComponent_dx_data_grid_6_div_25_Template, 3, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](26, SupplierMarketShareComponent_dx_data_grid_6_div_26_Template, 6, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("autoExpandAll", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("caption", ctx_r0.previousYear1)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 60)("caption", ctx_r0.currentYear)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "perCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function SupplierMarketShareComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 74);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function SupplierMarketShareComponent_dx_popup_21_Template(rf, ctx) { if (rf & 1) {
    const _r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SupplierMarketShareComponent_dx_popup_21_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r60.popupVisible = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6, "Market Segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "ng-select", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10, "Supplier");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "ng-select", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "input", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "dx-button", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SupplierMarketShareComponent_dx_popup_21_Template_dx_button_click_17_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("width", 300)("height", 380)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r3.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r3.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r3.marketSegments)("addTag", ctx_r3.createNewDataEntry.bind(ctx_r3, ctx_r3.dataRelationsEnum.MarketSegment));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r3.suppliers)("addTag", ctx_r3.createNewDataEntry.bind(ctx_r3, ctx_r3.dataRelationsEnum.Supplier));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Volume Year - ", ctx_r3.currentYear, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r3.newRowForm.invalid);
} }
const _c1 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function SupplierMarketShareComponent_dx_data_grid_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c1));
} }
const _c2 = function (a0) { return { "is-invalid": a0 }; };
class SupplierMarketShareComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.groupingValues = [];
        this.studyData = [];
        this.yearReduce = 1;
        this.volumeYears = [];
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize({});
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.marketSegments = [];
        this.suppliers = [];
        this.studyMarketYearCategoryId = 0;
        this.selectedRowItem = [];
        this.isManage = false;
        this.isStudyEditable = false;
        this.totalCurrentYearTotal = 0;
        this.disabledSignOffButton = false;
        this.marketSegmentVisePreviousYearTotal = {};
        this.marketSegmentViseCurrentYearTotal = {};
        this.studyTitle = '';
        this.studyPageTitle = '';
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.previewGridData = [];
        this.currentCurrency = {};
        this.previewGridStorageKey = '';
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        this.currentYear = new Date().getFullYear();
        this.previousYear1 = this.currentYear - 1;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            marketSegment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            supplier: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            CurrentYear: [null],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_2__.Constants.userDetailKey));
        this.getDataRelations();
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getMarketSegment();
    }
    ngOnInit() {
        // this.getSupplierMarketShareData();
        this.getSuppliers();
    }
    getSupplierMarketShareData() {
        this.isLoadingService.add();
        this.studyService
            .getSupplierMarketShareData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData = [];
                this.studyData =
                    studyData.SupplierMarketShareItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_0__.InitialSetup().deserialize(studyData.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - this.yearReduce;
                this.currentYear = currentYear;
                this.previousYear1 = currentYear - 1;
                // console.log(this.marketSegments);
                this.marketSegments.map((segmentData) => {
                    this.marketSegmentVisePreviousYearTotal[segmentData.Name] =
                        this.studyData
                            .filter((data) => data.MarketSegmentId === segmentData.Id)
                            .reduce((prev, curr) => prev + curr.PreviousYear1, 0);
                    this.marketSegmentViseCurrentYearTotal[segmentData.Name] =
                        this.studyData
                            .filter((data) => data.MarketSegmentId === segmentData.Id)
                            .reduce((prev, curr) => prev + curr.CurrentYear, 0);
                });
                console.log(this.marketSegmentViseCurrentYearTotal);
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                // console.log(this.disabledSignOffButton);
                // const totalPreviousVolume = this.studyData.reduce(
                //   (prev: number, curr: any) => prev + curr.PreviousYear1,
                //   0
                // );
                // const totalCurrentVolume = this.studyData.reduce(
                //   (prev: number, curr: any) => prev + curr.CurrentYear,
                //   0
                // );
                // this.totalCurrentYearTotal = totalCurrentVolume;
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let prevPer = 0;
                    if (item.PreviousYear1 != '' && item.PreviousYear1 > 0) {
                        prevPer = this.calculatePerVolume(+item.PreviousYear1, +this.marketSegmentVisePreviousYearTotal[item.MarketSegment]);
                    }
                    let currPer = 0;
                    if (item.CurrentYear != '' && item.CurrentYear > 0) {
                        currPer = this.calculatePerVolume(+item.CurrentYear, +this.marketSegmentViseCurrentYearTotal[item.MarketSegment]);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].PreviousYear1Per = parseFloat(prevPer.toFixed(1));
                    this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));
                    this.studyData[i].OldCurrentYear = item.CurrentYear;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.isLoadingService.remove();
            this.alertService.danger('Something went wrong. Please try again or contact administrator.');
        });
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
    getMarketSegment() {
        this.sharedService.getMarketSegment().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.marketSegments = res.Data;
                this.getSupplierMarketShareData();
            }
        });
    }
    getSuppliers() {
        this.sharedService.getSupplier().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.suppliers = res.Data;
            }
        });
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    onNotePopupHide() {
        this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: newRowData.CurrentYear,
            OldCurrentYear: newRowData.CurrentYear,
            DataRowId: '',
            LubricantDemandId: 0,
            MarketSegment: newRowData.marketSegment.Name,
            MarketSegmentId: newRowData.marketSegment.Id,
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: newRowData.PreviousYear1,
            SupplierName: newRowData.supplier.Name,
            SupplierId: newRowData.supplier.Id,
            PreviousYear1Per: 0,
            CurrentYearPer: 0,
            ChangeLog: '',
            ChangeLogObj: [],
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.MarketSegmentId == newRow.MarketSegmentId &&
            item.SupplierId == newRow.SupplierId);
        if (!isFound) {
            this.marketSegmentViseCurrentYearTotal[newRowData.marketSegment.Name] =
                this.marketSegmentViseCurrentYearTotal[newRowData.marketSegment.Name] +
                    parseFloat(newRowData.CurrentYear);
            this.studyData.push(newRow);
            this.studyData
                .filter((item) => item.MarketSegmentId === newRowData.marketSegment.Id)
                .map((item, i) => {
                let currPer = 0;
                if (item.CurrentYear != '' && item.CurrentYear > 0) {
                    currPer = this.calculatePerVolume(item.CurrentYear, this.marketSegmentViseCurrentYearTotal[newRowData.marketSegment.Name]);
                }
                this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));
            });
            this.studyData.sort((a, b) => a.MarketSegmentId - b.MarketSegmentId || a.SupplierId - b.SupplierId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
            // this.smsPreview.changeStudyData(this.studyData);
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            // console.log(e);
            const currentYear = +data.CurrentYear;
            const oldCurrentYEar = +data.OldCurrentYear;
            // console.log(currentYear, oldCurrentYEar);
            this.marketSegmentViseCurrentYearTotal[data.MarketSegment] =
                this.marketSegmentViseCurrentYearTotal[data.MarketSegment] -
                    oldCurrentYEar +
                    currentYear;
            // this.totalCurrentYearTotal = this.totalCurrentYearTotal - oldCurrentYEar;
            // this.totalCurrentYearTotal = this.totalCurrentYearTotal + currentYear;
            data.OldCurrentYear = currentYear;
            this.studyData
                .filter((item, index) => {
                item.index = index;
                return item.MarketSegmentId === data.MarketSegmentId;
            })
                .map((item, i) => {
                // console.log(item);
                if (item.CurrentYear > 0) {
                    const currPer = this.calculatePerVolume(item.CurrentYear, this.marketSegmentViseCurrentYearTotal[data.MarketSegment]);
                    this.studyData[item.index].CurrentYearPer = parseFloat(currPer.toFixed(1));
                }
            });
            // this.smsPreview.changeStudyData(this.studyData);
            // console.log(this.studyData);
        }
    }
    calculatePerVolume(colValue, totalColValue) {
        return parseFloat(((colValue * 100) / totalColValue).toFixed(1));
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    saveStudyData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            supplierMarketShareItems: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveSupplierMarketShareData(studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffSupplierMarketShareData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSupplierMarketShareData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            supplierMarketShareItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService
            .signOffSupplierMarketShareData(formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSupplierMarketShareData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = ['CurrentYear'];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = ['CurrentYear'];
        if (typeof event.column !== 'undefined') {
            const isFound = allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        console.log(dataRelationData, this.datRelationsData);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.MarketSegment:
                this.getMarketSegment();
                break;
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.Supplier:
                this.getSuppliers();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
SupplierMarketShareComponent.ɵfac = function SupplierMarketShareComponent_Factory(t) { return new (t || SupplierMarketShareComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService)); };
SupplierMarketShareComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SupplierMarketShareComponent, selectors: [["app-supplier-market-share"]], viewQuery: function SupplierMarketShareComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.smsPreview = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 44, vars: 45, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "setStudyData", "previousYear1"], ["smsPreview", ""], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", 4, "ngIf"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "autoExpandAll"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "virtual"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "MarketSegment", 3, "allowEditing"], ["dataField", "SupplierName", 3, "allowEditing"], ["caption", "Volume (in KTonnes)"], ["dataField", "PreviousYear1", "cellTemplate", "previousYear1CellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "% of Total", "dataField", "PreviousYear1Per", "cellTemplate", "perCellTemplate", 3, "width", "allowEditing"], ["dataField", "CurrentYear", "cellTemplate", "volumeYearCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "% of Total", "cellTemplate", "perCellTemplate", "dataField", "CurrentYearPer", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body"], ["bindLabel", "Name", "formControlName", "marketSegment", "placeholder", "Select Market Segment", "addTagText", "Create New", 3, "items", "addTag"], ["bindLabel", "Name", "formControlName", "supplier", "placeholder", "Select Supplier", "addTagText", "Create New", 3, "items", "addTag"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function SupplierMarketShareComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, SupplierMarketShareComponent_dx_data_grid_6_Template, 27, 44, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SupplierMarketShareComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-supplier-market-share-preview", 9, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "dx-popup", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SupplierMarketShareComponent_Template_dx_popup_visibleChange_13_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function SupplierMarketShareComponent_Template_dx_popup_onHidden_13_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "form", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](18, "textarea", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "dx-button", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_Template_dx_button_onClick_20_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, SupplierMarketShareComponent_dx_popup_21_Template, 18, 14, "dx-popup", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "dx-popup", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SupplierMarketShareComponent_Template_dx_popup_visibleChange_22_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function SupplierMarketShareComponent_Template_dx_popup_onHidden_22_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, SupplierMarketShareComponent_dx_data_grid_25_Template, 4, 8, "dx-data-grid", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "dx-popup", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SupplierMarketShareComponent_Template_dx_popup_visibleChange_26_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "p", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](32, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_Template_dx_button_onClick_34_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_Template_dx_button_onClick_35_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "dx-popup", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SupplierMarketShareComponent_Template_dx_popup_visibleChange_36_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function SupplierMarketShareComponent_Template_dx_popup_onHidden_36_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "p", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](40, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_Template_dx_button_onClick_42_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "dx-button", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SupplierMarketShareComponent_Template_dx_button_onClick_43_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("setStudyData", ctx.studyData)("previousYear1", ctx.previousYear1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](43, _c2, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoGroupingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoScrollingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _study_area_preview_components_supplier_market_share_preview_supplier_market_share_preview_component__WEBPACK_IMPORTED_MODULE_10__.SupplierMarketSharePreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdXBwbGllci1tYXJrZXQtc2hhcmUuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 50004:
/*!******************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/synthetic-penetration/synthetic-penetration.component.ts ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SyntheticPenetrationComponent": () => (/* binding */ SyntheticPenetrationComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _study_area_preview_components_synthetic_penetration_preview_synthetic_penetration_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component */ 17763);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























const _c0 = ["studyPreview"];
function SyntheticPenetrationComponent_div_5_li_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "li");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const errorMessage_r7 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" ", errorMessage_r7, " ");
} }
function SyntheticPenetrationComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "ul", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SyntheticPenetrationComponent_div_5_li_2_Template, 2, 1, "li", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r0.errorMessages);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r8.studyTitle);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r23); const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r22.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r24.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r17.errorMessages.length > 0);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r28); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r27.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r26.errorMessages.length > 0);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_5_div_1_Template, 2, 1, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r31); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r30.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r29.errorMessages.length > 0);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_6_div_1_Template, 2, 1, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r34); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r33.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r32.disabledSignOffButton || ctx_r32.errorMessages.length > 0);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_7_div_1_Template, 2, 1, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r37); const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r36.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_8_div_1_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_div_2_Template, 2, 0, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_div_4_Template, 2, 1, "div", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_5_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_6_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_7_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_dxi_item_8_Template, 2, 0, "dxi-item", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r9.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r9.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r9.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r9.isLockedStudy);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_dxi_column_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 63);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_18_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_div_18_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r42); const d_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r40.deleteRow(d_r38.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SyntheticPenetrationComponent_dx_data_grid_7_div_18_dx_button_1_Template, 1, 0, "dx-button", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r38 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r38.data.DataRowId !== null);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r43 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r43.value > 0 ? data_r43.value.toFixed(1) : "");
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r44 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r44.value > 0 ? data_r44.value : "");
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_21_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 68);
} if (rf & 2) {
    const data_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r45.value > 0 ? data_r45.value.toFixed(1) : "");
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_21_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r45.value > 0 ? data_r45.value.toFixed(1) : "");
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, SyntheticPenetrationComponent_dx_data_grid_7_div_21_input_1_Template, 1, 1, "input", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SyntheticPenetrationComponent_dx_data_grid_7_div_21_span_2_Template, 2, 1, "span", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r14.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r14.isStudyEditable);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_22_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_dx_data_grid_7_div_22_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r54); const data_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r52.addNotes(data_r50); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function SyntheticPenetrationComponent_dx_data_grid_7_div_22_Template(rf, ctx) { if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, SyntheticPenetrationComponent_dx_data_grid_7_div_22_dx_button_2_Template, 1, 0, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SyntheticPenetrationComponent_dx_data_grid_7_div_22_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r56); const data_r50 = restoredCtx.$implicit; const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r55.showNotePopup(data_r50); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r50 = ctx.$implicit;
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r15.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r50.value);
} }
function SyntheticPenetrationComponent_dx_data_grid_7_Template(rf, ctx) { if (rf & 1) {
    const _r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function SyntheticPenetrationComponent_dx_data_grid_7_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r58); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onRowSaved($event); })("onCellPrepared", function SyntheticPenetrationComponent_dx_data_grid_7_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r58); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r59.onCellPreparedHighlighter($event); })("onCellHoverChanged", function SyntheticPenetrationComponent_dx_data_grid_7_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r58); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r60.onCellHoverChanged($event); })("onRowPrepared", function SyntheticPenetrationComponent_dx_data_grid_7_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r58); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r61.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-filter-row", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-header-filter", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-paging", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-editing", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxi-item", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, SyntheticPenetrationComponent_dx_data_grid_7_div_7_Template, 3, 1, "div", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SyntheticPenetrationComponent_dx_data_grid_7_ng_container_8_Template, 9, 4, "ng-container", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](10, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](17, SyntheticPenetrationComponent_dx_data_grid_7_dxi_column_17_Template, 1, 1, "dxi-column", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, SyntheticPenetrationComponent_dx_data_grid_7_div_18_Template, 2, 1, "div", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, SyntheticPenetrationComponent_dx_data_grid_7_div_19_Template, 3, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, SyntheticPenetrationComponent_dx_data_grid_7_div_20_Template, 3, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, SyntheticPenetrationComponent_dx_data_grid_7_div_21_Template, 3, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, SyntheticPenetrationComponent_dx_data_grid_7_div_22_Template, 6, 2, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r1.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r1.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r1.previousYear1)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r1.currentYear)("allowEditing", !ctx_r1.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r1.isStudyEditable && !ctx_r1.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "perCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function SyntheticPenetrationComponent_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 74);
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r2.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function SyntheticPenetrationComponent_dx_popup_14_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "input", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const syntheticType_r64 = ctx.$implicit;
    const ctx_r63 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate2"]("", syntheticType_r64.Name, " - ", ctx_r63.currentYear, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpropertyInterpolate1"]("formControlName", "currentYear_", syntheticType_r64.Id, "");
} }
function SyntheticPenetrationComponent_dx_popup_14_Template(rf, ctx) { if (rf & 1) {
    const _r66 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SyntheticPenetrationComponent_dx_popup_14_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r65 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r65.popupVisible = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6, "Segment");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "ng-select", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, SyntheticPenetrationComponent_dx_popup_14_div_8_Template, 4, 3, "div", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "div", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dx-button", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function SyntheticPenetrationComponent_dx_popup_14_Template_dx_button_click_10_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r66); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r67.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("width", 300)("height", 470)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r4.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r4.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r4.segments);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngForOf", ctx_r4.syntheticTypes);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r4.newRowForm.invalid);
} }
const _c1 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function SyntheticPenetrationComponent_dx_data_grid_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 82);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 83);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 84);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 85);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r5.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c1));
} }
const _c2 = function (a0) { return { "is-invalid": a0 }; };
class SyntheticPenetrationComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyTitle = '';
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize({});
        this.currentYear = 0;
        this.previousYear1 = 0;
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.isStudyEditable = false;
        this.isManage = false;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.segments = [];
        this.syntheticTypes = [];
        this.disabledButtons = false;
        this.errorMessages = [];
        this.yearReduce = 1;
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum;
        this.previewGridData = [];
        this.currentCurrency = {};
        this.previewGridStorageKey = '';
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_2__.StudyDataUrlEnum;
        this.volumeYears = [];
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            Segment: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            // SyntheticType: [null, Validators.required],
            // CurrentYear: this.formBuilder.array({}),
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_4__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.getDataRelations();
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getSyntheticType();
    }
    ngOnInit() {
        this.getSPData();
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
    getSPData() {
        this.isLoadingService.add();
        this.studyService
            .getSPData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData =
                    studyData.SyntheticPenetrationItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_3__.InitialSetup().deserialize(studyData.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - this.yearReduce;
                this.currentYear = currentYear;
                this.previousYear1 = currentYear - 1;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.studyPreview.changeStudyData(this.studyData);
                this.getSegment(this.studySummary.MarketId);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    getSegment(MarketId = 0) {
        this.sharedService.getSPSegments(MarketId).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.segments = res.Data;
            }
            else {
                this.segments = [];
            }
        }, (err) => {
            this.segments = [];
        });
    }
    getSyntheticType() {
        this.sharedService.getSyntheticType().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.syntheticTypes = res.Data;
                this.syntheticTypes.map((item) => {
                    const fieldId = `currentYear_${item.Id}`;
                    this.newRowForm.addControl(fieldId, new _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControl(null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required));
                });
            }
            else {
                this.syntheticTypes = [];
            }
        }, (err) => {
            this.syntheticTypes = [];
        });
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const isFound = this.studyData.find((item) => item.Segment == newRowData.Segment.Name);
        if (!isFound) {
            let newRows = [];
            this.syntheticTypes.map((item) => {
                newRows.push({
                    CurrentYear: +newRowData[`currentYear_${item.Id}`],
                    DataRowId: '',
                    Notes: null,
                    StudyNotes: '',
                    EditNote: false,
                    NoteArray: null,
                    PreviousYear1: '',
                    Segment: newRowData.Segment.Name,
                    SyntheticType: item.Name,
                    SyntheticTypeDescription: item.Description,
                    SyntheticTypeId: item.Id,
                    IsNewRow: true,
                });
            });
            // return false;
            const totalPer = newRows.reduce((prev, item) => prev + item.CurrentYear, 0);
            if (totalPer === 100) {
                newRows.map((singleRow) => {
                    this.studyData.push(singleRow);
                });
                // this.studyData.push(newRow);
                // this.studyData.sort(
                //   (a, b) => a.Segment - b.Segment || a.SupplierId - b.SupplierId
                // );
                this.popupVisible = false;
                this.newRowForm.reset();
                this.newRowForm.updateValueAndValidity();
                // this.studyPreview.changeStudyData(this.studyData);
            }
            else {
                this.alertService.danger(`You need to add 100% for '${newRowData.Segment.Name}'.`);
                // this.errorMessages.push(
                //   `You need to add 100% for '${newRowData.Segment.Name}'.`
                // );
            }
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    onNotePopupHide() {
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            const currentYearValue = +data.CurrentYear;
            const totalPer = this.studyData
                .filter((item) => item.Segment === data.Segment)
                .reduce((prev, cur) => prev + cur.CurrentYear, 0)
                .toFixed(1);
            // this.studyPreview.changeStudyData(this.studyData);
            this.disabledButtons = false;
            const errorMessage = `You need to add 100% for '${data.Segment}'.`;
            if (totalPer !== '100.0') {
                // this.alertService.danger(`You need to add 100% for '${data.Segment}'.`);
                const found = this.errorMessages.find((item) => item == errorMessage);
                if (!found) {
                    this.errorMessages.push(`You need to add 100% for '${data.Segment}'.`);
                }
                this.disabledButtons = true;
            }
            else {
                this.errorMessages = this.errorMessages.filter((item) => item !== errorMessage);
            }
        }
    }
    saveStudyData() {
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            syntheticPenetrationItems: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService.saveSPData(studyDataInfo).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.alertService.danger('Something went wrong. Please try again later.');
            this.isLoadingService.remove();
        });
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForSignOffSPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeSPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            syntheticPenetrationItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffSPData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSPData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = ['CurrentYear'];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = ['CurrentYear'];
        if (typeof event.column !== 'undefined') {
            const isFound = allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_1__.DataRelationsEnum.Segment:
                this.getSegment();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
SyntheticPenetrationComponent.ɵfac = function SyntheticPenetrationComponent_Factory(t) { return new (t || SyntheticPenetrationComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService)); };
SyntheticPenetrationComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: SyntheticPenetrationComponent, selectors: [["app-synthetic-penetration"]], viewQuery: function SyntheticPenetrationComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.studyPreview = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 45, vars: 46, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], ["class", "alert alert-danger", 4, "ngIf"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "studyData", "currentYear", "previousYear"], ["studyPreview", ""], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", 4, "ngIf"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], [1, "alert", "alert-danger"], [1, "pb-0", "mb-0"], [4, "ngFor", "ngForOf"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], [3, "enabled"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "Segment", "sortOrder", "asc", 3, "allowEditing"], ["dataField", "SyntheticType", 3, "allowEditing"], ["caption", "Market Penetration"], ["dataField", "PreviousYear1", "alignment", "right", "cellTemplate", "previousYear1CellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["dataField", "CurrentYear", "alignment", "right", "cellTemplate", "volumeYearCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "disabled", "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "disabled", "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "disabled", "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body"], ["bindLabel", "Name", "formControlName", "Segment", "placeholder", "Select Market Segment", 3, "items"], ["class", "form-group", 4, "ngFor", "ngForOf"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "click"], ["type", "text", 1, "form-control", 3, "formControlName"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function SyntheticPenetrationComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, SyntheticPenetrationComponent_div_5_Template, 3, 1, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](6, "app-disable-study-editing", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, SyntheticPenetrationComponent_dx_data_grid_7_Template, 23, 38, "dx-data-grid", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "dx-tooltip", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](9, SyntheticPenetrationComponent_div_9_Template, 1, 1, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxi-item", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](11, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "app-synthetic-penetration-preview", 10, 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](14, SyntheticPenetrationComponent_dx_popup_14_Template, 11, 11, "dx-popup", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "dx-popup", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SyntheticPenetrationComponent_Template_dx_popup_visibleChange_15_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function SyntheticPenetrationComponent_Template_dx_popup_onHidden_15_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "form", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](19, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](20, "textarea", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "dx-button", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_Template_dx_button_onClick_22_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "dx-popup", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SyntheticPenetrationComponent_Template_dx_popup_visibleChange_23_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function SyntheticPenetrationComponent_Template_dx_popup_onHidden_23_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](25, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](26, SyntheticPenetrationComponent_dx_data_grid_26_Template, 4, 8, "dx-data-grid", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "dx-popup", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SyntheticPenetrationComponent_Template_dx_popup_visibleChange_27_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](30, "p", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](31, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](32, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](33, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_Template_dx_button_onClick_35_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "dx-button", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_Template_dx_button_onClick_36_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "dx-popup", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function SyntheticPenetrationComponent_Template_dx_popup_visibleChange_37_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function SyntheticPenetrationComponent_Template_dx_popup_onHidden_37_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](40, "p", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](41, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "dx-button", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_Template_dx_button_onClick_43_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](44, "dx-button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function SyntheticPenetrationComponent_Template_dx_button_onClick_44_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.errorMessages.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyData", ctx.studyData)("currentYear", ctx.currentYear)("previousYear", ctx.previousYear1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](44, _c2, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgForOf, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _study_area_preview_components_synthetic_penetration_preview_synthetic_penetration_preview_component__WEBPACK_IMPORTED_MODULE_10__.SyntheticPenetrationPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzeW50aGV0aWMtcGVuZXRyYXRpb24uY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 13818:
/*!**********************************************************************************************************!*\
  !*** ./src/app/pages/study-area/components/vehicle-parc-statistics/vehicle-parc-statistics.component.ts ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "VehicleParcStatisticsComponent": () => (/* binding */ VehicleParcStatisticsComponent)
/* harmony export */ });
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/initialSetup.model */ 56943);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../shared/disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../show-initial-setup/show-initial-setup.component */ 78351);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular/core */ 85915);
/* harmony import */ var _study_area_preview_components_vehicle_parc_statistics_preview_vehicle_parc_statistics_preview_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component */ 52864);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
























const _c0 = ["studyPreview"];
function VehicleParcStatisticsComponent_dx_data_grid_6_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](ctx_r5.studyTitle);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_div_2_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r19.addNewRowPopup(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_div_4_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](3); return ctx_r21.saveStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_5_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_5_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r24.onRequestForSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_5_div_1_Template, 2, 0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_6_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_6_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r28); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r27.onRequestForChangeDataClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_6_div_1_Template, 2, 0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_7_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r31 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_7_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r31); const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r30.onSignOffClick(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r29.disabledSignOffButton);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_7_div_1_Template, 2, 1, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_8_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dx-button", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_8_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r34); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](4); return ctx_r33.unlockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dxi-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_8_div_1_Template, 2, 0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "dxi-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_div_2_Template, 2, 0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 51);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](4, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_div_4_Template, 2, 0, "div", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](5, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_5_Template, 2, 0, "dxi-item", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_6_Template, 2, 0, "dxi-item", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_7_Template, 2, 0, "dxi-item", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_dxi_item_8_Template, 2, 0, "dxi-item", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isManage);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r6.isLockedStudy);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_dxi_column_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "dxi-column", 60);
} if (rf & 2) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 50);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_19_dx_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r39 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_div_19_dx_button_1_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r39); const d_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r37.deleteRow(d_r35.data.DataRowId); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, VehicleParcStatisticsComponent_dx_data_grid_6_div_19_dx_button_1_Template, 1, 0, "dx-button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const d_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", d_r35.data.DataRowId !== null);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r40 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r40.value > 0 ? data_r40.value.toFixed(1) : "");
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r41 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r41.value > 0 ? data_r41.value : "");
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_22_input_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "input", 65);
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("value", data_r42.value > 0 ? (data_r42.value * 1).toFixed(1) : "");
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_22_span_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r42.value > 0 ? (data_r42.value * 1).toFixed(1) : "");
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, VehicleParcStatisticsComponent_dx_data_grid_6_div_22_input_1_Template, 1, 1, "input", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, VehicleParcStatisticsComponent_dx_data_grid_6_div_22_span_2_Template, 2, 1, "span", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r11.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx_r11.isStudyEditable);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_23_dx_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r51 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_data_grid_6_div_23_dx_button_2_Template_dx_button_onClick_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r51); const data_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]().$implicit; const ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r49.addNotes(data_r47); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_div_23_Template(rf, ctx) { if (rf & 1) {
    const _r53 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, VehicleParcStatisticsComponent_dx_data_grid_6_div_23_dx_button_2_Template, 1, 0, "dx-button", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "a", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("click", function VehicleParcStatisticsComponent_dx_data_grid_6_div_23_Template_a_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r53); const data_r47 = restoredCtx.$implicit; const ctx_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2); return ctx_r52.showNotePopup(data_r47); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r47 = ctx.$implicit;
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r12.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate"](data_r47.value);
} }
function VehicleParcStatisticsComponent_dx_data_grid_6_Template(rf, ctx) { if (rf & 1) {
    const _r55 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onSaved", function VehicleParcStatisticsComponent_dx_data_grid_6_Template_dx_data_grid_onSaved_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r54.onRowSaved($event); })("onCellPrepared", function VehicleParcStatisticsComponent_dx_data_grid_6_Template_dx_data_grid_onCellPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r56.onCellPreparedHighlighter($event); })("onCellHoverChanged", function VehicleParcStatisticsComponent_dx_data_grid_6_Template_dx_data_grid_onCellHoverChanged_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r57.onCellHoverChanged($event); })("onRowPrepared", function VehicleParcStatisticsComponent_dx_data_grid_6_Template_dx_data_grid_onRowPrepared_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r55); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r58.onRowPrepared($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxo-paging", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxo-filter-row", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxo-header-filter", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](4, "dxo-editing", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "dxo-toolbar");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](6, "dxi-item", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](7, VehicleParcStatisticsComponent_dx_data_grid_6_div_7_Template, 3, 1, "div", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, VehicleParcStatisticsComponent_dx_data_grid_6_ng_container_8_Template, 9, 4, "ng-container", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](9, "dxi-column", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "dxi-column", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "dxi-column", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](12, "dxi-column", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](13, "dxi-column", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](14, "dxi-column", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](15, "dxi-column", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](16, "dxi-column", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](17, "dxi-column", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](18, VehicleParcStatisticsComponent_dx_data_grid_6_dxi_column_18_Template, 1, 1, "dxi-column", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](19, VehicleParcStatisticsComponent_dx_data_grid_6_div_19_Template, 2, 1, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](20, VehicleParcStatisticsComponent_dx_data_grid_6_div_20_Template, 3, 1, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](21, VehicleParcStatisticsComponent_dx_data_grid_6_div_21_Template, 3, 1, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](22, VehicleParcStatisticsComponent_dx_data_grid_6_div_22_Template, 3, 2, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](23, VehicleParcStatisticsComponent_dx_data_grid_6_div_23_Template, 6, 2, "div", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r0.studyData)("showBorders", true)("allowColumnResizing", true)("columnMinWidth", 50)("columnHidingEnabled", false)("rowAlternationEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("enabled", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("visible", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowUpdating", true)("allowAdding", false)("allowDeleting", false)("enabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r0.previousYear1)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("caption", ctx_r0.currentYear)("allowEditing", !ctx_r0.isStudyEditable)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 100)("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("allowEditing", false)("visible", false)("allowFiltering", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", !ctx_r0.isStudyEditable && !ctx_r0.disabledSignOffButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "previousYear1CellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "perCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "volumeYearCellTemplate");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "notesCellTemplate");
} }
function VehicleParcStatisticsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "div", 71);
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("innerHTML", ctx_r1.TooltipText, _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsanitizeHtml"]);
} }
function VehicleParcStatisticsComponent_dx_popup_13_Template(rf, ctx) { if (rf & 1) {
    const _r61 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-popup", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function VehicleParcStatisticsComponent_dx_popup_13_Template_dx_popup_visibleChange_0_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r60.popupVisible = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "div", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "form", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](5, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](6, "Vehicle Type");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](7, "ng-select", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](8, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "input", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](12, "div", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](13, "dx-button", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_dx_popup_13_Template_dx_button_onClick_13_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵrestoreView"](_r61); const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"](); return ctx_r62.submitNewRow(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("showTitle", true)("width", 300)("height", 300)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx_r3.popupVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx_r3.newRowForm);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("items", ctx_r3.vehicleTypes)("addTag", ctx_r3.createNewDataEntry.bind(ctx_r3, ctx_r3.dataRelationsEnum.VehicleType));
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"]("Volume Year - ", ctx_r3.currentYear, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx_r3.newRowForm.invalid);
} }
const _c1 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function VehicleParcStatisticsComponent_dx_data_grid_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "dx-data-grid", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](1, "dxi-column", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](2, "dxi-column", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](3, "dxi-column", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dataSource", ctx_r4.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction0"](7, _c1));
} }
const _c2 = function (a0) { return { "is-invalid": a0 }; };
class VehicleParcStatisticsComponent {
    constructor(studyService, isLoadingService, alertService, route, router, sharedService, formBuilder, localStorageService) {
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.route = route;
        this.router = router;
        this.sharedService = sharedService;
        this.formBuilder = formBuilder;
        this.localStorageService = localStorageService;
        this.studyTitle = '';
        this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize({});
        this.currentYear = 0;
        this.CurrentYearPer = 0;
        this.previousYear1 = 0;
        this.previousYear1Per = 0;
        this.totalCurrentYear = 0;
        this.totalPreviousYear1 = 0;
        this.popupVisible = false;
        this.notePopupVisible = false;
        this.confirmPopup = false;
        this.viewNotePopup = false;
        this.noteSubmit = false;
        this.isStudyEditable = false;
        this.isManage = false;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.studyMarketYearCategoryId = 0;
        this.studyData = [];
        this.disabledSignOffButton = false;
        this.segments = [];
        this.syntheticTypes = [];
        this.disabledButtons = false;
        this.errorMessages = [];
        this.yearReduce = 1;
        this.vehicleTypes = [];
        this.isTooltipVisible = false;
        this.TooltipText = '';
        this.datRelationsData = [];
        this.dataRelationsEnum = src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum;
        this.previewGridData = [];
        this.currentCurrency = {};
        this.previewGridStorageKey = '';
        this.studyDataViewId = 0;
        this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_4__.StudyDataUrlEnum;
        this.volumeYears = [];
        this.deleteRowConfirmPopup = false;
        this.isLockedStudy = false;
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newRowForm = this.formBuilder.group({
            vehicleType: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            CurrentYear: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
        });
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.Validators.required],
            rowData: [null],
        });
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_2__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
        this.getDataRelations();
        this.isManage = this.userDetail.IsManager == true ? true : false;
        this.getVehicleTypes();
    }
    ngOnInit() {
        this.getSPData();
    }
    getDataRelations() {
        this.sharedService.getDataRelationsData().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const data = res.Data;
                this.datRelationsData = data.filter((item) => item.DatabaseId === +this.dataSetId);
            }
        });
    }
    getSPData() {
        this.isLoadingService.add();
        this.studyService
            .getVPSData(this.marketYearCategoryId, this.studyProjectMarketYearId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyData = res.Data;
                this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;
                this.studyData =
                    studyData.VehicleParcItems;
                this.studySummary = new src_model_initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup().deserialize(studyData.InitialSetup);
                this.isManage =
                    this.userDetail.Id === this.studySummary.ProjectLeadId
                        ? true
                        : false;
                this.isLockedStudy =
                    !this.studySummary.IsSignOff &&
                        this.studySummary.LockedForEditBy === this.userDetail.Id
                        ? true
                        : false;
                this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;
                this.isStudyEditable = this.studySummary.IsSignOff || false;
                let currentYear = this.studySummary.StudyYear || new Date().getFullYear();
                currentYear = currentYear - this.yearReduce;
                this.currentYear = currentYear;
                this.previousYear1 = currentYear - 1;
                const isDataRowNull = this.studyData.find((data) => data.DataRowId !== null);
                if (!isDataRowNull) {
                    this.disabledSignOffButton = true;
                }
                const { totalCurrentYear, totalPreviousYear1 } = this.studyData.reduce(({ totalCurrentYear, totalPreviousYear1 }, currentYear) => ({
                    totalCurrentYear: totalCurrentYear + currentYear.CurrentYear,
                    totalPreviousYear1: totalPreviousYear1 + currentYear.PreviousYear1,
                }), { totalCurrentYear: 0, totalPreviousYear1: 0 });
                this.totalPreviousYear1 = totalPreviousYear1;
                this.totalCurrentYear = totalCurrentYear;
                this.studyData.map((item, i) => {
                    const rowNoteArray = [];
                    if (item.Notes !== null) {
                        const noteArray = item.Notes.split('|||');
                        noteArray.map((singleVal) => {
                            const n = singleVal.split('@@@');
                            const d = n[0].split('###');
                            rowNoteArray.push({
                                name: d[0].trim(),
                                date: new Date(d[1].trim()),
                                note: n[1].trim(),
                            });
                        });
                    }
                    let sortRowNoteArray = [];
                    if (rowNoteArray.length > 0) {
                        sortRowNoteArray = rowNoteArray.sort((a, b) => b.date - a.date);
                    }
                    let prevPer = 0;
                    if (item.PreviousYear1 != '' && item.PreviousYear1 > 0) {
                        prevPer = this.calculatePerVolume(item.PreviousYear1, this.totalPreviousYear1);
                    }
                    let currPer = 0;
                    if (item.CurrentYear != '' && item.CurrentYear > 0) {
                        currPer = this.calculatePerVolume(item.CurrentYear, this.totalCurrentYear);
                    }
                    let changelogObj = [];
                    if (item.ChangeLog !== null) {
                        const colValues = item.ChangeLog.split('|||');
                        if (colValues) {
                            colValues.map((cv) => {
                                const colValueArray = cv.trim().split('###');
                                // console.log(colValueArray);
                                changelogObj[colValueArray[3]] = {
                                    name: colValueArray[0],
                                    date: colValueArray[1],
                                    oldValue: colValueArray[2],
                                    year: colValueArray[3],
                                };
                            });
                        }
                    }
                    this.studyData[i].StudyNotes =
                        rowNoteArray.length > 0 ? rowNoteArray[0].note : '';
                    this.studyData[i].EditNote = false;
                    this.studyData[i].Notes = null;
                    this.studyData[i].NoteArray = rowNoteArray;
                    this.studyData[i].PreviousYear1Per = parseFloat(prevPer.toFixed(1));
                    this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));
                    this.studyData[i].OldCurrentYear = item.CurrentYear;
                    this.studyData[i].ChangeLogObj = changelogObj;
                });
                this.studyPreview.changeStudyData(this.studyData);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
            }
        });
    }
    getVehicleTypes() {
        this.sharedService.getVehicleTypes().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.vehicleTypes = res.Data;
            }
        });
    }
    calculatePerVolume(colValue, totalColValue) {
        return parseFloat(((colValue * 100) / totalColValue).toFixed(1));
    }
    onRowSaved(e) {
        if (e.changes) {
            const data = e.changes[0].data;
            // console.log(e);
            const currentYear = +data.CurrentYear;
            const oldCurrentYEar = +data.OldCurrentYear;
            this.totalCurrentYear = this.totalCurrentYear - oldCurrentYEar;
            this.totalCurrentYear = this.totalCurrentYear + currentYear;
            data.OldCurrentYear = currentYear;
            this.studyData.map((item, i) => {
                // console.log(item);
                if (item.CurrentYear > 0) {
                    const currPer = this.calculatePerVolume(item.CurrentYear, this.totalCurrentYear);
                    this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));
                }
            });
            // this.studyPreview.changeStudyData(this.studyData);
            // console.log(this.studyData);
        }
    }
    addNewRowPopup() {
        this.popupVisible = true;
    }
    submitNewRow() {
        const newRowData = this.newRowForm.value;
        const newRow = {
            CurrentYear: newRowData.CurrentYear,
            OldCurrentYear: newRowData.CurrentYear,
            DataRowId: '',
            Notes: null,
            StudyNotes: '',
            EditNote: false,
            NoteArray: null,
            PreviousYear1: newRowData.PreviousYear1,
            PreviousYear1Per: 0,
            CurrentYearPer: 0,
            VehicleType: newRowData.vehicleType.Name,
            VehicleTypeId: newRowData.vehicleType.Id,
            ChangeLog: '',
            ChangeLogObj: [],
            IsNewRow: true,
        };
        const isFound = this.studyData.find((item) => item.VehicleTypeId == newRow.VehicleTypeId);
        if (!isFound) {
            this.totalCurrentYear =
                this.totalCurrentYear + parseFloat(newRowData.CurrentYear);
            this.studyData.push(newRow);
            this.studyData.map((item, i) => {
                let currPer = 0;
                if (item.CurrentYear != '' && item.CurrentYear > 0) {
                    currPer = this.calculatePerVolume(item.CurrentYear, this.totalCurrentYear);
                }
                this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));
            });
            // this.studyData.sort((a, b) => a.VehicleTypeId - b.VehicleTypeId);
            this.popupVisible = false;
            this.newRowForm.reset();
            this.newRowForm.updateValueAndValidity();
            // this.studyPreview.changeStudyData(this.studyData);
        }
        else {
            this.alertService.danger('You have already added this data in row.');
        }
    }
    onRowPrepared(e) {
        if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {
            if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {
                e.rowElement.classList.add('highlighter-tr');
            }
        }
    }
    saveStudyData() {
        this.studyData.map((d) => {
            delete d.ChangeLogObj;
            return d;
        });
        const studyDataInfo = {
            marketYearCategoryId: this.marketYearCategoryId,
            initialSetup: this.studySummary,
            vehicleParcItems: this.studyData,
        };
        this.isLoadingService.add();
        this.studyService
            .saveVPData(studyDataInfo)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.reloadCurrentRoute();
                // this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    addNotes(data) {
        var _a, _b;
        (_a = this.newNoteForm.get('note')) === null || _a === void 0 ? void 0 : _a.setValue(data.data.Notes);
        (_b = this.newNoteForm.get('rowData')) === null || _b === void 0 ? void 0 : _b.setValue(data);
        this.notePopupVisible = true;
    }
    get n() {
        return this.newNoteForm.controls;
    }
    showNotePopup(row) {
        this.selectedRowNotes = row.data.NoteArray;
        this.viewNotePopup = true;
    }
    onNotePopupHide() {
        // this.selectedRowItem = [];
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.newRowForm.updateValueAndValidity();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
    }
    onSaveNote() {
        var _a, _b, _c, _d, _e, _f, _g;
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const rowData = this.newNoteForm.value.rowData;
        const rowIndex = rowData.rowIndex;
        const newNote = this.newNoteForm.value.note;
        // this.studyData[rowIndex].Notes =
        //   newNote + ', ' + this.studyData[rowIndex].Notes;
        const IsEditedNote = (_a = this.dataGrid) === null || _a === void 0 ? void 0 : _a.instance.cellValue(rowIndex, 'EditNote');
        this.notePopupVisible = false;
        // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');
        let noteValue = rowData.data.StudyNotes;
        noteValue = noteValue !== null ? noteValue : '';
        if (IsEditedNote) {
            const noteArray = noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];
            noteArray.shift();
            noteValue = noteArray.join(',');
        }
        const newNoteValue = noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;
        (_b = this.dataGrid) === null || _b === void 0 ? void 0 : _b.instance.cellValue(rowIndex, 'Notes', newNote);
        (_c = this.dataGrid) === null || _c === void 0 ? void 0 : _c.instance.saveEditData();
        (_d = this.dataGrid) === null || _d === void 0 ? void 0 : _d.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);
        (_e = this.dataGrid) === null || _e === void 0 ? void 0 : _e.instance.saveEditData();
        (_f = this.dataGrid) === null || _f === void 0 ? void 0 : _f.instance.cellValue(rowIndex, 'EditNote', true);
        (_g = this.dataGrid) === null || _g === void 0 ? void 0 : _g.instance.saveEditData();
    }
    onRequestForSignOffClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeVPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onRequestForChangeDataClick() {
        this.isLoadingService.add();
        this.studyService
            .requestForChangeVPData(this.studySummary)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onSignOffClick() {
        this.confirmPopup = true;
    }
    onSignOffData() {
        const formData = {
            marketYearCategoryId: +this.marketYearCategoryId,
            initialSetup: {
                studyDataSetId: this.studySummary.StudyDataSetId,
                studyDataSetName: this.studySummary.StudyDataSetName,
                studyProjectId: this.studySummary.StudyProjectId,
                projectName: this.studySummary.ProjectName,
                projectLeadId: this.studySummary.ProjectLeadId,
                projectLead: this.studySummary.ProjectLead,
                analystId: this.studySummary.AnalystId,
                analystName: this.studySummary.AnalystName,
                studyYear: this.studySummary.StudyYear,
                marketId: this.studySummary.MarketId,
                marketName: this.studySummary.MarketName,
                studyAreaId: this.studySummary.StudyAreaId,
                studyAreaName: this.studySummary.StudyAreaName,
                name: this.studySummary.Name,
                description: this.studySummary.Description,
                id: this.studySummary.Id,
                prefillFromId: this.studySummary.PrefillFromId,
                analystIdList: this.studySummary.AnalystIdList,
                analystNameList: this.studySummary.AnalystNameList,
                isSignOff: this.studySummary.IsSignOff,
                isMidYear: this.studySummary.IsMidYear,
                lockedForEditBy: this.studySummary.LockedForEditBy,
                lockedForEditByName: this.studySummary.LockedForEditByName,
                csvAnalystIds: this.studySummary.CSVAnalystIds,
                csvAnalystNames: this.studySummary.CSVAnalystNames,
                calculatorId: this.studySummary.CalculatorId,
            },
            vehicleParcItems: [],
        };
        this.confirmPopup = false;
        this.isLoadingService.add();
        this.studyService.signOffVPData(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                // this.dataGrid?.instance.refresh();
                this.getSPData();
                this.isLoadingService.remove();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        });
    }
    onCellPreparedHighlighter(e) {
        // console.log(e);
        const allowedCols = ['CurrentYear'];
        const isFound = allowedCols.some((item) => item === e.column.dataField);
        if (e.rowType === 'data' && isFound) {
            if (e.data.ChangeLogObj.length > 0) {
                const cellValue = typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'
                    ? e.data.ChangeLogObj[e.column.caption]
                    : null;
                if (cellValue !== null) {
                    // e.cellElement.bgColor = '#FFFF00';
                    e.cellElement.className = 'highlighter-td';
                }
            }
        }
    }
    onCellHoverChanged(event) {
        const allowedCols = ['CurrentYear'];
        if (typeof event.column !== 'undefined') {
            const isFound = allowedCols.some((item) => item === event.column.dataField);
            if (event.rowType === 'data' && isFound) {
                this.TooltipTarget = event.cellElement;
                if (event.eventType === 'mouseover') {
                    if (event.data.ChangeLogObj.length > 0) {
                        const cellValue = typeof event.data.ChangeLogObj[event.column.caption] !==
                            'undefined'
                            ? event.data.ChangeLogObj[event.column.caption]
                            : null;
                        if (cellValue !== null) {
                            const oldValue = !isNaN(cellValue.oldValue)
                                ? +cellValue.oldValue
                                : 0;
                            const html = `<div class="row text-left">
                            <div class="col-md-4">Name:</div>
                            <div class="col-md-8">${cellValue.name}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Old Value:</div>
                            <div class="col-md-8">${oldValue.toFixed(1)}</div>
                        </div>
                        <div class="row text-left">
                            <div class="col-md-4">Date:</div>
                            <div class="col-md-8">${cellValue.date}</div>
                        </div>`;
                            this.TooltipText = html;
                            this.isTooltipVisible = true;
                        }
                    }
                    // console.log(this.ToolTipText);
                }
                if (event.eventType === 'mouseout') {
                    // console.log(this.ToolTipText);
                    // this.ToolTipText = 'Blah Bl;ah Blah';
                    this.isTooltipVisible = false;
                }
            }
        }
    }
    createNewDataEntry(type, newValue) {
        const dataRelationData = this.datRelationsData.find((item) => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum).includes(item.TableName) &&
            item.TableName === type);
        if (dataRelationData) {
            this.isLoadingService.add();
            this.sharedService
                .saveNewDataEntry(dataRelationData.DataRelationId, newValue)
                .subscribe((res) => {
                if (res.HttpStatusCode === 200) {
                    this.alertService.success(res.Data);
                    this.loadDataEntry(type);
                    this.isLoadingService.remove();
                }
                else {
                    this.alertService.danger(res.Data);
                    this.isLoadingService.remove();
                }
            }, (err) => {
                console.log(err);
                this.isLoadingService.remove();
            });
        }
    }
    loadDataEntry(type) {
        switch (type) {
            case src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_3__.DataRelationsEnum.VehicleType:
                this.getVehicleTypes();
                break;
            default:
                break;
        }
    }
    deleteRow(dataRowId) {
        this.deleteRowData = {
            DataSetId: this.studySummary.StudyDataSetId,
            DataItemCategoryId: this.studySummary.StudyAreaId,
            MarketYearCategoryDataId: this.marketYearCategoryId,
            DataRowId: dataRowId,
        };
        this.deleteRowConfirmPopup = true;
    }
    confirmDeleteRow() {
        console.log(this.deleteRowData);
        this.isLoadingService.add();
        this.sharedService
            .removeStudyDataRow(this.deleteRowData.DataSetId, this.deleteRowData.DataItemCategoryId, this.deleteRowData.MarketYearCategoryDataId, this.deleteRowData.DataRowId)
            .subscribe((res) => {
            this.onDeleteRowConfirmPopupHide();
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteRowConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onDeleteRowConfirmPopupHide() {
        this.deleteRowData = {};
        this.deleteRowConfirmPopup = false;
    }
    unlockStudy() {
        var _a;
        (_a = this.disableStudyComponent) === null || _a === void 0 ? void 0 : _a.unlockStudy();
    }
}
VehicleParcStatisticsComponent.ɵfac = function VehicleParcStatisticsComponent_Factory(t) { return new (t || VehicleParcStatisticsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_6__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_13__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_14__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_15__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_7__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_8__.LocalStorageService)); };
VehicleParcStatisticsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({ type: VehicleParcStatisticsComponent, selectors: [["app-vehicle-parc-statistics"]], viewQuery: function VehicleParcStatisticsComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](_c0, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, 5);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.dataGrid = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.studyPreview = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.disableStudyComponent = _t.first);
    } }, decls: 44, vars: 45, consts: [[3, "studySummaryData"], [1, "container-fluid", "my-4"], ["id", "tabPanel"], ["title", "Data Entry"], [3, "studyInitialSetupData", "marketYearCategoryId", "setIsStudyDataFound"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared", 4, "ngIf"], [3, "target", "visible"], [3, "innerHTML", 4, "dxTemplate", "dxTemplateOf"], ["title", "Data Preview"], [3, "currentYear", "previousYear", "studyData"], ["studyPreview", ""], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", 4, "ngIf"], ["title", "Add Notes", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "px-0"], [3, "formGroup"], [1, "form-group"], ["formControlName", "note", "rows", "3", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "form-group", "text-center"], ["icon", "plus", "text", "Save Note", "type", "default", 3, "disabled", "onClick"], ["title", "Notes", "container", ".dx-viewport", 3, "width", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], ["title", "SignOff Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "SignOff Data", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Cancel", 3, "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], ["id", "gridContainer", 3, "dataSource", "showBorders", "allowColumnResizing", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "onSaved", "onCellPrepared", "onCellHoverChanged", "onRowPrepared"], [3, "enabled"], ["applyFilter", "auto", 3, "visible"], [3, "visible"], ["mode", "cell", 3, "allowUpdating", "allowAdding", "allowDeleting", "enabled"], ["location", "before", 1, "dx-field"], ["class", "ml-3", 4, "dxTemplate"], [4, "ngIf"], ["dataField", "VehicleType", 3, "allowEditing"], ["caption", "Value (in Mil Unit)"], ["dataField", "PreviousYear1", "cellTemplate", "previousYear1CellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "% of Total", "dataField", "PreviousYear1Per", "cellTemplate", "perCellTemplate", 3, "width", "allowEditing", "allowFiltering"], ["dataField", "CurrentYear", "cellTemplate", "volumeYearCellTemplate", 3, "width", "caption", "allowEditing", "allowFiltering"], ["caption", "% of Total", "cellTemplate", "perCellTemplate", "dataField", "CurrentYearPer", 3, "width", "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "StudyNotes", "cellTemplate", "notesCellTemplate", 3, "allowEditing", "allowFiltering"], ["caption", "Notes", "dataField", "Notes", 3, "allowEditing", "visible", "allowFiltering"], ["dataField", "EditNote", 3, "allowEditing", "visible", "allowFiltering"], ["caption", "", "cellTemplate", "deleteCellTemplate", "class", "text-center", 3, "width", 4, "ngIf"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [4, "dxTemplate", "dxTemplateOf"], [1, "ml-3"], ["location", "after"], [4, "dxTemplate"], ["location", "after", 4, "ngIf"], ["icon", "plus", "text", "Add New Row", 3, "onClick"], ["icon", "save", "stylingMode", "outlined", "text", "Save Data", "type", "default", 3, "onClick"], ["icon", "check", "type", "success", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "type", "default", "text", "Request for Change Data", 3, "onClick"], ["icon", "check", "type", "success", "text", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-unlock", "type", "default", 3, "onClick"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick", 4, "ngIf"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"], ["type", "text", "class", "form-control form-control-sm p-1 text-right", 3, "value", 4, "ngIf"], ["type", "text", 1, "form-control", "form-control-sm", "p-1", "text-right", 3, "value"], [1, "text-left", 2, "height", "15px"], ["stylingMode", "text", "icon", "plus", "type", "default", "class", "small floating-note-button", 3, "onClick", 4, "ngIf"], [1, "mt-2", "note-cell-value"], ["href", "javascript: void(0);", 3, "click"], ["stylingMode", "text", "icon", "plus", "type", "default", 1, "small", "floating-note-button", 3, "onClick"], [3, "innerHTML"], ["title", "Add New Row", "container", ".dx-viewport", 3, "showTitle", "width", "height", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [1, "card-body"], ["bindLabel", "Name", "formControlName", "vehicleType", "placeholder", "Select Vehicle Type", "addTagText", "Create New", 3, "items", "addTag"], ["type", "text", "formControlName", "CurrentYear", 1, "form-control"], [1, "form-group", "text-center", "mb-0"], ["icon", "plus", "type", "default", "text", "Save Row", 3, "disabled", "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "name", "dataType", "string"], ["dataField", "date", "dataType", "date", 3, "format"], ["dataField", "note", "dataType", "string"]], template: function VehicleParcStatisticsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](0, "app-show-initial-setup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](2, "dx-tab-panel", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](3, "dxi-item", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](4, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](5, "app-disable-study-editing", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](6, VehicleParcStatisticsComponent_dx_data_grid_6_Template, 24, 43, "dx-data-grid", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](7, "dx-tooltip", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](8, VehicleParcStatisticsComponent_div_8_Template, 1, 1, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](9, "dxi-item", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](10, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](11, "app-vehicle-parc-statistics-preview", 9, 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](13, VehicleParcStatisticsComponent_dx_popup_13_Template, 14, 12, "dx-popup", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](14, "dx-popup", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function VehicleParcStatisticsComponent_Template_dx_popup_visibleChange_14_listener($event) { return ctx.notePopupVisible = $event; })("onHidden", function VehicleParcStatisticsComponent_Template_dx_popup_onHidden_14_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](15, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](16, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](17, "form", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](18, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelement"](19, "textarea", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](20, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](21, "dx-button", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_Template_dx_button_onClick_21_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](22, "dx-popup", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function VehicleParcStatisticsComponent_Template_dx_popup_visibleChange_22_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function VehicleParcStatisticsComponent_Template_dx_popup_onHidden_22_listener() { return ctx.onNotePopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](23, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](24, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](25, VehicleParcStatisticsComponent_dx_data_grid_25_Template, 4, 8, "dx-data-grid", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](26, "dx-popup", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function VehicleParcStatisticsComponent_Template_dx_popup_visibleChange_26_listener($event) { return ctx.confirmPopup = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](27, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](28, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](29, "p", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](30, "Are you sure you want to SignOff Data?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](31, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](32, "You can not change data after SignOff.");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](33, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](34, "dx-button", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_Template_dx_button_onClick_34_listener() { return ctx.onSignOffData(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](35, "dx-button", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_Template_dx_button_onClick_35_listener() { return ctx.confirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](36, "dx-popup", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("visibleChange", function VehicleParcStatisticsComponent_Template_dx_popup_visibleChange_36_listener($event) { return ctx.deleteRowConfirmPopup = $event; })("onHidden", function VehicleParcStatisticsComponent_Template_dx_popup_onHidden_36_listener() { return ctx.onDeleteRowConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](37, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](38, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](39, "p", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](40, "Are you sure you want to delete this row?");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](41, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](42, "dx-button", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_Template_dx_button_onClick_42_listener() { return ctx.confirmDeleteRow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](43, "dx-button", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵlistener"]("onClick", function VehicleParcStatisticsComponent_Template_dx_button_onClick_43_listener() { return ctx.deleteRowConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studySummaryData", ctx.studySummary);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("studyInitialSetupData", ctx.studySummary)("marketYearCategoryId", ctx.marketYearCategoryId)("setIsStudyDataFound", ctx.studyData.length > 0 ? true : false);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("target", ctx.TooltipTarget)("visible", ctx.isTooltipVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("currentYear", ctx.currentYear)("previousYear", ctx.previousYear1)("studyData", ctx.studyData);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.popupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 300)("height", 250)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.notePopupVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵpureFunction1"](43, _c2, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 600)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.confirmPopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteRowConfirmPopup);
    } }, directives: [_show_initial_setup_show_initial_setup_component__WEBPACK_IMPORTED_MODULE_9__.ShowInitialSetupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxTabPanelComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiItemComponent, src_app_shared_disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoPagingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoFilterRowComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoEditingComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxoToolbarComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_20__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxButtonComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_18__.DxiColumnComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipComponent, _study_area_preview_components_vehicle_parc_statistics_preview_vehicle_parc_statistics_preview_component__WEBPACK_IMPORTED_MODULE_10__.VehicleParcStatisticsPreviewComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxPopupComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormGroupDirective, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_24__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_12__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_19__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZWhpY2xlLXBhcmMtc3RhdGlzdGljcy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 4441:
/*!**********************************************************!*\
  !*** ./src/app/pages/study-area/study-area.component.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyAreaComponent": () => (/* binding */ StudyAreaComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/pending-changes.service */ 12165);
/* harmony import */ var _shared_header_header_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/header/header.component */ 89470);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _components_study_study_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/study/study.component */ 90542);









function StudyAreaComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "app-study");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
function StudyAreaComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1, "No Study Found");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
class StudyAreaComponent {
    constructor(route, sharedService, isLoadingService, pendingChangesService) {
        this.route = route;
        this.sharedService = sharedService;
        this.isLoadingService = isLoadingService;
        this.pendingChangesService = pendingChangesService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.checkPendingChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_4__.EventEmitter();
        this.studyPageTitle = '';
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.getStudyAreaCategory();
    }
    ngOnInit() {
        if (this.isLoadingService.isLoading$()) {
            this.isLoadingService.remove();
        }
    }
    canDeactivate() {
        const canNavigate = this.pendingChangesService.getTableDirtyFlag();
        return !canNavigate;
    }
    getStudyAreaCategory() {
        this.sharedService
            .getStudyAreaCategory(this.dataSetId)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const studyAreaCategories = res.Data;
                const found = studyAreaCategories.filter((item) => item.Id == this.studyAreaId);
                if (found) {
                    this.studyPageTitle = found[0].Name || '';
                }
            }
        });
    }
}
StudyAreaComponent.ɵfac = function StudyAreaComponent_Factory(t) { return new (t || StudyAreaComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_5__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_0__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_6__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_1__.PendingChangesService)); };
StudyAreaComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: StudyAreaComponent, selectors: [["app-study-area"]], outputs: { checkPendingChanges: "checkPendingChanges" }, decls: 4, vars: 3, consts: [[3, "setTitle"], [4, "ngIf", "ngIfElse"], ["noDataFoundContainer", ""]], template: function StudyAreaComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](0, "app-header", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, StudyAreaComponent_div_1_Template, 2, 0, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](2, StudyAreaComponent_ng_template_2_Template, 2, 0, "ng-template", null, 2, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplateRefExtractor"]);
    } if (rf & 2) {
        const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵreference"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("setTitle", ctx.studyPageTitle);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.studyAreaId)("ngIfElse", _r1);
    } }, directives: [_shared_header_header_component__WEBPACK_IMPORTED_MODULE_2__.HeaderComponent, _angular_common__WEBPACK_IMPORTED_MODULE_7__.NgIf, _components_study_study_component__WEBPACK_IMPORTED_MODULE_3__.StudyComponent], styles: ["#gridContainer .dx-datagrid-header-panel {\r\n  padding: 0;\r\n  background-color: rgba(0, 0, 0, 0.03);\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  border-bottom: 0;\r\n}\r\n\r\n  #gridContainer .dx-datagrid-header-panel .dx-toolbar {\r\n  margin: 0;\r\n  padding-right: 20px;\r\n  background-color: transparent;\r\n}\r\n\r\n  #gridContainer .dx-datagrid-header-panel .dx-toolbar-items-container {\r\n  height: 70px;\r\n}\r\n\r\n \r\n  #gridContainer\r\n  .dx-datagrid-header-panel\r\n  .dx-toolbar-before\r\n  .dx-toolbar-item:not(:first-child) {\r\n  \r\n}\r\n\r\n \r\n  #gridContainer\r\n  .dx-datagrid-header-panel\r\n  .dx-toolbar-before\r\n  .dx-toolbar-item:last-child {\r\n  padding-right: 10px;\r\n}\r\n\r\n  #gridContainer .dx-datagrid-header-panel .dx-selectbox {\r\n  margin: auto 10px;\r\n}\r\n\r\n  #gridContainer .dx-datagrid-header-panel .dx-button {\r\n  margin: auto 0;\r\n}\r\n\r\n  #gridContainer .informer {\r\n  height: 70px;\r\n  width: 130px;\r\n  text-align: center;\r\n  color: #fff;\r\n}\r\n\r\n  #gridContainer .count {\r\n  padding-top: 15px;\r\n  line-height: 27px;\r\n  font-size: 28px;\r\n  margin: 0;\r\n}\r\n\r\n  #gridContainer td {\r\n  position: relative;\r\n}\r\n\r\n  #gridContainer .floating-note-button {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n\r\n  #gridContainer .floating-note-button .dx-button-content {\r\n  padding: 3px;\r\n}\r\n\r\n  #gridContainer .note-cell-value {\r\n  \r\n  white-space: nowrap;\r\n  word-break: keep-all;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n\r\n  #gridContainer {\r\n  height: 460px;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0dWR5LWFyZWEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixxQ0FBcUM7RUFDckMsc0NBQXNDO0VBQ3RDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxtQkFBbUI7RUFDbkIsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBOzs7OztFQUtFLDJDQUEyQztBQUM3Qzs7QUFFQTs7Ozs7RUFLRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsU0FBUztBQUNYOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRTs7MEJBRXdCO0VBQ3hCLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtBQUNsQjs7QUFDQTtFQUNFLGFBQWE7QUFDZiIsImZpbGUiOiJzdHVkeS1hcmVhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgI2dyaWRDb250YWluZXIgLmR4LWRhdGFncmlkLWhlYWRlci1wYW5lbCB7XHJcbiAgcGFkZGluZzogMDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMDMpO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xMjUpO1xyXG4gIGJvcmRlci1ib3R0b206IDA7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAjZ3JpZENvbnRhaW5lciAuZHgtZGF0YWdyaWQtaGVhZGVyLXBhbmVsIC5keC10b29sYmFyIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZy1yaWdodDogMjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuOjpuZy1kZWVwICNncmlkQ29udGFpbmVyIC5keC1kYXRhZ3JpZC1oZWFkZXItcGFuZWwgLmR4LXRvb2xiYXItaXRlbXMtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDcwcHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcFxyXG4gICNncmlkQ29udGFpbmVyXHJcbiAgLmR4LWRhdGFncmlkLWhlYWRlci1wYW5lbFxyXG4gIC5keC10b29sYmFyLWJlZm9yZVxyXG4gIC5keC10b29sYmFyLWl0ZW06bm90KDpmaXJzdC1jaGlsZCkge1xyXG4gIC8qIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4wMyk7ICovXHJcbn1cclxuXHJcbjo6bmctZGVlcFxyXG4gICNncmlkQ29udGFpbmVyXHJcbiAgLmR4LWRhdGFncmlkLWhlYWRlci1wYW5lbFxyXG4gIC5keC10b29sYmFyLWJlZm9yZVxyXG4gIC5keC10b29sYmFyLWl0ZW06bGFzdC1jaGlsZCB7XHJcbiAgcGFkZGluZy1yaWdodDogMTBweDtcclxufVxyXG5cclxuOjpuZy1kZWVwICNncmlkQ29udGFpbmVyIC5keC1kYXRhZ3JpZC1oZWFkZXItcGFuZWwgLmR4LXNlbGVjdGJveCB7XHJcbiAgbWFyZ2luOiBhdXRvIDEwcHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAjZ3JpZENvbnRhaW5lciAuZHgtZGF0YWdyaWQtaGVhZGVyLXBhbmVsIC5keC1idXR0b24ge1xyXG4gIG1hcmdpbjogYXV0byAwO1xyXG59XHJcblxyXG46Om5nLWRlZXAgI2dyaWRDb250YWluZXIgLmluZm9ybWVyIHtcclxuICBoZWlnaHQ6IDcwcHg7XHJcbiAgd2lkdGg6IDEzMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuOjpuZy1kZWVwICNncmlkQ29udGFpbmVyIC5jb3VudCB7XHJcbiAgcGFkZGluZy10b3A6IDE1cHg7XHJcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuOjpuZy1kZWVwICNncmlkQ29udGFpbmVyIHRkIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAjZ3JpZENvbnRhaW5lciAuZmxvYXRpbmctbm90ZS1idXR0b24ge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAjZ3JpZENvbnRhaW5lciAuZmxvYXRpbmctbm90ZS1idXR0b24gLmR4LWJ1dHRvbi1jb250ZW50IHtcclxuICBwYWRkaW5nOiAzcHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAjZ3JpZENvbnRhaW5lciAubm90ZS1jZWxsLXZhbHVlIHtcclxuICAvKiB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuICB3b3JkLWJyZWFrOiBicmVhay1hbGw7ICovXHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB3b3JkLWJyZWFrOiBrZWVwLWFsbDtcclxuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbjo6bmctZGVlcCAjZ3JpZENvbnRhaW5lciB7XHJcbiAgaGVpZ2h0OiA0NjBweDtcclxufSJdfQ== */"] });


/***/ }),

/***/ 4738:
/*!*****************************************************!*\
  !*** ./src/app/shared/ag-grid/ag-grid.component.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AgGridComponent": () => (/* binding */ AgGridComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var ag_grid_angular__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ag-grid-angular */ 79771);


const _c0 = ["*"];
class AgGridComponent {
    constructor() {
        this.pagination = true;
        this.paginationPageSize = 10;
        this.title = '';
        this.defaultColDef = {
            sortable: true,
            filter: true,
            floatingFilter: true
        };
        this.rowSelection = 'multiple';
    }
    ngOnInit() {
    }
}
AgGridComponent.ɵfac = function AgGridComponent_Factory(t) { return new (t || AgGridComponent)(); };
AgGridComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AgGridComponent, selectors: [["app-ag-grid"]], inputs: { rowData: "rowData", columnDefs: "columnDefs", pagination: "pagination", paginationPageSize: "paginationPageSize", title: "title" }, ngContentSelectors: _c0, decls: 4, vars: 12, consts: [[1, "pull-right"], [1, "ag-theme-alpine", 2, "width", "100%", "height", "500px", 3, "columnDefs", "defaultColDef", "rowData", "rowSelection", "animateRows", "copyHeadersToClipboard", "enableRangeSelection", "suppressCopySingleCellRanges", "pagination", "paginationPageSize"]], template: function AgGridComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "ag-grid-angular", 1);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.title, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("columnDefs", ctx.columnDefs)("defaultColDef", ctx.defaultColDef)("rowData", ctx.rowData)("rowSelection", "multiple")("animateRows", true)("copyHeadersToClipboard", true)("enableRangeSelection", true)("rowSelection", ctx.rowSelection)("suppressCopySingleCellRanges", true)("pagination", ctx.pagination)("paginationPageSize", ctx.paginationPageSize);
    } }, directives: [ag_grid_angular__WEBPACK_IMPORTED_MODULE_1__.AgGridAngular], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZy1ncmlkLmNvbXBvbmVudC5jc3MifQ== */"] });


/***/ }),

/***/ 26184:
/*!***************************************************************************!*\
  !*** ./src/app/shared/confirm-navigation/confirm-navigation.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConfirmNavigationComponent": () => (/* binding */ ConfirmNavigationComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services/pending-changes.service */ 12165);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! devextreme-angular */ 50082);




class ConfirmNavigationComponent {
    constructor(pendingChangesService) {
        this.pendingChangesService = pendingChangesService;
        this.saveChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    }
    confirm() {
        this.pendingChangesService.confirm();
    }
    cancel() {
        this.pendingChangesService.setPendingChanges(false);
        this.saveChanges.emit();
        this.pendingChangesService.cancel();
    }
    onDialogClose() {
        this.opened = false;
        this.pendingChangesService.cancel();
    }
}
ConfirmNavigationComponent.ɵfac = function ConfirmNavigationComponent_Factory(t) { return new (t || ConfirmNavigationComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_0__.PendingChangesService)); };
ConfirmNavigationComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ConfirmNavigationComponent, selectors: [["app-confirm-navigation"]], inputs: { opened: "opened" }, outputs: { saveChanges: "saveChanges" }, decls: 10, vars: 7, consts: [["title", "Confirm Navigation", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], [1, "form-group", "text-center"], ["icon", "check", "text", "Save Changes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "Leave", "type", "danger", 3, "onClick"]], template: function ConfirmNavigationComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "dx-popup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("visibleChange", function ConfirmNavigationComponent_Template_dx_popup_visibleChange_0_listener($event) { return ctx.opened = $event; })("onHidden", function ConfirmNavigationComponent_Template_dx_popup_onHidden_0_listener() { return ctx.onDialogClose(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "p", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "You have unsaved changes!");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](5, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](6, "Do you want to save changes or leave?");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](7, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](8, "dx-button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onClick", function ConfirmNavigationComponent_Template_dx_button_onClick_8_listener() { return ctx.cancel(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](9, "dx-button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("onClick", function ConfirmNavigationComponent_Template_dx_button_onClick_9_listener() { return ctx.confirm(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("width", 340)("height", 240)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.opened);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_2__.DxPopupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_3__.DxButtonComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maXJtLW5hdmlnYXRpb24uY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 72691:
/*!*********************************************************************************!*\
  !*** ./src/app/shared/disable-study-editing/disable-study-editing.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DisableStudyEditingComponent": () => (/* binding */ DisableStudyEditingComponent)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 90587);












function DisableStudyEditingComponent_div_0_ng_container_3_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "p", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2, " This study is disabled because it is not locked.");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, " If you want to edit this study, then please lock it. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "dx-button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClick", function DisableStudyEditingComponent_div_0_ng_container_3_div_1_Template_dx_button_onClick_5_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r6); const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](3); return ctx_r5.lockStudy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
function DisableStudyEditingComponent_div_0_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, DisableStudyEditingComponent_div_0_ng_container_3_div_1_Template, 6, 0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx_r1.isUnlockStudy);
} }
function DisableStudyEditingComponent_div_0_ng_template_4_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "p", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, " If you want to edit this study then please request for unlock. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "dx-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClick", function DisableStudyEditingComponent_div_0_ng_template_4_ng_container_0_div_1_Template_dx_button_onClick_5_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](4); return ctx_r11.requestForUnlock(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" Study is disabled because It is locked by ", ctx_r10.studyInitialSetup == null ? null : ctx_r10.studyInitialSetup.LockedForEditByName, ". ");
} }
function DisableStudyEditingComponent_div_0_ng_template_4_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, DisableStudyEditingComponent_div_0_ng_template_4_ng_container_0_div_1_Template, 6, 1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementContainerEnd"]();
} if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx_r7.isLockedByOther);
} }
function DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_div_0_ng_option_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "ng-option", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r15 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("disabled", !item_r15.Active)("value", item_r15);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](item_r15.OfficialName);
} }
function DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "p", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2, " This study has no data available.");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, " If you want to copy data structure from the other market, then please select a market from the below options: ");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](6, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "ng-select", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("ngModelChange", function DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_div_0_Template_ng_select_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r17); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](4); return ctx_r16.selectedMarket = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](9, DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_div_0_ng_option_9_Template, 2, 3, "ng-option", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](10, "dx-button", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("onClick", function DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_div_0_Template_dx_button_onClick_10_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r17); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](4); return ctx_r18.copyStudyData(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngModel", ctx_r13.selectedMarket);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngForOf", ctx_r13.markets);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("disabled", !ctx_r13.selectedMarket);
} }
function DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_div_0_Template, 11, 3, "div", 6);
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx_r9.isStudyDataFound);
} }
function DisableStudyEditingComponent_div_0_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, DisableStudyEditingComponent_div_0_ng_template_4_ng_container_0_Template, 2, 1, "ng-container", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](1, DisableStudyEditingComponent_div_0_ng_template_4_ng_template_1_Template, 1, 1, "ng-template", null, 5, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplateRefExtractor"]);
} if (rf & 2) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵreference"](2);
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx_r3.isLockedByOther)("ngIfElse", _r8);
} }
function DisableStudyEditingComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](3, DisableStudyEditingComponent_div_0_ng_container_3_Template, 2, 1, "ng-container", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](4, DisableStudyEditingComponent_div_0_ng_template_4_Template, 3, 2, "ng-template", null, 5, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵreference"](5);
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx_r0.isUnlockStudy)("ngIfElse", _r2);
} }
class DisableStudyEditingComponent {
    constructor(localStorageService, sharedService, alertService, isLoadingService, router) {
        this.localStorageService = localStorageService;
        this.sharedService = sharedService;
        this.alertService = alertService;
        this.isLoadingService = isLoadingService;
        this.router = router;
        this.isUnlockStudy = false;
        this.isLockedByOther = false;
        this.isSignOffStudy = false;
        this.marketYearCategoryId = 0;
        this.isStudyDataFound = true;
        this.markets = [];
        this.currentUser = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_1__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey));
    }
    set studyInitialSetupData(data) {
        if (data) {
            this.studyInitialSetup = data;
            this.isUnlockStudy =
                this.studyInitialSetup.LockedForEditBy === 0 ||
                    this.studyInitialSetup.LockedForEditBy === null
                    ? true
                    : false;
            this.isLockedByOther =
                !this.isUnlockStudy &&
                    this.studyInitialSetup.LockedForEditBy !== this.currentUser.Id
                    ? true
                    : false;
            this.isSignOffStudy = this.studyInitialSetup.IsSignOff || false;
            this.getMarket();
        }
    }
    set setIsStudyDataFound(data) {
        this.isStudyDataFound = data;
    }
    ngOnInit() { }
    lockStudy() {
        this.isLoadingService.add();
        this.sharedService
            .setLockUnlockStudy(this.marketYearCategoryId, true)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            //if (err.status === 401) {
            this.isLoadingService.remove();
            //}
        });
    }
    unlockStudy() {
        this.isLoadingService.add();
        this.sharedService
            .setLockUnlockStudy(this.marketYearCategoryId, false)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            //if (err.status === 401) {
            this.isLoadingService.remove();
            //}
        });
    }
    requestForUnlock() {
        this.isLoadingService.add();
        this.sharedService
            .requestForUnlockStudy(this.marketYearCategoryId, this.studyInitialSetup)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            //if (err.status === 401) {
            this.isLoadingService.remove();
            //}
        });
    }
    reloadCurrentRoute() {
        let currentUrl = this.router.url;
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([currentUrl]);
        });
    }
    getMarket() {
        var _a, _b;
        const dataSetId = ((_a = this.studyInitialSetup) === null || _a === void 0 ? void 0 : _a.StudyDataSetId) || 0;
        const year = ((_b = this.studyInitialSetup) === null || _b === void 0 ? void 0 : _b.StudyYear) || new Date().getFullYear();
        this.sharedService
            .getMarket(dataSetId, year)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.markets = res.Data;
            }
        });
    }
    copyStudyData() {
        this.isLoadingService.add();
        this.sharedService
            .migrateDataFromAnotherMarket(this.marketYearCategoryId, this.selectedMarket.Id)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.reloadCurrentRoute();
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            //if (err.status === 401) {
            this.isLoadingService.remove();
            //}
        });
    }
}
DisableStudyEditingComponent.ɵfac = function DisableStudyEditingComponent_Factory(t) { return new (t || DisableStudyEditingComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_2__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_3__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_5__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_6__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_7__.Router)); };
DisableStudyEditingComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: DisableStudyEditingComponent, selectors: [["app-disable-study-editing"]], inputs: { studyInitialSetupData: "studyInitialSetupData", marketYearCategoryId: "marketYearCategoryId", setIsStudyDataFound: "setIsStudyDataFound" }, decls: 1, vars: 1, consts: [["class", "blur-background", 4, "ngIf"], [1, "blur-background"], [1, "blur-background-content"], [1, "card"], [4, "ngIf", "ngIfElse"], ["elseTemplate", ""], ["class", "card-body", 4, "ngIf"], [1, "card-body"], [1, "font-weight-bold"], ["icon", "fas fa-lock", "text", "Lock Study", "type", "default", "stylingMode", "outlined", 3, "onClick"], ["icon", "fas fa-unlock", "text", "Request Unlock Study", "type", "default", "stylingMode", "outlined", 3, "onClick"], [1, "row", "align-center", "justify-content-center"], [1, "col-md-6"], [1, "form-group"], ["placeholder", "Select Market...", 1, "text-left", 3, "ngModel", "ngModelChange"], [3, "disabled", "value", 4, "ngFor", "ngForOf"], ["icon", "fas fa-copy", "text", "Copy Study Data", "type", "default", "stylingMode", "outlined", 3, "disabled", "onClick"], [3, "disabled", "value"]], template: function DisableStudyEditingComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](0, DisableStudyEditingComponent_div_0_Template, 6, 2, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx.isSignOffStudy && (ctx.isUnlockStudy || ctx.isLockedByOther || !ctx.isStudyDataFound));
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_9__.DxButtonComponent, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_10__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_11__.NgModel, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgForOf, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_10__.NgOptionComponent], styles: [".blur-background[_ngcontent-%COMP%] {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(255, 255, 255, 0.8);\r\n    z-index: 9999;\r\n    display: flex;\r\n    align-items: normal;\r\n    justify-content: center;\r\n    padding-top: 50px;\r\n}\r\n\r\n.blur-background[_ngcontent-%COMP%]   .blur-background-content[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    height: auto;\r\n    text-align: center;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpc2FibGUtc3R1ZHktZWRpdGluZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLE1BQU07SUFDTixPQUFPO0lBQ1AsV0FBVztJQUNYLFlBQVk7SUFDWixvQ0FBb0M7SUFDcEMsYUFBYTtJQUNiLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCIiwiZmlsZSI6ImRpc2FibGUtc3R1ZHktZWRpdGluZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJsdXItYmFja2dyb3VuZCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XHJcbiAgICB6LWluZGV4OiA5OTk5O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBub3JtYWw7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xyXG59XHJcblxyXG4uYmx1ci1iYWNrZ3JvdW5kIC5ibHVyLWJhY2tncm91bmQtY29udGVudCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iXX0= */"] });


/***/ }),

/***/ 66730:
/*!********************************************************************************!*\
  !*** ./src/app/shared/handson-table/components/comments/comments.component.ts ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommentsComponent": () => (/* binding */ CommentsComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/pending-changes.service */ 12165);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! devextreme-angular */ 62031);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! devextreme-angular/core */ 85915);













function CommentsComponent_dx_data_grid_4_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "dx-button", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function CommentsComponent_dx_data_grid_4_div_5_Template_dx_button_onClick_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵrestoreView"](_r4); const d_r2 = restoredCtx.$implicit; const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"](2); return ctx_r3.deleteComment(d_r2.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function CommentsComponent_dx_data_grid_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "dx-data-grid", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](1, "dxi-column", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](2, "dxi-column", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](3, "dxi-column", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](4, "dxi-column", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](5, CommentsComponent_dx_data_grid_4_div_5_Template, 2, 0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("dataSource", ctx_r0.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction0"](9, _c0));
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("width", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class CommentsComponent {
    constructor(formBuilder, route, studyService, isLoadingService, alertService, pendingChangeService) {
        this.formBuilder = formBuilder;
        this.route = route;
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.pendingChangeService = pendingChangeService;
        this.marketYearCategoryId = 0;
        this.studyProjectMarketYearId = 0;
        this.studyAreaId = 0;
        this.dataSetId = 0;
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
        this.noteSubmit = false;
        this.onCommentBoxHidden = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.onCommentAdded = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.onCommentEmpty = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.deleteCommentConfirmPopup = false;
        this.deleteCommentData = {};
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.studyProjectMarketYearId = params['spmId'];
        this.studyAreaId = params['studyArea'];
        this.dataSetId = params['dataSetId'];
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.Validators.required],
            rowData: [null],
        });
    }
    set viewCommentPopup(data) {
        this.viewNotePopup = data;
    }
    set setCommentCellData(data) {
        console.log(data);
        this.selectedCommentCellData = data;
    }
    ngOnInit() { }
    get n() {
        return this.newNoteForm.controls;
    }
    onNotePopupHide() {
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
        this.selectedCommentCellData = {};
        this.onCommentBoxHidden.emit();
    }
    onCommentBoxShowing() {
        this.getCellLevelComments();
    }
    getCellLevelComments() {
        const dataRowId = this.selectedCommentCellData.dataRowId;
        const cellColYear = this.selectedCommentCellData.colCaption;
        const attrType = this.selectedCommentCellData.attrType;
        this.isLoadingService.add();
        this.studyService
            .getCellCommentsForStudy(this.studyAreaId, this.marketYearCategoryId, dataRowId, cellColYear, attrType)
            .subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.selectedRowNotes = data.Data;
                this.viewNotePopup = true;
                if (this.selectedRowNotes.length === 0 &&
                    this.selectedCommentCellData) {
                    if (this.selectedCommentCellData &&
                        typeof this.selectedCommentCellData.currentRowData['allComments'][this.selectedCommentCellData.colValue] !== 'undefined') {
                        this.selectedCommentCellData.currentRowData['allComments'][this.selectedCommentCellData.colValue][this.selectedCommentCellData.attrType] = false;
                    }
                    this.onCommentEmpty.emit(this.selectedCommentCellData);
                }
                this.isLoadingService.remove();
            }
        });
    }
    onSaveNote() {
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        if (!this.selectedCommentCellData) {
            return;
        }
        const newNote = this.newNoteForm.value.note;
        const formData = {
            dataItemCategoryId: this.studyAreaId,
            marketYearCategoryDataId: this.marketYearCategoryId,
            draftDataRowId: this.selectedCommentCellData.dataRowId,
            columnName: this.selectedCommentCellData.colValue,
            attributeType: this.selectedCommentCellData.attrType,
            comment: newNote,
        };
        this.isLoadingService.add();
        this.studyService.addCommentForCell(formData).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                this.pendingChangeService.setPendingChanges(true);
                if (this.selectedCommentCellData.currentRowData &&
                    typeof this.selectedCommentCellData.currentRowData['allComments'] !== 'undefined') {
                    if (typeof this.selectedCommentCellData.currentRowData['allComments'][this.selectedCommentCellData.colValue] === 'undefined') {
                        this.selectedCommentCellData.currentRowData['allComments'][this.selectedCommentCellData.colValue] = [];
                    }
                    if (typeof this.selectedCommentCellData.currentRowData['allComments'][this.selectedCommentCellData.colValue][this.selectedCommentCellData.attrType] === 'undefined') {
                        this.selectedCommentCellData.currentRowData['allComments'][this.selectedCommentCellData.colValue][this.selectedCommentCellData.attrType] = true;
                    }
                }
                this.onCommentAdded.emit(this.selectedCommentCellData);
                this.noteSubmit = false;
                this.newNoteForm.reset();
                this.getCellLevelComments();
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            // console.log(err);
            this.alertService.danger('Something went wrong. Please try after sometime.');
            this.isLoadingService.remove();
        });
    }
    deleteComment(data) {
        this.deleteCommentData = data;
        this.deleteCommentConfirmPopup = true;
        // this.viewNotePopup = false;
    }
    onDeleteCommentConfirmPopupHide() {
        this.deleteCommentData = {};
        this.deleteCommentConfirmPopup = false;
    }
    confirmDeleteComment() {
        this.isLoadingService.add();
        const colValue = this.deleteCommentData.ColumnName;
        const dataRowId = this.deleteCommentData.DraftDataRowId;
        this.studyService
            .deleteCellComment(this.deleteCommentData.MarketYearCategoryDataId, dataRowId, colValue, this.deleteCommentData.Id)
            .subscribe((res) => {
            if (res.Data) {
                this.alertService.success('Cell level comment removed successfully.');
                this.deleteCommentConfirmPopup = false;
                this.getCellLevelComments();
                this.pendingChangeService.setPendingChanges(true);
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteCommentConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
}
CommentsComponent.ɵfac = function CommentsComponent_Factory(t) { return new (t || CommentsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_0__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_1__.PendingChangesService)); };
CommentsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: CommentsComponent, selectors: [["app-comments"]], inputs: { viewCommentPopup: "viewCommentPopup", setCommentCellData: "setCommentCellData" }, outputs: { onCommentBoxHidden: "onCommentBoxHidden", onCommentAdded: "onCommentAdded", onCommentEmpty: "onCommentEmpty" }, decls: 22, vars: 21, consts: [["container", ".dx-viewport", 3, "width", "height", "showTitle", "title", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", "onShowing"], [1, "card", "border-0", "h-100", "comment-container"], [1, "card-body", "px-0"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], [1, "card-footer"], [3, "formGroup"], [1, "row", "align-items-center", "justify-content-center"], [1, "col-md-8"], [1, "form-group"], ["placeholder", "Enter your comment", "formControlName", "note", "rows", "2", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "col-md-4"], [1, "form-group", "text-center"], ["text", "Save Comment", "type", "default", 3, "disabled", "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "CreatedBy", "dataType", "string"], ["dataField", "CreatedOn", "dataType", "date", 3, "format"], ["dataField", "Comment", "dataType", "string"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"]], template: function CommentsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "dx-popup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("visibleChange", function CommentsComponent_Template_dx_popup_visibleChange_0_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function CommentsComponent_Template_dx_popup_onHidden_0_listener() { return ctx.onNotePopupHide(); })("onShowing", function CommentsComponent_Template_dx_popup_onShowing_0_listener() { return ctx.onCommentBoxShowing(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](3, "dx-scroll-view");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](4, CommentsComponent_dx_data_grid_4_Template, 6, 10, "dx-data-grid", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](6, "form", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](8, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](9, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](10, "textarea", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](11, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](12, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](13, "dx-button", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function CommentsComponent_Template_dx_button_onClick_13_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](14, "dx-popup", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("visibleChange", function CommentsComponent_Template_dx_popup_visibleChange_14_listener($event) { return ctx.deleteCommentConfirmPopup = $event; })("onHidden", function CommentsComponent_Template_dx_popup_onHidden_14_listener() { return ctx.onDeleteCommentConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](15, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](16, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](17, "p", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](18, "Are you sure you want to delete this comment?");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](19, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](20, "dx-button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function CommentsComponent_Template_dx_button_onClick_20_listener() { return ctx.confirmDeleteComment(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](21, "dx-button", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function CommentsComponent_Template_dx_button_onClick_21_listener() { return ctx.deleteCommentConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpropertyInterpolate1"]("title", "View Comments for ", ctx.selectedCommentCellData.colCaption, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("width", 600)("height", 500)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](19, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteCommentConfirmPopup);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxPopupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_8__.DxScrollViewComponent, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_10__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_11__.DxiColumnComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_12__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_13__.DxButtonComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21tZW50cy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 64821:
/*!********************************************************************************************!*\
  !*** ./src/app/shared/handson-table/components/study-comments/study-comments.component.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyCommentsComponent": () => (/* binding */ StudyCommentsComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/pending-changes.service */ 12165);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme-angular/core */ 85915);













function StudyCommentsComponent_dx_data_grid_3_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "dx-button", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function StudyCommentsComponent_dx_data_grid_3_div_5_Template_dx_button_onClick_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵrestoreView"](_r4); const d_r2 = restoredCtx.$implicit; const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"](2); return ctx_r3.deleteComment(d_r2.data); });
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} }
const _c0 = function () { return { type: "MMM d, yyyy hh:mm a" }; };
function StudyCommentsComponent_dx_data_grid_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "dx-data-grid", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](1, "dxi-column", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](2, "dxi-column", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](3, "dxi-column", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](4, "dxi-column", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](5, StudyCommentsComponent_dx_data_grid_3_div_5_Template, 2, 0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("dataSource", ctx_r0.selectedRowNotes)("showBorders", true)("columnMinWidth", 100)("columnHidingEnabled", false)("rowAlternationEnabled", true)("wordWrapEnabled", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("format", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction0"](9, _c0));
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("width", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("dxTemplateOf", "deleteCellTemplate");
} }
const _c1 = function (a0) { return { "is-invalid": a0 }; };
class StudyCommentsComponent {
    constructor(formBuilder, route, studyService, isLoadingService, alertService, pendingChangeService) {
        this.formBuilder = formBuilder;
        this.route = route;
        this.studyService = studyService;
        this.isLoadingService = isLoadingService;
        this.alertService = alertService;
        this.pendingChangeService = pendingChangeService;
        this.viewNotePopup = false;
        this.closeCommentPopup = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
        this.noteSubmit = false;
        this.deleteCommentConfirmPopup = false;
        this.selectedRowNotes = [];
        this.deleteCommentData = {};
        const params = this.route.snapshot.params;
        this.marketYearCategoryId = params['mycId'];
        this.dataItemCategoryId = params['studyArea'];
        this.newNoteForm = this.formBuilder.group({
            note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.Validators.required],
            rowData: [null],
        });
    }
    set viewCommentPopup(data) {
        this.viewNotePopup = data;
    }
    set studyData(data) {
        this.dataItemCategoryId = data.dataItemCategoryId;
        this.marketYearCategoryId = data.marketYearCategoryId;
    }
    ngOnInit() {
    }
    onCommentBoxShowing() {
        this.getAllStudyComments();
    }
    onNotePopupHide() {
        this.noteSubmit = false;
        this.newNoteForm.reset();
        this.selectedRowNotes = [];
        this.viewNotePopup = false;
        this.closeCommentPopup.emit();
    }
    get n() {
        return this.newNoteForm.controls;
    }
    getAllStudyComments() {
        this.isLoadingService.add();
        this.studyService.getAllStudyNotes(this.dataItemCategoryId, this.marketYearCategoryId).subscribe((data) => {
            if (data.HttpStatusCode === 200) {
                this.selectedRowNotes = data.Data;
                this.viewNotePopup = true;
                this.isLoadingService.remove();
            }
        });
    }
    deleteComment(data) {
        this.deleteCommentData = data;
        this.deleteCommentConfirmPopup = true;
    }
    onDeleteCommentConfirmPopupHide() {
        this.deleteCommentData = {};
        this.deleteCommentConfirmPopup = false;
    }
    confirmDeleteComment() {
        this.isLoadingService.add();
        this.studyService
            .deleteStudyNotes(this.deleteCommentData.StudyNoteLogId, this.deleteCommentData.MarketYearCategoryDataId)
            .subscribe((res) => {
            if (res.Data) {
                this.alertService.success('Your data row has been removed successfully.');
                this.deleteCommentConfirmPopup = false;
                this.pendingChangeService.setPendingChanges(true);
                this.getAllStudyComments();
            }
            else {
                this.alertService.danger('Error: Something went wrong. Data row can not removed.');
            }
            this.isLoadingService.remove();
        }, (err) => {
            const msg = typeof err.error !== 'undefined' && err.error !== ''
                ? err.error
                : 'Error: Something went wrong.';
            this.onDeleteCommentConfirmPopupHide();
            this.alertService.danger(msg);
            this.isLoadingService.remove();
        });
    }
    onSaveNote() {
        this.noteSubmit = true;
        if (this.newNoteForm.invalid) {
            return;
        }
        const newNote = this.newNoteForm.value.note;
        const formData = {
            dataItemCategoryId: this.dataItemCategoryId,
            marketYearCategoryDataId: this.marketYearCategoryId,
            note: newNote,
        };
        this.isLoadingService.add();
        this.studyService.saveStudyNote(formData)
            .subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                this.alertService.success(res.Data);
                this.isLoadingService.remove();
                this.noteSubmit = false;
                this.newNoteForm.reset();
                this.getAllStudyComments();
                this.pendingChangeService.setPendingChanges(true);
            }
            else {
                this.alertService.danger(res.Data);
                this.isLoadingService.remove();
            }
        }, (err) => {
            this.alertService.danger('Something went wrong. Please try after sometime.');
            this.isLoadingService.remove();
        });
    }
}
StudyCommentsComponent.ɵfac = function StudyCommentsComponent_Factory(t) { return new (t || StudyCommentsComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_0__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_5__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_6__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_1__.PendingChangesService)); };
StudyCommentsComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: StudyCommentsComponent, selectors: [["app-study-comments"]], inputs: { viewCommentPopup: "viewCommentPopup", studyData: "studyData" }, outputs: { closeCommentPopup: "closeCommentPopup" }, decls: 21, vars: 20, consts: [["title", "Study Comments", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden", "onShowing"], [1, "card", "border-0", "h-100", "comment-container"], [1, "card-body", "px-0"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled", 4, "ngIf"], [1, "card-footer"], [3, "formGroup"], [1, "row", "align-items-center", "justify-content-center"], [1, "col-md-8"], [1, "form-group"], ["placeholder", "Enter your comment", "formControlName", "note", "rows", "2", "maxlength", "1000", 1, "form-control", 3, "ngClass"], [1, "col-md-4"], [1, "form-group", "text-center"], ["text", "Save Comment", "type", "default", 3, "disabled", "onClick"], ["title", "Delete Row Confirm", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "text-centerx-0"], [1, "mb-1"], ["icon", "check", "text", "Yes", "type", "success", 1, "mr-2", 3, "onClick"], ["icon", "close", "text", "No", 3, "onClick"], [3, "dataSource", "showBorders", "columnMinWidth", "columnHidingEnabled", "rowAlternationEnabled", "wordWrapEnabled"], ["dataField", "CreatedBy", "dataType", "string"], ["dataField", "CreatedOn", "dataType", "date", 3, "format"], ["dataField", "Note", "dataType", "string"], ["caption", "", "cellTemplate", "deleteCellTemplate", 1, "text-center", 3, "width"], ["class", "text-center", 4, "dxTemplate", "dxTemplateOf"], [1, "text-center"], ["icon", "trash", "stylingMode", "text", "type", "danger", 3, "onClick"]], template: function StudyCommentsComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "dx-popup", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("visibleChange", function StudyCommentsComponent_Template_dx_popup_visibleChange_0_listener($event) { return ctx.viewNotePopup = $event; })("onHidden", function StudyCommentsComponent_Template_dx_popup_onHidden_0_listener() { return ctx.onNotePopupHide(); })("onShowing", function StudyCommentsComponent_Template_dx_popup_onShowing_0_listener() { return ctx.onCommentBoxShowing(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](3, StudyCommentsComponent_dx_data_grid_3_Template, 6, 10, "dx-data-grid", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "form", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](6, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](7, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](8, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](9, "textarea", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](10, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](11, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](12, "dx-button", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function StudyCommentsComponent_Template_dx_button_onClick_12_listener() { return ctx.onSaveNote(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](13, "dx-popup", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("visibleChange", function StudyCommentsComponent_Template_dx_popup_visibleChange_13_listener($event) { return ctx.deleteCommentConfirmPopup = $event; })("onHidden", function StudyCommentsComponent_Template_dx_popup_onHidden_13_listener() { return ctx.onDeleteCommentConfirmPopupHide(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](14, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](15, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](16, "p", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](17, "Are you sure you want to delete this comment?");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](18, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](19, "dx-button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function StudyCommentsComponent_Template_dx_button_onClick_19_listener() { return ctx.confirmDeleteComment(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](20, "dx-button", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("onClick", function StudyCommentsComponent_Template_dx_button_onClick_20_listener() { return ctx.deleteCommentConfirmPopup = false; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("width", 600)("height", 500)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.viewNotePopup);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", ctx.selectedRowNotes);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("formGroup", ctx.newNoteForm);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpureFunction1"](18, _c1, ctx.noteSubmit && ctx.n["note"].errors));
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("disabled", ctx.newNoteForm.invalid);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("width", 350)("height", 150)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", false)("showCloseButton", false)("visible", ctx.deleteCommentConfirmPopup);
    } }, directives: [devextreme_angular__WEBPACK_IMPORTED_MODULE_7__.DxPopupComponent, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_9__.DxDataGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_10__.DxiColumnComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_11__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_12__.DxButtonComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormGroupDirective, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.FormControlName, _angular_forms__WEBPACK_IMPORTED_MODULE_3__.MaxLengthValidator, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgClass], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdHVkeS1jb21tZW50cy5jb21wb25lbnQuY3NzIn0= */"] });


/***/ }),

/***/ 44911:
/*!*****************************************************************!*\
  !*** ./src/app/shared/handson-table/handson-table.component.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HandsonTableComponent": () => (/* binding */ HandsonTableComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _handsontable_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @handsontable/angular */ 14766);
/* harmony import */ var handsontable_base__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! handsontable/base */ 48331);
/* harmony import */ var hyperformula__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hyperformula */ 22431);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/model/dataGridConfiguration.model */ 48168);
/* harmony import */ var src_model_dataSourceResponse_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/model/dataSourceResponse.model */ 83684);
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataRelations.enum */ 89292);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _model_dataGridState_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../model/dataGridState.model */ 97948);
/* harmony import */ var angular2_uuid__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! angular2-uuid */ 23105);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var src_services_common_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/services/common.service */ 23115);
/* harmony import */ var src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/services/pending-changes.service */ 12165);


























function HandsonTableComponent_dx_button_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "dx-button", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_dx_button_0_Template_dx_button_onClick_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r8);
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r7.isDefaultStateMode = !ctx_r7.isDefaultStateMode;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpropertyInterpolate"]("text", ctx_r0.isDefaultStateMode ? "Switch OFF Settings of Default State" : "Switch ON Settings of Default State");
  }
}

function HandsonTableComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtextInterpolate1"](" Currency: ", ctx_r1.currentCurrency == null ? null : ctx_r1.currentCurrency.CurrencyName, " ");
  }
}

function HandsonTableComponent_div_8_dx_button_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "dx-button", 39);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_dx_button_5_Template_dx_button_onClick_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2);
      return ctx_r14.addNewRow();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }
}

function HandsonTableComponent_div_8_dx_button_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "dx-button", 40);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_dx_button_7_Template_dx_button_onClick_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r17);
      const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2);
      return ctx_r16.onRequestForSignOffClickedEvent($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }
}

function HandsonTableComponent_div_8_dx_button_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r19 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "dx-button", 41);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_dx_button_8_Template_dx_button_onClick_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r19);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2);
      return ctx_r18.onRequestForChangeClickedEvent($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }
}

function HandsonTableComponent_div_8_dx_button_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "dx-button", 42);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_dx_button_9_Template_dx_button_onClick_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r21);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2);
      return ctx_r20.onSignOffClickedEvent($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("disabled", ctx_r12.disabledSignOffButton);
  }
}

function HandsonTableComponent_div_8_dx_button_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "dx-button", 43);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_dx_button_10_Template_dx_button_onClick_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r23);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2);
      return ctx_r22.unlockStudyClickedEvent($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }
}

const _c0 = function () {
  return {
    width: 250
  };
};

const _c1 = function () {
  return {
    width: 200
  };
};

function HandsonTableComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "dx-drop-down-button", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("selectedItemChange", function HandsonTableComponent_div_8_Template_dx_drop_down_button_selectedItemChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r24.selectedView = $event;
    })("onItemClick", function HandsonTableComponent_div_8_Template_dx_drop_down_button_onItemClick_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r26.onViewChange($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "dx-drop-down-button", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onItemClick", function HandsonTableComponent_div_8_Template_dx_drop_down_button_onItemClick_2_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r27.onResetIemClick($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "dx-drop-down-button", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onItemClick", function HandsonTableComponent_div_8_Template_dx_drop_down_button_onItemClick_3_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r28.onCalculatedItemClick($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](4, "dx-button", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_Template_dx_button_onClick_4_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r29.addComment();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](5, HandsonTableComponent_div_8_dx_button_5_Template, 1, 0, "dx-button", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](6, "dx-button", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_Template_dx_button_onClick_6_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r30.onSaveDataClickedEvent();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](7, HandsonTableComponent_div_8_dx_button_7_Template, 1, 0, "dx-button", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](8, HandsonTableComponent_div_8_dx_button_8_Template, 1, 0, "dx-button", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](9, HandsonTableComponent_div_8_dx_button_9_Template, 1, 1, "dx-button", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](10, HandsonTableComponent_div_8_dx_button_10_Template, 1, 0, "dx-button", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](11, "dx-button", 37);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_div_8_Template_dx_button_onClick_11_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r31.showHelpTextPopup();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](12, "dx-text-box", 38);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("ngModelChange", function HandsonTableComponent_div_8_Template_dx_text_box_ngModelChange_12_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r32.selectedCellValue = $event;
    })("onValueChanged", function HandsonTableComponent_div_8_Template_dx_text_box_onValueChanged_12_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r25);
      const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r33.textBoxValueChanged($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("selectedItem", ctx_r2.selectedView)("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpureFunction0"](14, _c0))("items", ctx_r2.viewMenuItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpureFunction0"](15, _c0))("items", ctx_r2.resetMenuItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("dropDownOptions", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpureFunction0"](16, _c1))("items", ctx_r2.calculatorContextMenuItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx_r2.isAddNewRowVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !ctx_r2.isManager);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx_r2.isManager);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx_r2.isManager);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx_r2.isLockedStudy);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngModel", ctx_r2.selectedCellValue)("readOnly", ctx_r2.disableFormulaBar);
  }
}

const _c2 = function () {
  return ["filter_by_condition", "---------", "filter_by_value", "---------", "filter_action_bar"];
};

function HandsonTableComponent_hot_table_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "hot-table", 44, 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("afterFormulasValuesUpdate", function HandsonTableComponent_hot_table_10_Template_hot_table_afterFormulasValuesUpdate_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r36);
      const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r35.afterFormulasValuesUpdate($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("settings", ctx_r3.hotSettings)("hotId", ctx_r3.id)("manualColumnMove", true)("colHeaders", ctx_r3.colHeaders)("formulas", ctx_r3.formulas)("rowHeaders", true)("data", ctx_r3.dataSourceData)("nestedHeaders", ctx_r3.nestedHeaders)("fixedRowsTop", ctx_r3.fixedRowsTop)("fixedColumnsLeft", ctx_r3.fixedColumnsLeft)("height", ctx_r3.tableHeight)("renderAllRows", ctx_r3.isRenderAllRows)("dropdownMenu", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpureFunction0"](22, _c2))("comments", true)("manualColumnResize", true)("filters", ctx_r3.dataSettings.handontableSettings.filters)("columnSorting", ctx_r3.dataSettings.handontableSettings.columnSorting)("copyPaste", ctx_r3.dataSettings.handontableSettings.copyPaste)("cell", ctx_r3.cell)("columns", ctx_r3.columns)("hiddenColumns", ctx_r3.hiddenColumns)("licenseKey", ctx_r3.handsontableLicenseKey);
  }
}

function HandsonTableComponent_div_18_div_1_dx_text_box_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelement"](0, "dx-text-box", 51);
  }

  if (rf & 2) {
    const rowItem_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2).$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpropertyInterpolate"]("value", rowItem_r37.value);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("readOnly", true);
  }
}

function HandsonTableComponent_div_18_div_1_ng_select_4_Template(rf, ctx) {
  if (rf & 1) {
    const _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "ng-select", 52);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("change", function HandsonTableComponent_div_18_div_1_ng_select_4_Template_ng_select_change_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r44);
      const rowItem_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2).$implicit;
      const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r42.dropdownchange($event, rowItem_r37);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const rowItem_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2).$implicit;
    const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpropertyInterpolate1"]("placeholder", "Select ", rowItem_r37.label, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("items", rowItem_r37.data)("addTag", ctx_r40.isManager ? ctx_r40.createNewDataEntry.bind(ctx_r40, rowItem_r37.title) : false)("formControlName", rowItem_r37.title);
  }
}

function HandsonTableComponent_div_18_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](3, HandsonTableComponent_div_18_div_1_dx_text_box_3_Template, 1, 2, "dx-text-box", 49);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](4, HandsonTableComponent_div_18_div_1_ng_select_4_Template, 1, 4, "ng-select", 50);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const rowItem_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtextInterpolate"](rowItem_r37.label);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !rowItem_r37.isEditable);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", rowItem_r37.isEditable);
  }
}

function HandsonTableComponent_div_18_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](1, HandsonTableComponent_div_18_div_1_Template, 5, 3, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const rowItem_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", rowItem_r37.isColumnsData);
  }
}

function HandsonTableComponent_div_20_ng_template_1_div_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 48);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "label");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "dx-number-box", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("valueChange", function HandsonTableComponent_div_20_ng_template_1_div_1_Template_dx_number_box_valueChange_3_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r52);
      const rowItem_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2).$implicit;
      return rowItem_r47.value = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const rowItem_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"](2).$implicit;
    const ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtextInterpolate"](rowItem_r47.title);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("value", rowItem_r47.value)("formControlName", rowItem_r47.title)("disabled", rowItem_r47.readOnly)("format", ctx_r49.newRowNumberBoxFormat);
  }
}

function HandsonTableComponent_div_20_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](1, HandsonTableComponent_div_20_ng_template_1_div_1_Template, 4, 5, "div", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const rowItem_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !rowItem_r47.isColumnsData);
  }
}

function HandsonTableComponent_div_20_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "div", 46);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](1, HandsonTableComponent_div_20_ng_template_1_Template, 2, 1, "ng-template", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const rowItem_r47 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !rowItem_r47.isColumnsData);
  }
}

function HandsonTableComponent_app_confirm_navigation_37_Template(rf, ctx) {
  if (rf & 1) {
    const _r56 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](0, "app-confirm-navigation", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("saveChanges", function HandsonTableComponent_app_confirm_navigation_37_Template_app_confirm_navigation_saveChanges_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵrestoreView"](_r56);
      const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
      return ctx_r55.onSaveDataClickedEvent();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipe"](1, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("opened", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipeBind1"](1, 1, ctx_r6.openDialog$));
  }
}

class HandsonTableComponent {
  constructor(localStorageService, formBuilder, route, studyService, isLoadingService, alertService, sharedService, commonService, pendingChangeService) {
    this.localStorageService = localStorageService;
    this.formBuilder = formBuilder;
    this.route = route;
    this.studyService = studyService;
    this.isLoadingService = isLoadingService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.commonService = commonService;
    this.pendingChangeService = pendingChangeService;
    this.handsontableLicenseKey = 'ac5e0-311ac-e9b54-0f139-a1425';
    this.hyperformulaInstance = hyperformula__WEBPACK_IMPORTED_MODULE_0__.HyperFormula.buildEmpty({
      // to use an external HyperFormula instance,
      // initialize it with the `'internal-use-in-handsontable'` license key
      licenseKey: this.handsontableLicenseKey
    });
    this.pendingChange = false;
    this.onRequestForSignOffClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.onRequestForChangeClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.onSaveDataClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.onSignOffClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.onUnlockStudyClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.onDeleteRowClicked = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.dataSourceDataChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.hasPendingChanges = new _angular_core__WEBPACK_IMPORTED_MODULE_15__.EventEmitter();
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.studyAreaId = 0;
    this.dataSetId = 0;
    this.isLockedStudy = false;
    this.isVolumeYear = false;
    this.dataSource = new src_model_dataSourceResponse_model__WEBPACK_IMPORTED_MODULE_4__.DataSourceResponse();
    this.currencyDropdown = [];
    this.unitsDropdown = [];
    this.isResetDataRequired = false;
    this.calculatedField = 'Value';
    this.dataRelations = [];
    this.clipboardCache = '';
    this.dataSourceData = [];
    this.dataSourceDataNoFormulas = [];
    this.hiddenColumns = {
      columns: [],
      indicators: false,
      copyPasteEnabled: false
    };
    this.filterableColumns = [];
    this.dataSettings = new src_model_dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_3__.DataGridConfiguration();
    this.isManager = false;
    this.disabledSignOffButton = false;
    this.isStudyEditable = false;
    this.studyTitle = '';
    this.isAddNewRowVisible = true;
    this.unitOfValues = [];
    this.colHeaders = [];
    this.fixedRowsTop = 0;
    this.fixedColumnsLeft = 0;
    this.hotRegisterer = new _handsontable_angular__WEBPACK_IMPORTED_MODULE_16__.HotTableRegisterer();
    this.id = 'hotInstance';
    this.hotSettings = {};
    this.viewNotePopup = false;
    this.viewStudyComments = false;
    this.showHelpText = false;
    this.selectedCommentCellData = {};
    this.noteSubmit = false;
    this.isAddNewRowPopup = false;
    this.newRowFormObj = [];
    this.visibleGridColumns = [];
    this.calculatorContextMenuItems = [];
    this.resetMenuItems = [];
    this.viewMenuItems = [];
    this.showFormula = false;
    this.valueColsIndexes = [];
    this.isDefaultStateMode = false;
    this.dataGridState = new _model_dataGridState_model__WEBPACK_IMPORTED_MODULE_8__.DataGridState();
    this.countOfFormulasInDatagrid = 0;
    this.renderingFinishedTimeout = setTimeout(() => {}, 0);
    this.isRenderingFinished = false;
    this.isRenderAllRows = true;
    this.tableHeight = this.isRenderAllRows ? 'auto' : '600';
    this.columnReferences = [];
    this.deletedRows = [];
    this.newRowNumberBoxFormat = '';
    this.staticColumns = [];
    this.openDialog$ = this.pendingChangeService.askForConfirmation$;
    this.isFormulaAllowed = true;
    this.selectedCell = {
      row: 0,
      col: 0
    };
    this.disableFormulaBar = true;
    this.allColsComments = []; // No need these functions now
    // highlighCellWithChangelog(
    //   instance: any,
    //   td: any,
    //   row: number,
    //   col: number,
    //   prop: string,
    //   value: any,
    //   cellProperties: any
    // ) {
    //   // Handsontable.renderers.getRenderer('html')(
    //   //   instance,
    //   //   td,
    //   //   row,
    //   //   col,
    //   //   prop,
    //   //   value,
    //   //   cellProperties
    //   // );
    //   Handsontable.renderers.HtmlRenderer.apply(this, [
    //     instance,
    //     td,
    //     row,
    //     col,
    //     prop,
    //     value,
    //     cellProperties,
    //   ]);
    //   const rowData = instance.getSourceDataAtRow(row);
    //   const propObj = prop.split('.');
    //   let commentHtml = '';
    //   if (
    //     rowData['ChangeLogObj'] &&
    //     typeof rowData['ChangeLogObj'][propObj[1]] !== 'undefined'
    //   ) {
    //     const commentData = rowData['ChangeLogObj'][propObj[1]][propObj[2]];
    //     const oldValue = !isNaN(commentData.oldValue) ? +commentData.oldValue : 0;
    //     commentHtml = `<div class="row text-left">
    //                           <div class="col-3">Name:</div>
    //                           <div class="col">${commentData.name}</div>
    //                       </div>
    //                       <div class="row text-left">
    //                           <div class="col-3">Old Value:</div>
    //                           <div class="col">${oldValue.toFixed(1)}</div>
    //                       </div>
    //                       <div class="row text-left">
    //                           <div class="col-3">Date:</div>
    //                           <div class="col">${commentData.date}</div>
    //                       </div>`;
    //   }
    //   // Handsontable.renderers.TextRenderer.apply(this, arguments);
    //   // td.className = 'htRight htNumeric highlighter-td cellWithComment';
    //   td.classList.add('htRight');
    //   td.classList.add('htNumeric');
    //   td.classList.add('highlighter-td');
    //   td.classList.add('cellWithComment');
    //   const div = document.createElement('div');
    //   div.innerHTML = commentHtml;
    //   div.className = 'cellComment';
    //   td.appendChild(div);
    //   return td;
    // }
    // newRowHighlight(
    //   instance: Handsontable.Core,
    //   td: HTMLTableCellElement,
    //   row: number,
    //   col: number,
    //   prop: string,
    //   value: any,
    //   cellProperties: Handsontable.CellProperties
    // ) {
    //   Handsontable.renderers.HtmlRenderer.apply(this, [
    //     instance,
    //     td,
    //     row,
    //     col,
    //     prop,
    //     value,
    //     cellProperties,
    //   ]);
    //   const propObj = prop.split('.');
    //   if (typeof propObj[0] !== 'undefined' && propObj[0] === 'YearsData') {
    //     td.classList.add('htRight');
    //     td.classList.add('htNumeric');
    //   }
    //   td.classList.add('highlighter-tr');
    // }
    // addNewDeleteCol(
    //   instance: any,
    //   td: any,
    //   row: number,
    //   col: number,
    //   prop: string,
    //   value: any,
    //   cellProperties: any
    // ) {
    //   Handsontable.renderers.HtmlRenderer.apply(this, [
    //     instance,
    //     td,
    //     row,
    //     col,
    //     prop,
    //     value,
    //     cellProperties,
    //   ]);
    //   td.className = 'text-center';
    //   td.innerHTML =
    //     '<button class="btn btn-outline-danger btn-sm"><i class="fa fa-trash"></i></button>';
    // }
    // END

    this.afterFormulasValuesUpdate = changes => {};

    this.isLoadingService.add();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.dataSetId = params['dataSetId'];
    this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_5__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey));
    this.isManager = this.userDetail.IsManager === true ? true : false;
    this.newNoteForm = this.formBuilder.group({
      note: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.Validators.required],
      rowData: [null]
    });
    this.calculatorContextMenuItems = this.commonService.getCalculatorFields();
    this.resetMenuItems = this.commonService.getResetToDefaultOptions();
    this.columnReferences = this.commonService.getColumnReferences();
    this.viewMenuItems = this.commonService.getDataViewOptions();
    this.selectedView = this.viewMenuItems[0];
    this.formulas = {
      engine: hyperformula__WEBPACK_IMPORTED_MODULE_0__.HyperFormula
    };
  }

  set setDataSource(data) {
    var _a;

    if (!lodash__WEBPACK_IMPORTED_MODULE_7__.isEmpty(data)) {
      this.dataSource = data;
      this.getAllColumnsComments(); // set decimal places format for enter new data validation 

      this.newRowNumberBoxFormat = ((_a = this.dataSource.Data.Settings.handontableSettings) === null || _a === void 0 ? void 0 : _a.decimalPlaces) === 1 ? '#.0' : '#.00';
    }
  }

  set setCurrency(data) {
    this.currencyDropdown = data;
  }

  set setVolumeUnits(data) {
    this.unitsDropdown = data;
  }

  set setDataRelations(data) {
    this.dataRelations = data;
  }

  ngOnInit() {
    //this.cellRendererData = this.cellRendererData.bind(this);
    this.hotSettings = {
      afterChange: changes => {
        changes === null || changes === void 0 ? void 0 : changes.forEach(([row, prop, oldValue, newValue]) => {
          var _a;

          const col = this.hotRegisterer.getInstance(this.id).propToCol(prop);
          this.pendingChange = true; // check if user has added formula to the datagrid

          if (this.isFormulaAllowed === true) {
            if (isNaN(Number(oldValue)) === false && newValue !== null && newValue.toString().startsWith('=', 0)) {
              this.countOfFormulasInDatagrid++;
            } else if (oldValue.toString().startsWith('=', 0) && isNaN(Number(newValue)) === false) {
              this.countOfFormulasInDatagrid--;
            }
          } else if (isNaN(Number(oldValue)) === false && newValue !== null && newValue.toString().startsWith('=', 0)) {
            this.hotRegisterer.getInstance(this.id).setDataAtRowProp(row, prop, oldValue);
          } // in case new value is number, apply validation


          if (isNaN(Number(newValue)) === false) {
            // apply rounding when user want to insert more decimal places te allowed
            const decimalPlaces = ((_a = this.dataSource.Data.Settings.handontableSettings) === null || _a === void 0 ? void 0 : _a.decimalPlaces) || 2;
            const expressionOneDecimal = /^(\d{1,50}|\d{0,50}\.\d{1})$/;
            const expressionTwoDecimals = /^(\d{1,50}|\d{0,50}\.\d{1,2})$/;
            const reg = decimalPlaces === 1 ? expressionOneDecimal : expressionTwoDecimals;

            if (!reg.test(newValue)) {
              const newValueRounded = lodash__WEBPACK_IMPORTED_MODULE_7__.round(newValue, decimalPlaces).toFixed(decimalPlaces);
              this.hotRegisterer.getInstance(this.id).setDataAtRowProp(row, prop, newValueRounded);
            } // change color of the cell if user change value
            //if (newValue !== oldValue) {
            //  this.hotRegisterer.getInstance(this.id).setCellMeta(row, col, 'className', 'lightgreen-bg');
            //}

          } // in case new value is not number and is not formula, change cell value to 0
          else if (newValue.toString().startsWith('=', 0) === false) {
            this.hotRegisterer.getInstance(this.id).setDataAtRowProp(row, prop, oldValue);
          } // finally render all changes


          this.hotRegisterer.getInstance(this.id).loadData(this.dataSourceData);
        });
        this.emitDatasourceForPreviewAndUpdateNoFormulasSource();
        this.setTableChanges();
      },
      // render 20 columns outside of the grid's viewport, this will fix stange horizontal scrolling behavior
      viewportColumnRenderingOffset: 20,
      afterViewRender: () => {
        clearTimeout(this.renderingFinishedTimeout);
        this.renderingFinishedTimeout = setTimeout(() => {
          this.isRenderingFinished = true;
          this.isLoadingService.remove();
        }, 1000);
      },
      afterScrollVertically: () => {
        if (this.isRenderAllRows === false && this.calculatorContextMenuItems.find(f => f.isCheck === true)) {
          clearTimeout(this.renderingFinishedTimeout);
          this.renderingFinishedTimeout = setTimeout(() => {
            // this.hotRegisterer
            //   .getInstance(this.id)
            //   .loadData(this.dataSourceData);
            this.hotRegisterer.getInstance(this.id).loadData(this.hotRegisterer.getInstance(this.id).getSourceData());
            this.hotRegisterer.getInstance(this.id).render();
          }, 500);
        }
      }
    };
    this.addNewRowForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup({});
  }

  setTableChanges() {
    if (!this.isLockedStudy) {
      this.pendingChangeService.setPendingChanges(false);
    } else {
      const dataState = JSON.stringify(this.dataGridState);
      let newState = JSON.stringify(new _model_dataGridState_model__WEBPACK_IMPORTED_MODULE_8__.DataGridState());

      if ((dataState !== newState || this.pendingChange) && !this.isResetDataRequired) {
        this.pendingChangeService.setPendingChanges(true);
      }
    }
  }

  emitDatasourceForPreviewAndUpdateNoFormulasSource() {
    var _a, _b, _c, _d;

    if ((_a = this.dataSourceData) === null || _a === void 0 ? void 0 : _a.length) {
      let dataSourceDataCopy = lodash__WEBPACK_IMPORTED_MODULE_7__.cloneDeep(this.dataSourceData);
      const countOfColumnsData = Object.keys(dataSourceDataCopy[0].ColumnsData).length;
      let datasourceRowCounter = 0;

      for (const datasourceRow of dataSourceDataCopy) {
        const yearsData = datasourceRow.YearsData;
        let yearsDataCounter = 0;

        for (const yearData in yearsData) {
          // count with value
          if ((_b = yearsData[yearData].Value) === null || _b === void 0 ? void 0 : _b.toString().startsWith('=', 0)) {
            const realCellValue = this.getValueByYearsDataPosition(datasourceRowCounter, yearsDataCounter, countOfColumnsData);
            dataSourceDataCopy[datasourceRowCounter]['YearsData'][yearData] = {
              Value: realCellValue
            };
          } //count with volume


          if ((_c = yearsData[yearData].Volume) === null || _c === void 0 ? void 0 : _c.toString().startsWith('=', 0)) {
            const realCellValue = this.getValueByYearsDataPosition(datasourceRowCounter, yearsDataCounter, countOfColumnsData);
            dataSourceDataCopy[datasourceRowCounter]['YearsData'][yearData] = {
              Volume: realCellValue
            };
          } // TODO use enum in condition for all future cases
          // unit


          if ((_d = yearsData[yearData].Unit) === null || _d === void 0 ? void 0 : _d.toString().startsWith('=', 0)) {
            const realCellValue = this.getValueByYearsDataPosition(datasourceRowCounter, yearsDataCounter, countOfColumnsData);
            dataSourceDataCopy[datasourceRowCounter]['YearsData'][yearData] = {
              Unit: realCellValue
            };
          } // check count of the properties in year object and update index


          const countOfYearProperties = Object.keys(Object.values(datasourceRow.YearsData)[0]).length;
          yearsDataCounter += countOfYearProperties;
        }

        datasourceRowCounter++;
      } // remove all calculated fields from datasource copy


      for (let sourceRow in dataSourceDataCopy) {
        for (let year in this.dataSourceData[sourceRow].YearsData) {
          delete dataSourceDataCopy[sourceRow]['YearsData'][year]['% Of Total'];
          delete dataSourceDataCopy[sourceRow]['YearsData'][year]['CAGR'];
          delete dataSourceDataCopy[sourceRow]['YearsData'][year]['Change, %'];
        }
      } // emit updated data on any change


      this.dataSourceDataChanged.emit(dataSourceDataCopy);
      this.dataSourceDataNoFormulas = dataSourceDataCopy;
    }
  }

  getValueByYearsDataPosition(rowIndex, yearsDataIndex, countOfColumnsData) {
    const realData = this.hotRegisterer.getInstance(this.id).getData();
    const requestedRowData = realData[rowIndex];
    return requestedRowData[countOfColumnsData + yearsDataIndex];
  }

  getAllColumnsComments() {
    this.isLoadingService.add();
    this.studyService.getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId).subscribe(data => {
      if (data.HttpStatusCode === 200) {
        this.allColsComments = data.Data;
      }

      this.processDataSource();
    });
  }

  processDataSource() {
    if (this.isResetDataRequired) {
      this.dataSourceData = [];
    }

    const data = this.dataSource.Data;

    if (typeof data === 'undefined') {
      this.isLoadingService.remove();
      return;
    }

    if (data.DataList === null) {
      this.isLoadingService.remove();
      return;
    }

    this.dataSettings = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_2__.Common.realMerge(new src_model_dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_3__.DataGridConfiguration(), data.Settings || {});
    const studySummary = data.StudySetup;
    this.isManager = this.userDetail.Id === studySummary.ProjectLeadId ? true : false;
    this.studyTitle = `${studySummary.StudyDataSetName}-${studySummary.StudyYear}-${studySummary.MarketName}`;
    this.isStudyEditable = studySummary.IsSignOff || false;
    this.isLockedStudy = !studySummary.IsSignOff && studySummary.LockedForEditBy === this.userDetail.Id ? true : false;
    this.unitOfValues = data.UnitOfValues || [];
    const currency = this.unitOfValues.find(item => item.Title === 'Currency');
    this.currentCurrency = this.currencyDropdown.find(f => (f === null || f === void 0 ? void 0 : f.Id) === (currency === null || currency === void 0 ? void 0 : currency.Id));
    const columnLists = [];
    const nestedColumnList = [];
    let columnBinding = [];
    this.staticColumns = [];
    data.ColumnList.map(list => {
      const colSetting = this.dataSettings.fields.find(item => item.dataField === list.Title);
      columnLists.push((colSetting === null || colSetting === void 0 ? void 0 : colSetting.caption) || list.Title);
      this.staticColumns.push((colSetting === null || colSetting === void 0 ? void 0 : colSetting.caption) || list.Title);
      nestedColumnList.push(null);
      columnBinding.push({
        data: `ColumnsData.${list.Title}`,
        readOnly: !this.isStudyEditable ? colSetting === null || colSetting === void 0 ? void 0 : colSetting.readOnly : true,
        type: colSetting === null || colSetting === void 0 ? void 0 : colSetting.dataType,
        width: colSetting === null || colSetting === void 0 ? void 0 : colSetting.width,
        isVisible: list.IsVisible,
        isColumnData: true
      });
      list.IsVisible = typeof (colSetting === null || colSetting === void 0 ? void 0 : colSetting.isVisible) === 'boolean' ? colSetting.isVisible : list.IsVisible;
      this.filterableColumns.push(list.Index);

      if (!list.IsVisible) {
        this.hiddenColumns.columns.push(list.Index);
      }
    }); //this.fixedColumnsLeft =
    //  columnBinding.filter((f) => !(f.isVisible && f.isColumnData)).length + 1;

    this.fixedColumnsLeft = columnBinding.filter(f => f.isColumnData).length;
    data.YearsList.sort((a, b) => a.Index - b.Index);
    let nestedcColSetting;
    let yearWiseFieldList = [];
    let forecastFieldList = [];
    data.YearsList.map(year => {
      if (year.AttributeList) {
        year.AttributeList.map(attr => {
          this.calculatedField = attr.Title === 'Unit' ? 'Unit' : attr.Title === 'Volume' ? 'Volume' : 'Value';
          const colSetting = this.dataSettings.fields.find(item => item.dataField === attr.Title && item.isYearValue && item.yearType.indexOf(year.Type) !== -1); // nestedcColSetting = this.dataSettings.fields.find(
          //   (item) =>
          //     item.dataField === attr.Title &&
          //     item.isVolumeYear &&
          //     item.yearType.indexOf(year.Type) !== -1
          // );
          // const yearWiseField = this.dataSettings.fields.find(
          //   (item) =>
          //     item.isYearWiseVolume &&
          //     item.dataField === attr.Title &&
          //     item.yearType.indexOf(year.Type) !== -1
          // );
          // const forecastField = this.dataSettings.fields.find(
          //   (item) =>
          //     item.isForecastVolume &&
          //     item.dataField === attr.Title &&
          //     item.yearType.indexOf(year.Type) !== -1
          // );

          if (colSetting) {
            nestedColumnList.push((colSetting === null || colSetting === void 0 ? void 0 : colSetting.caption) || attr.Title);
            columnBinding.push({
              data: `YearsData.${year.Year}.${attr.Title}`,
              readOnly: !this.isStudyEditable ? colSetting === null || colSetting === void 0 ? void 0 : colSetting.readOnly : true,
              type: colSetting === null || colSetting === void 0 ? void 0 : colSetting.dataType,
              width: colSetting === null || colSetting === void 0 ? void 0 : colSetting.width,
              isVisible: true,
              allowEmpty: false
            });
          } // if (nestedcColSetting) {
          //   this.isVolumeYear = true;
          //   nestedColumnList.push(year.Year);
          //   columnBinding.push({
          //     data: `YearsData.${year.Year}.${attr.Title}`,
          //     readOnly: !this.isStudyEditable
          //       ? nestedcColSetting?.readOnly
          //       : true,
          //     type: nestedcColSetting?.dataType,
          //     width: nestedcColSetting?.width,
          //     isVisible: true,
          //     allowEmpty: false,
          //   });
          // }
          // if (yearWiseField) {
          //   this.isVolumeYear = true;
          //   yearWiseFieldList.push({
          //     column: year.Year,
          //     title: yearWiseField.caption,
          //   });
          //   columnBinding.push({
          //     data: `YearsData.${year.Year}.${attr.Title}`,
          //     readOnly: !this.isStudyEditable ? yearWiseField?.readOnly : true,
          //     type: yearWiseField?.dataType,
          //     width: yearWiseField?.width,
          //     isVisible: true,
          //     allowEmpty: false,
          //   });
          // }
          // if (forecastField) {
          //   this.isVolumeYear = true;
          //   forecastFieldList.push({
          //     column: year.Year,
          //     title: forecastField.caption,
          //   });
          //   columnBinding.push({
          //     data: `YearsData.${year.Year}.${attr.Title}`,
          //     readOnly: !this.isStudyEditable ? forecastField?.readOnly : true,
          //     type: forecastField?.dataType,
          //     width: forecastField?.width,
          //     isVisible: true,
          //     allowEmpty: false,
          //   });
          // }

        });
      } //if (!this.isVolumeYear) {


      columnLists.push({
        label: year.Year,
        colspan: year.AttributeList.length
      }); // }
    }); // if (nestedcColSetting) {
    //   columnLists.push({
    //     label: nestedcColSetting?.caption,
    //     colspan: nestedcColSetting.colspan,
    //   });
    // }
    // if (yearWiseFieldList && yearWiseFieldList.length > 0) {
    //   yearWiseFieldList.forEach((item) => {
    //     nestedColumnList.push(item.column);
    //   });
    //   columnLists.push({
    //     label: yearWiseFieldList[0].title,
    //     colspan: yearWiseFieldList.length,
    //   });
    // }
    // if (forecastFieldList && forecastFieldList.length > 0) {
    //   forecastFieldList.forEach((item) => {
    //     nestedColumnList.push(item.column);
    //   });
    //   columnLists.push({
    //     label: forecastFieldList[0].title,
    //     colspan: forecastFieldList.length,
    //   });
    // }

    if (!this.isStudyEditable) {
      columnLists.push('');
      columnBinding.push({
        readOnly: true,
        filters: false,
        isVisible: true,
        isDeleteRowCell: true
      });
    }

    this.colHeaders.push(columnLists);
    let colHeaders = [];
    colHeaders.push(columnLists);

    if (data.HasAttribute) {
      colHeaders.push(nestedColumnList);
    } // if (this.isVolumeYear) {
    //   colHeaders.push(nestedColumnList);
    // }


    this.valueColsIndexes = [];

    for (let h = 0; h <= nestedColumnList.length; h++) {
      if (typeof nestedColumnList[h] !== 'undefined' && nestedColumnList[h] === this.calculatedField) {
        this.valueColsIndexes.push(h + 1);
      }
    } // this function updates references to the correct alphabetical sequence
    //const returnObj = this.moveHiddenFieldsToEndAndUpdateHiddenIndexes(
    //  columnBinding,
    //  colHeaders,
    //  false
    //);
    //columnBinding = returnObj.columns;
    //colHeaders = returnObj.colHeaders;


    this.nestedHeaders = colHeaders;
    this.colHeaders = colHeaders;
    this.columns = columnBinding;
    data.DataList.map((item, i) => {
      if (!this.dataSourceData[i]) {
        if (item.ChangeLog !== null) {
          const changeLogObj = item.ChangeLog.split('|||');

          if (changeLogObj) {
            item['ChangeLogObj'] = [];
            changeLogObj.map(change => {
              const changeObj = change.split('###');

              if (changeObj) {
                if (typeof item.ChangeLogObj[changeObj[3]] === 'undefined') {
                  item.ChangeLogObj[changeObj[3]] = {};
                }

                if (typeof item.ChangeLogObj[changeObj[3]][changeObj[4]] === 'undefined') {
                  item.ChangeLogObj[changeObj[3]][changeObj[4]] = {};
                }

                item.ChangeLogObj[changeObj[3]][changeObj[4]] = {
                  name: changeObj[0],
                  date: changeObj[1],
                  oldValue: changeObj[2],
                  year: changeObj[3],
                  attrType: changeObj[4],
                  dataRowId: changeObj[5]
                };
              }
            });
          }
        }

        let rowComments = [];

        if (this.allColsComments) {
          rowComments = this.allColsComments.filter(single => single.DraftDataRowId == item.DataRowId);
          item['allComments'] = [];
          rowComments.map(({
            ColumnName,
            AttributeType
          }) => {
            if (typeof item['allComments'][ColumnName] === 'undefined') {
              item['allComments'][ColumnName] = [];
            }

            if (typeof item['allComments'][ColumnName][AttributeType] === 'undefined') {
              item['allComments'][ColumnName][AttributeType] = true;
            }
          });
        }

        item['IsDeleted'] = false;
        this.dataSourceData[i] = Object.assign(Object.assign({}, item), {
          ColumnsData: {},
          YearsData: {}
        });
      }

      data.ColumnList.forEach(col => {
        // if (col.IsVisible) {
        Object.assign(this.dataSourceData[i]['ColumnsData'], {
          [col.Title]: item.ColumnsData[col.Index] !== null ? item.ColumnsData[col.Index].toString() : ''
        }); // }
      });
      data.YearsList.forEach((year, j) => {
        if (!this.dataSourceData[i]['YearsData'][year.Year]) {
          this.dataSourceData[i]['YearsData'][year.Year] = {};
        }

        year.AttributeList.map(attribute => {
          Object.assign(this.dataSourceData[i]['YearsData'][year.Year], {
            [attribute.Title]: typeof item.YearsData[year.Year] !== 'undefined' ? item.YearsData[year.Year][attribute.Index] : 0
          });
        });
      });
    });
    const isDataRowNull = this.dataSourceData.find(data => data.DataRowId !== null);

    if (!isDataRowNull) {
      this.disabledSignOffButton = true;
    } // console.log(this.hotRegisterer.getInstance(this.id).updateSettings);


    this.onContextMenuPrepare();
    this.dataSourceData = this.dataSourceData.filter(item => item.IsDeleted !== true); // emit datasource for preview

    this.dataSourceDataChanged.emit(this.dataSourceData); // show column reference

    this.showCellReferences(); //get state

    this.getState(); //Check If adding new row is allowed or not

    this.checkNewRow();
    const that = this;
    this.hotRegisterer.getInstance(this.id).updateSettings({
      columnSorting: {
        sortEmptyCells: true
      },

      cells(row, column, prop) {
        const cellProperties = {};
        const cellProps = prop.toString().split('.');
        const data = this.instance.getSourceDataAtRow(row);
        cellProperties.isStudyEditable = that.isStudyEditable;
        cellProperties.calculatedField = that.calculatedField;
        cellProperties.dataSetId = that.dataSetId;
        cellProperties.showFormula = that.showFormula;
        cellProperties.renderer = that.cellRendererData.bind(this);
        return cellProperties;
      },

      afterOnCellMouseDown(event, coords, TD) {
        const totalCols = that.hotRegisterer.getInstance(that.id).countCols();

        if (!that.isStudyEditable && coords.col === totalCols - 1) {
          const logicalRow = that.hotRegisterer.getInstance(that.id).toPhysicalRow(coords.row);
          const currentRow = that.hotRegisterer.getInstance(that.id).getSourceDataAtRow(logicalRow);
          that.onDeleteRowClicked.emit(currentRow);
        }
      },

      afterSelection: (row, column, row2, column2, preventScrolling, selectionLayerLevel) => {
        const col = that.hotRegisterer.getInstance(that.id).getSourceDataAtCell(row, column);
        const meta = that.hotRegisterer.getInstance(that.id).getCellMeta(row, column);
        const currentColumn = that.columns.find(item => item.data == meta.prop);

        if (currentColumn && currentColumn.type == 'numeric') {
          that.selectedCell.row = row;
          that.selectedCell.col = column;
          that.selectedCellValue = col;
          that.disableFormulaBar = currentColumn.readOnly;
        } else {
          that.selectedCellValue = '';
        }
      },
      beforeCopy: function (data, coords) {
        var coord = coords[0]; // var p = this.getPlugin('formulas');

        var row = 0;
        var col = 0;
        console.log(coord.startRow);

        for (var i = coord.startRow; i <= coord.endRow; i++) {
          for (var j = coord.startCol; j <= coord.endCol; j++) {
            data[row][col] = that.hotRegisterer.getInstance(that.id).getSourceDataAtCell(i, j);
            col++;
          }

          col = 0;
          row++;
        }
      },

      afterFilter(conditionsStack) {
        // exclude newly added rows from filter
        //that.hotRegisterer.getInstance(that.id).batch(() => {
        //  const newRows = that.dataSourceData.filter(f => f.IsNewRow === true);
        //  if (newRows.length > 0) {
        //    for (let i = 0; i < newRows.length; i++) {
        //      (that.hotRegisterer.getInstance(that.id).getPlugin('filters') as any).filtersRowsMap.setValueAtIndex(i, false);
        //    }
        //  }
        //});
        that.dataGridState.filters = conditionsStack;
        that.saveState(); //that.recalculateColumns();

        setTimeout(() => {
          //that.getvisibleRows();
          //that.recalculateColumns();
          that.cellRendererData.bind(this); //that.hotRegisterer.getInstance(that.id).render();
        }, 100);
      },

      afterColumnSort(currentSortConfig, destinationSortConfigs) {
        // keep newly added rows always on top
        //const newRows = that.dataSourceData.filter(f => f.IsNewRow === true);
        //if (newRows.length > 0) {
        //  for (let i = 0; i < newRows.length; i++) {
        //    const visualRow = that.hotRegisterer.getInstance(that.id).toVisualRow(i);
        //    that.hotRegisterer.getInstance(that.id).rowIndexMapper.moveIndexes([visualRow], 0);
        //  }
        //}
        //that.recalculateColumns();
        that.dataGridState.sorting = destinationSortConfigs;
        that.hotRegisterer.getInstance(that.id).render();
        that.saveState();
      },

      afterColumnResize(newSize, column, isDoubleClick) {
        that.dataGridState.columnResize[column] = newSize;
        that.saveState();
      }

    });

    if (this.localStorageService.getData('isDataAfterReloadOrRefresh') === true) {
      this.setUpCalculatedFieldsFromSatedata();
    }

    this.setTableChanges();
    this.isLoadingService.remove();
  }

  textBoxValueChanged(event) {
    if (event.event) {
      this.hotRegisterer.getInstance(this.id).setDataAtCell(this.selectedCell.row, this.selectedCell.col, event.value);
    }
  }

  cellRendererData(instance, td, row, col, prop, value, cellProperties) {
    var _a;

    handsontable_base__WEBPACK_IMPORTED_MODULE_18__["default"].renderers.NumericRenderer.apply(this, arguments);
    const visiblerows = instance.rowIndexMapper.getNotTrimmedIndexes();
    const logicalRowNum = cellProperties.row;
    const cellProps = prop.toString().split('.');
    const data = instance.getSourceDataAtRow(logicalRowNum);
    const rowData = instance.getDataAtRow(row);
    const visibleIndex = visiblerows.find(x => x == logicalRowNum);

    if (data && data.IsNewRow) {
      if (typeof cellProps[0] !== 'undefined' && cellProps[0] === 'YearsData') {
        td.classList.add('htNumeric');
      }

      td.classList.add('highlighter-tr');
    }

    if (typeof cellProps[0] !== 'undefined' && cellProps[0] === 'YearsData') {
      td.classList.add('htRight');
      const cellValue = instance.getSourceDataAtCell(logicalRowNum, cellProperties.col);

      if (cellValue.toString().startsWith('=', 0)) {
        td.classList.add('has-formula');

        if (cellProperties.showFormula) {
          td.innerHTML = cellValue;
        }
      }

      if (data && typeof data['ChangeLog'] !== 'undefined' && data['ChangeLog'] !== null) {
        const rowChangeLogData = data['ChangeLogObj'];

        if (typeof rowChangeLogData[cellProps[1]] !== 'undefined') {
          const yearChangeLogData = rowChangeLogData[cellProps[1]];

          if (typeof yearChangeLogData[cellProps[2]] !== 'undefined') {
            let commentHtml = '';

            if (data['ChangeLogObj'] && typeof data['ChangeLogObj'][cellProps[1]] !== 'undefined') {
              const commentData = data['ChangeLogObj'][cellProps[1]][cellProps[2]];
              const oldValue = !isNaN(commentData.oldValue) ? +commentData.oldValue : 0;
              commentHtml = `<div class='row text-left'>
                            <div class='col-3'>Name:</div>
                            <div class='col'>${commentData.name}</div>
                        </div>
                        <div class='row text-left'>
                            <div class='col-3'>Old Value:</div>
                            <div class='col'>${oldValue.toFixed(1)}</div>
                        </div>
                        <div class='row text-left'>
                            <div class='col-3'>Date:</div>
                            <div class='col'>${commentData.date}</div>
                        </div>`;
            } // Handsontable.renderers.TextRenderer.apply(this, arguments);
            // td.className = 'htRight htNumeric highlighter-td cellWithComment';


            td.classList.add('htRight');
            td.classList.add('htNumeric');
            td.classList.add('highlighter-td');
            td.classList.add('cellWithComment'); // const myDiv = `<div popup-tooltip='${commentHtml}'></div>`;

            const div = document.createElement('div');
            div.innerHTML = commentHtml;
            div.className = 'cellComment'; // div.parentElement?.parentElement?.parentElement?.classList.add('');
            // td.setAttribute(
            //   'popup-tooltip',
            //   'This is test tooltip without HTML'
            // );

            td.appendChild(div);
          }
        }
      }

      if (data && typeof data['allComments'] !== 'undefined' && data['allComments'] !== null) {
        if (typeof data['allComments'][cellProps[1]] !== 'undefined') {
          if (typeof data['allComments'][cellProps[1]][cellProps[2]] !== 'undefined' && data['allComments'][cellProps[1]][cellProps[2]]) {
            // cellProperties.className = 'has-comment';
            td.classList.add('has-comment');
          }
        }
      }
    }

    const colCount = instance.countCols(); //const hiddenColumnsCount = this.hiddenColumns?.columns?.length || 0;
    //if (
    //  !cellProperties.isStudyEditable &&
    //  col === colCount - hiddenColumnsCount - 1
    //) {

    if (!cellProperties.isStudyEditable && col === colCount - 1) {
      td.className = 'text-center';
      td.innerHTML = '<button class="btn btn-outline-danger btn-sm"><i class="fa fa-trash"></i></button>';
    }

    if (typeof cellProps[0] !== 'undefined' && cellProps[0] === 'YearsData') {
      if (cellProps[2] !== cellProperties.calculatedField) {
        const calculatedFiled = (_a = cellProperties.calculatorContextMenuItems) === null || _a === void 0 ? void 0 : _a.find(single => single.name === cellProps[2] && single.isCheck);

        if (calculatedFiled) {
          const valueProp = `${cellProps[0]}.${cellProps[1]}.${cellProperties.calculatedField}`;
          const currentValue = cellProperties.valueColsIndexes.find(valueColsIndex => valueColsIndex.prop === valueProp);
          const currentValueIndex = cellProperties.valueColsIndexes.findIndex(valueColsIndex => valueColsIndex.prop === valueProp);

          if (currentValue) {
            const colStaticColName = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_2__.Common.getAlphabetFromNo(currentValue.index + 1);
            const previousValueIndex = currentValueIndex > 0 ? currentValueIndex - 1 : 0;
            const previousValue = cellProperties.valueColsIndexes[previousValueIndex];
            let colStaticColPreviousValue = '';

            if (previousValue) {
              colStaticColPreviousValue = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_2__.Common.getAlphabetFromNo(previousValue.index + 1);
            } // console.log(instance.countRows());


            let replaceValue = {
              colStaticColName: colStaticColName,
              COL_PREVIOUS_VALUE: colStaticColPreviousValue,
              TOTAL_ROWS: instance.countRows(),
              ROW_NO: row + 1,
              NO_YEAR: 1
            };
            let colFormula = typeof calculatedFiled.formula !== 'undefined' ? calculatedFiled.formula : '';
            colFormula = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_2__.Common.replaceAll(colFormula, replaceValue); // console.log(colFormula);

            data['YearsData'][cellProps[1]][cellProps[2]] = colFormula;
            cellProperties.numericFormat = {
              pattern: '0,0.0'
            };
            handsontable_base__WEBPACK_IMPORTED_MODULE_18__["default"].renderers.NumericRenderer.apply(this, arguments); // add % symbol to calculated fields, numeric sorting is allowed

            td.innerHTML = `${value}%`;
          }
        }
      } // cellProperties.type= 'numeric',
      //Handsontable.renderers.NumericRenderer.apply(this, arguments as any);


      cellProperties.numericFormat = {
        pattern: cellProperties.calculatedField == 'Unit' ? '0,0' : cellProperties.dataSetId == 4 ? '0,0.0' : '0,0.00'
      };
    }

    return td;
  }

  getvisibleRows() {
    let visibleRows = [];
    const filterRows = this.hotRegisterer.getInstance(this.id).rowIndexMapper.getNotTrimmedIndexes();

    if (filterRows) {
      filterRows.map(filterRow => {
        const row = this.hotRegisterer.getInstance(this.id).getSourceDataAtRow(filterRow); // const yearData = item.YearsData;
        // let colStaticColNo = Object.keys(item.ColumnsData).length;
        // if (yearData) {
        //   let valueColIndex = 0;
        //   let isFirstCol = false;
        //   Object.keys(yearData).map((year: any) => {
        //     colStaticColNo++;
        //     if (calculatedFiled.isCheck) {
        //       if (
        //         typeof item.YearsData[year][calculatedFiled.name] ===
        //         'undefined'
        //       ) {
        //         item.YearsData[year][calculatedFiled.name] = '';
        //       }
        //     } else {
        //       delete item.YearsData[year][calculatedFiled.name];
        //     }
        //     if (!myCols.includes(...Object.keys(item.YearsData[year]))) {
        //       myCols.push(...Object.keys(item.YearsData[year]));
        //     }
        //   });
        // }

        visibleRows.push(row);
      });
    } // this.hotRegisterer.getInstance(this.id).loadData(visibleRows);


    return visibleRows;
  }

  recalculateColumns() {
    const filterRows = this.hotRegisterer.getInstance(this.id).rowIndexMapper.getNotTrimmedIndexes(); // this.hotRegisterer.getInstance(this.id).render();
    // if (filterRows) {
    //   filterRows.map((filterRow) => {
    //     const row = this.hotRegisterer
    //       .getInstance(this.id)
    //       .getSourceDataAtRow(filterRow) as any;
    //     let colData: any = [];
    //     Object.keys(row.ColumnsData).map((col: any) => {
    //       colData.push(row.ColumnsData[col]);
    //     });
    //     Object.keys(row.YearsData).map((yearData: any) => {
    //       Object.keys(row.YearsData[yearData]).map((innerData) => {
    //         colData.push(row.YearsData[yearData][innerData]);
    //       });
    //     });
    //     for (let i = 0; i < colData.length; i++) {
    //       this.hotRegisterer
    //         .getInstance(this.id)
    //         .setSourceDataAtCell(filterRow, i, colData[i]);
    //     }
    //   });
    // }
  }

  onRequestForSignOffClickedEvent(event) {
    this.onRequestForSignOffClicked.emit(event);
  }

  onRequestForChangeClickedEvent(event) {
    this.onRequestForChangeClicked.emit(event);
  }

  onDeleteRow(currentRow) {
    if (this.deletedRows.filter(item => item.DataRowId !== currentRow.DataRowId)) {
      this.deletedRows.push(currentRow);
    }

    console.log(this.deletedRows);

    if (this.deletedRows.length > 0) {
      this.isRenderingFinished = false;
      const data = this.hotRegisterer.getInstance(this.id).getSourceData();
      const dataSourceData = data.reduce((item, curr) => {
        const stored = this.deletedRows.find(({
          DataRowId
        }) => DataRowId === curr.DataRowId);
        console.log(stored);

        if (stored) {
          stored.IsDeleted = true; // item.push(stored);
        } else {
          item.push(curr);
        }

        return item;
      }, []);
      console.log(dataSourceData);
      this.pendingChangeService.setPendingChanges(true);
      this.alertService.success('Your data row has been removed successfully.');
      setTimeout(() => {
        this.hotRegisterer.getInstance(this.id).loadData(dataSourceData);
        this.hotRegisterer.getInstance(this.id).render();
        this.setUpUserState();
      }, 100); // this.isRenderingFinished = true;
    }
  }

  unlockStudyClickedEvent(event) {
    this.onUnlockStudyClicked.emit(event);
  }

  onSaveDataClickedEvent() {
    this.pendingChangeService.setPendingChanges(false);
    this.hotRegisterer.getInstance(this.id).validateCells(valid => {
      if (valid) {
        this.localStorageService.setData(true, 'isDataAfterReloadOrRefresh');
        setTimeout(() => {
          const data = {
            dataSourceData: this.dataSourceDataNoFormulas.length > 0 ? this.dataSourceDataNoFormulas : this.dataSourceData,
            unitOfValues: this.unitOfValues
          };

          if (data.dataSourceData && this.deletedRows.length) {
            data.dataSourceData = data.dataSourceData.reduce((item, curr) => {
              const stored = this.deletedRows.find(({
                DataRowId
              }) => DataRowId === curr.DataRowId);

              if (stored) {
                stored.IsDeleted = true;

                for (let year in stored.YearsData) {
                  delete stored['YearsData'][year]['% Of Total'];
                  delete stored['YearsData'][year]['CAGR'];
                  delete stored['YearsData'][year]['Change, %'];
                }

                item.push(stored);
              } else {
                item.push(curr);
              }

              return item;
            }, []);
          }

          this.onSaveDataClicked.emit(data);
        }, 100);
      } else {
        this.alertService.danger('Grid contains some invalid cells!');
      }
    });
  }

  onSignOffClickedEvent(event) {
    this.onSignOffClicked.emit(this.dataSourceData);
  }

  addNewRow() {
    if (this.isAddNewRowPopup === false) {
      this.isAddNewRowPopup = true;
      this.createNewRowObj();
    } else {
      this.bindRowFormObjectToHandsontableData();
    }
  }

  dropdownchange(event, rowItem) {
    let dropDownValue = this.newRowFormObj.find(item => item.title == rowItem.title);

    if (dropDownValue && event) {
      dropDownValue.value = event.Name;
      this.newRowFormObj.forEach(item => {
        if (item.title == rowItem.title + 'Id') {
          item.value = event.Id;
        }
      }); //For handling dependent dropdown fields for Add New Row
      //this.bindDependentDropdown(event);
    }
  } //For handling dependent dropdown fields for Add New Row


  bindDependentDropdown(rowItem) {
    let dependentField = [];
    this.newRowFormObj.forEach(item => {
      if (item.title == rowItem.title + 'Id') {
        item.value = rowItem.Id;
      }

      if (item.IsDependent && item.DependingAttributes.length > 0) {
        dependentField = [];
        item.DependingAttributes.forEach(attr => {
          const dependentItem = this.newRowFormObj.find(dependent => dependent.title == attr && attr == rowItem.title + 'Id');

          if (dependentItem) {
            let obj = {};
            obj.dependentPropertyName = attr;
            obj.dependentPropertyValue = dependentItem.value;
            dependentField.push(obj);
          }
        });

        if (dependentField && dependentField.length > 0) {
          this.loadDependentDropdown(item, dependentField);
        }
      }
    });
    console.log('dependent', dependentField);
  }

  createNewRowObj() {
    this.newRowFormObj = [];

    for (let col of this.dataSource.Data.ColumnList) {
      const colSetting = this.dataSettings.fields.find(item => item.dataField === col.Title);

      if (col.IsVisible) {
        if (colSetting && !colSetting.isVisibleToAddRow) {
          let existingRowData = this.dataSourceData[0]['ColumnsData'];
          let rowObj = {
            title: col.Title,
            label: colSetting.caption,
            value: existingRowData[col.Title].toString(),
            isColumnsData: true,
            isEditable: false,
            isVisible: true
          };
          this.newRowFormObj.push(rowObj);

          if (existingRowData && existingRowData[col.Title + 'Id']) {
            const existingColumn = this.newRowFormObj.find(item => item.title === col.Title + 'Id');

            if (existingColumn) {
              existingColumn.value = existingRowData[col.Title + 'Id'].toString();
            }
          }
        } else {
          let rowObj = {
            title: col.Title,
            label: (colSetting === null || colSetting === void 0 ? void 0 : colSetting.caption) || col.Title,
            value: '',
            isColumnsData: true,
            isEditable: typeof (colSetting === null || colSetting === void 0 ? void 0 : colSetting.isEditable) == 'boolean' ? colSetting.isEditable : true,
            isVisible: true
          };
          this.newRowFormObj.push(rowObj);
        }
      } else {
        let rowObj = {
          title: col.Title,
          label: '',
          value: '',
          isColumnsData: true,
          isEditable: false,
          isVisible: false
        };
        this.newRowFormObj.push(rowObj);
      }
    }

    for (let col of this.dataSource.Data.YearsList) {
      col.AttributeList.forEach(attr => {
        const colSetting = this.dataSettings.fields.find(item => item.dataField === attr.Title && item.yearType.indexOf(col.Type) !== -1);

        if (colSetting) {
          let rowObj = {
            title: col.Year,
            label: col.Year,
            value: '',
            isColumnsData: false,
            readOnly: typeof colSetting.readOnly == 'boolean' ? colSetting.readOnly : false,
            isVisible: true
          };
          this.newRowFormObj.push(rowObj);
        }
      });
    }

    this.yearsList = this.newRowFormObj.filter(item => !item.isColumnsData && !item.readOnly);
    this.columnsList = this.newRowFormObj.filter(item => item.isColumnsData && item.isVisible);
    this.createForm();
    this.getDataEntryDropDown();
  }

  bindRowFormObjectToHandsontableData() {
    if (this.addNewRowForm.valid) {
      let columnsData = {};
      let yearsData = {};
      let columns = [];

      for (let rowItem of this.newRowFormObj) {
        if (rowItem.isColumnsData) {
          columnsData[rowItem.title] = rowItem.value.toString();
        } else {
          let yearDataField = [];
          this.dataSource.Data.YearsList[0].AttributeList.forEach(item => yearDataField.push(item.Title));

          if (yearDataField && yearDataField.length == 1) {
            const title = yearDataField[0];
            yearsData[rowItem.title] = {
              [title]: Number(rowItem.value)
            };
          }
        }
      } //Get Column Names for Editable Columns


      this.columnsList.forEach(item => {
        if (item.isEditable) {
          columns.push(item.title);
        }
      });
      let newDataSourceData = {
        ChangeLog: null,
        DataRowId: angular2_uuid__WEBPACK_IMPORTED_MODULE_9__.UUID.UUID().toUpperCase(),
        IsNewRow: true,
        ColumnsData: columnsData,
        YearsData: yearsData
      };
      let duplicateColumns = this.commonService.checkDuplicateRow(this.dataSourceData, columns, newDataSourceData);

      if (duplicateColumns && duplicateColumns.length > 0) {
        this.alertService.danger('You have already added this data in row.');
        this.addNewRowForm.setErrors({
          duplicate: true
        });
      } else {
        // console.log(newDataSourceData);
        const data = this.hotRegisterer.getInstance(this.id).getSourceData();
        this.isRenderingFinished = false;
        this.dataSourceData.unshift(newDataSourceData);
        data.unshift(newDataSourceData);
        this.hotRegisterer.getInstance(this.id).loadData(data);
        this.hotRegisterer.getInstance(this.id).render();
        this.pendingChangeService.setPendingChanges(true); // move the newly created row to the top and exclude it from sorting until sort is applied again

        const stateFiltersTemp = this.dataGridState.filters; // off filters to avoid adding a blank row

        this.dataGridState.filters = [];
        this.applyStateFilters();
        setTimeout(() => {
          const visualRow = this.hotRegisterer.getInstance(this.id).toVisualRow(0);
          this.hotRegisterer.getInstance(this.id).rowIndexMapper.moveIndexes([visualRow], 0); //(this.hotRegisterer.getInstance(this.id).getPlugin('filters') as any).filtersRowsMap.setValueAtIndex(0, false);

          this.hotRegisterer.getInstance(this.id).render();
          this.dataGridState.filters = stateFiltersTemp;
          this.applyStateFilters();
          this.isRenderingFinished = true;
        }, 1500);
        this.isAddNewRowPopup = false;
        this.setUpUserState();
      }
    } else {
      this.alertService.danger('Need to complete selection to save row.');
    }
  }

  onContextMenuPrepare() {
    let that = this;
    this.hotRegisterer.getInstance(this.id).updateSettings({
      contextMenu: {
        items: {
          copy: {
            name: 'Copy',

            hidden() {
              return this.getActiveEditor() !== undefined ? false : true;
            }

          },
          cut: {
            name: 'Cut',

            hidden() {
              return this.getActiveEditor() !== undefined ? false : true;
            }

          },
          sp: {
            name: '---------',

            hidden() {
              return this.getActiveEditor() !== undefined ? false : true;
            }

          },
          comment_custom: {
            name: 'Comments',

            hidden() {
              return this.getActiveEditor() !== undefined ? false : true;
            },

            callback: function (key, selection, clickEvent) {
              const currentSelected = this.getSelectedLast(); // console.log(key, selection, clickEvent);

              if (currentSelected) {
                const logicalRow = that.hotRegisterer.getInstance(that.id).toPhysicalRow(currentSelected[0]);
                const rowData = this.getSourceDataAtRow(logicalRow);
                const cellMeta = this.getCellMeta(currentSelected[0], currentSelected[1]);
                const cellValueProp = cellMeta.prop;
                const dataRowId = rowData.DataRowId;
                const cellValuePropObj = cellValueProp.split('.');
                const cellColYear = cellValuePropObj[1];
                const attrType = cellValuePropObj[2];
                that.selectedCommentCellData = {
                  colValue: cellColYear,
                  dataRowId: dataRowId,
                  currentCell: {},
                  currentRowData: rowData,
                  cellValueProp: cellValueProp,
                  colCaption: cellColYear,
                  attrType: attrType
                };
                that.viewNotePopup = true;
              }
            }
          }
        }
      }
    });
  }

  onCommentBoxHidden() {
    this.viewNotePopup = false;
    this.selectedCommentCellData = {};
  }

  onCommentAdded(data) {
    let rowData = this.hotRegisterer.getInstance(this.id).getSourceData().find(item => item['DataRowId'] === data.dataRowId);

    if (rowData) {
      rowData['allComments'] = data.currentRowData.allComments;
    }

    const that = this;
    this.hotRegisterer.getInstance(this.id).updateSettings({
      cells(row, column, prop) {
        const cellProperties = {};
        cellProperties.isStudyEditable = that.isStudyEditable;
        cellProperties.calculatedField = that.calculatedField;
        cellProperties.dataSetId = that.dataSetId;
        cellProperties.showFormula = that.showFormula;
        cellProperties.renderer = that.cellRendererData;
        cellProperties.numericFormat = {
          pattern: cellProperties.calculatedField == 'Unit' ? '0,0' : cellProperties.dataSetId == 4 ? '0,0.0' : '0,0.00'
        };
        return cellProperties;
      }

    });
  }

  onCommentEmpty(data) {
    let rowData = this.hotRegisterer.getInstance(this.id).getSourceData().find(item => item['DataRowId'] === data.dataRowId);

    if (rowData) {
      rowData['allComments'] = data.currentRowData.allComments;
    }

    const that = this;
    this.hotRegisterer.getInstance(this.id).updateSettings({
      cells(row, column, prop) {
        const cellProperties = {};
        cellProperties.isStudyEditable = that.isStudyEditable;
        cellProperties.calculatedField = that.calculatedField;
        cellProperties.dataSetId = that.dataSetId;
        cellProperties.showFormula = that.showFormula;
        cellProperties.renderer = that.cellRendererData;
        cellProperties.numericFormat = {
          pattern: cellProperties.calculatedField == 'Unit' ? '0,0' : cellProperties.dataSetId == 4 ? '0,0.0' : '0,0.00'
        };
        return cellProperties;
      }

    });
  }

  onResetIemClick(e) {
    this.isRenderingFinished = false;
    this.isLoadingService.add();
    setTimeout(() => {
      switch (e.itemData.value) {
        case 'ResetState':
          this.deleteCustomState();
          break;

        case 'ResetData':
          this.localStorageService.setData(true, 'isDataAfterReloadOrRefresh');
          setTimeout(() => {
            this.isResetDataRequired = true;
            this.deletedRows = [];
            this.getAllColumnsComments();
          }, 100);
          break;

        case 'ResetCalculatedFields':
          this.resetCalculatedFields();
          break;

        default:
          // reset all
          this.isResetDataRequired = true;
          this.deleteCustomState();
          setTimeout(() => {
            this.deletedRows = [];
            this.getAllColumnsComments();
            this.resetCalculatedFields();
          }, 1000);
        // this.getAllColumnsComments();
        // this.resetCalculatedFields();
      }
    }, 100);
  }

  onCalculatedItemClick(e) {
    this.isRenderingFinished = false;
    this.isLoadingService.add();
    setTimeout(() => {
      this.addCalculatedItem(e);
    }, 100);
  }

  addCalculatedItem(e) {
    var _a;

    if (typeof e.itemData !== 'undefined' || typeof e !== 'undefined') {
      this.isLoadingService.add();
      const calculatedFiled = (e === null || e === void 0 ? void 0 : e.itemData) || e;
      calculatedFiled.isCheck = !calculatedFiled.isCheck;
      calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : ''; // let dataSourceData = this.hotRegisterer
      //   .getInstance(this.id)
      //   .getSourceData();
      // //this.recalculateColumns();

      const myCols = []; // const visibleRow = this.getvisibleRows();
      // if(visibleRow.length< dataSourceData.length){
      //   dataSourceData = visibleRow;
      // }

      let dataSourceData = this.hotRegisterer.getInstance(this.id).getSourceData();
      dataSourceData.map((item, i) => {
        const yearData = item.YearsData;
        let colStaticColNo = Object.keys(item.ColumnsData).length;

        if (yearData) {
          let valueColIndex = 0;
          let isFirstCol = false;
          Object.keys(yearData).map(year => {
            colStaticColNo++;

            if (calculatedFiled.isCheck) {
              if (typeof item.YearsData[year][calculatedFiled.name] === 'undefined') {
                item.YearsData[year][calculatedFiled.name] = '';
              }
            } else {
              // valueColIndex = this.calculateFiledValues(
              //   item,
              //   year,
              //   calculatedFiled,
              //   i,
              //   dataSourceData.length,
              //   valueColIndex
              // );
              delete item.YearsData[year][calculatedFiled.name];
            }

            if (!myCols.includes(...Object.keys(item.YearsData[year]))) {
              myCols.push(...Object.keys(item.YearsData[year]));
            }
          });
        }
      });
      let nestedHeader = [];
      this.colHeaders[0].map(colItem => {
        if (typeof colItem.label !== 'undefined') {
          //if (!this.isVolumeYear) {
          colItem.colspan = myCols.length;
          myCols.map(nestedCol => {
            nestedHeader.push(nestedCol);
          }); // } else {
          //   nestedHeader = this.colHeaders[1];
          // }
        } else {
          nestedHeader.push(null);
        }
      });
      let columnLists = [];
      this.columns.map((cols, index) => {
        let colObj = typeof cols.data !== 'undefined' ? cols.data.split('.') : [];

        if (cols.data === `YearsData.${colObj[1]}.${this.calculatedField}`) {
          // let newCols: any = [];
          columnLists.push(cols);
          myCols.map(nestedCol => {
            if (nestedCol !== this.calculatedField) {
              const newCols = {
                data: `YearsData.${colObj[1]}.${nestedCol}`,
                readOnly: true,
                width: 50,
                wordWrap: false,
                placeholder: '...',
                isCalculatedField: true
              };
              columnLists.push(newCols);
            }
          }); // columnLists.splice(index, 0, ...newCols);
        } else {
          columnLists.push(cols);
        }
      });

      if (typeof this.colHeaders[1] !== 'undefined') {
        this.colHeaders[1] = nestedHeader;
      } else {
        this.colHeaders.push(nestedHeader);
      }

      if (myCols.length <= 1) {
        this.colHeaders.pop();
      } // this.columns = this.colHeaders;
      //this function updates references to the correct alphabetical sequence
      //const returnObj = this.moveHiddenFieldsToEndAndUpdateHiddenIndexes(
      //  columnLists,
      //  this.colHeaders,
      //  true
      //);
      //columnLists = returnObj.columns;
      //this.colHeaders = returnObj.colHeaders;
      //this.nestedHeaders = returnObj.colHeaders;


      this.valueColsIndexes = [];

      for (let h = 0; h <= nestedHeader.length; h++) {
        if (typeof nestedHeader[h] !== 'undefined' && nestedHeader[h] === this.calculatedField) {
          this.valueColsIndexes.push({
            prop: ((_a = columnLists[h]) === null || _a === void 0 ? void 0 : _a.data) || '',
            index: h
          }); // this.valueColsIndexes.push(h + 1);
        }
      }

      const that = this;
      this.hotRegisterer.getInstance(this.id).updateSettings({
        columns: columnLists,
        colHeaders: this.colHeaders,
        nestedHeaders: this.nestedHeaders,

        cells(row, column, prop) {
          const cellProperties = {};
          cellProperties.calculatedField = that.calculatedField;
          cellProperties.dataSetId = that.dataSetId;
          cellProperties.valueColsIndexes = that.valueColsIndexes;
          cellProperties.calculatorContextMenuItems = that.calculatorContextMenuItems;
          cellProperties.showFormula = that.showFormula;
          cellProperties.renderer = that.cellRendererData.bind(this);
          return cellProperties;
        }

      }); // console.log(nestedHeader);

      if (this.isFormulaAllowed) {
        dataSourceData = this.replaceCellReferences(dataSourceData);
      }

      this.showCellReferences(); // setTimeout(() => {

      this.hotRegisterer.getInstance(this.id).loadData(dataSourceData);
      this.hotRegisterer.getInstance(this.id).render();
      this.applyStateFilters();
      this.applyStateSort();
      this.applyStateColumnResize(); // }, 100);
      // only for case itemData exists,only in this case is field added manually

      if (e.itemData) {
        if (e.itemData.value === 'percentOfTotal') {
          this.dataGridState.isPercentOfTotal = e.itemData.isCheck;
        }

        if (e.itemData.value === 'changePercent') {
          this.dataGridState.isChangePercent = e.itemData.isCheck;
        }

        if (e.itemData.value === 'cagr') {
          this.dataGridState.isCagr = e.itemData.isCheck;
        }

        this.saveState();
      }

      this.isLoadingService.remove();
    }
  }

  replaceCellReferences(dataSourceData) {
    // clone data and update and return only copy
    let dataSourceDataCopy = lodash__WEBPACK_IMPORTED_MODULE_7__.cloneDeep(dataSourceData); // check all cells for referencing

    dataSourceData.forEach((datasourceRow, datasourceRowIndex) => {
      var _a; //console.log(dataSourceData);


      const yearsData = datasourceRow.YearsData;
      let yearsDataIndex = 0;

      for (let yearData in yearsData) {
        // count with value if any formula exists
        if ((_a = yearsData[yearData].Value) === null || _a === void 0 ? void 0 : _a.toString().startsWith('=', 0)) {
          console.log(yearsData[yearData].Value); // check if formula matching reference from reference list

          this.columnReferences.forEach((reference, index, columnReferences) => {
            // regular expression for reference in formula
            const regFullReference = new RegExp(`\\\$?${reference}\\\$?[1-9][0-9]?[0-9]?[0-9]?`, "g"); // regular expression for reference

            const regColumnReference = new RegExp(`${reference}`, "g"); // value with formula

            const str = yearsData[yearData].Value; // get all matches

            const matchArr = str.match(regFullReference); // if matches exists, replace reference by new reference

            if (matchArr === null || matchArr === void 0 ? void 0 : matchArr.length) {
              const columnsDataReferenceCount = Object.keys(datasourceRow.ColumnsData).length;
              const yearsDataReferenceCount = Object.keys(yearsData).length;
              const yearDataPropCount = Object.keys(yearsData[yearData]).length;
              const matchedReferenceIndex = index; // compute new reference

              const newReference = this.getNewReference(matchedReferenceIndex, columnReferences, columnsDataReferenceCount, yearsDataReferenceCount, yearDataPropCount);

              for (let match of matchArr) {
                const replacedMatch = match.replace(regColumnReference, newReference);
                dataSourceDataCopy[datasourceRowIndex].YearsData[yearData].Value = dataSourceDataCopy[datasourceRowIndex].YearsData[yearData].Value.replace(match, replacedMatch);
              }
            }
          });
        } //!!!! function have to count also with volume or units, use some enum way instead this
        //count with volume
        //if (yearsData[yearData].Volume?.toString().startsWith('=', 0)) {
        //}
        // TODO use enum in condition for all future cases
        // unit
        //if (yearsData[yearData].Unit?.toString().startsWith('=', 0)) {
        //}


        yearsDataIndex++;
      }
    });
    return dataSourceDataCopy;
  }

  getNewReference(matchedReferenceIndex, columnReferences, columnsDataReferenceCount, yearsDataReferenceCount, yearDataPropCount) {
    // check the column position of changed reference
    //TODO Use yearDataPropCount to recognize how many calculated fielad are applied
    //TODO Figure out if user removing calculated fields
    const indexPositionInYearsData = yearsDataReferenceCount - (columnsDataReferenceCount + yearsDataReferenceCount - matchedReferenceIndex);
    return columnReferences[columnsDataReferenceCount + indexPositionInYearsData * 2];
  } //private calculateFiledValues(
  //  item: any,
  //  year: number,
  //  calculatedFiled: any,
  //  i: number,
  //  dataSourceDataLength: number,
  //  valueColIndex: number
  //) {
  //  // let colStaticColPreviousValue = '';
  //  // let colStaticColName = '';
  //  // console.log(this.valueColsIndexes);
  //  // const colHeaders = this.colHeaders[0];
  //  // console.log(colHeaders);
  //  // const colHeaderData =
  //  //   colHeaders.find(
  //  //     (head: any) => typeof head.label !== 'undefined' && head.label === year
  //  //   ) || {};
  //  // const colSpan =
  //  //   colHeaderData && colHeaderData.colspan ? colHeaderData.colspan : 0;
  //  // console.log(colSpan);
  //  // if (typeof this.valueColsIndexes[valueColIndex] !== 'undefined') {
  //  //   colStaticColName = Common.getAlphabetFromNo(
  //  //     this.valueColsIndexes[valueColIndex] + valueColIndex
  //  //   );
  //  //   const preValueIndex = valueColIndex === 0 ? 0 : valueColIndex - 1;
  //  //   colStaticColPreviousValue = Common.getAlphabetFromNo(
  //  //     this.valueColsIndexes[preValueIndex] + preValueIndex
  //  //   );
  //  //   valueColIndex++;
  //  // }
  //  // let replaceValue = {
  //  //   colStaticColName: colStaticColName,
  //  //   COL_PREVIOUS_VALUE: colStaticColPreviousValue,
  //  //   TOTAL_ROWS: dataSourceDataLength,
  //  //   ROW_NO: i + 1,
  //  //   NO_YEAR: 1,
  //  // };
  //  if (typeof item.YearsData[year][calculatedFiled.name] === 'undefined') {
  //    item.YearsData[year][calculatedFiled.name] = '';
  //  }
  //  this.calculatorContextMenuItems.find(
  //    (menui) => menui.value === calculatedFiled.value
  //  ).isCheck = calculatedFiled.isCheck;
  //  Object.keys(item.YearsData[year]).map((itemKey) => {
  //    if (itemKey !== 'Value') {
  //      this.calculatorContextMenuItems.map((menuItem) => {
  //        if (menuItem.isCheck) {
  //          let colFormula =
  //            typeof menuItem.formula !== 'undefined' ? menuItem.formula : '';
  //          //colFormula = Common.replaceAll(colFormula, replaceValue);
  //          // item.YearsData[year][menuItem.name] = colFormula;
  //          item.YearsData[year][menuItem.name] = '';
  //        }
  //      });
  //    }
  //  });
  //  return valueColIndex;
  //}


  showCellReferences() {
    var _a, _b;

    if (this.colHeaders.length > 1) {
      let newHeaderRow = [];

      for (let i = 0; i < this.colHeaders[this.colHeaders.length - 1].length; i++) {// if (i === 0) {
        //   console.log(this.staticColumns.length);
        //   newHeaderRow.push({
        //     label: null,
        //     colspan: this.staticColumns.length,
        //   });
        // } else {
        // if (
        //   this.colHeaders[0][i] &&
        //   typeof this.colHeaders[0][i] !== 'object'
        // ) {
        //   newHeaderRow.push(this.colHeaders[0][i]);
        // }
        // }
      } // console.log(newHeaderRow);
      // this.colHeaders[0] = newHeaderRow;
      // console.log(this.colHeaders[1]);


      let nestedHeaderRow = [];

      for (let s of this.staticColumns) {
        nestedHeaderRow.push(s);
      }

      for (let h in this.colHeaders[1]) {
        if (this.colHeaders[1][h]) {
          nestedHeaderRow.push(this.colHeaders[1][h]);
        }
      }

      this.colHeaders[1] = nestedHeaderRow;
    }

    const columnReferences = this.columnReferences; // remove all existing references

    for (let headersArray in this.colHeaders) {
      for (let header in this.colHeaders[headersArray]) {
        if (typeof this.colHeaders[headersArray][header] === 'object' && this.colHeaders[headersArray][header] !== null) {
          this.colHeaders[headersArray][header]['label'] = (_a = this.colHeaders[headersArray][header]['label']) === null || _a === void 0 ? void 0 : _a.replace(/ *\([^)]*\) */g, '');
        } else {
          this.colHeaders[headersArray][header] = ((_b = this.colHeaders[headersArray][header]) === null || _b === void 0 ? void 0 : _b.replace(/ *\([^)]*\) */g, '')) || '';
        }
      }
    } // add reference to last nested level


    let index = 0;

    for (let header in this.colHeaders[this.colHeaders.length - 1]) {
      if (typeof this.colHeaders[this.colHeaders.length - 1][header] === 'object' && this.colHeaders[this.colHeaders.length - 1][header] !== null) {
        this.colHeaders[this.colHeaders.length - 1][header]['label'] = '(' + columnReferences[index] + ') ' + this.colHeaders[this.colHeaders.length - 1][header]['label'];
      } else {
        if (this.colHeaders[this.colHeaders.length - 1][header] === 'Value' || this.colHeaders[this.colHeaders.length - 1][header] === 'Volume' || this.colHeaders[this.colHeaders.length - 1][header] === 'Unit' || /^[0-9]{4}$/.test(this.colHeaders[this.colHeaders.length - 1][header])) {
          this.colHeaders[this.colHeaders.length - 1][header] = '(' + columnReferences[index] + ') ' + this.colHeaders[this.colHeaders.length - 1][header];
        }
      }

      index++;
    }

    const that = this;
    this.hotRegisterer.getInstance(this.id).updateSettings({
      colHeaders: this.colHeaders,

      afterGetColHeader(column, TH, cp) {
        if (that.colHeaders.length > 1) {
          // TH.classList.add('new-header');
          // console.log(that.colHeaders);
          if (cp == 0) {
            for (let i = 0; i < that.staticColumns.length; i++) {
              if (column == i) TH.classList.add('new-header');
            }
          } // if (cp === 0 && column == 0) TH.classList.add('new-header');
          // if (cp === 1 && column == 0) TH.remove();

        }
      },

      afterGetColumnHeaderRenderers(renderers) {}

    });
  }

  createNewDataEntry(type, newValue) {
    const dataRelationData = this.dataRelations.find(item => Object.values(src_model_enums_dataRelations_enum__WEBPACK_IMPORTED_MODULE_6__.DataRelationsEnum).includes(item.TableName) && item.TableName === type);

    if (dataRelationData) {
      this.isLoadingService.add();
      this.sharedService.saveNewDataEntry(dataRelationData.DataRelationId, newValue).subscribe(res => {
        if (res.HttpStatusCode === 200) {
          this.alertService.success(res.Data);
          this.loadDataEntry(dataRelationData);
          this.isLoadingService.remove();
        } else {
          this.alertService.danger(res.Data);
          this.isLoadingService.remove();
        }
      }, err => {
        console.log(err);
        this.isLoadingService.remove();
      });
    }
  }

  loadDataEntry(dataRelationData) {
    this.sharedService.getDataEntryDropDowns(dataRelationData.DataRelationId).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        this.bindDropdownToModel(res.Data, dataRelationData.TableName);
      }
    });
  } //For handling dependent dropdown fields for Add New Row


  loadDependentDropdown(dataRelationData, dependentField) {
    this.sharedService.getDependentDataEntryDropDowns(dataRelationData.DataRelationId, dependentField).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        this.bindDropdownToModel(res.Data, dataRelationData.title);
      }
    });
  }

  getDataEntryDropDown() {
    if (this.dataRelations && this.dataRelations.length > 0) {
      this.dataRelations.forEach(item => {
        this.newRowFormObj.forEach(val => {
          const title = (0,lodash__WEBPACK_IMPORTED_MODULE_7__.toUpper)(val.title);
          const dataItem = (0,lodash__WEBPACK_IMPORTED_MODULE_7__.toUpper)(item.TableName);
          const label = (0,lodash__WEBPACK_IMPORTED_MODULE_7__.toUpper)(val.label.replace(/\s/g, ""));

          if (title === dataItem && val.isEditable) {
            val.data = [];
            val.IsDependent = item.IsDependent;
            val.DependingAttributes = item.DependingAttributes;
            val.DataRelationId = item.DataRelationId; //if(!item.IsDependent){

            this.loadDataEntry(item); //}
          }
        });
      });
    }
  }

  bindDropdownToModel(data, dropdownName) {
    this.newRowFormObj.find(val => {
      const title = (0,lodash__WEBPACK_IMPORTED_MODULE_7__.toUpper)(val.title);
      const dataItem = (0,lodash__WEBPACK_IMPORTED_MODULE_7__.toUpper)(dropdownName);
      const label = (0,lodash__WEBPACK_IMPORTED_MODULE_7__.toUpper)(val.label.replace(/\s/g, ""));

      if (title === dataItem && val.isEditable) {
        val.data = data === null || data === void 0 ? void 0 : data.sort((a, b) => a.Name.localeCompare(b.Name));
        val.data = val.data.filter(item => item.Name !== '' && item.Name !== null);
      }
    });
  }

  getState() {
    this.sharedService.getState(this.dataSource.Data.StudySetup.ViewId, this.marketYearCategoryId, true).subscribe(data => {
      try {
        const stateRes = typeof data.Data[0] !== 'undefined' ? data.Data[0] : {};
        this.dataGridState = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_2__.Common.realMerge(new _model_dataGridState_model__WEBPACK_IMPORTED_MODULE_8__.DataGridState(), JSON.parse(stateRes.StateData));
      } catch (_a) {
        this.dataGridState = new _model_dataGridState_model__WEBPACK_IMPORTED_MODULE_8__.DataGridState();
      } finally {
        if (!this.localStorageService.getData('isDataAfterReloadOrRefresh') || this.localStorageService.getData('isDataAfterReloadOrRefresh') === false) {
          this.dataGridState.isCagr = false;
          this.dataGridState.isChangePercent = false;
          this.dataGridState.isPercentOfTotal = false;
        } else {
          this.localStorageService.setData(false, 'isDataAfterReloadOrRefresh');
        }

        this.setUpUserState();
        this.isLoadingService.remove(); // this.applyStateFilters();
        // this.applyStateSort();
        // this.applyStateColumnResize();
      }
    }, error => {
      throw new Error(error);
    });
  }

  saveState() {
    this.sharedService.setState(this.dataSource.Data.StudySetup.ViewId, this.marketYearCategoryId, 0, this.isDefaultStateMode, JSON.stringify(this.dataGridState), true).subscribe(data => {}, error => {
      throw new Error(error);
    });
    this.pendingChange = true;
  }

  deleteCustomState() {
    if (this.dataSource.Data.StudySetup.ViewId) {
      this.isLoadingService.add();
      this.sharedService.deleteState(this.dataSource.Data.StudySetup.ViewId, this.marketYearCategoryId, 0).subscribe(data => data, error => {
        this.isLoadingService.remove();
        throw new Error(error);
      }, () => {
        this.dataGridState = new _model_dataGridState_model__WEBPACK_IMPORTED_MODULE_8__.DataGridState();
        setTimeout(() => {
          this.getState();
        }, 100);
      });
    } else {
      this.isRenderingFinished = true;
      this.isLoadingService.remove();
    }
  }

  setUpUserState() {
    setTimeout(() => {
      // console.log(this.hotRegisterer.getInstance(this.id).getSourceData());
      // this.hotRegisterer.getInstance(this.id).loadData(this.dataSourceData);
      console.log(this.hotRegisterer.getInstance(this.id).getSourceData().length);
      this.hotRegisterer.getInstance(this.id).loadData(this.hotRegisterer.getInstance(this.id).getSourceData());
      this.hotRegisterer.getInstance(this.id).render();
      this.applyStateFilters();
      this.applyStateSort();
      this.applyStateColumnResize();
    }, 100);
  }

  setUpCalculatedFieldsFromSatedata() {
    setTimeout(() => {
      this.calculatorContextMenuItems[0].isCheck = !this.dataGridState.isPercentOfTotal;
      this.addCalculatedItem(this.calculatorContextMenuItems[0]);
      this.calculatorContextMenuItems[1].isCheck = !this.dataGridState.isChangePercent;
      this.addCalculatedItem(this.calculatorContextMenuItems[1]);
      this.calculatorContextMenuItems[2].isCheck = !this.dataGridState.isCagr;
      this.addCalculatedItem(this.calculatorContextMenuItems[2]);
    }, 2000);
  }

  resetCalculatedFields() {
    this.dataGridState.isCagr = false;
    this.dataGridState.isChangePercent = false;
    this.dataGridState.isPercentOfTotal = false;
    this.calculatorContextMenuItems[0].isCheck = true;
    this.addCalculatedItem(this.calculatorContextMenuItems[0]);
    this.calculatorContextMenuItems[1].isCheck = true;
    this.addCalculatedItem(this.calculatorContextMenuItems[1]);
    this.calculatorContextMenuItems[2].isCheck = true;
    this.addCalculatedItem(this.calculatorContextMenuItems[2]);
    this.saveState();
  }

  createForm() {
    let form = {};
    this.newRowFormObj.forEach(item => {
      form[item.title] = new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormControl();
    });
    this.addNewRowForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormGroup(form);
  }

  applyStateFilters() {
    if (this.dataGridState.filters) {
      const filterPlugins = this.hotRegisterer.getInstance(this.id).getPlugin('filters');
      this.dataGridState.filters.map(filterItem => {
        if (filterItem.conditions) {
          filterItem.conditions.map(condition => {
            filterPlugins.addCondition(filterItem.column, condition.name, condition.args, filterItem.operation);
          });
        }
      });
      filterPlugins.filter();
      this.recalculateColumns();
    }
  }

  applyStateSort() {
    if (this.dataGridState.sorting) {
      const columnSortingPlugin = this.hotRegisterer.getInstance(this.id).getPlugin('columnSorting');
      this.dataGridState.sorting.map(sort => {
        columnSortingPlugin.sort(sort);
      });
    }
  }

  applyStateColumnResize() {
    if (this.dataGridState.columnResize) {
      const colResize = this.hotRegisterer.getInstance(this.id).getPlugin('manualColumnResize');
      Object.keys(this.dataGridState.columnResize).map(column => {
        const col = parseInt(column);

        if (typeof this.dataGridState.columnResize[col] !== 'undefined' && this.dataGridState.columnResize[col] > 0) {
          colResize.setManualSize(col, this.dataGridState.columnResize[col]);
        }
      }); // this.hotRegisterer.getInstance(this.id).render();

      colResize.updatePlugin();
    }
  }

  addComment() {
    this.viewStudyComments = true;
  }

  closeAddComment() {
    this.viewStudyComments = false;
  }

  showHelpTextPopup() {
    this.showHelpText = true;
  }

  closeHelpTextPopup() {
    this.showHelpText = false;
  }

  checkNewRow() {
    const isVisibleToAddRowCount = this.dataSettings.fields.filter(item => item.isVisibleToAddRow);

    if (!isVisibleToAddRowCount || isVisibleToAddRowCount.length == 0) {
      this.isAddNewRowVisible = false;
    }
  }

  onViewChange(e) {
    this.isRenderingFinished = false;
    this.isLoadingService.add();
    setTimeout(() => {
      switch (e.itemData.value) {
        case 'DisplayValues':
          this.showFormula = false;
          setTimeout(() => {
            this.updateViewOnClick();
          }, 100);
          break;

        case 'DisplayFormula':
          this.showFormula = true;
          setTimeout(() => {
            this.updateViewOnClick();
          }, 100);
          break;

        default:
          this.showFormula = false;
          setTimeout(() => {
            this.updateViewOnClick();
          }, 100);
      }
    }, 100);
  }

  updateViewOnClick() {
    let that = this;
    this.hotRegisterer.getInstance(this.id).updateSettings({
      cells(row, column, prop) {
        const cellProperties = {};
        cellProperties.calculatedField = that.calculatedField;
        cellProperties.dataSetId = that.dataSetId;
        cellProperties.showFormula = that.showFormula;
        cellProperties.renderer = that.cellRendererData;
        cellProperties.numericFormat = {
          pattern: cellProperties.calculatedField == 'Unit' ? '0,0' : cellProperties.dataSetId == 4 ? '0,0.0' : '0,0.00'
        };
        return cellProperties;
      }

    });
  }

}

HandsonTableComponent.ɵfac = function HandsonTableComponent_Factory(t) {
  return new (t || HandsonTableComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_10__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_17__.FormBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_19__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_11__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_20__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_21__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_12__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_services_common_service__WEBPACK_IMPORTED_MODULE_13__.CommonService), _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdirectiveInject"](src_services_pending_changes_service__WEBPACK_IMPORTED_MODULE_14__.PendingChangesService));
};

HandsonTableComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵdefineComponent"]({
  type: HandsonTableComponent,
  selectors: [["app-handson-table"]],
  inputs: {
    setDataSource: "setDataSource",
    setCurrency: "setCurrency",
    setVolumeUnits: "setVolumeUnits",
    setDataRelations: "setDataRelations"
  },
  outputs: {
    onRequestForSignOffClicked: "onRequestForSignOffClicked",
    onRequestForChangeClicked: "onRequestForChangeClicked",
    onSaveDataClicked: "onSaveDataClicked",
    onSignOffClicked: "onSignOffClicked",
    onUnlockStudyClicked: "onUnlockStudyClicked",
    onDeleteRowClicked: "onDeleteRowClicked",
    dataSourceDataChanged: "dataSourceDataChanged",
    hasPendingChanges: "hasPendingChanges"
  },
  decls: 39,
  vars: 32,
  consts: [["stylingMode", "outlined", "type", "default", 3, "text", "onClick", 4, "ngIf"], [1, "action-container"], [1, "row", "justify-content-between", "align-items-center"], [1, "col"], ["class", "font-weight-bold1", 4, "ngIf"], ["class", "col-auto", 4, "ngIf"], [1, "handon-table-containesr", "w-100"], ["id", "handsonTable", "className", "userTable", "width", "100%", "stretchH", "all", 3, "settings", "hotId", "manualColumnMove", "colHeaders", "formulas", "rowHeaders", "data", "nestedHeaders", "fixedRowsTop", "fixedColumnsLeft", "height", "renderAllRows", "dropdownMenu", "comments", "manualColumnResize", "filters", "columnSorting", "copyPaste", "cell", "columns", "hiddenColumns", "licenseKey", "afterFormulasValuesUpdate", 4, "ngIf"], [3, "viewCommentPopup", "setCommentCellData", "onCommentBoxHidden", "onCommentAdded", "onCommentEmpty"], [3, "viewCommentPopup", "closeCommentPopup"], ["width", "60%", "title", "Add New Row", "container", ".dx-viewport", 3, "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange"], [3, "useNative"], [3, "formGroup"], [1, "container", "mt-3"], [1, "row"], ["class", "col-md-4", 4, "ngFor", "ngForOf"], [1, "float-right", "buttonMargin"], [1, "container"], ["icon", "plus", "stylingMode", "outlined", "type", "default", "text", "Save", 2, "margin-right", "4px", 3, "onClick"], ["icon", "close", "stylingMode", "outlined", "type", "default", "text", "Cancel", 3, "onClick"], ["title", "Help Text", "container", ".dx-viewport", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "showCloseButton", "visible", "visibleChange", "onHidden"], [1, "card", "border-0"], [1, "card-body", "text-centerx-0"], [3, "opened", "saveChanges", 4, "ngIf"], ["stylingMode", "outlined", "type", "default", 3, "text", "onClick"], [1, "font-weight-bold1"], [1, "col-auto"], ["icon", "fa fa-eye", "text", "Change View", "displayExpr", "name", "keyExpr", "value", 3, "selectedItem", "dropDownOptions", "items", "selectedItemChange", "onItemClick"], ["icon", "refresh", "text", "Reset", "displayExpr", "name", "keyExpr", "value", 3, "dropDownOptions", "items", "onItemClick"], ["icon", "fas fa-calculator", "displayExpr", "name", "keyExpr", "value", 3, "dropDownOptions", "items", "onItemClick"], ["icon", "comment", "stylingMode", "outlined", "type", "default", "hint", "Add Comment", 3, "onClick"], ["icon", "plus", "stylingMode", "outlined", "type", "default", "hint", "Add New Row", 3, "onClick", 4, "ngIf"], ["icon", "save", "stylingMode", "outlined", "hint", "Save Data", "type", "default", 3, "onClick"], ["icon", "revert", "stylingMode", "outlined", "type", "default", "text", "Request for SignOff", 3, "onClick", 4, "ngIf"], ["icon", "revert", "stylingMode", "outlined", "type", "default", "text", "Request for Change", 3, "onClick", 4, "ngIf"], ["icon", "fa fa-sign-out", "text", "Sign Off Data", "type", "success", "hint", "SignOff Data", 3, "disabled", "onClick", 4, "ngIf"], ["stylingMode", "outlined", "icon", "fas fa-lock", "type", "default", "hint", "Unlock Study", 3, "onClick", 4, "ngIf"], ["icon", "fa fa-question", "type", "danger", "hint", "Help", 3, "onClick"], ["label", "fx", "valueChangeEvent", "keyup", 1, "custom-textbox", 3, "ngModel", "readOnly", "ngModelChange", "onValueChanged"], ["icon", "plus", "stylingMode", "outlined", "type", "default", "hint", "Add New Row", 3, "onClick"], ["icon", "revert", "stylingMode", "outlined", "type", "default", "text", "Request for SignOff", 3, "onClick"], ["icon", "revert", "stylingMode", "outlined", "type", "default", "text", "Request for Change", 3, "onClick"], ["icon", "fa fa-sign-out", "text", "Sign Off Data", "type", "success", "hint", "SignOff Data", 3, "disabled", "onClick"], ["stylingMode", "outlined", "icon", "fas fa-lock", "type", "default", "hint", "Unlock Study", 3, "onClick"], ["id", "handsonTable", "className", "userTable", "width", "100%", "stretchH", "all", 3, "settings", "hotId", "manualColumnMove", "colHeaders", "formulas", "rowHeaders", "data", "nestedHeaders", "fixedRowsTop", "fixedColumnsLeft", "height", "renderAllRows", "dropdownMenu", "comments", "manualColumnResize", "filters", "columnSorting", "copyPaste", "cell", "columns", "hiddenColumns", "licenseKey", "afterFormulasValuesUpdate"], ["hot", ""], [1, "col-md-4"], ["class", "form-group", 4, "ngIf"], [1, "form-group"], [3, "value", "readOnly", 4, "ngIf"], ["bindLabel", "Name", "bindValue", "Id", "required", "true", 3, "items", "placeholder", "addTag", "formControlName", "change", 4, "ngIf"], [3, "value", "readOnly"], ["bindLabel", "Name", "bindValue", "Id", "required", "true", 3, "items", "placeholder", "addTag", "formControlName", "change"], [3, "ngIf"], [3, "value", "formControlName", "disabled", "format", "valueChange"], [3, "opened", "saveChanges"]],
  template: function HandsonTableComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](0, HandsonTableComponent_dx_button_0_Template, 1, 1, "dx-button", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](1, "div");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](2, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](3, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](4, "div", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](5, "h6");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](7, HandsonTableComponent_div_7_Template, 2, 1, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](8, HandsonTableComponent_div_8_Template, 13, 17, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](9, "div", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](10, HandsonTableComponent_hot_table_10_Template, 2, 23, "hot-table", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](11, "app-comments", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onCommentBoxHidden", function HandsonTableComponent_Template_app_comments_onCommentBoxHidden_11_listener() {
        return ctx.onCommentBoxHidden();
      })("onCommentAdded", function HandsonTableComponent_Template_app_comments_onCommentAdded_11_listener($event) {
        return ctx.onCommentAdded($event);
      })("onCommentEmpty", function HandsonTableComponent_Template_app_comments_onCommentEmpty_11_listener($event) {
        return ctx.onCommentEmpty($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](12, "app-study-comments", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("closeCommentPopup", function HandsonTableComponent_Template_app_study_comments_closeCommentPopup_12_listener() {
        return ctx.closeAddComment();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](13, "dx-popup", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("visibleChange", function HandsonTableComponent_Template_dx_popup_visibleChange_13_listener($event) {
        return ctx.isAddNewRowPopup = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](14, "dx-scroll-view", 11);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](15, "form", 12);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](16, "div", 13);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](17, "div", 14);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](18, HandsonTableComponent_div_18_Template, 2, 1, "div", 15);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](19, "div", 14);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](20, HandsonTableComponent_div_20_Template, 2, 1, "div", 15);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](21, "div", 16);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](22, "div", 17);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](23, "dx-button", 18);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_Template_dx_button_onClick_23_listener() {
        return ctx.addNewRow();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](24, "dx-button", 19);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("onClick", function HandsonTableComponent_Template_dx_button_onClick_24_listener() {
        return ctx.isAddNewRowPopup = false;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](25, "dx-popup", 20);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵlistener"]("visibleChange", function HandsonTableComponent_Template_dx_popup_visibleChange_25_listener($event) {
        return ctx.showHelpText = $event;
      })("onHidden", function HandsonTableComponent_Template_dx_popup_onHidden_25_listener() {
        return ctx.closeHelpTextPopup();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](26, "div", 21);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](27, "div", 22);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](28, "ul");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](29, "li");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](30, "Use Control-C to Cut and Control-V to paste.");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](31, "li");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](32, " Where there is more data than your screen space, scrolling to right/left by using shift and mouse wheel. ");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](33, "li");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](34, " If the master brand moves to a different parent company? \u2013 Delete the existing row and add a new row. ");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementStart"](35, "li");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtext"](36, " Delete row works once you have made your first \"Save\" of the draft data ");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtemplate"](37, HandsonTableComponent_app_confirm_navigation_37_Template, 2, 3, "app-confirm-navigation", 23);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipe"](38, "async");
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx.userDetail.IsAdmin);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵstyleMap"](ctx.isDefaultStateMode ? "outline: 5px solid #ff9e92" : "");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵtextInterpolate"](ctx.studyTitle);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx.currentCurrency);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", !ctx.isStudyEditable);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵstyleMap"](ctx.isRenderingFinished ? "" : "filter: blur(5px);");
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", ctx.dataSourceData);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("viewCommentPopup", ctx.viewNotePopup)("setCommentCellData", ctx.selectedCommentCellData);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("viewCommentPopup", ctx.viewStudyComments);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("height", 350)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.isAddNewRowPopup);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("useNative", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("formGroup", ctx.addNewRowForm);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngForOf", ctx.columnsList);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngForOf", ctx.yearsList);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("width", 650)("height", 300)("showTitle", true)("dragEnabled", false)("closeOnOutsideClick", true)("showCloseButton", true)("visible", ctx.showHelpText);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵadvance"](12);
      _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵproperty"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_15__["ɵɵpipeBind1"](38, 30, ctx.openDialog$));
    }
  },
  styles: [".action-container[_ngcontent-%COMP%] {\r\n  background: #f0f0f0;\r\n  border: 1px solid #ccc;\r\n  padding: 10px 15px;\r\n}\r\n\r\n  .action-container[_ngcontent-%COMP%]   .dx-button[_ngcontent-%COMP%] {\r\n    margin: 0 0 0 5px;\r\n  }\r\n\r\n  .field-message[_ngcontent-%COMP%] {\r\n  color: red;\r\n}\r\n\r\n  .cells-cotains-formula[_ngcontent-%COMP%] {\r\n  color: red;\r\n  float: right;\r\n}\r\n\r\n  .custom-textbox[_ngcontent-%COMP%]{\r\n  margin-bottom: 4px;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhbmRzb24tdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztFQUVFO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVGO0VBQ0UsVUFBVTtBQUNaOztFQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7QUFDZDs7RUFDQTtFQUNFLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJoYW5kc29uLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aW9uLWNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZDogI2YwZjBmMDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxufVxyXG5cclxuICAuYWN0aW9uLWNvbnRhaW5lciAuZHgtYnV0dG9uIHtcclxuICAgIG1hcmdpbjogMCAwIDAgNXB4O1xyXG4gIH1cclxuXHJcbi5maWVsZC1tZXNzYWdlIHtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uY2VsbHMtY290YWlucy1mb3JtdWxhIHtcclxuICBjb2xvcjogcmVkO1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG4uY3VzdG9tLXRleHRib3h7XHJcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG59Il19 */"]
});

/***/ }),

/***/ 92315:
/*!***************************************************************!*\
  !*** ./src/app/shared/handsontable/handsontable.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HandsontableComponent": () => (/* binding */ HandsontableComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _handsontable_angular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @handsontable/angular */ 14766);
/* harmony import */ var hyperformula__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hyperformula */ 22431);





class HandsontableComponent {
    constructor() {
        this.data1 = [
            ['10.26', null, 'Sum', '=SUM(A:A)'],
            ['20.12', null, 'Average', '=AVERAGE(A:A)'],
            ['30.01', null, 'Median', '=MEDIAN(A:A)'],
            ['40.29', null, 'MAX', '=MAX(A:A)'],
            ['50.18', null, 'MIN', '=MIN(A1:A5)'],
        ];
        this.hyperformulaInstance = hyperformula__WEBPACK_IMPORTED_MODULE_0__.HyperFormula.buildEmpty({
            // to use an external HyperFormula instance,
            // initialize it with the `'internal-use-in-handsontable'` license key
            licenseKey: 'internal-use-in-handsontable',
        });
        this.fixedRowsTop = 2;
        this.fixedColumnsLeft = 2;
        this.afterOnCellMouseDownEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
        this.hotRegisterer = new _handsontable_angular__WEBPACK_IMPORTED_MODULE_2__.HotTableRegisterer();
        this.id = '1';
        this.afterFormulasValuesUpdate = (changes) => {
            console.log(changes);
        };
    }
    ngOnInit() { }
    test() {
        console.log('test:');
        console.log(event);
        console.log(this.hotRegisterer.getInstance(this.id));
    }
    afterOnCellMouseDown(event) {
        this.afterOnCellMouseDownEvent.emit(event);
    }
}
HandsontableComponent.ɵfac = function HandsontableComponent_Factory(t) { return new (t || HandsontableComponent)(); };
HandsontableComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: HandsontableComponent, selectors: [["app-handsontable"]], inputs: { colHeaders: "colHeaders", settings: "settings", columns: "columns", data: "data", cell: "cell", nestedHeaders: "nestedHeaders", fixedRowsTop: "fixedRowsTop", fixedColumnsLeft: "fixedColumnsLeft", formulas: "formulas" }, outputs: { afterOnCellMouseDownEvent: "afterOnCellMouseDownEvent" }, decls: 1, vars: 19, consts: [["width", "100%", "height", "500", "licenseKey", "non-commercial-and-evaluation", 3, "hotId", "manualColumnMove", "settings", "colHeaders", "formulas", "rowHeaders", "data", "nestedHeaders", "fixedRowsTop", "fixedColumnsLeft", "colWidths", "dropdownMenu", "comments", "contextMenu", "filters", "columnSorting", "copyPaste", "cell", "columns", "afterFormulasValuesUpdate", "afterOnCellMouseDown"]], template: function HandsontableComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "hot-table", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("afterFormulasValuesUpdate", function HandsontableComponent_Template_hot_table_afterFormulasValuesUpdate_0_listener($event) { return ctx.afterFormulasValuesUpdate($event); })("afterOnCellMouseDown", function HandsontableComponent_Template_hot_table_afterOnCellMouseDown_0_listener($event) { return ctx.afterOnCellMouseDown($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hotId", ctx.id)("manualColumnMove", true)("settings", ctx.settings)("colHeaders", ctx.colHeaders)("formulas", ctx.formulas)("rowHeaders", true)("data", ctx.data)("nestedHeaders", ctx.nestedHeaders)("fixedRowsTop", 2)("fixedColumnsLeft", 2)("colWidths", 120)("dropdownMenu", true)("comments", true)("contextMenu", true)("filters", true)("columnSorting", true)("copyPaste", true)("cell", ctx.cell)("columns", ctx.columns);
    } }, directives: [_handsontable_angular__WEBPACK_IMPORTED_MODULE_2__.HotTableComponent], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJoYW5kc29udGFibGUuY29tcG9uZW50LmNzcyJ9 */"] });


/***/ }),

/***/ 89470:
/*!***************************************************!*\
  !*** ./src/app/shared/header/header.component.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeaderComponent": () => (/* binding */ HeaderComponent)
/* harmony export */ });
/* harmony import */ var src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/userDetail.model */ 30203);
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_studyAreaSummary_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/model/studyAreaSummary.model */ 58101);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);
/* harmony import */ var src_services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/services/user.service */ 72996);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! devextreme-angular/core */ 85915);













function HeaderComponent_p_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "p", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, " Development Site (DEV) ");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function HeaderComponent_p_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "p", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, " Internal Testing Site (UAT) ");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function HeaderComponent_h6_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](ctx_r2.title);
} }
function HeaderComponent_li_18_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "li", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2, "|");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
const _c0 = function (a0) { return { "background-color": a0 }; };
const _c1 = function (a1, a2, a3, a4) { return ["/study-area", a1, a2, a3, a4]; };
function HeaderComponent_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "a", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r9 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](4, _c0, data_r9.backColour));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpropertyInterpolate"]("title", data_r9.SearchExp);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("routerLink", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction4"](6, _c1, data_r9.StudyAreaId, data_r9.StudyProjectMarketYearId, data_r9.MarketYearCategoryId, data_r9.DataSetId));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](data_r9.SearchExp);
} }
function HeaderComponent_li_23_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "li", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2, "|");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function HeaderComponent_li_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "li", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "a", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2, "Initial Setup");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function HeaderComponent_li_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "li", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "span", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2, "|");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
function HeaderComponent_li_26_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "li", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "a", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2, "Data Grids Configuration");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
class HeaderComponent {
    constructor(localStorageService, userService, sharedService, alertService, isLoadingService, router, route) {
        this.localStorageService = localStorageService;
        this.userService = userService;
        this.sharedService = sharedService;
        this.alertService = alertService;
        this.isLoadingService = isLoadingService;
        this.router = router;
        this.route = route;
        this.title = '';
        this.studiesData = [];
        this.searchExpressionItem = 'SearchExp';
        this.constantEnv = src_app_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.environment;
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey));
    }
    set setTitle(title) {
        this.title = title;
    }
    ngOnInit() {
        this.getUserDetail(this.userDetail.UserName || '');
        this.userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__.UserDetail().deserialize(this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey));
        this.getAllStudies();
    }
    getUserDetail(emailAddress) {
        this.userService.getUserDetail(emailAddress).subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                const userDetail = new src_model_userDetail_model__WEBPACK_IMPORTED_MODULE_0__.UserDetail().deserialize(res.Data);
                this.localStorageService.setData(userDetail, src_app_Constant__WEBPACK_IMPORTED_MODULE_1__.Constants.userDetailKey);
            }
        }, (err) => { });
    }
    getAllStudies() {
        this.isLoadingService.add();
        this.sharedService.getStudyAreaSummary().subscribe((res) => {
            if (res.HttpStatusCode === 200) {
                // res.Data.sort((a,b) => b-a)
                this.studiesData = res.Data.map((item) => new src_model_studyAreaSummary_model__WEBPACK_IMPORTED_MODULE_2__.StudyAreaSummary().deserialize(item));
                this.studiesData.map((item) => {
                    item.backColour = 'white';
                    if (item.IsSignOff) {
                        item.backColour = 'lightgray';
                    }
                    item.SearchExp = item.StudyAreaName + ": " + item.StudyName;
                });
                this.filterOpenStudy();
                this.studiesData.sort((a, b) => Number(a.LockedForEditBy && a.IsSignOff) - Number(b.LockedForEditBy && b.IsSignOff));
            }
            else {
                this.alertService.danger(res.Data);
            }
            this.isLoadingService.remove();
        }, (err) => {
            if (err.status === 401) {
                this.isLoadingService.remove();
            }
        });
    }
    filterOpenStudy() {
        const params = this.route.snapshot.params;
        const marketYearCategoryId = parseInt(params['mycId']);
        const studyProjectMarketYearId = parseInt(params['spmId']);
        const studyAreaId = parseInt(params['studyArea']);
        const dataSetId = parseInt(params['dataSetId']);
        const openStudy = this.studiesData.find(item => item.StudyAreaId === studyAreaId
            && item.DataSetId === dataSetId
            && item.MarketYearCategoryId === marketYearCategoryId
            && item.StudyProjectMarketYearId === studyProjectMarketYearId);
        if (openStudy) {
            var idx = this.studiesData.indexOf(openStudy);
            if (idx != -1)
                this.studiesData.splice(idx, 1);
        }
    }
    studySelectionChange(event) {
        if (event && event.selectedItem) {
            let selectedStudy = event.selectedItem;
            this.isLoadingService.add();
            this.router.navigate(['/study-area', {
                    'studyArea': selectedStudy.StudyAreaId,
                    'spmId': selectedStudy.StudyProjectMarketYearId,
                    'mycId': selectedStudy.MarketYearCategoryId,
                    'dataSetId': selectedStudy.DataSetId
                }]);
            const url = `/study-area/${selectedStudy.StudyAreaId}/${selectedStudy.StudyProjectMarketYearId}/${selectedStudy.MarketYearCategoryId}/${selectedStudy.DataSetId}`;
            this.loadCurrentUrl(url);
            this.isLoadingService.remove();
        }
    }
    loadCurrentUrl(url) {
        this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
            this.router.navigate([url]);
        });
    }
}
HeaderComponent.ɵfac = function HeaderComponent_Factory(t) { return new (t || HeaderComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_3__.LocalStorageService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_user_service__WEBPACK_IMPORTED_MODULE_4__.UserService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_7__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_8__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_9__.ActivatedRoute)); };
HeaderComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: HeaderComponent, selectors: [["app-header"]], inputs: { setTitle: "setTitle" }, decls: 27, vars: 14, consts: [[1, "custom-header"], [1, "environment-check"], ["class", "alert alert-danger", 4, "ngIf"], ["class", "alert alert-warning", 4, "ngIf"], [1, "navbar", "navbar-expand-lg", "navbar-light", "mb-0"], ["routerLink", "/", 1, "navbar-brand", "pt-4"], ["src", "../../../images/kline-logo55px.png", 1, "img-fluid"], [4, "ngIf"], ["type", "button", "data-toggle", "collapse", "data-target", "#navbarText", "aria-controls", "navbarText", "aria-expanded", "false", "aria-label", "Toggle navigation", 1, "navbar-toggler"], [1, "navbar-toggler-icon"], ["id", "navbarText", 1, "collapse", "navbar-collapse"], [1, "ml-auto", "text-center", "text-lg-right"], [1, "navbar-text", "small", "mb-0", "pb-0"], [1, "navbar-nav", "ml-auto", "mr-auto"], [1, "nav-item"], ["routerLink", "/study-summary", "routerLinkActive", "active", 1, "nav-link"], ["class", "nav-item d-none d-lg-block", 4, "ngIf"], [1, "custom-dropdown"], ["displayExpr", "StudyName", "valueExpr", "StudyAreaId", "itemTemplate", "studyItem", "stylingMode", "filled", "placeholder", "My Studies", 3, "items", "searchEnabled", "searchExpr", "width", "onSelectionChanged"], [3, "ngStyle", 4, "dxTemplate", "dxTemplateOf"], ["class", "nav-item", 4, "ngIf"], [1, "alert", "alert-danger"], [1, "alert", "alert-warning"], [1, "nav-item", "d-none", "d-lg-block"], [1, "nav-link"], [3, "ngStyle"], [2, "text-decoration", "none", 3, "routerLink", "title"], ["routerLink", "/initial-setup", "routerLinkActive", "active", 1, "nav-link"], ["routerLink", "/app-data-grids-configuration", "routerLinkActive", "active", 1, "nav-link"]], template: function HeaderComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "header", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, HeaderComponent_p_2_Template, 2, 0, "p", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](3, HeaderComponent_p_3_Template, 2, 0, "p", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](4, "nav", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "a", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](6, "img", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](7, HeaderComponent_h6_7_Template, 2, 1, "h6", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](9, "span", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](10, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](11, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](12, "span", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](14, "ul", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](15, "li", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](16, "a", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](17, "Study Area Summary");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](18, HeaderComponent_li_18_Template, 3, 0, "li", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](19, "li", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](20, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](21, "dx-select-box", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onSelectionChanged", function HeaderComponent_Template_dx_select_box_onSelectionChanged_21_listener($event) { return ctx.studySelectionChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](22, HeaderComponent_div_22_Template, 3, 11, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](23, HeaderComponent_li_23_Template, 3, 0, "li", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](24, HeaderComponent_li_24_Template, 3, 0, "li", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](25, HeaderComponent_li_25_Template, 3, 0, "li", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](26, HeaderComponent_li_26_Template, 3, 0, "li", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.constantEnv == "-dev");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.constantEnv == "-uat");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.title);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"]("Welcome, ", ctx.userDetail.Name, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.userDetail.IsManager);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("items", ctx.studiesData)("searchEnabled", true)("searchExpr", ctx.searchExpressionItem)("width", 300);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "studyItem");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.userDetail.IsManager);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.userDetail.IsManager);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.userDetail.IsManager);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.userDetail.IsAdmin);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_10__.NgIf, _angular_router__WEBPACK_IMPORTED_MODULE_9__.RouterLinkWithHref, _angular_router__WEBPACK_IMPORTED_MODULE_9__.RouterLinkActive, devextreme_angular__WEBPACK_IMPORTED_MODULE_11__.DxSelectBoxComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_12__.DxTemplateDirective, _angular_common__WEBPACK_IMPORTED_MODULE_10__.NgStyle], styles: [".custom-header[_ngcontent-%COMP%] {\r\n  border-bottom: 1px solid #ddd;\r\n  box-shadow: 0 1px 2px #ddd;\r\n}\r\n.custom-header[_ngcontent-%COMP%]   .navbar-brand[_ngcontent-%COMP%] {\r\n  width: 100px;\r\n}\r\n.custom-header[_ngcontent-%COMP%]   .environment-check[_ngcontent-%COMP%] {\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  text-align: center;\r\n}\r\n.custom-header[_ngcontent-%COMP%]   .environment-check[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{\r\n  text-align: center;\r\n    position: relative;\r\n    display: inline-block;\r\n    padding: 5px 10px;\r\n    margin: 0 !important;\r\n    font-size: 14px;\r\n    border-radius: 0px 0px 5px 5px;\r\n    font-weight: bold;\r\n}\r\n\r\n  .custom-dropdown .dx-state-hover{\r\n  background-color: transparent !important;\r\n}\r\n  .custom-dropdown .dx-texteditor {\r\n  font-family: LucidaSansRegular, \"Open Sans\", sans-serif;\r\n  font-weight: normal;\r\n  font-size: medium;\r\n  padding-bottom: 0%;\r\n  padding-left: 100px;\r\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQTZCO0VBQzdCLDBCQUEwQjtBQUM1QjtBQUNBO0VBQ0UsWUFBWTtBQUNkO0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLE1BQU07RUFDTixPQUFPO0VBQ1Asa0JBQWtCO0FBQ3BCO0FBRUE7RUFDRSxrQkFBa0I7SUFDaEIsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsb0JBQW9CO0lBQ3BCLGVBQWU7SUFDZiw4QkFBOEI7SUFDOUIsaUJBQWlCO0FBQ3JCO0FBRUE7O0dBRUc7QUFFSDtFQUNFLHdDQUF3QztBQUMxQztBQUVBO0VBQ0UsdURBQXVEO0VBQ3ZELG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJoZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b20taGVhZGVyIHtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcclxuICBib3gtc2hhZG93OiAwIDFweCAycHggI2RkZDtcclxufVxyXG4uY3VzdG9tLWhlYWRlciAubmF2YmFyLWJyYW5kIHtcclxuICB3aWR0aDogMTAwcHg7XHJcbn1cclxuXHJcbi5jdXN0b20taGVhZGVyIC5lbnZpcm9ubWVudC1jaGVjayB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmN1c3RvbS1oZWFkZXIgLmVudmlyb25tZW50LWNoZWNrIHB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDBweCAwcHggNXB4IDVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4vKiAuY3VzdG9tLWhlYWRlciAubmF2YmFyLW5hdiAubmF2LWl0ZW06OmFmdGVyIHtcclxuICBjb250ZW50OiBcInxcIjtcclxufSAqL1xyXG5cclxuOjpuZy1kZWVwIC5jdXN0b20tZHJvcGRvd24gLmR4LXN0YXRlLWhvdmVye1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLWRyb3Bkb3duIC5keC10ZXh0ZWRpdG9yIHtcclxuICBmb250LWZhbWlseTogTHVjaWRhU2Fuc1JlZ3VsYXIsIFwiT3BlbiBTYW5zXCIsIHNhbnMtc2VyaWY7XHJcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICBmb250LXNpemU6IG1lZGl1bTtcclxuICBwYWRkaW5nLWJvdHRvbTogMCU7XHJcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcclxufSJdfQ== */"] });


/***/ }),

/***/ 71146:
/*!****************************************************************************************************************!*\
  !*** ./src/app/shared/pivot-grid-preview/pivot-grid-preview-top-menu/pivot-grid-preview-top-menu.component.ts ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PivotGridPreviewTopMenuComponent": () => (/* binding */ PivotGridPreviewTopMenuComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_currencyConversionType_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/currencyConversionType.enum */ 79995);
/* harmony import */ var _model_dropdownCurrency_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../model/dropdownCurrency.model */ 55513);
/* harmony import */ var _model_dropdownUnits_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../model/dropdownUnits.model */ 29718);
/* harmony import */ var _animations__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../animations */ 54000);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! devextreme-angular */ 21856);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! devextreme-angular */ 38772);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme-angular/core */ 85915);












function PivotGridPreviewTopMenuComponent_div_1_div_9_Template(rf, ctx) { if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "button", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_1_div_9_Template_button_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r10); const item_r8 = restoredCtx.$implicit; const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r9.onCalcItemSelected(item_r8.name, ""); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r8 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" ", item_r8.name, " ");
} }
function PivotGridPreviewTopMenuComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseover", function PivotGridPreviewTopMenuComponent_div_1_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r11.onHover("calculateFieldSelector"); })("mouseenter", function PivotGridPreviewTopMenuComponent_div_1_Template_div_mouseenter_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r13.onHover("calculateFieldSelector"); })("mouseout", function PivotGridPreviewTopMenuComponent_div_1_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r14.onLeave("calculateFieldSelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "dx-button", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("onClick", function PivotGridPreviewTopMenuComponent_div_1_Template_dx_button_onClick_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r15.toggleMenuItem("calculateFieldSelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "Add Calculated Field for:");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](6, "button", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseenter", function PivotGridPreviewTopMenuComponent_div_1_Template_button_mouseenter_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r16.calculatedFieldOnHover("calculated-0"); })("mouseout", function PivotGridPreviewTopMenuComponent_div_1_Template_button_mouseout_6_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r17.calculatedFieldOnLeave("calculated-0"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](7, " Sales ");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseenter", function PivotGridPreviewTopMenuComponent_div_1_Template_div_mouseenter_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r18.calculatedFieldOnHover("calculated-0"); })("mouseover", function PivotGridPreviewTopMenuComponent_div_1_Template_div_mouseover_8_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r12); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r19.calculatedFieldOnHover("calculated-0"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](9, PivotGridPreviewTopMenuComponent_div_1_div_9_Template, 3, 1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("type", ctx_r0.getButtonStatus(ctx_r0.calculatedFieldSelectorClicked))("width", ctx_r0.getWidth("chartBtn"))("height", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("@slideInOut", ctx_r0.calculatedFieldVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("id", "calculated-0");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngForOf", ctx_r0.calculatedItems);
} }
const _c0 = function (a0) { return { "selected-item": a0 }; };
function PivotGridPreviewTopMenuComponent_div_2_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_2_div_6_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r23); const data_r21 = restoredCtx.$implicit; const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r22.currencySelectionOnChanged(data_r21); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r21 = ctx.$implicit;
    const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](2, _c0, data_r21.CurrencyCode === (ctx_r20.currencyDropdownSelected == null ? null : ctx_r20.currencyDropdownSelected.CurrencyCode)));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" ", data_r21.CurrencyName, " ");
} }
function PivotGridPreviewTopMenuComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseover", function PivotGridPreviewTopMenuComponent_div_2_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r25); const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r24.onHover("currencySelector"); })("mouseenter", function PivotGridPreviewTopMenuComponent_div_2_Template_div_mouseenter_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r25); const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r26.onHover("currencySelector"); })("mouseout", function PivotGridPreviewTopMenuComponent_div_2_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r25); const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r27.onLeave("currencySelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "dx-button", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_2_Template_dx_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r25); const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r28.toggleMenuItem("currencySelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "Currency");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "dx-list", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](6, PivotGridPreviewTopMenuComponent_div_2_div_6_Template, 3, 4, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("type", ctx_r1.getButtonStatus(ctx_r1.currencySelectorClicked))("width", ctx_r1.getWidth("currencySelectorBtn"))("height", 35)("text", ctx_r1.selectedCurrency == null ? null : ctx_r1.selectedCurrency.CurrencyCode);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("@slideInOut", ctx_r1.currencySelectorVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx_r1.currencyDropdown)("width", 255)("height", 250)("searchEnabled", true)("scrollByContent", true)("scrollByThumb", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "item");
} }
function PivotGridPreviewTopMenuComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseover", function PivotGridPreviewTopMenuComponent_div_3_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r30); const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r29.onHover("currencyConversionSelector"); })("mouseout", function PivotGridPreviewTopMenuComponent_div_3_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r30); const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r31.onLeave("currencyConversionSelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "dx-button", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_3_Template_dx_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r30); const ctx_r32 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r32.toggleMenuItem("currencyConversionSelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "Currency Conversion");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "dx-radio-group", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("valueChange", function PivotGridPreviewTopMenuComponent_div_3_Template_dx_radio_group_valueChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r30); const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r33.currencyConversionTypeSelected = $event; })("onValueChanged", function PivotGridPreviewTopMenuComponent_div_3_Template_dx_radio_group_onValueChanged_5_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r30); const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r34.currencyConversionTypeOnChanged(ctx_r34.currencyConversionTypeSelected); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("type", ctx_r2.getButtonStatus(ctx_r2.currencyConversionSelectorClicked))("width", ctx_r2.getWidth("currencyConversionSelectorBtn"))("height", 35)("text", ctx_r2.currencyConversionTypeSelected);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("@slideInOut", ctx_r2.currencyConversionSelectorVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("items", ctx_r2.currencyConversionType)("value", ctx_r2.currencyConversionTypeSelected);
} }
function PivotGridPreviewTopMenuComponent_div_4_div_6_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_4_div_6_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r38); const data_r36 = restoredCtx.$implicit; const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2); return ctx_r37.massUnitSelectionChange(data_r36); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r36 = ctx.$implicit;
    const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction1"](2, _c0, data_r36.Name === (ctx_r35.unitOfMassDropdownSelected == null ? null : ctx_r35.unitOfMassDropdownSelected.Name)));
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](data_r36.Name);
} }
function PivotGridPreviewTopMenuComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    const _r40 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseover", function PivotGridPreviewTopMenuComponent_div_4_Template_div_mouseover_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r40); const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r39.onHover("massUnitSelector"); })("mouseout", function PivotGridPreviewTopMenuComponent_div_4_Template_div_mouseout_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r40); const ctx_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r41.onLeave("massUnitSelector"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "dx-button", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_4_Template_dx_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r40); const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r42.toggleMenuItem("massUnitSelector", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4, "Units of Mass");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "dx-list", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](6, PivotGridPreviewTopMenuComponent_div_4_div_6_Template, 3, 4, "div", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("type", ctx_r3.getButtonStatus(ctx_r3.massUnitSelectorClicked))("width", ctx_r3.getWidth("massUnitSelectorBtn"))("height", 35)("text", ctx_r3.unitOfMassDropdownSelected == null ? null : ctx_r3.unitOfMassDropdownSelected.Name);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("@slideInOut", ctx_r3.massUnitSelectorVisible ? "in" : "out");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx_r3.massUnitDropdown)("width", 180)("height", 250)("searchEnabled", false)("scrollByContent", true)("scrollByThumb", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "item");
} }
function PivotGridPreviewTopMenuComponent_div_7_i_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "i", 33);
} }
function PivotGridPreviewTopMenuComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](1, "dx-load-indicator", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, PivotGridPreviewTopMenuComponent_div_7_i_2_Template, 1, 0, "i", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("visible", ctx_r4.dataLoadingIndicatorVisible);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", !ctx_r4.dataLoadingIndicatorVisible);
} }
function PivotGridPreviewTopMenuComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r47 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function PivotGridPreviewTopMenuComponent_div_10_Template_div_click_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵrestoreView"](_r47); const data_r45 = restoredCtx.$implicit; const ctx_r46 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnextContext"](); return ctx_r46.exportToExcelSelectionOnChanged(data_r45); });
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} if (rf & 2) {
    const data_r45 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"](" ", data_r45.value, " ");
} }
function PivotGridPreviewTopMenuComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](1, "Export in progress");
    _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
} }
class PivotGridPreviewTopMenuComponent {
    constructor(sharedService) {
        this.sharedService = sharedService;
        this.selectedCurrency = new _model_dropdownCurrency_model__WEBPACK_IMPORTED_MODULE_2__.DropdownCurrency();
        this.selectedMassUnit = new _model_dropdownUnits_model__WEBPACK_IMPORTED_MODULE_3__.DropdownUnits();
        // @Input() pivotCalculatedFields: Observable<any>;
        this.currencySelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.currencyConversionSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.massUnitSelectionChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.openAddCalculatedFieldChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.calculatedFieldItemSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.onExportToExcel = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.onExportToCvs = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.onExportSnapshot = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this.onChangeAutoSaveStatus = new _angular_core__WEBPACK_IMPORTED_MODULE_6__.EventEmitter();
        this._destroyed$ = new rxjs__WEBPACK_IMPORTED_MODULE_7__.Subject();
        this.othersSelectorVisible = false;
        this.timePeriodSelectorVisible = false;
        this.massUnitSelectorVisible = false;
        this.volumeUnitSelectorVisible = false;
        this.currencyConversionSelectorVisible = false;
        this.currencySelectorVisible = false;
        this.parametersSelectorVisible = false;
        this.othersSelectorClicked = false;
        this.timePeriodSelectorClicked = false;
        this.massUnitSelectorClicked = false;
        this.volumeUnitSelectorClicked = false;
        this.currencyConversionSelectorClicked = false;
        this.currencySelectorClicked = false;
        this.parametersSelectorClicked = false;
        this.exportToExcelSelectorVisible = false;
        this.exportToExcelSelectorClicked = false;
        this.currencyDropdownSelected = undefined;
        this.unitOfMassDropdownSelected = undefined;
        this.unitOfVolumeDropdownSelected = undefined;
        this.pivotWidth = 0;
        this.currencyDropdown = [];
        this.massUnitDropdown = [];
        this.volumeUnitDropdown = [];
        this.timePeriod = [];
        this.timePeriodFrom = 0;
        this.timePeriodTo = 0;
        this.currencyConversionType = ['Current', 'Constant'];
        this.currencyConversionTypeSelected = 'Constant';
        this.exportType = [
            { id: 1, value: 'Export All Data' },
            { id: 2, value: 'Export All Data to CSV' },
            { id: 3, value: 'Export Snapshot' },
        ];
        this.parametersList = [];
        this.allStateDataList = [];
        this.activeStateDataList = [];
        this.isUndone = false;
        this.count = 0;
        this.isButtonPressed = false;
        this.pivotGridOptionsValues = undefined;
        this.pivotGridstateValues = undefined;
        this.calculateFieldsItems = [];
        this.calculatedFieldCaption = '';
        this.calculatedFieldVisible = false;
        this.dataLoadingIndicatorVisible = false;
        this.calculatedItems = [
            { name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.CalculatedFieldType.percentOfTotal, value: 'percentOfTotal' },
            { name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.CalculatedFieldType.changePercent, value: 'changePercent' },
            { name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.CalculatedFieldType.cagr, value: 'cagr' },
        ];
        this.autoSaveStateStatus = false;
    }
    set setSelectedCurrency(data) {
        if (data) {
            this.selectedCurrency = data;
        }
    }
    set setSelectedMassUnit(data) {
        if (data) {
            this.selectedMassUnit = data;
        }
    }
    set setCurrency(data) {
        this.currencyDropdown = data;
    }
    set setVolumeUnits(data) {
        this.massUnitDropdown = data;
    }
    set pivotGridOptions(value) {
        this.pivotGridOptionsValues = value;
        this.autoSaveStateStatus = this.getAutoSaveStateStatus(this.pivotGridOptionsValues, this.pivotGridstateValues);
    }
    set setStudySetup(studySetup) {
        if (studySetup) {
            this.studySetup = studySetup;
            this.setTopMenuValues();
        }
    }
    ngOnInit() {
    }
    setTopMenuValues() {
        this.currencyDropdownSelected = this.selectedCurrency;
        this.unitOfMassDropdownSelected = this.selectedMassUnit;
    }
    onHover(item) {
        switch (item) {
            case 'othersSelector':
                if (this.othersSelectorClicked) {
                    break;
                }
                this.othersSelectorVisible = !this.othersSelectorVisible;
                break;
            case 'timePeriodSelector':
                if (this.timePeriodSelectorClicked) {
                    break;
                }
                this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;
                break;
            case 'massUnitSelector':
                if (this.massUnitSelectorClicked) {
                    break;
                }
                this.massUnitSelectorVisible = !this.massUnitSelectorVisible;
                break;
            case 'volumeUnitSelector':
                if (this.volumeUnitSelectorClicked) {
                    break;
                }
                this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;
                break;
            case 'currencyConversionSelector':
                if (this.currencyConversionSelectorClicked) {
                    break;
                }
                this.currencyConversionSelectorVisible =
                    !this.currencyConversionSelectorVisible;
                break;
            case 'calculateFieldSelector':
                if (this.calculatedFieldSelectorClicked) {
                    break;
                }
                this.calculatedFieldVisible = !this.calculatedFieldVisible;
                break;
            case 'currencySelector':
                if (this.currencySelectorClicked) {
                    break;
                }
                this.currencySelectorVisible = !this.currencySelectorVisible;
                break;
            case 'parametersSelector':
                if (this.parametersSelectorClicked) {
                    break;
                }
                this.parametersSelectorVisible = !this.parametersSelectorVisible;
                break;
            case 'exportToExcel':
                if (this.exportToExcelSelectorClicked) {
                    break;
                }
                this.exportToExcelSelectorVisible = true;
                break;
        }
    }
    onLeave(item) {
        switch (item) {
            case 'othersSelector':
                if (this.othersSelectorClicked) {
                    break;
                }
                this.othersSelectorVisible = false;
                break;
            case 'timePeriodSelector':
                if (this.timePeriodSelectorClicked) {
                    break;
                }
                this.timePeriodSelectorVisible = false;
                break;
            case 'massUnitSelector':
                if (this.massUnitSelectorClicked) {
                    break;
                }
                this.massUnitSelectorVisible = false;
                break;
            case 'volumeUnitSelector':
                if (this.volumeUnitSelectorClicked) {
                    break;
                }
                this.volumeUnitSelectorVisible = false;
                break;
            case 'currencyConversionSelector':
                if (this.currencyConversionSelectorClicked) {
                    break;
                }
                this.currencyConversionSelectorVisible = false;
                break;
            case 'calculateFieldSelector':
                if (this.calculatedFieldSelectorClicked) {
                    break;
                }
                this.calculatedFieldVisible = false;
                break;
            case 'currencySelector':
                if (this.currencySelectorClicked) {
                    break;
                }
                this.currencySelectorVisible = false;
                break;
            case 'parametersSelector':
                if (this.parametersSelectorClicked) {
                    break;
                }
                this.parametersSelectorVisible = false;
                break;
            case 'parametersSelector':
                if (this.parametersSelectorClicked) {
                    break;
                }
                this.parametersSelectorVisible = false;
                break;
            case 'exportToExcel':
                if (this.exportToExcelSelectorClicked) {
                    break;
                }
                this.exportToExcelSelectorVisible = false;
                break;
        }
    }
    calculatedFieldOnHover(id) {
        for (let i = 0; i <= this.calculateFieldsItems.length;) {
            let elem = 'calculated-' + i;
            if (elem === id) {
                $('#' + id).addClass('show');
            }
            else {
                $('#' + elem).removeClass('show');
            }
            i++;
        }
    }
    calculatedFieldOnLeave(id) {
        $('#' + id).removeClass('show');
    }
    onCalcItemSelected(itemName, dataField) {
        this.calculatedFieldItemSelected.emit({ itemName, dataField });
    }
    getButtonStatus(status) {
        return status ? 'success' : 'normal';
    }
    getWidth(elementName) {
        if (this.pivotWidth > 0 && this.pivotWidth < 700) {
            return this.pivotWidth;
        }
        switch (elementName) {
            case 'othersSelectorBtn':
                return 45;
            case 'chartBtn':
                return 45;
            case 'expandCollapseBtn':
                return 45;
            case 'currencySelectorBtn':
                return 100;
            case 'currencyConversionSelectorBtn':
                return 130;
            case 'massUnitSelectorBtn':
                return 175;
            case 'volumeUnitSelectorBtn':
                return 175;
            case 'timePeriodSelectorBtn':
                return 180;
            case 'parameters':
                return 190;
            default:
                return 100;
        }
    }
    toggleMenuItem(item, isClick) {
        switch (item) {
            case 'othersSelector':
                if (isClick) {
                    this.othersSelectorClicked = !this.othersSelectorClicked;
                    // this.getStateSaveByMe(this.viewId, this.userId);
                    // this.getStateSharedWithMe(this.viewId, this.userId);
                }
                if (this.othersSelectorClicked) {
                    this.othersSelectorVisible = true;
                    break;
                }
                this.othersSelectorVisible = !this.othersSelectorVisible;
                break;
            case 'timePeriodSelector':
                if (isClick) {
                    this.timePeriodSelectorClicked = !this.timePeriodSelectorClicked;
                }
                if (this.timePeriodSelectorClicked) {
                    this.timePeriodSelectorVisible = true;
                    break;
                }
                this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;
                break;
            case 'volumeUnitSelector':
                if (isClick) {
                    this.volumeUnitSelectorClicked = !this.volumeUnitSelectorClicked;
                }
                if (this.volumeUnitSelectorClicked) {
                    this.volumeUnitSelectorVisible = true;
                    break;
                }
                this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;
                break;
            case 'massUnitSelector':
                if (isClick) {
                    this.massUnitSelectorClicked = !this.massUnitSelectorClicked;
                }
                if (this.massUnitSelectorClicked) {
                    this.massUnitSelectorVisible = true;
                    break;
                }
                this.massUnitSelectorVisible = !this.massUnitSelectorVisible;
                break;
            case 'currencyConversionSelector':
                if (isClick) {
                    this.currencyConversionSelectorClicked =
                        !this.currencyConversionSelectorClicked;
                }
                if (this.currencyConversionSelectorClicked) {
                    this.currencyConversionSelectorVisible = true;
                    break;
                }
                this.currencyConversionSelectorVisible =
                    !this.currencyConversionSelectorVisible;
                break;
            case 'calculateFieldSelector':
                // this.openAddCalculatedField();
                if (isClick) {
                    this.calculatedFieldSelectorClicked =
                        !this.calculatedFieldSelectorClicked;
                }
                if (this.calculatedFieldSelectorClicked) {
                    // this.intervalCalculatedField = setInterval(
                    //   () => this.openAddCalculatedField(),
                    //   50
                    // );
                    this.calculatedFieldVisible = true;
                    break;
                }
                this.calculatedFieldVisible = !this.calculatedFieldVisible;
                clearInterval(this.intervalCalculatedField);
                break;
            case 'currencySelector':
                if (isClick) {
                    this.currencySelectorClicked = !this.currencySelectorClicked;
                }
                if (this.currencySelectorClicked) {
                    this.currencySelectorVisible = true;
                    break;
                }
                this.currencySelectorVisible = !this.currencySelectorVisible;
                break;
            case 'parametersSelector':
                if (isClick) {
                    this.parametersSelectorClicked = !this.parametersSelectorClicked;
                }
                if (this.parametersSelectorClicked) {
                    this.parametersSelectorVisible = true;
                    break;
                }
                this.parametersSelectorVisible = !this.parametersSelectorVisible;
                break;
        }
        // focus on first opened texteditor
        $('.dx-texteditor-input').first().focus();
    }
    currencySelectionOnChanged(data) {
        if (this.currencyDropdownSelected != data) {
            this.currencyDropdownSelected = data;
            this.currencySelectionChanged.emit(data);
        }
    }
    currencyConversionTypeOnChanged(data) {
        this.currencyConversionSelectionChanged.emit(parseInt(src_model_enums_currencyConversionType_enum__WEBPACK_IMPORTED_MODULE_1__.CurrencyConversionTypeEnum[data]));
    }
    massUnitSelectionChange(data) {
        if (this.unitOfMassDropdownSelected != data) {
            this.unitOfMassDropdownSelected = data;
            this.massUnitSelectionChanged.emit(data);
        }
    }
    exportToExcelSelectionOnChanged(data) {
        this.exportTypeDropdownSelected = data;
        switch (data.id) {
            case 1:
                this.exportToExcelSelectorVisible = false;
                this.exportToExcel();
                break;
            case 2:
                this.exportToExcelSelectorVisible = false;
                this.onExportToCvs.emit(true);
                break;
            case 3:
                this.exportToExcelSelectorVisible = false;
                this.onExportSnapshot.emit(true);
                break;
            default:
                break;
        }
    }
    exportToExcel() {
        this.onExportToExcel.emit(true);
    }
    getAutoSaveStateStatus(pivotGridOptions, userStateAndSetttings) {
        if (pivotGridOptions && userStateAndSetttings) {
            if (userStateAndSetttings.settings.rememberLatestState == undefined) {
                return pivotGridOptions.canSaveUserState;
            }
            else {
                return userStateAndSetttings.settings.rememberLatestState;
            }
        }
    }
    changeAutoSaveStatus(currentStatus) {
        this.autoSaveStateStatus = !currentStatus;
        this.onChangeAutoSaveStatus.emit(this.autoSaveStateStatus);
    }
}
PivotGridPreviewTopMenuComponent.ɵfac = function PivotGridPreviewTopMenuComponent_Factory(t) { return new (t || PivotGridPreviewTopMenuComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_5__.SharedService)); };
PivotGridPreviewTopMenuComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: PivotGridPreviewTopMenuComponent, selectors: [["pivot-grid-preview-top-menu"]], inputs: { setSelectedCurrency: "setSelectedCurrency", setSelectedMassUnit: "setSelectedMassUnit", setCurrency: "setCurrency", setVolumeUnits: "setVolumeUnits", pivotGridOptions: "pivotGridOptions", setStudySetup: "setStudySetup" }, outputs: { currencySelectionChanged: "currencySelectionChanged", currencyConversionSelectionChanged: "currencyConversionSelectionChanged", massUnitSelectionChanged: "massUnitSelectionChanged", openAddCalculatedFieldChanged: "openAddCalculatedFieldChanged", calculatedFieldItemSelected: "calculatedFieldItemSelected", onExportToExcel: "onExportToExcel", onExportToCvs: "onExportToCvs", onExportSnapshot: "onExportSnapshot", onChangeAutoSaveStatus: "onChangeAutoSaveStatus" }, decls: 13, vars: 18, consts: [[1, "buttons", "topmenu-buttons"], ["class", "menu-dropdown", 3, "mouseover", "mouseenter", "mouseout", 4, "ngIf"], ["class", "menu-dropdown", 3, "mouseover", "mouseout", 4, "ngIf"], [1, "menu-dropdown", "export-to-exel", 3, "mouseover", "mouseenter", "mouseout"], ["id", "exportBtn", "stylingMode", "outlined", "icon", "fas fa-download", "type", "normal", "hint", "Export to Excel", 3, "width", "height", "disabled"], [4, "dxTemplate", "dxTemplateOf"], ["id", "exportTypeSelector", 1, "menu-dropdown-content"], [3, "dataSource", "width", "height", "scrollByContent", "scrollByThumb"], ["target", "#exportBtn", 3, "visible", "closeOnOutsideClick"], [1, "menu-dropdown", 3, "mouseover", "mouseenter", "mouseout"], ["stylingMode", "outlined", "icon", "fas fa-calculator", 3, "type", "width", "height", "onClick"], ["id", "currencySelector", 1, "menu-dropdown-content"], [1, "calculated-title"], [1, "btn-group", "dropright", 2, "width", "100%"], ["type", "button", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "btn", "btn-secondary", "dropdown-toggle", "text-left", 3, "mouseenter", "mouseout"], [1, "dropdown-menu", 3, "id", "mouseenter", "mouseover"], [4, "ngFor", "ngForOf"], ["type", "button", 1, "btn", "btn-light", "btn-calc-item", 3, "click"], ["stylingMode", "outlined", "icon", "fa fa-money", 3, "type", "width", "height", "text", "click"], [1, "list-header"], ["searchExpr", "CurrencyName", "searchMode", "contains", 3, "dataSource", "width", "height", "searchEnabled", "scrollByContent", "scrollByThumb"], [3, "ngClass", 4, "dxTemplate", "dxTemplateOf"], [3, "ngClass"], [3, "click"], [1, "menu-dropdown", 3, "mouseover", "mouseout"], ["stylingMode", "outlined", "icon", "fa fa-exchange-alt", 3, "type", "width", "height", "text", "click"], ["id", "currencyConversionSelector", 1, "menu-dropdown-content"], ["type", "normal", "layout", "horizontal", 1, "outline", 3, "items", "value", "valueChange", "onValueChanged"], ["stylingMode", "outlined", "icon", "fa fa-balance-scale", 3, "type", "width", "height", "text", "click"], ["id", "massUnitSelector", 1, "menu-dropdown-content"], ["searchExpr", "Name", 3, "dataSource", "width", "height", "searchEnabled", "scrollByContent", "scrollByThumb"], [1, "button-indicator", 3, "visible"], ["class", "fas fa-download", 4, "ngIf"], [1, "fas", "fa-download"]], template: function PivotGridPreviewTopMenuComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](1, PivotGridPreviewTopMenuComponent_div_1_Template, 10, 6, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](2, PivotGridPreviewTopMenuComponent_div_2_Template, 7, 12, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](3, PivotGridPreviewTopMenuComponent_div_3_Template, 6, 7, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](4, PivotGridPreviewTopMenuComponent_div_4_Template, 7, 12, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("mouseover", function PivotGridPreviewTopMenuComponent_Template_div_mouseover_5_listener() { return ctx.onHover("exportToExcel"); })("mouseenter", function PivotGridPreviewTopMenuComponent_Template_div_mouseenter_5_listener() { return ctx.onHover("exportToExcel"); })("mouseout", function PivotGridPreviewTopMenuComponent_Template_div_mouseout_5_listener() { return ctx.onLeave("exportToExcel"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](6, "dx-button", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](7, PivotGridPreviewTopMenuComponent_div_7_Template, 3, 2, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](9, "dx-list", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](10, PivotGridPreviewTopMenuComponent_div_10_Template, 3, 1, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](11, "dx-tooltip", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](12, PivotGridPreviewTopMenuComponent_div_12_Template, 2, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isCalculatedFieldsSelection);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isCurrencySelection);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isCurrencyConversion);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngIf", ctx.pivotGridOptionsValues == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings == null ? null : ctx.pivotGridOptionsValues.settings.menuSettings.isUnitsOfMass);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("width", 50)("height", 35)("disabled", ctx.dataLoadingIndicatorVisible);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "content");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("@slideInOut", ctx.exportToExcelSelectorVisible && !ctx.dataLoadingIndicatorVisible ? "in" : "out");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dataSource", ctx.exportType)("width", 155)("height", 120)("scrollByContent", true)("scrollByThumb", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "item");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("visible", ctx.dataLoadingIndicatorVisible)("closeOnOutsideClick", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("dxTemplateOf", "content");
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_9__.DxButtonComponent, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgForOf, devextreme_angular__WEBPACK_IMPORTED_MODULE_10__.DxListComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_11__.DxTemplateDirective, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgClass, devextreme_angular__WEBPACK_IMPORTED_MODULE_12__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_13__.DxLoadIndicatorComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_14__.DxTooltipComponent], styles: [".buttons[_ngcontent-%COMP%] {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.timePeriodfromToText[_ngcontent-%COMP%] {\r\n    font-size: 12px;\r\n    font-weight: lighter;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    position: absolute;\r\n    background-color: #f1f1f1;\r\n    min-width: 160px;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    z-index: 1499;\r\n    padding: 7px 7px 7px 7px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    background-color: #f1f1f1;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    border-top: 1px solid #ddd;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover {\r\n    background-color: #e8e8e8;\r\n}\r\n\r\n.dropright[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    margin-left: 0px !important;\r\n}\r\n\r\n#othersSelector[_ngcontent-%COMP%] {\r\n    width: 350px;\r\n}\r\n\r\n.menu-dropdown[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.dx-button-mode-outlined.dx-button-success[_ngcontent-%COMP%] {\r\n    background-color: #0d3b5a;\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #6c757d;\r\n}\r\n\r\n.list-header[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\ndiv.selected-item[_ngcontent-%COMP%] {\r\n    background-color: rgba(99, 97, 97, 0.3);\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #ffff !important;\r\n    \r\n}\r\n\r\ndiv.calculated-title[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: black;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.show[_ngcontent-%COMP%] > .btn-secondary.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.btn-calc-item[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n    font-size: 14px !important;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n\r\n.dropdown[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    display: inline-block;\r\n    line-height: 39px;\r\n    padding-left: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.badge-left[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: green;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: -1px;\r\n}\r\n\r\n.badge-right[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: blue;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: auto;\r\n    right: -1px;\r\n}\r\n\r\n  #exportBtn,   #exportBtn .dx-button-content {\r\n    padding: 0;\r\n}\r\n\r\n  #exportBtn .button-indicator {\r\n    height: 32px;\r\n    width: 32px;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-right: 5px;\r\n}\r\n\r\n#exportBtn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    background-position: 0 0;\r\n    background-size: 18px 18px;\r\n    padding: 0;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n    margin-top: 8px;\r\n}\r\n\r\n.export-to-exel[_ngcontent-%COMP%] {\r\n    right: 25px;\r\n    position: absolute;\r\n}\r\n\r\n.auto-save-state[_ngcontent-%COMP%] {\r\n    right: 80px;\r\n    position: absolute;\r\n}\r\n\r\n#exportTypeSelector.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    right: 2%;\r\n}\n/*# sourceMappingURL=data:application/json;base64, */"], data: { animation: [_animations__WEBPACK_IMPORTED_MODULE_4__.SlideInOutAnimation] } });


/***/ }),

/***/ 99361:
/*!***************************************************************************!*\
  !*** ./src/app/shared/pivot-grid-preview/pivot-grid-preview.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PivotGridPreviewComponent": () => (/* binding */ PivotGridPreviewComponent)
/* harmony export */ });
/* harmony import */ var D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! devextreme/ui/pivot_grid/data_source */ 90810);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! exceljs */ 34498);
/* harmony import */ var exceljs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(exceljs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ 92938);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! file-saver */ 65226);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/model/enums/dataFieldArea.enum */ 29368);
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);
/* harmony import */ var src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/model/pivotGridOptions.model */ 67807);
/* harmony import */ var src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/model/userStateAndSetttings.model */ 69893);
/* harmony import */ var src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/model/enums/specialValueType.enum */ 59591);
/* harmony import */ var devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! devextreme/excel_exporter */ 47081);
/* harmony import */ var src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/guard/commonHelper */ 83518);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/extensions/common.extension */ 9936);
/* harmony import */ var src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/model/enums/computingType.enum */ 11892);
/* harmony import */ var src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/model/enums/studyDataUrl.enum */ 3620);
/* harmony import */ var _model_userDetail_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../model/userDetail.model */ 30203);
/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../Constant */ 21003);
/* harmony import */ var _model_dropdownUnits_model__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../model/dropdownUnits.model */ 29718);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _service_work_is_loading__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @service-work/is-loading */ 59645);
/* harmony import */ var src_services_study_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/services/study.service */ 87091);
/* harmony import */ var _full_fledged_alerts__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @full-fledged/alerts */ 77626);
/* harmony import */ var src_services_shared_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/services/shared.service */ 74255);
/* harmony import */ var _services_localStorage_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../services/localStorage.service */ 51045);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var _pivot_grid_preview_top_menu_pivot_grid_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./pivot-grid-preview-top-menu/pivot-grid-preview-top-menu.component */ 71146);
/* harmony import */ var devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! devextreme-angular/ui/nested */ 82664);
/* harmony import */ var devextreme_angular_core__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! devextreme-angular/core */ 85915);


































function PivotGridPreviewComponent_dx_button_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r7 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "dx-button", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("onClick", function PivotGridPreviewComponent_dx_button_0_Template_dx_button_onClick_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r7);
      const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r6.isDefaultStateMode = !ctx_r6.isDefaultStateMode;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵpropertyInterpolate"]("text", ctx_r0.isDefaultStateMode ? "Switch OFF Settings of Default State" : "Switch ON Settings of Default State");
  }
}

function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "pivot-grid-preview-top-menu", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("currencySelectionChanged", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_currencySelectionChanged_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r8.currencySelectionChanged($event);
    })("currencyConversionSelectionChanged", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_currencyConversionSelectionChanged_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r10.currencyConversionSelectionChanged($event);
    })("massUnitSelectionChanged", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_massUnitSelectionChanged_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r11.massUnitSelectionChanged($event);
    })("onExportToExcel", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_onExportToExcel_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r12.exportToExcel();
    })("onExportToCvs", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_onExportToCvs_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r13.exportToCvs();
    })("onExportSnapshot", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_onExportSnapshot_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r14.exportToShanptshot();
    })("calculatedFieldItemSelected", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_calculatedFieldItemSelected_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r15.setCalculatedFieldFromTopMenu($event);
    })("onChangeAutoSaveStatus", function PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template_pivot_grid_preview_top_menu_onChangeAutoSaveStatus_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r9);
      const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r16.onChangeAutoSaveStatus($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("setSelectedCurrency", ctx_r1.currencyDropdownSelected)("setSelectedMassUnit", ctx_r1.unitOfMassDropdownSelected)("setCurrency", ctx_r1.currencyDropdown)("setVolumeUnits", ctx_r1.unitsDropdown)("pivotGridOptions", ctx_r1.pivotGridOptions)("setStudySetup", ctx_r1.studySetup);
  }
}

function PivotGridPreviewComponent_div_7_div_2_div_10_Template(rf, ctx) {
  if (rf & 1) {
    const _r21 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtext"](2, "In Direction");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](3, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](4, "dx-select-box", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("valueChange", function PivotGridPreviewComponent_div_7_div_2_div_10_Template_dx_select_box_valueChange_4_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r21);
      const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](3);
      return ctx_r20.percentInDirection = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("items", ctx_r19.summaryDisplayModeItems)("value", ctx_r19.percentInDirection);
  }
}

const _c0 = function () {
  return ["Subtotals", "Grand Totals"];
};

function PivotGridPreviewComponent_div_7_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtext"](4, "Compute '% Of Total':");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](6, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtext"](7, "Based on");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](8, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](9, "dx-radio-group", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("valueChange", function PivotGridPreviewComponent_div_7_div_2_Template_dx_radio_group_valueChange_9_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r23);
      const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r22.percentOfTotalBasedOn = $event;
    })("onValueChanged", function PivotGridPreviewComponent_div_7_div_2_Template_dx_radio_group_onValueChanged_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r23);
      const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r24.onBasedOnChange(false);
    })("onInitialized", function PivotGridPreviewComponent_div_7_div_2_Template_dx_radio_group_onInitialized_9_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r23);
      const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r25.onBasedOnChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](10, PivotGridPreviewComponent_div_7_div_2_div_10_Template, 5, 2, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](11, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](12, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](13, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](14, "dx-button", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("onClick", function PivotGridPreviewComponent_div_7_div_2_Template_dx_button_onClick_14_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r23);
      const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r26.addPercentOfTotalsToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵpureFunction0"](5, _c0))("value", ctx_r17.percentOfTotalBasedOn);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("ngIf", ctx_r17.summaryDisplayModeItems);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("width", 120)("disabled", false);
  }
}

function PivotGridPreviewComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r28 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "dx-popup", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("visibleChange", function PivotGridPreviewComponent_div_7_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r28);
      const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r27.isPercentOfTotalPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](2, PivotGridPreviewComponent_div_7_div_2_Template, 15, 6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("width", 400)("height", 250)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r3.isPercentOfTotalPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c1 = function (a0, a1) {
  return [a0, a1];
};

function PivotGridPreviewComponent_div_8_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtext"](4, "Compute change, %:");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](6, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](7, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](8, "dx-radio-group", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("valueChange", function PivotGridPreviewComponent_div_8_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r32);
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r31.percentOfChangeComputeType = $event;
    })("onValueChanged", function PivotGridPreviewComponent_div_8_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r32);
      const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r33.onComputeTypeChange(false);
    })("onInitialized", function PivotGridPreviewComponent_div_8_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r32);
      const ctx_r34 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r34.onComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](9, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](10, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](11, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](12, "dx-button", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("onClick", function PivotGridPreviewComponent_div_8_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r32);
      const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r35.addPrecentOfChangeToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵpureFunction2"](3, _c1, ctx_r29.computingType.FirstYear, ctx_r29.computingType.PreviousYear))("value", ctx_r29.percentOfChangeComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("width", 120);
  }
}

function PivotGridPreviewComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    const _r37 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "dx-popup", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("visibleChange", function PivotGridPreviewComponent_div_8_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r37);
      const ctx_r36 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r36.isPercentOfChangePopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](2, PivotGridPreviewComponent_div_8_div_2_Template, 13, 6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r4.isPercentOfChangePopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

function PivotGridPreviewComponent_div_9_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](2, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](3, "h6");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtext"](4, "Compute CAGR:");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](5, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](6, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](7, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](8, "dx-radio-group", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("valueChange", function PivotGridPreviewComponent_div_9_div_2_Template_dx_radio_group_valueChange_8_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r41);
      const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r40.cagrComputeType = $event;
    })("onValueChanged", function PivotGridPreviewComponent_div_9_div_2_Template_dx_radio_group_onValueChanged_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r41);
      const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r42.onCagrComputeTypeChange(false);
    })("onInitialized", function PivotGridPreviewComponent_div_9_div_2_Template_dx_radio_group_onInitialized_8_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r41);
      const ctx_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r43.onCagrComputeTypeChange(true);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](9, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](10, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](11, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](12, "dx-button", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("onClick", function PivotGridPreviewComponent_div_9_div_2_Template_dx_button_onClick_12_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r41);
      const ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
      return ctx_r44.addCAGRToPivot(false);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r38 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("items", _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵpureFunction2"](3, _c1, ctx_r38.computingType.FirstYear, ctx_r38.computingType.PreviousYear))("value", ctx_r38.cagrComputeType);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("width", 120);
  }
}

function PivotGridPreviewComponent_div_9_Template(rf, ctx) {
  if (rf & 1) {
    const _r46 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](1, "dx-popup", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("visibleChange", function PivotGridPreviewComponent_div_9_Template_dx_popup_visibleChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵrestoreView"](_r46);
      const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
      return ctx_r45.isCagrPopup = $event;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](2, PivotGridPreviewComponent_div_9_div_2_Template, 13, 6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("width", 400)("height", 200)("showTitle", false)("dragEnabled", false)("closeOnOutsideClick", true)("visible", ctx_r5.isCagrPopup);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("dxTemplateOf", "content");
  }
}

const _c2 = function () {
  return {
    showColumnFields: true,
    showDataFields: true,
    showFilterFields: true,
    showRowFields: true,
    allowFieldDragging: true,
    visible: true
  };
};

const _c3 = function () {
  return {
    enabled: true
  };
};

class PivotGridPreviewComponent {
  constructor(route, isLoadingService, studyService, alertService, sharedService, localStorageService) {
    this.route = route;
    this.isLoadingService = isLoadingService;
    this.studyService = studyService;
    this.alertService = alertService;
    this.sharedService = sharedService;
    this.localStorageService = localStorageService;
    this.currentYear = 0;
    this.previewData = [];
    this.saveStateEnabled = false;
    this.studyAreaId = 0;
    this.isDefaultStateMode = false;
    this.currencyDropdown = [];
    this.unitsDropdown = [];
    this.marketYearCategoryId = 0;
    this.studyProjectMarketYearId = 0;
    this.currencyConversionTypeSelected = 1;
    this.unitOfMassDropdownSelected = new _model_dropdownUnits_model__WEBPACK_IMPORTED_MODULE_18__.DropdownUnits();
    this.computingType = src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType;
    this.eventsCustomAction = new rxjs__WEBPACK_IMPORTED_MODULE_24__.Subject();
    this.pivotGridNoDataMessage = '';
    this.isPercentOfTotalPopup = false;
    this.isPercentOfChangePopup = false;
    this.isCagrPopup = false;
    this.firstAvailableId = 0;
    this.currencyDropdownSelected = null;
    this.yearDataFieldName = '';
    this.isHeaderFilterLoading = false;
    this.canCallSaveState = false;
    this.adminSetNewState = false;
    this.pivotSummaryDisplayModesSubtotals = [{
      id: undefined,
      name: 'Same as the Data Fields'
    }, {
      id: 'percentOfColumnTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowTotal',
      name: 'Always Rows'
    }];
    this.pivotSummaryDisplayModesGrandTotals = [{
      id: 'percentOfColumnGrandTotal',
      name: 'Always Columns'
    }, {
      id: 'percentOfRowGrandTotal',
      name: 'Always Rows'
    }, {
      id: 'percentOfGrandTotal',
      name: 'Table (Absolute) Grand Total'
    }];
    this.shownYears = undefined;
    this.invisibleFields = [];
    this.saveStateToDbTimeout = setTimeout(() => {}, 0);
    this.stateChange = new rxjs__WEBPACK_IMPORTED_MODULE_24__.Subject();
    this.shownYearsPrev = undefined;
    this.pivotStateId = 0;
    this.studyDataUrlEnum = src_model_enums_studyDataUrl_enum__WEBPACK_IMPORTED_MODULE_15__.StudyDataUrlEnum;
    this.dataField = '';
    this.percentOfTotalBasedOn = 'Subtotals';
    this.percentInDirection = '';
    this.percentOfChangeComputeType = '';
    this.cagrComputeType = '';
    this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"]();
    const params = this.route.snapshot.params;
    this.marketYearCategoryId = params['mycId'];
    this.studyProjectMarketYearId = params['spmId'];
    this.studyAreaId = params['studyArea'];
    this.customSaveState = this.customSaveState.bind(this);
    this.customLoadState = this.customLoadState.bind(this);
    this.userDetail = new _model_userDetail_model__WEBPACK_IMPORTED_MODULE_16__.UserDetail().deserialize(this.localStorageService.getData(_Constant__WEBPACK_IMPORTED_MODULE_17__.Constants.userDetailKey));
  }

  set setPreviewData(data) {
    if (data) {
      this.previewData = data;

      if (this.previewData && this.studySetup) {
        setTimeout(() => {
          this.getPivotSettings();
        }, 100);
      }
    }
  }

  set setStudySetup(studySetup) {
    if (studySetup) {
      this.studySetup = studySetup;

      if (this.previewData && this.studySetup) {
        setTimeout(() => {
          this.getPivotSettings();
        }, 100);
      }
    }
  }

  set setMarketYearCategoryId(data) {
    this.marketYearCategoryId = data;
  }

  set setCurrency(data) {
    this.currencyDropdown = data;
  }

  set setVolumeUnits(data) {
    this.unitsDropdown = data;
  }

  set setCurrentCurrency(data) {
    if (data) {
      this.currencyDropdownSelected = data;
    }
  }

  set setCurrentVolumeUnit(data) {
    if (data) {
      this.unitOfMassDropdownSelected = data;
    }
  }

  ngOnInit() {}

  getPivotSettings() {
    var _a;

    if (((_a = this.studySetup) === null || _a === void 0 ? void 0 : _a.ViewId) > 0) {
      this.sharedService.getPivotSettings(this.studySetup.ViewId).subscribe(res => {
        var _a;

        this.pivotGridOptions = res.Data;

        if (this.pivotGridOptions) {
          //this.pivotGridOptions.pivotGridSource.fields = this.gridFields;
          this.pivotGridOptions.settings.specialSorting = []; // hardcoded fix because this study don't have any view yet.

          if (this.studySetup.StudyAreaId === 49) {
            this.pivotGridOptions.pivotGridSource.fields.find(d => d.dataField === 'Unit').caption = 'Count';
          } // get datafield for this view from settings


          this.dataField = ((_a = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType)) === null || _a === void 0 ? void 0 : _a.dataField) || 'Value';
          this.pivotGridOptions.pivotGridSource.store = this.previewData;
          this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](this.pivotGridOptions.pivotGridSource); // get also pivot state when settings is available

          this.getPivotState();
        }
      });
    }
  }

  getPivotState() {
    var _a;

    if (!this.stateData) {
      let stateData = undefined;
      this.sharedService.getState((_a = this.studySetup) === null || _a === void 0 ? void 0 : _a.ViewId, this.marketYearCategoryId, false).subscribe(res => {
        // in case state is not exists yet
        try {
          const stateRes = typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};
          stateData = src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.realMerge(new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(), JSON.parse(stateRes.StateData));
          this.pivotStateId = stateRes.PivotStateId;
        } catch (_a) {
          stateData = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UserStateAndSetttings(); // stateData.state.fields = this.getGridFields();
        }

        this.directDatasourceRenderPivot(stateData);
      });
    } else {
      this.directDatasourceRenderPivot(this.stateData);
    }
  }

  directDatasourceRenderPivot(stateData) {
    var _this = this;

    return (0,D_Projects_kline_Kline_Core_Kline_Core_WebApplication_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      var _a;

      if (stateData.settings) {
        if (!stateData.settings.currencyConversionType) {
          stateData.settings.currencyConversionType = _this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;
        }

        if (!((_a = stateData.settings.selectedYear) === null || _a === void 0 ? void 0 : _a.PeriodKey)) {
          stateData.settings.selectedYear = _this.currentYear;
        }

        let selectedCurrency = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.CurrencyDropdown();
        selectedCurrency.Id = _this.currencyDropdownSelected.Id;
        selectedCurrency.Code = _this.currencyDropdownSelected.CurrencyCode;
        selectedCurrency.Name = _this.currencyDropdownSelected.Name;
        stateData.settings.currency = selectedCurrency;
        let unitDropdown = new src_model_userStateAndSetttings_model__WEBPACK_IMPORTED_MODULE_9__.UnitDropdown();
        unitDropdown.Id = _this.unitOfMassDropdownSelected.Id;
        unitDropdown.Name = _this.unitOfMassDropdownSelected.Name;
        stateData.settings.unitOfMass = unitDropdown;
      }

      _this.stateData = stateData;

      if (_this.previewData && _this.previewData.length) {
        //get all invisible fields
        _this.invisibleFields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => f.visible === false); //filter invisible fields

        _this.pivotGridOptions.pivotGridSource.fields = _this.pivotGridOptions.pivotGridSource.fields.filter(f => !f.visible || !f.isCalculated); //get count of visible fields for calculated fields ids

        _this.firstAvailableId = _this.pivotGridOptions.pivotGridSource.fields.length; // remove all invisible data from the datasource

        if (_this.invisibleFields && _this.invisibleFields.length > 0) {
          for (const invisibleField of _this.invisibleFields) {
            _this.previewData.forEach(obj => {
              delete obj[invisibleField.dataField];
            });
          }
        }

        _this.fillPivot(_this.pivotGridOptions, _this.previewData);
      }
    })();
  }

  customSaveState(data, isChangeAutoSaveStatus) {
    var _a, _b; // do not save state to db in case, states are emited too intensively


    clearTimeout(this.saveStateToDbTimeout);
    this.canCallSaveState = true; // allow to save state only in case all requested data is available

    if (((_a = this.studySetup) === null || _a === void 0 ? void 0 : _a.ViewId) && this.canCallSaveState && this.pivotGridOptions && this.stateData) {
      this.stateData.state = data;
      this.stateChange.next(this.stateData); // find all shown years and reload pivot grid on change

      const yearField = this.stateData.state.fields.filter(f => f.dataField === this.yearDataFieldName);
      const hasCagrOrChange = this.stateData.settings.cagrState.isSet || this.stateData.settings.changePercentState.isSet;

      if (yearField && hasCagrOrChange) {
        const pivotGridInstance = (_b = this.pivotGrid) === null || _b === void 0 ? void 0 : _b.instance;
        const pivotFridDataSource = pivotGridInstance.getDataSource();
        const areaIndex = yearField[0].areaIndex;
        const uniqArrByText = lodash__WEBPACK_IMPORTED_MODULE_3__.uniqBy(pivotGridInstance._dataController._columnsInfo[areaIndex], 'text');
        this.shownYears = uniqArrByText.map(t => parseInt(t.text)); // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists

        if (yearField[0].sortOrder === 'desc') {
          pivotFridDataSource.field(this.yearDataFieldName, {
            sortOrder: 'asc'
          });
          pivotFridDataSource.load();
        }

        if (!lodash__WEBPACK_IMPORTED_MODULE_3__.isEqual(this.shownYears, this.shownYearsPrev)) {
          this.shownYearsPrev = this.shownYears;
          pivotFridDataSource.load();
        }
      } // in case user is NOT admin and has disable automatic saving state or remember latest state
      //else if (!isChangeAutoSaveStatus) {
      //  if (this.stateData.settings.rememberLatestState == undefined) {
      //    this.stateData.settings.rememberLatestState =
      //      this.pivotGridOptions.canSaveUserState;
      //  }
      //  if (this.stateData.settings.rememberLatestState == false) {
      //    return;
      //  }
      //}


      this.saveStateToDbTimeout = setTimeout(() => {
        var _a;

        this.sharedService.setState((_a = this.studySetup) === null || _a === void 0 ? void 0 : _a.ViewId, this.marketYearCategoryId, 0, this.isDefaultStateMode, JSON.stringify(this.stateData)).subscribe(data => {
          var _a;

          if (data && this.pivotGridOptions.canSaveDefaultStateAndOptions && this.isDefaultStateMode) {
            this.alertService.info('The system will remember the last state!'); // after save state, save also settings

            this.saveSettings((_a = this.studySetup) === null || _a === void 0 ? void 0 : _a.ViewId, this.pivotGridOptions); // set can save default state to false

            this.pivotGridOptions.canSaveDefaultStateAndOptions = false;
          }
        }, error => {
          throw new Error(error);
        });
      }, 2000);
    }
  }

  customLoadState() {
    if (this.stateData) {
      return this.stateData.state;
    }
  }

  deleteCustomState() {
    var _a, _b;

    this.adminSetNewState = false;

    if (((_a = this.studySetup) === null || _a === void 0 ? void 0 : _a.ViewId) && this.pivotStateId) {
      this.sharedService.deleteState((_b = this.studySetup) === null || _b === void 0 ? void 0 : _b.ViewId, this.marketYearCategoryId, this.pivotStateId).subscribe(data => data, error => {
        throw new Error(error);
      }, () => {
        this.stateData = undefined;
        setTimeout(() => {
          this.getPivotState();
        }, 100);
      });
    }
  }

  saveSettings(currentlySelectedViewId, optionsDataSource) {
    let saveResult = false;
    const optionsDataSourceTemp = Object.assign({}, optionsDataSource);
    optionsDataSourceTemp.pivotGridSource.fields = optionsDataSourceTemp.pivotGridSource.fields.filter(f => !f.isCalculated); // set store to empty, system will read fresh data from backend next time

    optionsDataSourceTemp.pivotGridSource.store = [];
  }

  getDataFieldName(fieldName) {
    if (fieldName == this.studyDataUrlEnum.SHC_PT_SALES) {
      return 'ProductTypeSalesSHC';
    } else if (fieldName == this.studyDataUrlEnum.SHC_FC_SALES) {
      return 'ForecastSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_PC_SALES) {
      return 'ProductClassificationSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_CB_SALES) {
      return 'CompanyBrandSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_OS_SALES) {
      return 'OutletSales';
    } else if (fieldName == this.studyDataUrlEnum.SHC_IR_SALES) {
      return 'IndustryRevenues';
    } else if (fieldName == this.studyDataUrlEnum.SHC_SC_SALES) {
      return 'SalonCount';
    } else {
      return 'dataItems';
    }

    return fieldName;
  }

  onOptionChanged(e) {}

  onInitialized(e) {}

  cellPrepared(e) {
    var _a, _b, _c, _d; // customize change % columns captions
    // console.log(this.stateData?.settings.changePercentState.computingType);


    const shownYearsInPivot = this.shownYears;

    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {
      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex].toString() + ' to ' + shownYearsInPivot[yearIndex].toString();
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      } //customize cagr columns captions


      if (e.cell.text && e.cell.text.startsWith(src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr)) {
        let years = '';

        if (e.cell.path) {
          for (const path of e.cell.path) {
            years = path ? path : '';
          }

          if (((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
            if (shownYearsInPivot[0]) {
              years = shownYearsInPivot[0] + ' to ' + years;
            } else {
              years = '...';
            }
          } else if (((_d = this.stateData) === null || _d === void 0 ? void 0 : _d.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));
            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;

            if (shownYearsInPivot[prevYearIndex] && shownYearsInPivot[yearIndex]) {
              years = shownYearsInPivot[prevYearIndex] + ' to ' + shownYearsInPivot[yearIndex];
            } else {
              years = '...';
            }
          }

          e.cellElement.textContent = e.cell.text + ', ' + years;
        }
      }
    }

    if (e.area === 'data') {
      if (e.cell.value) {
        e.cell.value.hasCd && e.cellElement.classList.add('pivot-grid-cell-has-cd');
      }
    }
  }

  onContentReady(e) {
    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource && this.pivotGridOptions.pivotGridSource.fields) {
      const calculatedFields = this.pivotGridOptions.pivotGridSource.fields.filter(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      for (const calculatedField of calculatedFields) {
        this.addCloseButtonToCalculatedField(calculatedField.id, calculatedField.calculatedFieldType);
      }
    } // change style for no data message


    const noDataElement = e.component.element().querySelector('.dx-pivotgrid-nodata');

    if (noDataElement) {
      setTimeout(() => {
        if (this.pivotGridNoDataMessage) {
          noDataElement.classList.add('noDataMessage');
        } else {
          noDataElement.classList.remove('noDataMessage');
        }
      }, 100);
    }

    if (this.pivotGrid && this.stateData && this.stateData.state) {// Allow next rows if you want to enable disabling pivot during waiting for component response
      //this.pivot.disabled = true;
      // not allow to user change state too fast, pivot component needs some time to save emit state
      //setTimeout(() => { this.pivot.disabled = false; }, 1000)
    }
  }

  onContextMenuPreparing(e) {
    // this.pivot.disabled = true;
    this.customizeContextMenu(e); //if (e.area == "row" || e.area == "column") {
    //    let id = e.columnIndex + "" + e.rowIndex;
    //    let tooltip = $("<span></span>").append($("<span id='" + id + "'></span>").html("")).appendTo(e.cellElement);
    //    let field = $("#" + id).closest('td');
    //    field.attr('title', e.cell.text);
    //}
  }

  customizeContextMenu(e) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    this.updateDefaultContextMenuTextsAndIcons(e);

    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {
      e.items.push({
        beginGroup: true,
        text: 'Delete Calculated Field',
        icon: 'fa fa-trash-alt',
        onItemClick: () => {
          const fieldToDelete = e.field;

          if (typeof this.stateData !== 'undefined') {
            switch (fieldToDelete.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }

          this.deleteCalculatedField(e.field.id);
        }
      });
      e.items.push({
        beginGroup: true,
        text: 'Edit Calculated Field',
        icon: 'fa fa-pencil-alt',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            switch (e.field.calculatedFieldType) {
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
                this.isPercentOfTotalPopup = true;
                this.stateData.settings.percentOfTotalState.summaryDisplayMode =  false || '';
                this.pivotSummaryDisplayModesSubtotals[0].id = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';
                this.stateData.settings.percentOfTotalState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
                this.isPercentOfChangePopup = true;
                this.stateData.settings.changePercentState.isSet = false;
                break;

              case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
                this.isCagrPopup = true;
                this.stateData.settings.cagrState.isSet = false;
                break;
            }
          }
        }
      });
      return;
    }

    let openMenuItems = [];

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.menuSettings.isCurrencySelection) {
      openMenuItems.push({
        icon: 'fa fa-money',
        text: 'Change Currency',
        onItemClick: () => {
          this.eventsCustomAction.next('currencySelector');
        }
      });
    }

    if ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.menuSettings.isCurrencyConversion) {
      openMenuItems.push({
        icon: 'fa fa-exchange-alt',
        text: 'Constant',
        onItemClick: () => {
          this.eventsCustomAction.next('currencyConversionSelector');
        }
      });
    }

    if ((_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.settings.menuSettings.isUnitsOfVolume) {
      openMenuItems.push({
        icon: 'fa fa-fill-drip',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('massUnitSelector');
        }
      });
    }

    if ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.settings.menuSettings.isUnitsOfMass) {
      openMenuItems.push({
        icon: 'fa fa-balance-scale',
        text: 'Units of Volume',
        onItemClick: () => {
          this.eventsCustomAction.next('volumeUnitSelector');
        }
      });
    }

    e.items.push({
      beginGroup: true,
      text: 'Reset to Default',
      icon: 'fas fa-sync-alt',
      onItemClick: () => {
        this.deleteCustomState();
      }
    });
    e.items.push({
      beginGroup: true,
      text: 'Adjust Parameters',
      icon: 'fa fa-sliders-h',
      items: openMenuItems
    });

    if (e.field && e.field.area === 'data' && this.enabledInContextMenu(e.field)) {
      let calculatedFieldsItems = [];

      if ((_e = this.pivotGridOptions) === null || _e === void 0 ? void 0 : _e.settings.calculatedFields.isPercentOfTotal) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal,
          onItemClick: () => {
            var _a, _b;

            this.isPercentOfTotalPopup = true;
            this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

            if (((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.percentOfTotalState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.percentOfTotalState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.isPercentOfChange) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent,
          onItemClick: () => {
            var _a;

            this.isPercentOfChangePopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.changePercentState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.changePercentState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      if ((_g = this.pivotGridOptions) === null || _g === void 0 ? void 0 : _g.settings.calculatedFields.isCagr) {
        calculatedFieldsItems.push({
          text: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr,
          onItemClick: () => {
            var _a;

            this.isCagrPopup = true;

            if (((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) && typeof this.stateData !== 'undefined') {
              this.stateData.settings.cagrState.dataField = e.field.dataField;
            } else {
              if (typeof this.stateData !== 'undefined') this.stateData.settings.cagrState.dataField = e.field.dataFieldType;
            }
          }
        });
      }

      e.items.push({
        beginGroup: true,
        text: 'Add Calculated Field',
        icon: 'fa fa-calculator',
        items: calculatedFieldsItems
      });
    } // show only case if exist two or more datafields


    if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType)).length >= 2) {
      const dataFieldsHeaders = ((_h = this.stateData) === null || _h === void 0 ? void 0 : _h.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'Rows' : 'Columns';
      e.items.push({
        beginGroup: true,
        text: 'Show Data Field Headers in ' + dataFieldsHeaders,
        icon: 'fa fa-table',
        onItemClick: () => {
          if (typeof this.stateData !== 'undefined') {
            this.stateData.settings.dataFieldArea = this.stateData.settings.dataFieldArea === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.row : src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column;
          }
        }
      });
    }
  }

  deleteCalculatedField(fieldId) {
    var _a, _b;

    (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.splice(this.pivotGridOptions.pivotGridSource.fields.map(m => m.id).indexOf(fieldId), 1);
    this.firstAvailableId--;

    if (!((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.isCube)) {
      if (typeof this.pivotGridOptions !== 'undefined') {
        this.fillPivot(this.pivotGridOptions, this.previewData);
      }
    }
  }

  updateDefaultContextMenuTextsAndIcons(e) {
    var _a;

    let rowName = undefined;
    let rowCaption;

    if ((_a = e.cell) === null || _a === void 0 ? void 0 : _a.path) {
      if (e.cell && e.area === 'row') {
        const path = e.cell.path.length - 1;
        rowName = e.rowFields[path].dataField;
        rowCaption = e.rowFields[path].caption;
      } else if (e.cell && e.area === 'column') {
        const path = e.cell.path.length - 1;
        rowName = e.columnFields[path].dataField;
        rowCaption = e.columnFields[path].caption;
      }

      const expandAll = e.items.find(f => f.text.includes('Expand All'));

      if (expandAll) {
        expandAll.icon = 'fas fa-plus';
        expandAll.text = 'Expand' + ' ' + rowCaption;
      }

      const collapseAll = e.items.find(f => f.text.includes('Collapse All'));

      if (collapseAll) {
        collapseAll.icon = 'fas fa-minus';
        collapseAll.text = 'Collapse' + ' ' + rowCaption;
      }
    }

    const fieldChooser = e.items.find(f => f.text.includes('Show Field Chooser'));

    if (fieldChooser) {
      fieldChooser.text = 'FieldChooser Text';
    }

    const exportToExcel = e.items.find(f => f.text.includes('Export to'));

    if (exportToExcel) {
      exportToExcel.text = 'Export to excel';
    }

    const sorts = e.items.filter(f => f.text.includes('Sort'));

    if (sorts) {
      for (let sort of sorts) {
        sort.icon = 'fas fa-sort';
      }
    }
  }

  enabledInContextMenu(field) {
    if (field.dataFieldType === src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.AvgPrice) {
      return false;
    } else {
      return true;
    }
  }

  addCloseButtonToCalculatedField(fieldId, datafieldType) {
    const calculatedFieldObj = $(".dx-area-field-content:contains('" + datafieldType + "')").append("<i id='" + src_extensions_common_extension__WEBPACK_IMPORTED_MODULE_13__.Common.removeAllSpaces(datafieldType) + "' class='closeButton fas fa-times-circle'></i>");
    calculatedFieldObj.parent().parent().css('padding-right', '0').css('margin-right', '0 !important');
    calculatedFieldObj.children().off().on('click', () => {
      if (typeof this.stateData !== 'undefined') {
        switch (datafieldType) {
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal:
            this.stateData.settings.percentOfTotalState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
            this.stateData.settings.changePercentState.isSet = false;
            break;

          case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
            this.stateData.settings.cagrState.isSet = false;
            break;
        }
      }

      this.deleteCalculatedField(fieldId);
    });
  }

  currencySelectionChanged(currency) {
    var _a;

    const currentCurrencyId = (_a = this.currencyDropdownSelected) === null || _a === void 0 ? void 0 : _a.Id;
    const changedCurrency = currency.Id;
    const currencyConversionId = this.currencyConversionTypeSelected;
    this.currencyDropdownSelected = currency;
    this.refreshCurrencyInPreview(currentCurrencyId, changedCurrency, currencyConversionId);
  }

  currencyConversionSelectionChanged(currencyConversionType) {
    var _a;

    const currentCurrencyId = (_a = this.currencyDropdownSelected) === null || _a === void 0 ? void 0 : _a.Id;
    this.refreshCurrencyInPreview(currentCurrencyId, currentCurrencyId, currencyConversionType);
    this.currencyConversionTypeSelected = currencyConversionType;
  }

  refreshCurrencyInPreview(currentCurrencyId, changedCurrency, currencyConversionId) {
    this.studyService.getCurrencyConversionFactor(this.studySetup.StudyYear, currentCurrencyId, changedCurrency, currencyConversionId).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const conversionfactor = res.Data;

        for (const dataRow of this.previewData) {
          dataRow.Value *= conversionfactor;
        }

        this.getPivotSettings();
      }
    }, error => {
      throw new Error(error);
    });
  }

  massUnitSelectionChanged(unitOfMass) {
    const currentUnitOfMassId = this.unitOfMassDropdownSelected.Id;
    const changedUnitOfMassId = unitOfMass.Id;
    this.unitOfMassDropdownSelected = unitOfMass;
    this.refreshMassUnitInPreview(currentUnitOfMassId, changedUnitOfMassId);
  }

  refreshMassUnitInPreview(currentMassUnitId, changedMassUnitId) {
    this.studyService.getVolumeConversionFactor(currentMassUnitId, changedMassUnitId, this.studySetup.StudyDataSetId).subscribe(res => {
      if (res.HttpStatusCode === 200) {
        const conversionfactor = res.Data;

        for (const dataRow of this.previewData) {
          dataRow.Volume *= conversionfactor;
        }

        this.getPivotSettings();
      }
    }, error => {
      throw new Error(error);
    });
  }

  getUserSettings() {
    const userSettings = {
      currency: {
        Id: this.currencyDropdownSelected.Id,
        Code: this.currencyDropdownSelected.CurrencyCode,
        Name: this.currencyDropdownSelected.Name
      },
      currencyConversionType: 1,
      unitOfMass: {
        Id: 103,
        Name: 'Thousand Lbs'
      },
      unitOfMeasure: {
        Id: 101,
        Name: 'Metric Tonnes'
      },
      unitOfVolume: {
        Id: 7,
        Name: 'Quart (US)'
      },
      selectedYear: {
        PeriodKey: this.currentYear,
        Name: this.currentYear.toString()
      },
      percentOfTotalState: {
        isSet: true,
        dataField: 'Value',
        basedOn: 'Subtotals',
        summaryDisplayMode: 'percentOfColumnTotal'
      },
      changePercentState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'Previous (Shown) Year'
      },
      cagrState: {
        isSet: true,
        dataField: 'Value',
        computingType: 'First (Shown) Year'
      },
      dataFieldArea: 'column',
      userChartSetting: {
        dataFieldsDisplayMode: 'singleAxis',
        chartType: 'Column'
      },
      isReducedDataSource: false,
      rememberLatestState: true
    };
    return userSettings;
  }

  exportToExcel() {
    var _a, _b;

    this.getUserSettings();
    this.studyService.changeExcelLoading(true);
    let title = '...';
    const menuSettings = (_b = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings) === null || _b === void 0 ? void 0 : _b.menuSettings;
    const pivotFields = this.pivotGridDataSource.fields();
    const userSettings = this.getUserSettings();
    let finalData;

    if (this.previewData[0].hasOwnProperty('Year')) {
      finalData = this.previewData.sort((a, b) => a.Year - b.Year);
    } else {
      finalData = this.previewData;
    }

    this.studyService.exportToExcel(finalData, pivotFields, userSettings, title, menuSettings, 0).subscribe(res => {
      let fileName = 'PivotExport';

      if (title.length > 3) {
        fileName = title.split(' ').join('');
        fileName = fileName.split('-').join('_');
      }

      var file = new Blob([res], {
        type: 'application/vnd.ms-excel'
      });
      var fileURL = URL.createObjectURL(file);
      let a = document.createElement('a');
      document.body.appendChild(a);
      a.style.display = 'none';
      a.href = fileURL;
      a.target = '_blank';
      a.download = `${fileName}.xlsx`;
      a.click();
      a.remove();
      this.studyService.changeExcelLoading(false);
    }, error => {
      this.studyService.changeExcelLoading(false);
      console.log(error);
    });
  }

  exportToCvs() {
    this.studyService.changeExcelLoading(true);
    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    this.studyService.exportToCsv(this.previewData, fileName);
  }

  exportToShanptshot() {
    var _a;

    let title = '...';
    let fileName = 'DashboardFileName';

    if (title.length > 3) {
      fileName = title.split(' ').join('');
      fileName = fileName.split('-').join('_');
    }

    const workbook = new exceljs__WEBPACK_IMPORTED_MODULE_2__.Workbook();
    const worksheet = workbook.addWorksheet('Main sheet');
    (0,devextreme_excel_exporter__WEBPACK_IMPORTED_MODULE_11__.exportPivotGrid)({
      component: (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance,
      worksheet: worksheet,
      customizeCell: function (options) {
        const excelCell = options;
        excelCell.excelCell.font = {
          name: 'Calibri',
          size: 11
        };
        excelCell.excelCell.alignment = {
          horizontal: 'left',
          vertical: 'top'
        };
      }
    }).then(function () {
      workbook.xlsx.writeBuffer().then(function (buffer) {
        (0,file_saver__WEBPACK_IMPORTED_MODULE_4__.saveAs)(new Blob([buffer], {
          type: 'application/octet-stream'
        }), fileName + '.xlsx');
      });
    });
  }

  fillPivot(pivotGridOptions, pivotData) {
    var _a;

    this.saveStateEnabled = false;
    const selectedYear = this.stateData ? this.stateData.settings.selectedYear : this.currentYear;

    if (pivotGridOptions && ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings)) {
      // If is visible like default, add % of total to pivot
      if (this.stateData.settings.percentOfTotalState.isSet) {
        this.addPercentOfTotalsToPivot(true);
      } // If is visible like default, add change % to pivot


      if (this.stateData.settings.changePercentState.isSet) {
        this.addPrecentOfChangeToPivot(true);
      } // If is visible like default, add CAGR to pivot


      if (this.stateData.settings.cagrState.isSet) {
        this.addCAGRToPivot(true);
      }

      const pivotGridSource = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.PivotGridSource();
      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;
      pivotGridSource.store = pivotData; // make copy of datasource without reference to old object

      let sourceCopy = lodash__WEBPACK_IMPORTED_MODULE_3__.cloneDeep(pivotGridSource); // if administrator set default sorting to true do not use any special sorting

      if (!pivotGridOptions.settings.useDefaultSorting) {
        // if some special sorting is applied
        if (pivotGridOptions.settings.specialSorting && pivotGridOptions.settings.specialSorting.length) {
          for (let specialSorting of pivotGridOptions.settings.specialSorting) {
            if (specialSorting.fieldName) {
              let orderAray = [];

              if (pivotData) {
                let rowData = 0;

                for (let row of pivotData) {
                  // if (row.Year == selectedYear.PeriodKey) {
                  // in case value datafield is not exists, must exists unit
                  rowData = row.Value === undefined ? row.Unit : row.Value;

                  if (orderAray.some(r => r.field === row[specialSorting.fieldName])) {
                    orderAray.find(r => r.field === row[specialSorting.fieldName]).valueSum += rowData;
                  } else {
                    orderAray.push({
                      field: row[specialSorting.fieldName],
                      valueSum: rowData
                    });
                  } // }

                }

                orderAray = orderAray.sort((a, b) => b.valueSum - a.valueSum).map(m => m.field);
                orderAray.forEach((item, index) => {
                  if (item.startsWith(specialSorting.beginningWith)) {
                    orderAray.push(orderAray.splice(index, 1)[0]);
                  }
                });
                const sortingField = sourceCopy.fields.find(f => f.dataField === specialSorting.fieldName);

                if (sortingField) {
                  sortingField.sortOrder = 'asc';

                  sortingField.sortingMethod = (b, a) => {
                    // if (!this.isHeaderFilterLoading) {
                    //   for (const item of orderAray) {
                    //     if (a.value === item) {
                    //       return 1;
                    //     }
                    //     if (b.value === item) {
                    //       return -1;
                    //     }
                    //   }
                    // }
                    return b.value.localeCompare(a.value);
                  };
                }
              }
            }
          }
        } else {
          this.applySortingRolesByYear();
        }
      }

      if (this.pivotGridDataSource) {
        this.pivotGridDataSource.dispose();
      } // check if source contains dataType property and set visibility to false


      if (pivotGridSource.store && pivotGridSource.store.length && pivotGridSource.store[0].DataType) {
        let dataType = sourceCopy.fields.filter(d => d.dataField === 'DataType');
        dataType[0].visible = false;
      } // check all datafields if contains an exception in calculating


      const allDatafields = sourceCopy.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false);

      for (let field of allDatafields) {
        let newField = this.returnSpecialSumamryField(field);

        if (newField) {
          sourceCopy.fields.push(newField);
          field.visible = false;
        }
      } // remove unused propertiesf


      for (let field of sourceCopy.fields) {
        // remove group properties when group is empty
        if (field.groupName == '') {// delete field.groupName;
          // delete field.groupIndex;
        } // in case fileld is grouped field parse index to int
        else if (field.groupName && field.groupName.length > 0) {
          let groupIndex = field.groupIndex ? parseInt(field.groupIndex.toString()) : 0;
          field.groupIndex = groupIndex;
        }
      }

      if (typeof this.pivotGridOptions !== 'undefined' && this.pivotGridOptions.settings.groupedFields) {
        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {
          let field = {
            groupName: groupedField.groupName,
            area: groupedField.area
          };
          sourceCopy.fields.push(field);
        }
      }

      this.pivotGridDataSource = new devextreme_ui_pivot_grid_data_source__WEBPACK_IMPORTED_MODULE_1__["default"](sourceCopy); // this solves alphabetical filtering in filters

      setTimeout(() => {
        var _a, _b;

        const source = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
        const getFieldValues = (_b = source) === null || _b === void 0 ? void 0 : _b.getFieldValues;

        if (getFieldValues) {
          this.isHeaderFilterLoading = false;
          let that = this;

          source.getFieldValues = function () {
            that.isHeaderFilterLoading = true;
            return getFieldValues.apply(this, arguments).always(function () {
              that.isHeaderFilterLoading = false;
            });
          };
        }
      }, 1);
      src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);

      if (pivotGridOptions.settings && (pivotGridOptions.settings.menuSettings.isChart || pivotGridOptions.settings.charts.isVisible)) {// this.initChart();
      }
    } //cutomize texts in pivot
    // this.updateDefaultPivotTexts();
    // apply special filtering
    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {
    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);
    //}


    setTimeout(() => {
      this.saveStateEnabled = true;
    }, 1);
  }

  returnSpecialSumamryField(fieldOriginal) {
    if (fieldOriginal.summaryType === 'range') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption || '';
      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.dataField = fieldOriginal.dataField || '';

      fieldNew.calculateCustomSummary = e => this.calculateSummaryValueRange(e, fieldOriginal);

      fieldNew.customizeText = e => this.customizeRangeText(e);

      fieldNew.isCalculated = true;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.range;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else if (fieldOriginal.summaryType === 'sumCdOd') {
      let fieldNew = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field();
      fieldNew.summaryType = 'custom';
      fieldNew.caption = fieldOriginal.caption;

      fieldNew.calculateCustomSummary = options => this.calculateSummaryValueCdOd(options, fieldOriginal);

      fieldNew.isMeasure = true;
      fieldNew.area = 'data';
      fieldNew.visible = true;
      fieldNew.isCalculated = false;
      fieldNew.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.none;
      fieldNew.dataFieldType = fieldOriginal.dataFieldType;
      fieldNew.width = fieldOriginal.width;
      return fieldNew;
    } else {
      return undefined;
    }
  }

  calculateSummaryValueRange(e, field) {
    var _a, _b;

    const valueNearZero = Number.EPSILON;

    switch (e.summaryProcess) {
      case 'start':
        e.totalValue = 0;
        e.values = [0, 0];
        break;

      case 'calculate':
        if (e.value != -1.7976931348623157e308) {
          if (!e.values[0] || !e.values[1]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value < e.values[0]) {
            e.values[0] = e.value === 0 ? valueNearZero : e.value;
          }

          if (e.value > e.values[1]) {
            e.values[1] = e.value === 0 ? valueNearZero : e.value;
          }
        }

        break;

      case 'finalize':
        let min = e.values[0] ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision) : 0;
        let max = e.values[1] ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed((_b = field.format) === null || _b === void 0 ? void 0 : _b.precision) : 0; // if (
        //   GlobalSettings.SpecialValueForSqlMoney.find(
        //     (v) => v === Number(min)
        //   ) ||
        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))
        // ) {
        //   ErrorHelper.informAdministrator(
        //     this.appCommonDataService,
        //     'Unhandled range value - (' +
        //       min +
        //       ')(' +
        //       max +
        //       ') ' +
        //       Common.objToString(this.requestedView) +
        //       'Environment: ' +
        //       Common.objToString(
        //         this.appEnvironmentData.getEnvironmentSettings()
        //       ) +
        //       ' User: ' +
        //       Common.objToString(this.sharedService.getUserData())
        //   );
        // }

        if (min === max) {
          e.totalValue = min;
        } else if (!min) {
          e.totalValue = max;
        } else {
          e.totalValue = min + ' - ' + max;
        }

        break;
    }
  }

  customizeRangeText(e) {
    if (e.value === undefined) {
      return src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === null || src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType === void 0 ? void 0 : src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash;
    } else {
      return e.value;
    }
  }

  calculateSummaryValueCdOd(options, field) {
    var _a;

    switch (options.summaryProcess) {
      case 'start':
        options.totalValue = {
          value: 0,
          hasCd: false,

          valueOf() {
            return this.value;
          },

          toString() {
            return this.value.toString();
          },

          indexOf() {
            const stringValue = this.toString();
            return stringValue.indexOf.apply(this, arguments);
          }

        };
        break;

      case 'calculate':
        options.totalValue.value += options.value[field.dataField] || 0;
        options.totalValue.hasCd = options.totalValue.hasCd || options.value.DataType === 'cd';
        break;

      case 'finalize':
        let totalValue = options.totalValue;
        totalValue.value = totalValue.value.toFixed((_a = field.format) === null || _a === void 0 ? void 0 : _a.precision).replace(/\d(?=(\d{3})+\.)/g, '$&,');
        options.totalValue = totalValue;
        break;
    }
  }

  applySortingRolesByYear() {
    this.yearDataFieldName = 'Year';
    setTimeout(() => {
      var _a;

      const pivotGridDataSource = (_a = this.pivotGrid) === null || _a === void 0 ? void 0 : _a.instance.getDataSource();
      const columnFields = pivotGridDataSource === null || pivotGridDataSource === void 0 ? void 0 : pivotGridDataSource._fields.filter(f => f.area === 'column');
      const datafields = pivotGridDataSource === null || pivotGridDataSource === void 0 ? void 0 : pivotGridDataSource._fields.filter(f => f.area === 'data');
      const yearFieldOnFirstPositon = columnFields === null || columnFields === void 0 ? void 0 : columnFields.filter(f => f.areaIndex === 0 && f.dataField === this.yearDataFieldName); // apply this role only in case, year field is on first column position

      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {
        const rowFields = pivotGridDataSource._fields.filter(f => f.area === 'row');

        const selectedYear = this.currentYear; // const selectedYear = this.stateData
        //   ? this.stateData.settings.selectedYear.PeriodKey
        //   : 2021;

        if (selectedYear) {
          for (const field of rowFields) {
            pivotGridDataSource.field(field.dataField, {
              sortBySummaryField: datafields ? datafields.filter(f => f.areaIndex === 0)[0].dataField : undefined,
              sortBySummaryPath: [selectedYear],
              sortOrder: 'desc'
            });
          }

          pivotGridDataSource.load();
        }
      }
    }, 100);
  }

  setCalculatedFieldFromTopMenu(value) {
    var _a;

    const type = value.itemName;
    const dataField = value.dataField;

    switch (type) {
      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal:
        this.isPercentOfTotalPopup = true;
        this.pivotSummaryDisplayModesSubtotals[0].id = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.dataFieldArea) === src_model_enums_dataFieldArea_enum__WEBPACK_IMPORTED_MODULE_6__.DataFieldArea.column ? 'percentOfColumnTotal' : 'percentOfRowTotal';

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.percentOfTotalState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent:
        this.isPercentOfChangePopup = true;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.changePercentState.dataField = dataField;
        }

        break;

      case src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr:
        this.isCagrPopup = true; // this.stateData?.settings.cagrState.dataField = dataField;

        if (typeof this.stateData !== 'undefined') {
          this.stateData.settings.cagrState.dataField = dataField;
        }

        break;
    }
  }

  onBasedOnChange(isInit) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.basedOn = this.percentOfTotalBasedOn;
    }

    this.summaryDisplayModeItems = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.basedOn) === 'Subtotals' ? this.pivotSummaryDisplayModesSubtotals : this.pivotSummaryDisplayModesGrandTotals;

    if (isInit === false && typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';
    }
  }

  onComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.changePercentState.computingType = this.percentOfChangeComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.changePercentState.computingType =
    //     ComputingType.FirstYear;
    // }

  }

  onCagrComputeTypeChange(isInit) {
    if (this.stateData) {
      this.stateData.settings.cagrState.computingType = this.cagrComputeType;
    } // if (isInit === false && this.stateData) {
    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;
    // }

  }

  addPercentOfTotalsToPivot(iSCallFromFillPivot) {
    var _a;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.summaryDisplayMode = this.percentInDirection;
    }

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);
    } else {
      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);
    }
  }

  addPercentOfTotalsToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c, _d, _e, _f, _g, _h;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of total exists

      const percentOfTotal = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal || f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal);

      if (percentOfTotal && this.pivotGridDataSource) {
        fieldId = percentOfTotal.id;
        percentOfTotal.summaryDisplayMode = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.summaryDisplayMode) || '';
        percentOfTotal.caption = this.getCaptionForPercentOfTotal();
        percentOfTotal.dataField = this.dataField;
        percentOfTotal.calculatedFieldType = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        this.pivotGridDataSource.field(percentOfTotal.id, {
          summaryDisplayMode: percentOfTotal.summaryDisplayMode,
          caption: percentOfTotal.caption,
          calculatedFieldType: percentOfTotal.calculatedFieldType,
          dataField: this.dataField
        });
        this.pivotGridDataSource.load(); // CommonHelper.updatePlaceholders(
        //   this.pivotGridDataSource,
        //   this.stateData
        // );
      } else {
        this.firstAvailableId = ((_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.pivotGridSource.fields.length) || 0;
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfTotal();
        field.dataField = this.dataField;
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.isMeasure = true;
        field.visible = true;
        field.calculateSummaryValue = undefined;
        field.summaryDisplayMode = ((_e = this.stateData) === null || _e === void 0 ? void 0 : _e.settings.percentOfTotalState.summaryDisplayMode) || '';
        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_f = this.pivotGridOptions) === null || _f === void 0 ? void 0 : _f.settings.calculatedFields.formatPrecision) || 1
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = ((_g = this.stateData) === null || _g === void 0 ? void 0 : _g.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
        (_h = this.pivotGridOptions) === null || _h === void 0 ? void 0 : _h.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && typeof this.pivotGridOptions !== 'undefined') {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfTotalPopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.percentOfTotalState.isSet = true;
      }
    }
  }

  addPercentOfTotalsToPivotCube(iSCallFromFillPivot) {
    var _a, _b, _c, _d;

    this.removeAllHiddenCalculatedFields();
    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForPercentOfTotal();
    field.dataField = this.dataField;
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.isMeasure = true;
    field.visible = true;
    field.calculateSummaryValue = undefined;
    field.summaryDisplayMode = ((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.percentOfTotalState.summaryDisplayMode) || '';
    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    (_d = this.pivotGridOptions) === null || _d === void 0 ? void 0 : _d.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isPercentOfTotalPopup = false;

    if (typeof this.stateData !== 'undefined') {
      this.stateData.settings.percentOfTotalState.isSet = true;
    } //if (!iSCallFromFillPivot) {
    //  this.readPivotDataFromApi();
    //}

  }

  removeAllHiddenCalculatedFields() {
    var _a;

    if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state) && this.pivotGridDataSource) {
      this.stateData.state.fields = this.stateData.state.fields.filter(a => a.area !== undefined);
      this.pivotGridDataSource.state(this.stateData.state);
    }
  }

  getCaptionForPercentOfTotal() {
    var _a, _b, _c;

    let caption = ''; //check if exist 2 or more datafields

    if (typeof this.pivotGridOptions !== 'undefined' && ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length) >= 2) {
      const percentOfTotaldatafield = this.dataField;
      let currentDatafieldCaption = '';

      if (this.pivotGridOptions.settings.isCube) {
        currentDatafieldCaption = // this.pivotGridOptions.pivotGridSource.fields.find(
        //   (f) => f.dataField === percentOfTotaldatafield
        // ).caption;
        'Cube Caption';
      } else {
        if (typeof this.pivotGridOptions !== 'undefined') {
          const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfTotaldatafield);

          if (fieldCaption) {
            currentDatafieldCaption = fieldCaption.caption;
          }
        }
      }

      caption = ((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal + ' ' + currentDatafieldCaption;
    } else {
      caption = ((_c = this.stateData) === null || _c === void 0 ? void 0 : _c.settings.percentOfTotalState.basedOn) === 'Subtotals' ? src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfTotal : src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.percentOfGrandTotal;
    }

    return caption;
  }

  addPrecentOfChangeToPivot(iSCallFromFillPivot) {
    var _a, _b, _c;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case % of change exists

      const percentOfChange = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent);

      if (percentOfChange && this.pivotGridDataSource) {
        fieldId = percentOfChange.id;
        this.pivotGridDataSource.field(percentOfChange.id, {
          caption: this.getCaptionForPercentOfChange(),
          dataField: this.dataField,
          calculateSummaryValue: e => this.calculateSummaryValuePercentOfChange(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForPercentOfChange();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = this.dataField;
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValuePercentOfChange(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
        (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isPercentOfChangePopup = false;

      if (typeof this.stateData !== 'undefined') {
        this.stateData.settings.changePercentState.isSet = true;
      }
    }
  }

  calculateSummaryValuePercentOfChange(e) {
    var _a, _b;

    if (e.parent('column')) {
      let base;

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.changePercentState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        let yearIndex = 0;

        for (const index in e.parent('column').children()) {
          if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
            yearIndex = parseInt(index);
            break;
          }
        }

        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const returnValue = e.value() / base.value() - 1;
      return isNaN(returnValue) || returnValue && returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  getCaptionForPercentOfChange() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const percentOfChangeDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.changePercentState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataFieldType === percentOfChangeDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (percentOfChangeDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.changePercent;
    }

    return caption;
  }

  addCAGRToPivot(iSCallFromFillPivot) {
    var _a;

    if ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.isCube) {
      this.addCAGRToPivotCube(iSCallFromFillPivot);
    } else {
      this.addCAGRToPivotArray(iSCallFromFillPivot);
    }
  }

  addCAGRToPivotArray(iSCallFromFillPivot) {
    var _a, _b, _c;

    let fieldId = undefined;

    if (this.previewData) {
      this.removeAllHiddenCalculatedFields(); // in case cagr exists, remove and recreate it (case for edit)

      const cagr = (_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.pivotGridSource.fields.find(f => f.calculatedFieldType === src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr);

      if (cagr && this.pivotGridDataSource) {
        fieldId = cagr.id;
        this.pivotGridDataSource.field(cagr.id, {
          dataField: this.dataField,
          caption: this.getCaptionForCagr(),
          calculateSummaryValue: e => this.calculateSummaryValueCagr(e)
        });
        this.pivotGridDataSource.load();
        src_guard_commonHelper__WEBPACK_IMPORTED_MODULE_12__.CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);
      } else {
        const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

        field.id = this.firstAvailableId;
        field.caption = this.getCaptionForCagr();
        field.width = 120;
        field.dataType = 'number';
        field.summaryType = 'sum';
        field.area = 'data';
        field.dataField = this.dataField;
        field.isMeasure = true;
        field.visible = true;

        field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

        let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
        format = {
          type: 'percent',
          precision: ((_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.settings.calculatedFields.formatPrecision) || 0
        };
        field.format = format;
        field.isCalculated = true;
        field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
        (_c = this.pivotGridOptions) === null || _c === void 0 ? void 0 : _c.pivotGridSource.fields.push(field);
        this.firstAvailableId++;

        if (!iSCallFromFillPivot && this.pivotGridOptions) {
          this.fillPivot(this.pivotGridOptions, this.previewData);
        }

        fieldId = field.id;
      }

      this.isCagrPopup = false;
      if (this.stateData) this.stateData.settings.cagrState.isSet = true;
    }
  }

  addCAGRToPivotCube(iSCallFromFillPivot) {
    var _a, _b;

    const field = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Field(); // reserve id for this calculated field

    field.id = this.firstAvailableId;
    field.caption = this.getCaptionForCagr();
    field.width = 120;
    field.dataType = 'number';
    field.summaryType = 'sum';
    field.area = 'data';
    field.dataField = this.dataField;
    field.isMeasure = true;
    field.visible = true;

    field.calculateSummaryValue = e => this.calculateSummaryValueCagr(e);

    let format = new src_model_pivotGridOptions_model__WEBPACK_IMPORTED_MODULE_8__.Format();
    format = {
      type: 'percent',
      precision: ((_a = this.pivotGridOptions) === null || _a === void 0 ? void 0 : _a.settings.calculatedFields.formatPrecision) || 0
    };
    field.format = format;
    field.isCalculated = true;
    field.calculatedFieldType = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    (_b = this.pivotGridOptions) === null || _b === void 0 ? void 0 : _b.pivotGridSource.fields.push(field);
    this.firstAvailableId++;
    this.isCagrPopup = false;

    if (this.stateData) {
      this.stateData.settings.cagrState.isSet = true;
    } //if (!iSCallFromFillPivot) {
    //  this.readPivotDataFromApi();
    //}

  }

  getCaptionForCagr() {
    var _a;

    let caption = '';

    if (this.pivotGridOptions && this.pivotGridOptions.pivotGridSource.fields.filter(f => Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType).includes(f.dataFieldType) && f.isCalculated === false).length >= 2) {
      const cagrDataField = (_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.dataField;
      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(f => f.dataField === cagrDataField);
      const currentDatafieldCaption = fieldCaption === null || fieldCaption === void 0 ? void 0 : fieldCaption.caption;

      switch (cagrDataField) {
        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Value:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        case src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_7__.PivotGridDataFieldType.Volume:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;
          break;

        default:
          caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
          break;
      }
    } else {
      caption = src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_5__.CalculatedFieldType.cagr;
    }

    return caption;
  }

  calculateSummaryValueCagr(e) {
    var _a, _b;

    const shownYearsInPivot = this.shownYears;

    if (e.parent('column') && shownYearsInPivot) {
      let base;
      let yearIndex = 0;
      let prevYearIndex = 0;

      for (const index in e.parent('column').children()) {
        if (e.parent('column').children()[index].value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
          yearIndex = parseInt(index);
          break;
        }
      }

      if (((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.FirstYear) {
        base = e.parent('column').children()[0];
        prevYearIndex = 0;
      } else if (((_b = this.stateData) === null || _b === void 0 ? void 0 : _b.settings.cagrState.computingType) === src_model_enums_computingType_enum__WEBPACK_IMPORTED_MODULE_14__.ComputingType.PreviousYear) {
        base = e.parent('column').children()[yearIndex > 0 ? yearIndex - 1 : yearIndex];
        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;
      }

      if (!base || base && base.value(this.yearDataFieldName) === e.value(this.yearDataFieldName)) {
        return null;
      }

      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();
      const yearSpan = shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];
      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;
      return isNaN(returnValue) || returnValue.toString() === 'Infinity' ? src_model_enums_specialValueType_enum__WEBPACK_IMPORTED_MODULE_10__.SpecialValueType.EmDash : returnValue;
    }

    return null;
  }

  onChangeAutoSaveStatus(statusValue) {
    var _a;

    if (this.stateData) {
      this.stateData.settings.rememberLatestState = statusValue;
    }

    if (statusValue == false) {
      this.alertService.info('The system will remember this state!');
    } else {
      this.alertService.info('The system will remember the last used state!');
    }

    this.canCallSaveState = true;
    this.customSaveState((_a = this.stateData) === null || _a === void 0 ? void 0 : _a.state, true);
  }

}

PivotGridPreviewComponent.ɵfac = function PivotGridPreviewComponent_Factory(t) {
  return new (t || PivotGridPreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_25__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdirectiveInject"](_service_work_is_loading__WEBPACK_IMPORTED_MODULE_26__.IsLoadingService), _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdirectiveInject"](src_services_study_service__WEBPACK_IMPORTED_MODULE_19__.StudyService), _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdirectiveInject"](_full_fledged_alerts__WEBPACK_IMPORTED_MODULE_27__.AlertService), _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdirectiveInject"](src_services_shared_service__WEBPACK_IMPORTED_MODULE_20__.SharedService), _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdirectiveInject"](_services_localStorage_service__WEBPACK_IMPORTED_MODULE_21__.LocalStorageService));
};

PivotGridPreviewComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵdefineComponent"]({
  type: PivotGridPreviewComponent,
  selectors: [["pivot-grid-preview"]],
  viewQuery: function PivotGridPreviewComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵviewQuery"](devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxPivotGridComponent, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵloadQuery"]()) && (ctx.pivotGrid = _t.first);
    }
  },
  inputs: {
    currentYear: "currentYear",
    setPreviewData: "setPreviewData",
    setStudySetup: "setStudySetup",
    setMarketYearCategoryId: "setMarketYearCategoryId",
    setCurrency: "setCurrency",
    setVolumeUnits: "setVolumeUnits",
    setCurrentCurrency: "setCurrentCurrency",
    setCurrentVolumeUnit: "setCurrentVolumeUnit"
  },
  decls: 10,
  vars: 30,
  consts: [["stylingMode", "outlined", "type", "default", 3, "text", "onClick", 4, "ngIf"], [3, "setSelectedCurrency", "setSelectedMassUnit", "setCurrency", "setVolumeUnits", "pivotGridOptions", "setStudySetup", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus", 4, "ngIf"], ["id", "pivotGrid", "showTotalsPrior", "none", 3, "allowSortingBySummary", "allowSorting", "dataSource", "fieldPanel", "fieldChooser", "allowFiltering", "allowExpandAll", "showBorders", "showColumnGrandTotals", "showRowGrandTotals", "showRowTotals", "showColumnTotals", "showTotalsPrior", "dataFieldArea", "onContextMenuPreparing", "onOptionChanged", "onInitialized", "onContentReady", "onCellPrepared"], ["pivotGrid", ""], [3, "allowSearch"], [3, "allowSearch", "showRelevantValues"], ["type", "custom", 3, "enabled", "customSave", "customLoad", "savingTimeout"], [4, "ngIf"], ["stylingMode", "outlined", "type", "default", 3, "text", "onClick"], [3, "setSelectedCurrency", "setSelectedMassUnit", "setCurrency", "setVolumeUnits", "pivotGridOptions", "setStudySetup", "currencySelectionChanged", "currencyConversionSelectionChanged", "massUnitSelectionChanged", "onExportToExcel", "onExportToCvs", "onExportSnapshot", "calculatedFieldItemSelected", "onChangeAutoSaveStatus"], [1, "popup", 3, "width", "height", "showTitle", "dragEnabled", "closeOnOutsideClick", "visible", "visibleChange"], [4, "dxTemplate", "dxTemplateOf"], [1, "form"], [1, "dx-fieldset"], [1, "dx-field"], [1, "dx-field-label"], [1, "dx-field-value"], [3, "items", "value", "valueChange", "onValueChanged", "onInitialized"], ["class", "dx-field", 4, "ngIf"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "disabled", "onClick"], ["displayExpr", "name", "valueExpr", "id", 3, "items", "value", "valueChange"], ["stylingMode", "contained", "type", "normal", "text", "Compute", 3, "width", "onClick"]],
  template: function PivotGridPreviewComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](0, PivotGridPreviewComponent_dx_button_0_Template, 1, 1, "dx-button", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](1, PivotGridPreviewComponent_pivot_grid_preview_top_menu_1_Template, 1, 6, "pivot-grid-preview-top-menu", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementStart"](2, "dx-pivot-grid", 2, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵlistener"]("onContextMenuPreparing", function PivotGridPreviewComponent_Template_dx_pivot_grid_onContextMenuPreparing_2_listener($event) {
        return ctx.onContextMenuPreparing($event);
      })("onOptionChanged", function PivotGridPreviewComponent_Template_dx_pivot_grid_onOptionChanged_2_listener($event) {
        return ctx.onOptionChanged($event);
      })("onInitialized", function PivotGridPreviewComponent_Template_dx_pivot_grid_onInitialized_2_listener($event) {
        return ctx.onInitialized($event);
      })("onContentReady", function PivotGridPreviewComponent_Template_dx_pivot_grid_onContentReady_2_listener($event) {
        return ctx.onContentReady($event);
      })("onCellPrepared", function PivotGridPreviewComponent_Template_dx_pivot_grid_onCellPrepared_2_listener($event) {
        return ctx.cellPrepared($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](4, "dxo-field-chooser", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](5, "dxo-header-filter", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelement"](6, "dxo-state-storing", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](7, PivotGridPreviewComponent_div_7_Template, 3, 7, "div", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](8, PivotGridPreviewComponent_div_8_Template, 3, 7, "div", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵtemplate"](9, PivotGridPreviewComponent_div_9_Template, 3, 7, "div", 7);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("ngIf", ctx.userDetail.IsAdmin);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions && ctx.currencyDropdownSelected);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵstyleMap"](ctx.isDefaultStateMode ? "outline: 5px solid #ff9e92" : "");
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("allowSortingBySummary", true)("allowSorting", true)("dataSource", ctx.pivotGridDataSource)("fieldPanel", _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵpureFunction0"](28, _c2))("fieldChooser", _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵpureFunction0"](29, _c3))("allowFiltering", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowFiltering) || false)("allowExpandAll", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.allowExpandAll) || false)("showBorders", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showBorders) || false)("showColumnGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnGrandTotals) || false)("showRowGrandTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowGrandTotals) || false)("showRowTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showRowTotals) || false)("showColumnTotals", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showColumnTotals) || false)("showTotalsPrior", (ctx.pivotGridOptions == null ? null : ctx.pivotGridOptions.settings == null ? null : ctx.pivotGridOptions.settings.showTotalsPrior) || "")("dataFieldArea", (ctx.stateData == null ? null : ctx.stateData.settings == null ? null : ctx.stateData.settings.dataFieldArea) || "");
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("allowSearch", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("allowSearch", true)("showRelevantValues", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("enabled", ctx.saveStateEnabled)("customSave", ctx.customSaveState)("customLoad", ctx.customLoadState)("savingTimeout", 300);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_23__["ɵɵproperty"]("ngIf", ctx.pivotGridOptions);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_29__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxButtonComponent, _pivot_grid_preview_top_menu_pivot_grid_preview_top_menu_component__WEBPACK_IMPORTED_MODULE_22__.PivotGridPreviewTopMenuComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxPivotGridComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_31__.DxoFieldChooserComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_31__.DxoHeaderFilterComponent, devextreme_angular_ui_nested__WEBPACK_IMPORTED_MODULE_31__.DxoStateStoringComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_32__.DxPopupComponent, devextreme_angular_core__WEBPACK_IMPORTED_MODULE_33__.DxTemplateDirective, devextreme_angular__WEBPACK_IMPORTED_MODULE_34__.DxRadioGroupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_35__.DxSelectBoxComponent],
  styles: [".buttons[_ngcontent-%COMP%] {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n}\r\n\r\n.timePeriodfromToText[_ngcontent-%COMP%] {\r\n    font-size: 12px;\r\n    font-weight: lighter;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    position: absolute;\r\n    background-color: #f1f1f1;\r\n    min-width: 160px;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    z-index: 1499;\r\n    padding: 7px 7px 7px 7px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\r\n    background-color: #f1f1f1;\r\n    border: 1px solid #c9c9c9;\r\n    border-radius: 3px;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    border-top: 1px solid #ddd;\r\n}\r\n\r\n.menu-dropdown-content[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]:hover {\r\n    background-color: #e8e8e8;\r\n}\r\n\r\n.dropright[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\r\n    margin-left: 0px !important;\r\n}\r\n\r\n#othersSelector[_ngcontent-%COMP%] {\r\n    width: 350px;\r\n}\r\n\r\n.menu-dropdown[_ngcontent-%COMP%] {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.dx-button-mode-outlined.dx-button-success[_ngcontent-%COMP%] {\r\n    background-color: #0d3b5a;\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #6c757d;\r\n}\r\n\r\n.list-header[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\ndiv.selected-item[_ngcontent-%COMP%] {\r\n    background-color: rgba(99, 97, 97, 0.3);\r\n    border-color: rgba(99, 97, 97, 0.3);\r\n    color: #ffff !important;\r\n    \r\n}\r\n\r\ndiv.calculated-title[_ngcontent-%COMP%] {\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    color: black;\r\n    border-bottom: 1px solid black;\r\n    margin-bottom: 4px;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.show[_ngcontent-%COMP%] > .btn-secondary.dropdown-toggle[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n}\r\n\r\n.btn-calc-item[_ngcontent-%COMP%] {\r\n    background-color: inherit !important;\r\n    border: none !important;\r\n    color: black !important;\r\n    box-shadow: none !important;\r\n    font-size: 14px !important;\r\n    width: 100%;\r\n    text-align: left;\r\n}\r\n\r\n.dropdown[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dropdown-toggle[_ngcontent-%COMP%]:hover > .dropdown-menu[_ngcontent-%COMP%] {\r\n    display: block !important;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%] {\r\n    padding: 0px;\r\n}\r\n\r\n.dx-list[_ngcontent-%COMP%]   .dx-empty-message[_ngcontent-%COMP%], .dx-list-item-content[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\r\n    display: inline-block;\r\n    line-height: 39px;\r\n    padding-left: 10px;\r\n    width: 100%;\r\n}\r\n\r\n.badge-left[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: green;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: -1px;\r\n}\r\n\r\n.badge-right[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 12px;\r\n    text-align: center;\r\n    display: block;\r\n    border-radius: 50%;\r\n    background: blue;\r\n    border: 1px solid #fff;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);\r\n    color: #fff;\r\n    position: absolute;\r\n    top: -3px;\r\n    left: auto;\r\n    right: -1px;\r\n}\r\n\r\n  #exportBtn,   #exportBtn .dx-button-content {\r\n    padding: 0;\r\n}\r\n\r\n  #exportBtn .button-indicator {\r\n    height: 32px;\r\n    width: 32px;\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-right: 5px;\r\n}\r\n\r\n#exportBtn[_ngcontent-%COMP%]   i[_ngcontent-%COMP%] {\r\n    width: 18px;\r\n    height: 18px;\r\n    background-position: 0 0;\r\n    background-size: 18px 18px;\r\n    padding: 0;\r\n    font-size: 18px;\r\n    text-align: center;\r\n    line-height: 18px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n    margin-top: 8px;\r\n}\r\n\r\n.export-to-exel[_ngcontent-%COMP%] {\r\n    right: 25px;\r\n    position: absolute;\r\n}\r\n\r\n.auto-save-state[_ngcontent-%COMP%] {\r\n    right: 80px;\r\n    position: absolute;\r\n}\r\n\r\n#exportTypeSelector.menu-dropdown-content[_ngcontent-%COMP%] {\r\n    right: 2%;\r\n}\n/*# sourceMappingURL=data:application/json;base64, */"]
});

/***/ }),

/***/ 44466:
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SharedModule": () => (/* binding */ SharedModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _header_header_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header/header.component */ 89470);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var ag_grid_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ag-grid-angular */ 79771);
/* harmony import */ var _ag_grid_ag_grid_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ag-grid/ag-grid.component */ 4738);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var _handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handsontable/handsontable.component */ 92315);
/* harmony import */ var _handsontable_angular__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @handsontable/angular */ 14766);
/* harmony import */ var _handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./handson-table/handson-table.component */ 44911);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @ng-select/ng-select */ 88660);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! devextreme-angular */ 22528);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! devextreme-angular */ 77655);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! devextreme-angular */ 12334);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! devextreme-angular */ 50082);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! devextreme-angular */ 56384);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! devextreme-angular */ 69806);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! devextreme-angular */ 85915);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! devextreme-angular */ 66729);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! devextreme-angular */ 20783);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! devextreme-angular */ 57487);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! devextreme-angular */ 62163);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! devextreme-angular */ 59331);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! devextreme-angular */ 21856);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! devextreme-angular */ 38772);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! devextreme-angular */ 93816);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! devextreme-angular */ 37546);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! devextreme-angular */ 72766);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! devextreme-angular */ 1414);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! devextreme-angular */ 42473);
/* harmony import */ var devextreme_angular__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! devextreme-angular */ 62031);
/* harmony import */ var _handson_table_components_comments_comments_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handson-table/components/comments/comments.component */ 66730);
/* harmony import */ var _disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./disable-study-editing/disable-study-editing.component */ 72691);
/* harmony import */ var _handson_table_components_study_comments_study_comments_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./handson-table/components/study-comments/study-comments.component */ 64821);
/* harmony import */ var _confirm_navigation_confirm_navigation_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./confirm-navigation/confirm-navigation.component */ 26184);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);






















class SharedModule {
}
SharedModule.ɵfac = function SharedModule_Factory(t) { return new (t || SharedModule)(); };
SharedModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineNgModule"]({ type: SharedModule });
SharedModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjector"]({ imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_9__.CommonModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_10__.ReactiveFormsModule,
            _angular_router__WEBPACK_IMPORTED_MODULE_11__.RouterModule,
            ag_grid_angular__WEBPACK_IMPORTED_MODULE_12__.AgGridModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_13__.HttpClientModule,
            _handsontable_angular__WEBPACK_IMPORTED_MODULE_14__.HotTableModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_15__.DxDataGridModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxPivotGridModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxSelectBoxModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxButtonModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_19__.DxPopupModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_20__.DxTabPanelModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxTemplateModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxTextBoxModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxTextAreaModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_25__.DxSliderModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxNumberBoxModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_27__.DxListModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxLoadIndicatorModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxRadioGroupModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxFormModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_31__.DxTreeViewModule,
            _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_32__.NgSelectModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_33__.DxDropDownBoxModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_34__.DxDropDownButtonModule,
            devextreme_angular__WEBPACK_IMPORTED_MODULE_35__.DxScrollViewModule,
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsetNgModuleScope"](SharedModule, { declarations: [_header_header_component__WEBPACK_IMPORTED_MODULE_0__.HeaderComponent,
        _ag_grid_ag_grid_component__WEBPACK_IMPORTED_MODULE_1__.AgGridComponent,
        _handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_2__.HandsontableComponent,
        _handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_3__.HandsonTableComponent,
        _handson_table_components_comments_comments_component__WEBPACK_IMPORTED_MODULE_4__.CommentsComponent,
        _disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent,
        _handson_table_components_study_comments_study_comments_component__WEBPACK_IMPORTED_MODULE_6__.StudyCommentsComponent,
        _confirm_navigation_confirm_navigation_component__WEBPACK_IMPORTED_MODULE_7__.ConfirmNavigationComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.CommonModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormsModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_10__.ReactiveFormsModule,
        _angular_router__WEBPACK_IMPORTED_MODULE_11__.RouterModule,
        ag_grid_angular__WEBPACK_IMPORTED_MODULE_12__.AgGridModule,
        _angular_common_http__WEBPACK_IMPORTED_MODULE_13__.HttpClientModule,
        _handsontable_angular__WEBPACK_IMPORTED_MODULE_14__.HotTableModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_15__.DxDataGridModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_16__.DxPivotGridModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_17__.DxSelectBoxModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxButtonModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_19__.DxPopupModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_20__.DxTabPanelModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_21__.DxTemplateModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_22__.DxTooltipModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxTextBoxModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_24__.DxTextAreaModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_25__.DxSliderModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxNumberBoxModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_27__.DxListModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_28__.DxLoadIndicatorModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_29__.DxRadioGroupModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_30__.DxFormModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_31__.DxTreeViewModule,
        _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_32__.NgSelectModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_33__.DxDropDownBoxModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_34__.DxDropDownButtonModule,
        devextreme_angular__WEBPACK_IMPORTED_MODULE_35__.DxScrollViewModule], exports: [_header_header_component__WEBPACK_IMPORTED_MODULE_0__.HeaderComponent,
        _ag_grid_ag_grid_component__WEBPACK_IMPORTED_MODULE_1__.AgGridComponent,
        _handsontable_handsontable_component__WEBPACK_IMPORTED_MODULE_2__.HandsontableComponent,
        _handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_3__.HandsonTableComponent,
        _disable_study_editing_disable_study_editing_component__WEBPACK_IMPORTED_MODULE_5__.DisableStudyEditingComponent,
        _confirm_navigation_confirm_navigation_component__WEBPACK_IMPORTED_MODULE_7__.ConfirmNavigationComponent] }); })();
_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsetComponentScope"](_handson_table_handson_table_component__WEBPACK_IMPORTED_MODULE_3__.HandsonTableComponent, [_angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, devextreme_angular__WEBPACK_IMPORTED_MODULE_18__.DxButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_34__.DxDropDownButtonComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_23__.DxTextBoxComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgModel, _handsontable_angular__WEBPACK_IMPORTED_MODULE_14__.HotTableComponent, _handson_table_components_comments_comments_component__WEBPACK_IMPORTED_MODULE_4__.CommentsComponent,
    _handson_table_components_study_comments_study_comments_component__WEBPACK_IMPORTED_MODULE_6__.StudyCommentsComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_19__.DxPopupComponent, devextreme_angular__WEBPACK_IMPORTED_MODULE_35__.DxScrollViewComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__["ɵNgNoValidate"], _angular_forms__WEBPACK_IMPORTED_MODULE_10__.NgControlStatusGroup, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormGroupDirective, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_32__.NgSelectComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.RequiredValidator, _angular_forms__WEBPACK_IMPORTED_MODULE_10__.FormControlName, devextreme_angular__WEBPACK_IMPORTED_MODULE_26__.DxNumberBoxComponent, _confirm_navigation_confirm_navigation_component__WEBPACK_IMPORTED_MODULE_7__.ConfirmNavigationComponent], [_angular_common__WEBPACK_IMPORTED_MODULE_9__.AsyncPipe]);


/***/ }),

/***/ 92340:
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "environment": () => (/* binding */ environment)
/* harmony export */ });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ 9936:
/*!********************************************!*\
  !*** ./src/extensions/common.extension.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Common": () => (/* binding */ Common)
/* harmony export */ });
class Common {
    // function returns index of objects array by atribute and value
    findWithAttr(array, attr, value) {
        for (let i = 0; i < array.length; i++) {
            if (array[i][attr] === value) {
                return i;
            }
        }
        return -1;
    }
    // sort array of object by property
    // usage http://stackoverflow.com/questions/979256/sorting-an-array-of-javascript-objects
    // example number format this.dataSource.sort(this.common.sortByProp("MarketShare", false, parseFloat));
    // example string format this.dataSource.sort(this.common.sortByProp('area', false, function(a){return a.toUpperCase()}));
    sortByProp(field, reverse, primer) {
        let key = function (x) {
            return primer ? primer(x[field]) : x[field];
        };
        return function (a, b) {
            let A = key(a), B = key(b);
            return (A < B ? -1 : A > B ? 1 : 0) * [-1, 1][+!!reverse];
        };
    }
    // put object on the end of list if property contain id
    moveOnTheEndByPropValue(arr, property, idNum) {
        let rememberObj;
        for (let arrItem of arr) {
            if (arrItem[property] === idNum) {
                rememberObj = arrItem;
            }
        }
        if (rememberObj) {
            arr.push(arr.splice(arr.indexOf(rememberObj), 1)[0]);
        }
        return arr;
    }
    // get object from array by prop value
    searchByValue(propName, keyValue, arr) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i][propName] === keyValue) {
                return arr[i];
            }
        }
    }
    // get index of obj in array by prop value
    searchIndexByValue(propName, keyValue, arr) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i][propName] === keyValue) {
                return i;
            }
        }
    }
    // function returns number in string format 100,000,000.00
    largeNumberFormat(number) {
        number = this.round(number, 2);
        if (this.isInt(number)) {
            return number.toLocaleString() + '.0';
        }
        else {
            return number.toLocaleString();
        }
    }
    round(value, precision) {
        var multiplier = Math.pow(10, precision || 0);
        return Math.round(value * multiplier) / multiplier;
    }
    isInt(value) {
        return (!isNaN(value) &&
            (function (x) {
                return (x | 0) === x;
            })(parseFloat(value)));
    }
    static getBrowser() {
        var ua = navigator.userAgent, tem, M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
        if (/trident/i.test(M[1])) {
            tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
            return 'IE ' + (tem[1] || '');
        }
        if (M[1] === 'Chrome') {
            tem = ua.match(/\b(OPR|Edge)\/(\d+)/);
            if (tem != null)
                return tem.slice(1).join(' ').replace('OPR', 'Opera');
        }
        M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];
        if ((tem = ua.match(/version\/(\d+)/i)) != null)
            M.splice(1, 1, tem[1]);
        return M.join(' ');
    }
    static objToString(obj) {
        let str = '';
        for (var p in obj) {
            if (obj.hasOwnProperty(p)) {
                str += p + '::' + obj[p] + '\n';
            }
        }
        return str;
    }
    // this function merge two objects
    static realMerge(to, from) {
        for (let n in from) {
            if (typeof to[n] != 'object') {
                to[n] = from[n];
            }
            else if (typeof from[n] == 'object') {
                to[n] = this.realMerge(to[n], from[n]);
            }
        }
        return to;
    }
    static removeAllSpaces(textWithSpaces) {
        let textWithOutSpaces = textWithSpaces.replace(' ', '');
        return textWithOutSpaces;
    }
    static getAlphabetFromNo(columnNumber) {
        // To store result (Excel column name)
        let columnName = [];
        while (columnNumber > 0) {
            // Find remainder
            let rem = columnNumber % 26;
            // If remainder is 0, then a
            // 'Z' must be there in output
            if (rem == 0) {
                columnName.push('Z');
                columnNumber = Math.floor(columnNumber / 26) - 1;
            } // If remainder is non-zero
            else {
                columnName.push(String.fromCharCode(rem - 1 + 'A'.charCodeAt(0)));
                columnNumber = Math.floor(columnNumber / 26);
            }
        }
        return columnName.reverse().join('');
    }
    static replaceAll(str, mapObj) {
        var re = new RegExp(Object.keys(mapObj).join('|'), 'gi');
        return str.replace(re, function (matched) {
            return mapObj[matched];
        });
    }
}


/***/ }),

/***/ 9324:
/*!*********************************!*\
  !*** ./src/guard/auth.guard.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AuthGuard": () => (/* binding */ AuthGuard)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);




class AuthGuard {
    constructor(router, localStorageService) {
        this.router = router;
        this.localStorageService = localStorageService;
    }
    canActivate(route, state) {
        const currentUser = this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDataKey);
        if (typeof currentUser.idToken !== 'undefined') {
            // loggedIn so return true
            const currentUserDetail = this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDetailKey);
            const userRole = currentUserDetail.IsManager ? 'MANAGER' : 'ANALYST';
            if (route.data['role'] && route.data['role'].indexOf(userRole) === -1) {
                // console.log('call here');
                this.router.navigate(['study-summary']);
                return false;
            }
            return true;
        }
        else {
            // not logged in so redirect to login page
            // console.log('call here 123');
            this.router.navigate(['login']);
            return false;
        }
    }
}
AuthGuard.ɵfac = function AuthGuard_Factory(t) { return new (t || AuthGuard)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_1__.LocalStorageService)); };
AuthGuard.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: AuthGuard, factory: AuthGuard.ɵfac });


/***/ }),

/***/ 83518:
/*!***********************************!*\
  !*** ./src/guard/commonHelper.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommonHelper": () => (/* binding */ CommonHelper)
/* harmony export */ });
/* harmony import */ var src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/model/enums/pivotGridDataFieldType.enum */ 73850);

class CommonHelper {
    static updatePlaceholders(pivotGridDataSource, stateData) {
        // set additional fiels operation
        for (let field of pivotGridDataSource._fields) {
            if (!field.captionWithPlaceholder) {
                field.captionWithPlaceholder = field.caption;
            }
            // in case of grouped fields, caption is missing
            if (field.caption) {
                // replace placeholder in fileds caption
                if (field.captionWithPlaceholder.indexOf("<XTS>") > -1) {
                    field.caption = field.caption.replace("<XTS>", stateData.settings.currency.Code);
                }
                if (field.captionWithPlaceholder.indexOf("<UNIT>") > -1) {
                    field.caption = field.caption.replace("<UNIT>", stateData.settings.unitOfMass.Name);
                }
                if (field.captionWithPlaceholder.indexOf("<UNIT-VOLUME>") > -1) {
                    field.caption = field.caption.replace("<UNIT-VOLUME>", stateData.settings.unitOfVolume.Name);
                }
                // in case field is data field do not allow drop other kind of fields to data area or data area field to row, col. or filter area
                if (Object.values(src_model_enums_pivotGridDataFieldType_enum__WEBPACK_IMPORTED_MODULE_0__.PivotGridDataFieldType).includes(field.dataFieldType) || field.isMeasure) {
                    field.isMeasure = true;
                }
                else {
                    field.isMeasure = false;
                }
            }
            else {
                field.isMeasure = false;
            }
        }
    }
}


/***/ }),

/***/ 49516:
/*!****************************************!*\
  !*** ./src/guard/error.interceptor.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ErrorInterceptor": () => (/* binding */ ErrorInterceptor)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 25474);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 53158);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);





class ErrorInterceptor {
    constructor(route, localStorageService) {
        this.route = route;
        this.localStorageService = localStorageService;
    }
    intercept(request, next) {
        this.localStorageService.setData(this.route.url, "URL");
        return next.handle(request).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.catchError)((err) => {
            if (err.status === 401) {
                // auto logout if 401 response returned from api
                //   location.reload();
                this.route.navigate(['login']);
            }
            // const error = err.error.Message || err.statusText;
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.throwError)(err);
        }));
    }
}
ErrorInterceptor.ɵfac = function ErrorInterceptor_Factory(t) { return new (t || ErrorInterceptor)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_0__.LocalStorageService)); };
ErrorInterceptor.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: ErrorInterceptor, factory: ErrorInterceptor.ɵfac });


/***/ }),

/***/ 16082:
/*!**************************************!*\
  !*** ./src/guard/jwt.interceptor.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JwtInterceptor": () => (/* binding */ JwtInterceptor)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/services/localStorage.service */ 51045);



class JwtInterceptor {
    constructor(localStorageService) {
        this.localStorageService = localStorageService;
    }
    intercept(request, next) {
        // add authorization header with jwt token if available
        const currentUserData = this.localStorageService.getData(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.userDataKey);
        if (currentUserData) {
            if (request.url.indexOf(src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.serverEndpoint) !== -1) {
                request = request.clone({
                    setHeaders: {
                        Authorization: `Bearer ${currentUserData.idToken}`,
                    },
                });
            }
        }
        return next.handle(request);
    }
}
JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) { return new (t || JwtInterceptor)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](src_services_localStorage_service__WEBPACK_IMPORTED_MODULE_1__.LocalStorageService)); };
JwtInterceptor.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: JwtInterceptor, factory: JwtInterceptor.ɵfac });


/***/ }),

/***/ 14431:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 50318);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 36747);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ 92340);




if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.enableProdMode)();
}
_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.platformBrowser().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule)
    .catch(err => console.error(err));


/***/ }),

/***/ 48168:
/*!**************************************************!*\
  !*** ./src/model/dataGridConfiguration.model.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BasicSettings": () => (/* binding */ BasicSettings),
/* harmony export */   "DataGridConfiguration": () => (/* binding */ DataGridConfiguration),
/* harmony export */   "Field": () => (/* binding */ Field),
/* harmony export */   "HandsOnTableSettings": () => (/* binding */ HandsOnTableSettings)
/* harmony export */ });
class DataGridConfiguration {
    constructor() {
        this.basicSettings = new BasicSettings();
        this.handontableSettings = new HandsOnTableSettings();
        this.fields = [new Field()];
    }
}
class BasicSettings {
    constructor() {
        this.title = '';
    }
}
class HandsOnTableSettings {
    constructor() {
        this.dropdownMenu = false;
        this.filters = false;
        this.columnSorting = false;
        this.copyPaste = false;
        this.decimalPlaces = 2;
    }
}
class Field {
    constructor() {
        this.isVisible = true;
        this.isYearValue = false;
        this.caption = '';
        this.dataField = '';
        this.width = 150;
        this.formula = '';
        this.isValue = false;
        this.dataType = '';
        this.fieldType = '';
        this.readOnly = false;
        this.yearType = [];
        this.isVisibleToAddRow = true;
        this.isVolumeYear = false;
        this.isYearWiseVolume = false;
        this.isForecastVolume = false;
        this.isEditable = true;
    }
}


/***/ }),

/***/ 97948:
/*!******************************************!*\
  !*** ./src/model/dataGridState.model.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataGridState": () => (/* binding */ DataGridState)
/* harmony export */ });
class DataGridState {
    constructor() {
        this.isPercentOfTotal = false;
        this.isChangePercent = false;
        this.isCagr = false;
        this.filters = [];
        this.sorting = [];
        this.columnResize = [];
    }
}


/***/ }),

/***/ 83684:
/*!***********************************************!*\
  !*** ./src/model/dataSourceResponse.model.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AttributeList": () => (/* binding */ AttributeList),
/* harmony export */   "ColumnList": () => (/* binding */ ColumnList),
/* harmony export */   "DataList": () => (/* binding */ DataList),
/* harmony export */   "DataSourceData": () => (/* binding */ DataSourceData),
/* harmony export */   "DataSourceResponse": () => (/* binding */ DataSourceResponse),
/* harmony export */   "UnitOfValues": () => (/* binding */ UnitOfValues),
/* harmony export */   "YearsList": () => (/* binding */ YearsList)
/* harmony export */ });
/* harmony import */ var _dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataGridConfiguration.model */ 48168);
/* harmony import */ var _initialSetup_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./initialSetup.model */ 56943);


class DataSourceResponse {
    constructor() {
        this.HttpStatusCode = 200;
        this.Data = new DataSourceData();
    }
}
class DataSourceData {
    constructor() {
        this.MarketYearCategoryId = 0;
        this.StudySetup = new _initialSetup_model__WEBPACK_IMPORTED_MODULE_1__.InitialSetup();
        this.HasAttribute = false;
        this.Settings = new _dataGridConfiguration_model__WEBPACK_IMPORTED_MODULE_0__.DataGridConfiguration();
        this.UnitOfValues = [];
        this.ColumnList = [new ColumnList()];
        this.YearsList = [new YearsList()];
        this.DataList = [];
    }
}
class UnitOfValues {
    constructor() {
        this.Title = '';
        this.Unit = '';
        this.Id = 0;
    }
}
class ColumnList {
    constructor() {
        this.Title = '';
        this.Index = 0;
        this.IsVisible = true;
    }
}
class YearsList {
    constructor() {
        this.Year = '';
        this.Type = '';
        this.Index = 0;
        this.AttributeList = [];
    }
}
class AttributeList {
    constructor() {
        this.Title = '';
        this.Index = 0;
    }
}
class DataList {
    constructor() {
        this.ColumnsData = [];
        this.YearsData = [];
        this.DataRowId = '';
        this.ChangeLog = null;
        this.IsNewRow = false;
    }
}


/***/ }),

/***/ 55513:
/*!*********************************************!*\
  !*** ./src/model/dropdownCurrency.model.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownCurrency": () => (/* binding */ DropdownCurrency)
/* harmony export */ });
class DropdownCurrency {
}


/***/ }),

/***/ 29718:
/*!******************************************!*\
  !*** ./src/model/dropdownUnits.model.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DropdownUnits": () => (/* binding */ DropdownUnits)
/* harmony export */ });
class DropdownUnits {
}


/***/ }),

/***/ 76370:
/*!*****************************************************!*\
  !*** ./src/model/enums/calculatedFieldType.enum.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalculatedFieldType": () => (/* binding */ CalculatedFieldType)
/* harmony export */ });
var CalculatedFieldType;
(function (CalculatedFieldType) {
    CalculatedFieldType["none"] = "none";
    CalculatedFieldType["percentOfTotal"] = "% Of Total";
    CalculatedFieldType["percentOfGrandTotal"] = "% Of Grand Total";
    CalculatedFieldType["changePercent"] = "Change, %";
    CalculatedFieldType["cagr"] = "CAGR";
    CalculatedFieldType["range"] = "range";
})(CalculatedFieldType || (CalculatedFieldType = {}));


/***/ }),

/***/ 11892:
/*!***********************************************!*\
  !*** ./src/model/enums/computingType.enum.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComputingType": () => (/* binding */ ComputingType)
/* harmony export */ });
var ComputingType;
(function (ComputingType) {
    ComputingType["FirstYear"] = "First (Shown) Year";
    ComputingType["PreviousYear"] = "Previous (Shown) Year";
})(ComputingType || (ComputingType = {}));


/***/ }),

/***/ 79995:
/*!********************************************************!*\
  !*** ./src/model/enums/currencyConversionType.enum.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CurrencyConversionTypeEnum": () => (/* binding */ CurrencyConversionTypeEnum)
/* harmony export */ });
var CurrencyConversionTypeEnum;
(function (CurrencyConversionTypeEnum) {
    CurrencyConversionTypeEnum[CurrencyConversionTypeEnum["Current"] = 2] = "Current";
    CurrencyConversionTypeEnum[CurrencyConversionTypeEnum["Constant"] = 1] = "Constant";
})(CurrencyConversionTypeEnum || (CurrencyConversionTypeEnum = {}));


/***/ }),

/***/ 29368:
/*!***********************************************!*\
  !*** ./src/model/enums/dataFieldArea.enum.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataFieldArea": () => (/* binding */ DataFieldArea)
/* harmony export */ });
var DataFieldArea;
(function (DataFieldArea) {
    DataFieldArea["row"] = "row";
    DataFieldArea["column"] = "column";
})(DataFieldArea || (DataFieldArea = {}));


/***/ }),

/***/ 89292:
/*!***********************************************!*\
  !*** ./src/model/enums/dataRelations.enum.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DataRelationsEnum": () => (/* binding */ DataRelationsEnum)
/* harmony export */ });
var DataRelationsEnum;
(function (DataRelationsEnum) {
    DataRelationsEnum["EngineOilType"] = "EngineOilType";
    DataRelationsEnum["SubProduct"] = "SubProduct";
    DataRelationsEnum["MarketSegment"] = "MarketSegment";
    DataRelationsEnum["ProductCategory"] = "ProductCategory";
    DataRelationsEnum["ViscosityGrade"] = "ViscosityGrade";
    DataRelationsEnum["VehicleType"] = "VehicleType";
    DataRelationsEnum["Segment"] = "Segment";
    DataRelationsEnum["SyntheticType"] = "SyntheticType";
    DataRelationsEnum["Supplier"] = "Supplier";
    DataRelationsEnum["ServiceCategory"] = "ServiceCategory";
    DataRelationsEnum["SourceType"] = "SourceType";
    DataRelationsEnum["EngineType"] = "EngineType";
    DataRelationsEnum["DosageForm"] = "DosageForm";
    DataRelationsEnum["ExcipientCategory"] = "ExcipientCategory";
    DataRelationsEnum["ExcipientGroup"] = "ExcipientGroup";
    DataRelationsEnum["Excipient"] = "Excipient";
    DataRelationsEnum["Company"] = "Company";
    DataRelationsEnum["Brand"] = "Brand";
    DataRelationsEnum["Channel"] = "Channel";
    DataRelationsEnum["ProductType"] = "ProductType";
    DataRelationsEnum["Service"] = "Service";
    DataRelationsEnum["Outlet"] = "Outlet";
    DataRelationsEnum["ProductClassification"] = "ProductClassification";
    DataRelationsEnum["Channels"] = "Channels";
    DataRelationsEnum["CustomerTypes"] = "CustomerTypes";
    DataRelationsEnum["ProductTypes"] = "ProductTypes";
    DataRelationsEnum["Sectors"] = "Sectors";
    DataRelationsEnum["Suppliers"] = "Suppliers";
    DataRelationsEnum["Segments"] = "Segments";
    DataRelationsEnum["DosageForms"] = "DosageForms";
    DataRelationsEnum["Functionality"] = "Functionality";
    DataRelationsEnum["MasterBrand"] = "MasterBrand";
    DataRelationsEnum["CustomerType"] = "CustomerType";
    DataRelationsEnum["Sector"] = "Sector";
    DataRelationsEnum["Polymer"] = "Polymer";
    DataRelationsEnum["LubricantDemand"] = "LubricantDemand";
    DataRelationsEnum["SupplierMarketShare"] = "SupplierMarketShare";
    DataRelationsEnum["SyntheticPenetration"] = "Synthetic Penetration";
    DataRelationsEnum["VehicleParcStatistics"] = "Vehicle Parc Statistics";
    DataRelationsEnum["ServiceCategoryConsumption"] = "Service Category Consumption";
    DataRelationsEnum["OSDFPharmaSales"] = "OSDF-Pharma-Sales";
    DataRelationsEnum["ParenteralPharmaSales"] = "Parenteral-Pharma-Sales";
    DataRelationsEnum["TopicalPharmaSales"] = "Topical-Pharma-Sales";
    DataRelationsEnum["OSDFNutraceuticalsSales"] = "OSDF-Nutraceuticals-Sales";
    DataRelationsEnum["ProductSales"] = "ProductSales";
    DataRelationsEnum["Product"] = "Product";
    DataRelationsEnum["ProductForm"] = "ProductForm";
    DataRelationsEnum["ActiveIngredient"] = "ActiveIngredient";
    DataRelationsEnum["ProductComposition"] = "ProductComposition";
})(DataRelationsEnum || (DataRelationsEnum = {}));


/***/ }),

/***/ 73850:
/*!********************************************************!*\
  !*** ./src/model/enums/pivotGridDataFieldType.enum.ts ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PivotGridDataFieldType": () => (/* binding */ PivotGridDataFieldType)
/* harmony export */ });
var PivotGridDataFieldType;
(function (PivotGridDataFieldType) {
    PivotGridDataFieldType["Value"] = "Value";
    PivotGridDataFieldType["Volume"] = "Volume";
    PivotGridDataFieldType["Unit"] = "Unit";
    PivotGridDataFieldType["AvgPrice"] = "AvgPrice";
    PivotGridDataFieldType["AvgPrice100PercentBasis"] = "AvgPrice100PercentBasis";
    PivotGridDataFieldType["Concentration"] = "Concentration";
    PivotGridDataFieldType["Mass"] = "Mass";
    PivotGridDataFieldType["MeasuresProjectedTransactionCount"] = "MeasuresProjectedTransactionCount";
    PivotGridDataFieldType["MeasuresProjectedRevenue"] = "MeasuresProjectedRevenue";
    PivotGridDataFieldType["AvgPrice100PercentActive"] = "AvgPrice100PercentActive";
})(PivotGridDataFieldType || (PivotGridDataFieldType = {}));


/***/ }),

/***/ 59591:
/*!**************************************************!*\
  !*** ./src/model/enums/specialValueType.enum.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpecialValueType": () => (/* binding */ SpecialValueType)
/* harmony export */ });
var SpecialValueType;
(function (SpecialValueType) {
    SpecialValueType["Null"] = "";
    SpecialValueType["NegativeZero"] = "-0";
    SpecialValueType["Infinity"] = "\u221E";
    SpecialValueType["NegativeInfinity"] = "-\u221E";
    SpecialValueType["NotANumber"] = "NaN";
    SpecialValueType["Error"] = "Error";
    SpecialValueType["NA"] = "N/A";
    SpecialValueType["Disparate"] = "...[+]";
    SpecialValueType["Insignificant"] = "Insignificant";
    SpecialValueType["Marginal"] = "Marginal";
    SpecialValueType["Minor"] = "Minor";
    SpecialValueType["Bullet"] = "\u2022";
    SpecialValueType["Ellipsis"] = "\u2026";
    SpecialValueType["EmDash"] = "\u2014";
    SpecialValueType["DashDashDash"] = "---";
    SpecialValueType["ReservedValue1"] = "Reserved Value 1";
    SpecialValueType["ReservedValue2"] = "Reserved Value 2";
})(SpecialValueType || (SpecialValueType = {}));


/***/ }),

/***/ 3620:
/*!**********************************************!*\
  !*** ./src/model/enums/studyDataUrl.enum.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyDataUrlEnum": () => (/* binding */ StudyDataUrlEnum)
/* harmony export */ });
var StudyDataUrlEnum;
(function (StudyDataUrlEnum) {
    StudyDataUrlEnum["SHC_PT_SALES"] = "/SHCProductTypeSales/ProductTypeSales";
    StudyDataUrlEnum["SHC_CB_SALES"] = "/SHCCompanyBrandSales/CompanyBrandSales";
    StudyDataUrlEnum["SHC_FC_SALES"] = "/SHCForecastSales/ForecastSales";
    StudyDataUrlEnum["SHC_IR_SALES"] = "/SHCIndustryRevenues/IndustryRevenues";
    StudyDataUrlEnum["SHC_OS_SALES"] = "/SHCOutletSales/OutletSales";
    StudyDataUrlEnum["SHC_PC_SALES"] = "/SHCProductClassificationSales/ProductClassificationSales";
    StudyDataUrlEnum["SHC_SC_SALES"] = "/SHCSalonCount/SalonCount";
    StudyDataUrlEnum["IVM_SALES"] = "/IVMProductSales/IVMProductSales";
    StudyDataUrlEnum["IVM_MarketConsumption"] = "/IVMProductComposition/IVMProductComposition";
    StudyDataUrlEnum["EHC_SALES"] = "/SalesEHC/Sales";
    StudyDataUrlEnum["EHC_MC"] = "/MarketConsumptionEHC/MarketConsumption";
    StudyDataUrlEnum["Lubesnet_LD"] = "/LubricantDemand/LubricantDemand";
    StudyDataUrlEnum["Lubesnet_SMS"] = "/SupplierMarketShare/SupplierMarketShare";
    StudyDataUrlEnum["Lubesnet_SP"] = "/SyntheticPenetration/SyntheticPenetration";
    StudyDataUrlEnum["Lubesnet_VPS"] = "/VehicleParc/VehicleParc";
    StudyDataUrlEnum["Lubesnet_SCC"] = "/ServiceCategoryConsumption/ServiceCategoryConsumption";
    StudyDataUrlEnum["SE_SALES"] = "/SpecialtyExcipientSales/SpecialtyExcipients";
    StudyDataUrlEnum["SE_AVG_PRICE"] = "/SpecialtyExcipientAvgPrice/SpecialtyExcipientAvgPrice";
    StudyDataUrlEnum["PNC_PT_SALES"] = "/PNCProductType/ProductTypeSales";
})(StudyDataUrlEnum || (StudyDataUrlEnum = {}));


/***/ }),

/***/ 56943:
/*!*****************************************!*\
  !*** ./src/model/initialSetup.model.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "InitialSetup": () => (/* binding */ InitialSetup)
/* harmony export */ });
class InitialSetup {
    deserialize(input) {
        Object.assign(this, input);
        return this;
    }
}


/***/ }),

/***/ 67807:
/*!*********************************************!*\
  !*** ./src/model/pivotGridOptions.model.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalculatedFields": () => (/* binding */ CalculatedFields),
/* harmony export */   "Charts": () => (/* binding */ Charts),
/* harmony export */   "CubeSettings": () => (/* binding */ CubeSettings),
/* harmony export */   "DefaultPivotValues": () => (/* binding */ DefaultPivotValues),
/* harmony export */   "Export": () => (/* binding */ Export),
/* harmony export */   "Field": () => (/* binding */ Field),
/* harmony export */   "FieldPanelSettings": () => (/* binding */ FieldPanelSettings),
/* harmony export */   "Format": () => (/* binding */ Format),
/* harmony export */   "GroupedField": () => (/* binding */ GroupedField),
/* harmony export */   "MenuSettings": () => (/* binding */ MenuSettings),
/* harmony export */   "PivotGridOptions": () => (/* binding */ PivotGridOptions),
/* harmony export */   "PivotGridSource": () => (/* binding */ PivotGridSource),
/* harmony export */   "PivotGridTextKeys": () => (/* binding */ PivotGridTextKeys),
/* harmony export */   "ReducedDataSource": () => (/* binding */ ReducedDataSource),
/* harmony export */   "Settings": () => (/* binding */ Settings),
/* harmony export */   "SpecialSorting": () => (/* binding */ SpecialSorting)
/* harmony export */ });
/* harmony import */ var _enums_currencyConversionType_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums/currencyConversionType.enum */ 79995);
/* harmony import */ var _enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enums/calculatedFieldType.enum */ 76370);


class PivotGridOptions {
    constructor() {
        this.viewId = 0;
        this.databaseId = 0;
        this.industryId = 0;
        this.settings = new Settings();
        this.pivotGridSource = new PivotGridSource();
        this.pivotGridDefaultValues = new DefaultPivotValues();
        this.canSaveUserState = true;
        this.canSaveDefaultStateAndOptions = false;
    }
}
class Settings {
    constructor() {
        this.pivotGridTextKeys = new PivotGridTextKeys();
        this.fieldPanelSettings = new FieldPanelSettings();
        this.export = new Export();
        this.charts = new Charts();
        this.calculatedFields = new CalculatedFields();
        this.allowSorting = true;
        this.allowSortingBySummary = true;
        this.allowFiltering = true;
        this.allowExpandAll = true;
        this.showBorders = true;
        this.showColumnGrandTotals = true;
        this.showRowGrandTotals = true;
        this.showRowTotals = true;
        this.showColumnTotals = true;
        this.fieldChooser = true;
        this.showTotalsPrior = 'both';
        this.scroolingMode = 'virtual';
        this.useNative = false;
        this.scrollByContent = false;
        this.menuSettings = new MenuSettings();
        this.specialSorting = [];
        this.rowHeaderLayout = 'standard';
        this.isLatestAccessibleYearUsed = true;
        this.showRangeInYearSelectionButton = false;
        this.reducedDataSource = new ReducedDataSource();
        this.useDefaultSorting = false;
        this.isCube = false;
        this.cubeSettings = new CubeSettings();
        this.groupedFields = [];
    }
}
class PivotGridTextKeys {
    constructor() {
        this.pivotHeader = '';
        this.pivotDescription = '';
        this.pivotCurrencyHeader = 'KEY_PivotGrid_DefaultText_Currency';
        this.pivotConversionHeader = 'KEY_PivotGrid_DefaultText_CurrencyConversionType';
        this.pivotUnitsOfVolumeHeader = 'KEY_PivotGrid_DefaultText_UnitsOfVolume';
        this.pivotUnitsOfMassHeader = 'KEY_PivotGrid_DefaultText_UnitsOfMass';
        this.pivotParametersHeader = 'KEY_PivotGrid_DefaultText_Parameters';
        this.pivotYearsHeader = 'KEY_PivotGrid_DefaultText_BasePeriod';
        this.pivotNoDataMessage = 'KEY_PivotGrid_DefaultText_MissingData';
    }
}
class SpecialSorting {
    constructor() {
        this.fieldName = '';
        this.beginningWith = '';
    }
}
class ReducedDataSource {
    constructor() {
        this.isReducedDataSource = false;
        this.selectedYearAfter = 5;
    }
}
class FieldPanelSettings {
    constructor() {
        this.visible = true;
        this.showColumnFields = true;
        this.showDataFields = true;
        this.showFilterFields = true;
        this.showRowFields = true;
        this.allowFieldDragging = true;
    }
}
class Export {
    constructor() {
        this.enabled = true;
        this.ignoreExcelErrors = true;
        this.fileName = 'KlineExcelExport';
    }
}
class CalculatedFields {
    constructor() {
        this.formatPrecision = 1;
        this.isPercentOfTotal = true;
        this.isPercentOfChange = true;
        this.isCagr = true;
    }
}
class Charts {
    constructor() {
        this.isVisible = false;
        this.isRotated = false;
        this.inverted = false;
        this.alternateDataFields = true;
        this.putDataFieldsInto = 'series';
    }
}
class PivotGridSource {
    constructor() {
        this.fields = [];
        this.store = null;
    }
}
class Format {
    constructor() {
        this.type = '';
        this.precision = 0;
    }
}
class Field {
    constructor() {
        this.id = 0;
        this.visible = true;
        this.caption = '';
        this.captionWithPlaceholder = '';
        this.width = 0;
        this.dataField = '';
        this.area = '';
        this.dataType = '';
        this.summaryType = '';
        this.summaryDisplayMode = '';
        this.calculateCustomSummary = undefined;
        this.calculateSummaryValue = undefined;
        this.isMeasure = false;
        this.isCalculated = false;
        this.calculatedFieldType = _enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_1__.CalculatedFieldType.none;
        this.hiddenFilterType = undefined;
    }
}
class GroupedField {
    constructor() {
        this.groupName = '';
        this.area = '';
    }
}
class DefaultPivotValues {
    constructor() {
        this.currency = {
            Id: 27,
            IsActive: false,
            Name: 'USD',
            CurrencyCode: 'USD',
            CurrencyName: 'USD',
            Code: 'USD',
        };
        this.currencyConversionType = _enums_currencyConversionType_enum__WEBPACK_IMPORTED_MODULE_0__.CurrencyConversionTypeEnum.Constant;
        // latest accessible year and unit of measure must load from the database
    }
}
class MenuSettings {
    constructor() {
        this.isChart = true;
        this.isCurrencySelection = true;
        this.isCurrencyConversion = true;
        this.isUnitsOfVolume = false;
        this.isUnitsOfMass = true;
        this.isYear = true;
        this.isCalculatedFieldsSelection = true;
        this.isParametersSelection = false;
    }
}
class CubeSettings {
    constructor() {
        this.catalog = 'KlinePro_US_Test';
        this.cube = 'RetailProjected';
    }
}


/***/ }),

/***/ 58101:
/*!*********************************************!*\
  !*** ./src/model/studyAreaSummary.model.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyAreaSummary": () => (/* binding */ StudyAreaSummary)
/* harmony export */ });
class StudyAreaSummary {
    constructor() {
        this.IsChanged = false;
        this.IsSignOff = false;
        this.IsLatestStudy = false;
        this.IsProjectLead = false;
        this.ProjectLeadId = 0;
        this.LockedForEditBy = 0;
    }
    deserialize(input) {
        Object.assign(this, input);
        return this;
    }
}


/***/ }),

/***/ 30203:
/*!***************************************!*\
  !*** ./src/model/userDetail.model.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserDetail": () => (/* binding */ UserDetail)
/* harmony export */ });
class UserDetail {
    deserialize(input) {
        Object.assign(this, input);
        return this;
    }
}


/***/ }),

/***/ 69893:
/*!**************************************************!*\
  !*** ./src/model/userStateAndSetttings.model.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CagrState": () => (/* binding */ CagrState),
/* harmony export */   "ChangePercentState": () => (/* binding */ ChangePercentState),
/* harmony export */   "CurrencyDropdown": () => (/* binding */ CurrencyDropdown),
/* harmony export */   "PercentOfTotalState": () => (/* binding */ PercentOfTotalState),
/* harmony export */   "UnitDropdown": () => (/* binding */ UnitDropdown),
/* harmony export */   "UserChartSetting": () => (/* binding */ UserChartSetting),
/* harmony export */   "UserSettings": () => (/* binding */ UserSettings),
/* harmony export */   "UserStateAndSetttings": () => (/* binding */ UserStateAndSetttings)
/* harmony export */ });
/* harmony import */ var _enums_computingType_enum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums/computingType.enum */ 11892);

// import { BasePeriodDropdown } from './basePeriodDropdown.model';
class UserStateAndSetttings {
    constructor() {
        this.settings = new UserSettings();
    }
}
class UserChartSetting {
    constructor() {
        this.dataFieldsDisplayMode = 'singleAxis';
        this.chartType = 'Column';
    }
}
class UserSettings {
    constructor() {
        this.currencyConversionType = undefined;
        this.selectedYear = undefined;
        this.percentOfTotalState = new PercentOfTotalState();
        this.changePercentState = new ChangePercentState();
        this.cagrState = new CagrState();
        this.dataFieldArea = 'column';
        this.userChartSetting = new UserChartSetting();
        this.isReducedDataSource = false;
        this.rememberLatestState = undefined;
    }
}
class CurrencyDropdown {
    constructor() {
        this.Id = 0;
        this.Code = '';
        this.Name = '';
    }
}
class UnitDropdown {
}
class PercentOfTotalState {
    constructor() {
        this.isSet = false;
        this.basedOn = 'Subtotals';
        this.summaryDisplayMode = 'percentOfColumnTotal';
    }
}
class ChangePercentState {
    constructor() {
        this.isSet = false;
        this.computingType = _enums_computingType_enum__WEBPACK_IMPORTED_MODULE_0__.ComputingType.FirstYear;
    }
}
class CagrState {
    constructor() {
        this.isSet = false;
        this.computingType = _enums_computingType_enum__WEBPACK_IMPORTED_MODULE_0__.ComputingType.FirstYear;
    }
}


/***/ }),

/***/ 57337:
/*!********************************************!*\
  !*** ./src/services/calculator.service.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CalculatorService": () => (/* binding */ CalculatorService)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);



class CalculatorService {
    constructor(http) {
        this.http = http;
        this.apiEndpoint = '';
        this.apiEndpoint = src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.apiEndpoint;
    }
    getAllInputsByCalculatorId(calculatorId) {
        return this.http.get(this.apiEndpoint +
            '/Calculator/GetAllInputsByCalculatorId/' +
            calculatorId +
            '/');
    }
    getCalculatorDataById(calculatorId) {
        return this.http.get(this.apiEndpoint +
            '/Calculator/getCalculatorDataById/' +
            calculatorId +
            '/');
    }
    getComputedDefaultValues(inputs, pageNumber) {
        let inp = {
            calculatorInputs: inputs,
            pageNumber: pageNumber,
            type: 'precalculated',
        };
        return this.http.post(this.apiEndpoint + '/Calculator/', inp);
    }
    getComponentDataByInputs(inputs, totalVolume, totalSales) {
        let inp = {
            calculatorInputs: inputs,
            pageNumber: 0,
            type: 'final',
            totalVolume: totalVolume,
            totalSalesPrice: totalSales,
        };
        return this.http.post(this.apiEndpoint + '/Calculator/', inp);
    }
}
CalculatorService.ɵfac = function CalculatorService_Factory(t) { return new (t || CalculatorService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
CalculatorService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CalculatorService, factory: CalculatorService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 23115:
/*!****************************************!*\
  !*** ./src/services/common.service.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CommonService": () => (/* binding */ CommonService)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/model/enums/calculatedFieldType.enum */ 76370);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);




class CommonService {
    constructor(http) {
        this.http = http;
        this.apiEndpoint = '';
        this.apiEndpoint = src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.apiEndpoint;
    }
    getCalculatorFields() {
        return [
            {
                name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_1__.CalculatedFieldType.percentOfTotal,
                value: 'percentOfTotal',
                isCheck: false,
                icon: '',
                formula: '=CONCATENATE(IF(SUM(colStaticColName1: colStaticColNameTOTAL_ROWS), ROUND((colStaticColNameROW_NO / SUM(colStaticColName1: colStaticColNameTOTAL_ROWS)) * 100, 1), 0))',
            },
            {
                name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_1__.CalculatedFieldType.changePercent,
                value: 'changePercent',
                isCheck: false,
                icon: '',
                formula: '=CONCATENATE(IF(AND(colStaticColNameROW_NO > 0, COL_PREVIOUS_VALUEROW_NO > 0), ROUND(((colStaticColNameROW_NO - COL_PREVIOUS_VALUEROW_NO) / COL_PREVIOUS_VALUEROW_NO) * 100, 1), 0))',
            },
            {
                name: src_model_enums_calculatedFieldType_enum__WEBPACK_IMPORTED_MODULE_1__.CalculatedFieldType.cagr,
                value: 'cagr',
                isCheck: false,
                icon: '',
                formula: '=CONCATENATE(IF(AND(colStaticColNameROW_NO > 0, COL_PREVIOUS_VALUEROW_NO > 0), ROUND((POWER(colStaticColNameROW_NO / COL_PREVIOUS_VALUEROW_NO, 1 / NO_YEAR) - 1) * 100, 1), 0))',
            },
        ];
    }
    getResetToDefaultOptions() {
        return [
            {
                name: "Reset All",
                value: 'ResetAll',
            },
            {
                name: "Reset Data",
                value: 'ResetData',
            },
            {
                name: "Reset State",
                value: 'ResetState',
            },
            {
                name: "Reset Calculated Fields",
                value: 'ResetCalculatedFields',
            },
        ];
    }
    getColumnReferences() {
        return [
            'A',
            'B',
            'C',
            'D',
            'E',
            'F',
            'G',
            'H',
            'I',
            'J',
            'K',
            'L',
            'M',
            'N',
            'O',
            'P',
            'Q',
            'R',
            'S',
            'T',
            'U',
            'V',
            'W',
            'X',
            'Y',
            'Z',
            'AA',
            'AB',
            'AC',
            'AD',
            'AE',
            'AF',
            'AG',
            'AH',
            'AI',
            'AJ',
            'AK',
            'AL',
            'AM',
            'AN',
            'AO',
            'AP',
            'AQ',
            'AR',
            'AS',
            'AT',
            'AU',
            'AV',
            'AW',
            'AX',
            'AY',
            'AZ',
            'BA',
            'BB',
            'BC',
            'BD',
            'BE',
            'BF',
            'BG',
            'BH',
            'BI',
            'BJ',
            'BK',
            'BL',
            'BM',
            'BN',
            'BO',
            'BP',
            'BQ',
            'BR',
            'BS',
            'BT',
            'BU',
            'BV',
            'BW',
            'BX',
            'BY',
            'BZ',
        ];
    }
    calculateCAGRPercentage(startValue, endValue, year) {
        let cargPer = '';
        if (startValue && endValue && year) {
            const cagr = Math.pow(endValue / startValue, 1 / year) - 1;
            cargPer = (cagr * 100).toFixed(1);
        }
        return +cargPer;
    }
    calculateTotalPercentage(total, value) {
        return value > 0 && total > 0 ? +((value / total) * 100).toFixed(1) : 0;
    }
    calculatePercentageChange(startValue, endValue) {
        let perChange = 0;
        if (startValue && endValue) {
            perChange = +(((endValue - startValue) / startValue) * 100).toFixed(1);
        }
        return +perChange;
    }
    checkDuplicateRow(list, columns, newRow) {
        let duplicateCount = 0;
        let duplicateRow = false;
        list.forEach((node) => {
            duplicateCount = 0;
            let columnData = node['ColumnsData'];
            let newRowColumnData = newRow['ColumnsData'];
            columns.forEach((item) => {
                if (columnData[item] === newRowColumnData[item]) {
                    duplicateCount++;
                }
            });
            if (duplicateCount == columns.length) {
                duplicateRow = true;
                return;
            }
        });
        if (duplicateRow) {
            return columns;
        }
        else {
            return;
        }
    }
    getDataViewOptions() {
        return [
            {
                name: "Display Values",
                value: 'DisplayValues',
            },
            {
                name: "Display Formula",
                value: 'DisplayFormula',
            }
        ];
    }
}
CommonService.ɵfac = function CommonService_Factory(t) { return new (t || CommonService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient)); };
CommonService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: CommonService, factory: CommonService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 51045:
/*!**********************************************!*\
  !*** ./src/services/localStorage.service.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LocalStorageService": () => (/* binding */ LocalStorageService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);

class LocalStorageService {
    constructor() { }
    setData(data, key) {
        try {
            localStorage.setItem(key, JSON.stringify(data));
        }
        catch (_a) { }
    }
    getData(key) {
        try {
            return JSON.parse(localStorage.getItem(key) || '{}');
        }
        catch (_a) { }
    }
    deleteData(key) {
        try {
            return localStorage.removeItem(key);
        }
        catch (_a) { }
    }
    clearLocalStorage() {
        try {
            return localStorage.clear();
        }
        catch (_a) { }
    }
    getAllLocalStorageData() {
        try {
            return localStorage;
        }
        catch (_a) { }
    }
}
LocalStorageService.ɵfac = function LocalStorageService_Factory(t) { return new (t || LocalStorageService)(); };
LocalStorageService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: LocalStorageService, factory: LocalStorageService.ɵfac });


/***/ }),

/***/ 34235:
/*!***********************************************!*\
  !*** ./src/services/pending-changes.guard.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PendingChangesGuard": () => (/* binding */ PendingChangesGuard)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 10745);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 80155);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _pending_changes_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pending-changes.service */ 12165);




class PendingChangesGuard {
    constructor(service) {
        this.service = service;
    }
    canDeactivate(component) {
        if (!!component.canDeactivate()) {
            this.service.closeConfirmation();
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.of)(true);
        }
        this.service.openConfirmation();
        return this.service.confirmed$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.first)(v => v !== null));
    }
}
PendingChangesGuard.ɵfac = function PendingChangesGuard_Factory(t) { return new (t || PendingChangesGuard)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_pending_changes_service__WEBPACK_IMPORTED_MODULE_0__.PendingChangesService)); };
PendingChangesGuard.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: PendingChangesGuard, factory: PendingChangesGuard.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 12165:
/*!*************************************************!*\
  !*** ./src/services/pending-changes.service.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PendingChangesService": () => (/* binding */ PendingChangesService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


class PendingChangesService {
    constructor() {
        this.confirmed$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(null);
        this.askForConfirmation$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.BehaviorSubject(false);
        this.pendingChanges = false;
    }
    openConfirmation() {
        // cancel possible previous confirmation states
        this.confirmed$.next(null);
        // trigger opening dialog
        this.askForConfirmation$.next(true);
    }
    closeConfirmation() {
        // cancel possible previous confirmation states
        this.confirmed$.next(null);
        // close dialog
        this.askForConfirmation$.next(false);
    }
    confirm() {
        // confirm navigation
        this.confirmed$.next(true);
        // close dialog
        this.askForConfirmation$.next(false);
        this.pendingChanges = false;
    }
    setPendingChanges(pendingChange) {
        this.pendingChanges = pendingChange;
    }
    getTableDirtyFlag() {
        return this.pendingChanges;
    }
    cancel() {
        // cancel navigation
        this.confirmed$.next(false);
        // close dialog
        this.askForConfirmation$.next(false);
    }
    ngOnDestroy() {
        this.pendingChanges = false;
    }
}
PendingChangesService.ɵfac = function PendingChangesService_Factory(t) { return new (t || PendingChangesService)(); };
PendingChangesService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: PendingChangesService, factory: PendingChangesService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 64796:
/*!******************************************!*\
  !*** ./src/services/settings.service.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingsService": () => (/* binding */ SettingsService)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);



class SettingsService {
    constructor(http) {
        this.http = http;
        this.apiEndpoint = '';
        this.apiEndpoint = src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.apiEndpoint;
    }
    getDataGridSettings(dataItemCategoryId) {
        return this.http
            .get(`${this.apiEndpoint}/Configuration/GetDataGridSettings?dataItemCategoryId=${dataItemCategoryId}`, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }
    getStudyDatasetAndCategories() {
        return this.http
            .get(`${this.apiEndpoint}/Configuration/GetStudyDatasetAndCategories`, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }
    saveDataGridSettings(dataItemCategoryId, dataJson) {
        const body = {
            dataJson,
            dataItemCategoryId
        };
        return this.http
            .put(`${this.apiEndpoint}/Configuration/Configuration`, body, {
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }
}
SettingsService.ɵfac = function SettingsService_Factory(t) { return new (t || SettingsService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
SettingsService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: SettingsService, factory: SettingsService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 74255:
/*!****************************************!*\
  !*** ./src/services/shared.service.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SharedService": () => (/* binding */ SharedService)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);





class SharedService {
    constructor(http) {
        this.http = http;
        this.apiEndpoint = '';
        this.apiEndpoint = src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.apiEndpoint;
    }
    getStudyArea() {
        return this.http.get(`${this.apiEndpoint}/StudyDataSet`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getStudyAreaCategory(dataSetId) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams().append('DataSetId', dataSetId);
        return this.http
            .get(`${this.apiEndpoint}/StudyArea/StudyArea`, {
            params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getProject(dataSetId, year) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('DataSetId', dataSetId)
            .append('studyYear', year);
        return this.http
            .get(`${this.apiEndpoint}/Project`, {
            params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getProjectLead() {
        return this.http.get(`${this.apiEndpoint}/ProjectLead`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getMarket(dataSetId, year) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('DataSetId', dataSetId)
            .append('BaseTimeYear', year);
        return this.http
            .get(`${this.apiEndpoint}/Market`, { params })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getAnalyst() {
        return this.http.get(`${this.apiEndpoint}/Analysts`).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getInitialSetupByMarketId(marketId, studyArea) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('marketId', marketId)
            .append('DataItemCategoryId', studyArea);
        return this.http
            .get(`${this.apiEndpoint}/InitialSetup/InitialSetupByMarketId`, {
            params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getInitialSetupById(Id, studyAreaId) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams().append('DataItemCategoryId', studyAreaId);
        return this.http
            .get(`${this.apiEndpoint}/InitialSetup/InitialSetupById/${Id}`, {
            params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getStudyAreaSummaryByStudyMarketYearId(marketYearId) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams().append('studyMarketYearId', marketYearId);
        return this.http
            .get(`${this.apiEndpoint}/StudyArea/GetSummary`, {
            params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getStudyAreaSummary() {
        return this.http
            .get(`${this.apiEndpoint}/StudyArea/Summary`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    setLockUnlockStudy(marketYearCategoryDataId, isLocked) {
        const formData = {
            marketYearCategoryDataId: marketYearCategoryDataId,
            acquireLock: isLocked,
        };
        return this.http
            .post(`${this.apiEndpoint}/MarketYearCategoryData/LockForEdit`, formData)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    requestForUnlockStudy(marketYearCategoryDataId, formData) {
        return this.http
            .post(`${this.apiEndpoint}/MarketYearCategoryData/SendEmailToRevokeEditLock?MarketYearCategoryDataId=${marketYearCategoryDataId}`, formData)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    migrateDataFromAnotherMarket(MarketYearCategoryDataId, TargetMarketId) {
        const formData = {};
        return this.http
            .post(`${this.apiEndpoint}/MarketYearCategoryData/MigrateData?MarketYearCategoryDataId=${MarketYearCategoryDataId}&TargetMarketId=${TargetMarketId}`, formData)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    removeStudyAreaMaster(dataSetId, dataItemCategoryId, marketYearDataCategoryId, studyAreaId) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('DataSetId', dataSetId)
            .append('DataItemCategoryId', dataItemCategoryId)
            .append('MarketYearCategoryDataId', marketYearDataCategoryId)
            .append('StudyAreaId', studyAreaId);
        return this.http
            .delete(`${this.apiEndpoint}/MasterDataEntry/MasterStudy`, {
            params,
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    removeStudyDataRow(dataSetId, dataItemCategoryId, marketYearDataCategoryId, dataRowId) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('DataSetId', dataSetId)
            .append('DataItemCategoryId', dataItemCategoryId)
            .append('MarketYearCategoryDataId', marketYearDataCategoryId)
            .append('DataRowId', dataRowId.toString());
        return this.http
            .delete(`${this.apiEndpoint}/MasterDataEntry/MasterDataRow`, {
            params,
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getMarketSegment() {
        return this.getDataEntryData('MarketSegments');
    }
    getSupplier() {
        return this.getDataEntryData('Suppliers');
    }
    getProductCategories() {
        return this.getDataEntryData('ProductCategories');
    }
    getSubProducts() {
        return this.getDataEntryData('SubProducts');
    }
    getViscosityGrades() {
        return this.getDataEntryData('ViscosityGrades');
    }
    saveInitialSetupData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/InitialSetup/InitialSetup`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getSPSegments(MarketId) {
        return this.getDataEntryData('Segments', [
            { key: 'MarketId', value: MarketId },
        ]);
    }
    getSyntheticType() {
        return this.getDataEntryData('SyntheticType');
    }
    getVehicleTypes() {
        return this.getDataEntryData('VehicleType');
    }
    getDataEntryData(type, params = []) {
        let _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams();
        if (params.length > 0) {
            params.map((item) => {
                _params = _params.append(item.key, item.value);
            });
        }
        return this.http
            .get(`${this.apiEndpoint}/DataEntry/${type}`, {
            params: _params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getAllEngineOilType() {
        return this.http
            .get(`${this.apiEndpoint}/DataEntry/SCSSEngineOilTypeProductCategory`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getSEDataEntryData(type, params = []) {
        let _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams();
        if (params.length > 0) {
            params.map((item) => {
                _params = _params.append(item.key, item.value);
            });
        }
        return this.http
            .get(`${this.apiEndpoint}/SpecialtyExcipient/DataEntrySEAP/${type}`, {
            params: _params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getPSCDataEntryData(type, params = []) {
        let _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams();
        if (params.length > 0) {
            params.map((item) => {
                _params = _params.append(item.key, item.value);
            });
        }
        return this.http
            .get(`${this.apiEndpoint}/DataEntryPSC/${type}`, {
            params: _params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getSHCDataEntryData(type, params = []) {
        let _params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams();
        if (params.length > 0) {
            params.map((item) => {
                _params = _params.append(item.key, item.value);
            });
        }
        return this.http
            .get(`${this.apiEndpoint}/DataEntrySHC/${type}`, {
            params: _params,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getDataRelationsData() {
        return this.http
            .get(`${this.apiEndpoint}/MasterDataEntry/DataRelations`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    saveNewDataEntry(dataRelationId, newName) {
        const formData = {
            dataRelationId,
            newName,
        };
        return this.http
            .post(`${this.apiEndpoint}/MasterDataEntry/NewDataEntry`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getEuropeanCountryLists() {
        return this.http
            .get(`${this.apiEndpoint}/Market/EuropeanCountries`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getPivotSettings(viewId) {
        return this.http
            .get(`${this.apiEndpoint}/MasterDataEntry/PivotGridSettings?ViewId=${viewId}`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getDataEntryDropDowns(dataRelationId) {
        return this.http
            .get(`${this.apiEndpoint}/MasterDataEntry/DataEntryDropDowns?DataRelationId=${dataRelationId}`, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getUnitOfMeasure() {
        return this.http
            .get(`${this.apiEndpoint}/MasterDataEntry/UnitOfMeasures`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getVolumeUnits(dataSetId) {
        return this.http.get(`${this.apiEndpoint}/Common/VolumeUnits?DataSetId=${dataSetId}`);
    }
    getCurrencies(dataSetId) {
        return this.http
            .get(`${this.apiEndpoint}/Common/Currencies?DataSetId=${dataSetId}`);
    }
    getSubMarketDropDowns(datasetId, marketId) {
        return this.http
            .get(`${this.apiEndpoint} /Market/SubMarkets ? DataSetId = ${datasetId}& MarketId=${marketId} `, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getSubMarkets(datasetId, marketId) {
        return this.http
            .get(`${this.apiEndpoint} /Market/SubMarkets ? DataSetId = ${datasetId}& MarketId=${marketId} `)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getUnitsOfMeasureDropDowns() {
        return this.http
            .get(`${this.apiEndpoint} /MasterDataEntry/UnitOfMeasures`, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    getPivotState(viewId, isDataEntryGrid = false) {
        return this.http
            .get(`${this.apiEndpoint}/PivotState?viewId=${viewId}&IsDataEntryGrid=${isDataEntryGrid}`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    setPivotState(viewId, userId, isDefault, viewState, isDataEntryGrid = false) {
        let headers = {
            'Content-Type': 'application/json',
        };
        let url = this.apiEndpoint + '/PivotState/SaveState';
        let body = {
            userId: userId,
            viewId: viewId,
            isDefault: isDefault,
            StateData: viewState,
            isDataEntryGrid: isDataEntryGrid,
        };
        return this.http.post(url, body, { headers });
    }
    deletePivotState(viewId, pivotStateId, userId = 0) {
        let headers = {
            'Content-Type': 'application/json',
        };
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('viewId', viewId)
            .append('pivotStateId', pivotStateId);
        return this.http.delete(`${this.apiEndpoint}/PivotState/DeleteState`, {
            params,
            headers,
        });
    }
    getState(viewId, marketYearCategoryId, isDataEntryGrid = false) {
        return this.http
            .get(`${this.apiEndpoint}/PivotState?viewId=${viewId}&marketYearCategoryId=${marketYearCategoryId}&IsDataEntryGrid=${isDataEntryGrid}`)
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
    setState(viewId, marketYearCategoryId, userId, isDefault, viewState, isDataEntryGrid = false) {
        let headers = {
            'Content-Type': 'application/json',
        };
        let url = this.apiEndpoint + '/PivotState/SaveState';
        let body = {
            userId: userId,
            viewId: viewId,
            marketYearCategoryId: marketYearCategoryId,
            isDefault: isDefault,
            StateData: viewState,
            isDataEntryGrid: isDataEntryGrid,
        };
        return this.http.post(url, body, { headers });
    }
    deleteState(viewId, marketYearCategoryId, pivotStateId, userId = 0) {
        let headers = {
            'Content-Type': 'application/json',
        };
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('viewId', viewId)
            .append('marketYearCategoryId', marketYearCategoryId)
            .append('pivotStateId', pivotStateId);
        return this.http.delete(`${this.apiEndpoint}/PivotState/DeleteState`, {
            params,
            headers,
        });
    }
    getDependentDataEntryDropDowns(dataRelationId, dependentField) {
        return this.http
            .post(`${this.apiEndpoint}/MasterDataEntry/DataEntryDependentDropDowns?dataRelationId=${dataRelationId}`, dependentField, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
}
SharedService.ɵfac = function SharedService_Factory(t) { return new (t || SharedService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
SharedService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: SharedService, factory: SharedService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 87091:
/*!***************************************!*\
  !*** ./src/services/study.service.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StudyService": () => (/* binding */ StudyService)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 28784);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);






class StudyService {
    constructor(http) {
        this.http = http;
        this.apiEndpoint = '';
        this.excelLoading = new rxjs__WEBPACK_IMPORTED_MODULE_1__.BehaviorSubject(false);
        this.apiEndpoint = src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.apiEndpoint;
    }
    getLubricantDemandData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/LubricantDemand/LubricantDemand`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveLubricantData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/LubricantDemand/LubricantDemand`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffLubricationData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/LubricantDemand/SignOffLubricantDemand`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForChangeLubricationData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/LubricantDemand/RequestForChange`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForSignOffLubricationData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/LubricantDemand/RequestForSignOff`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Supplier Market Share  */
    getSupplierMarketShareData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/SupplierMarketShare/SupplierMarketShare`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveSupplierMarketShareData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SupplierMarketShare/SupplierMarketShare`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForSignOffSupplierMarketShareData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/SupplierMarketShare/RequestForSignOff`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForChangeSupplierMarketShareData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/SupplierMarketShare/RequestForChange`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffSupplierMarketShareData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SupplierMarketShare/SignOffSupplierMarketShare`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Synthetic Penetration */
    getSPData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/SyntheticPenetration/SyntheticPenetration`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveSPData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SyntheticPenetration/SyntheticPenetration`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForSignOffSPData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/SyntheticPenetration/RequestForSignOff`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForChangeSPData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/SyntheticPenetration/RequestForChange`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffSPData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SyntheticPenetration/SignOffSyntheticPenetration`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Vehicle Parc Statistics */
    getVPSData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/VehicleParc/VehicleParc`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveVPData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/VehicleParc/VehicleParc`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForSignOffVPData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/VehicleParc/RequestForSignOff`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForChangeVPData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/VehicleParc/RequestForChange`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffVPData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/VehicleParc/SignOffVehicleParc`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Service Category Consumption  */
    getSCCData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/ServiceCategoryConsumption/ServiceCategoryConsumption`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveSCCData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/ServiceCategoryConsumption/ServiceCategoryConsumption`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForSignOffSCCData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/ServiceCategoryConsumption/RequestForSignOff`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForChangeSCCData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/ServiceCategoryConsumption/RequestForChange`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffSCCData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/ServiceCategoryConsumption/SignOffServiceCategoryConsumption`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Specialty Excipient Avg. Price  */
    getSEAPData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/SpecialtyExcipientAvgPrice/SpecialtyExcipientAvgPrice`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveSEAPData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SpecialtyExcipientAvgPrice/SpecialtyExcipientAvgPrice`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForSignOffSEAPData(formData) {
        return this.requestForSignOffData(formData);
        // return this.http
        //   .post<ApiResponse>(
        //     `${this.apiEndpoint}/ChangeRequest/RequestForSignOff`,
        //     formData,
        //     {
        //       headers: {
        //         'Content-Type': 'application/json',
        //       },
        //     }
        //   )
        //   .pipe(
        //     map((data) => {
        //       return data;
        //     })
        //   );
    }
    requestForChangeSEAPData(formData) {
        return this.requestForChangeData(formData);
        // return this.http
        //   .post<ApiResponse>(
        //     `${this.apiEndpoint}/ChangeRequest/RequestForChange`,
        //     formData,
        //     {
        //       headers: {
        //         'Content-Type': 'application/json',
        //       },
        //     }
        //   )
        //   .pipe(
        //     map((data) => {
        //       return data;
        //     })
        //   );
    }
    signOffSEAPData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SpecialtyExcipientAvgPrice/SignOffSpecialtyExcipientAvgPrice`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Specialty Excipient Sales  */
    getSalesData(marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        return this.http
            .get(`${this.apiEndpoint}/SpecialtyExcipientSales/SpecialtyExcipients`, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveSESData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SpecialtyExcipientSales/SpecialtyExcipients`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffSESData(formData) {
        return this.http
            .put(`${this.apiEndpoint}/SpecialtyExcipientSales/SignOffSpecialtyExcipient`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** PSC - Personal Skin Care */
    getPscStudyData(type, marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        let URL = this.apiEndpoint;
        if (type == 'ProductTypeSales') {
            URL = URL + '/PSCProductType/ProductTypeSales';
        }
        else if (type == 'BrandSales') {
            URL = URL + '/PSCBrandSales/BrandSales';
        }
        else if (type == 'SegmentSales') {
            URL = URL + '/PSCSegmentSales/SegmentSales';
        }
        else if (type == 'EuropeanCountriesSales') {
            URL = URL + '/PSCEuropeanCountriesSales/EuropeanCountriesSales';
        }
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Product Type Sales */
    getPscPTData(marketYearCategoryId, studyProjectMarketYearId) {
        return this.getPscStudyData('ProductTypeSales', marketYearCategoryId, studyProjectMarketYearId);
        // const qParams = new HttpParams()
        //   .set('MarketYearCategoryId', marketYearCategoryId)
        //   .set('StudyProjectMarketYearId', studyProjectMarketYearId);
        // return this.http
        //   .get<ApiResponse>(`${this.apiEndpoint}/PSCProductType/ProductTypeSales`, {
        //     params: qParams,
        //   })
        //   .pipe(
        //     map((data) => {
        //       return data;
        //     })
        //   );
    }
    savePSCData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'ProductTypeSales') {
            apiURL = apiURL + '/PSCProductType/ProductTypeSales';
        }
        else if (type == 'BrandSales') {
            apiURL = apiURL + '/PSCBrandSales/BrandSales';
        }
        else if (type == 'SegmentSales') {
            apiURL = apiURL + '/PSCSegmentSales/SegmentSales';
        }
        else if (type == 'EuropeanCountriesSales') {
            apiURL = apiURL + '/PSCEuropeanCountriesSales/EuropeanCountriesSales';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffPSCData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'ProductTypeSales') {
            apiURL = apiURL + '/PSCProductType/SignOffProductTypeSales';
        }
        else if (type == 'BrandSales') {
            apiURL = apiURL + '/PSCBrandSales/SignOffBrandSales';
        }
        else if (type == 'SegmentSales') {
            apiURL = apiURL + '/PSCSegmentSales/SignOffSegmentSales';
        }
        else if (type == 'EuropeanCountriesSales') {
            apiURL =
                apiURL + '/PSCEuropeanCountriesSales/SignOffEuropeanCountriesSales';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Product Type Sales END */
    /** PSC - END */
    requestForSignOffData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/ChangeRequest/RequestForSignOff`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    requestForChangeData(formData) {
        return this.http
            .post(`${this.apiEndpoint}/ChangeRequest/RequestForChange`, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Solon Hair Care */
    getShcStudyData(type, marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        let URL = this.apiEndpoint;
        if (type == 'ProductTypeSales') {
            URL = URL + '/SHCProductTypeSales/ProductTypeSales';
        }
        else if (type == 'CompanyBrandSales') {
            URL = URL + '/SHCCompanyBrandSales/CompanyBrandSales';
        }
        else if (type == 'ForecastSales') {
            URL = URL + '/SHCForecastSales/ForecastSales';
        }
        else if (type == 'IndustryRevenues') {
            URL = URL + '/SHCIndustryRevenues/IndustryRevenues';
        }
        else if (type == 'OutletSales') {
            URL = URL + '/SHCOutletSales/OutletSales';
        }
        else if (type == 'ProductClassificationSales') {
            URL = URL + '/SHCProductClassificationSales/ProductClassificationSales';
        }
        else if (type == 'SalonCount') {
            URL = URL + '/SHCSalonCount/SalonCount';
        }
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveSHCData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'ProductTypeSales') {
            apiURL = apiURL + '/SHCProductTypeSales/ProductTypeSales';
        }
        else if (type == 'CompanyBrandSales') {
            apiURL = apiURL + '/SHCCompanyBrandSales/CompanyBrandSales';
        }
        else if (type == 'ForecastSales') {
            apiURL = apiURL + '/SHCForecastSales/ForecastSales';
        }
        else if (type == 'IndustryRevenues') {
            apiURL = apiURL + '/SHCIndustryRevenues/IndustryRevenues';
        }
        else if (type == 'OutletSales') {
            apiURL = apiURL + '/SHCOutletSales/OutletSales';
        }
        else if (type == 'ProductClassificationSales') {
            apiURL =
                apiURL + '/SHCProductClassificationSales/ProductClassificationSales';
        }
        else if (type == 'SalonCount') {
            apiURL = apiURL + '/SHCSalonCount/SalonCount';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffSHCData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'ProductTypeSales') {
            apiURL = apiURL + '/SHCProductTypeSales/SignOffProductTypeSales';
        }
        else if (type == 'BrandSales') {
            apiURL = apiURL + '/SHCCompanyBrandSales/SignOffCompanyBrandSales';
        }
        else if (type == 'ForecastSales') {
            apiURL = apiURL + '/SHCForecastSales/SignOffForecastSales';
        }
        else if (type == 'IndustryRevenues') {
            apiURL = apiURL + '/SHCIndustryRevenues/SignOffIndustryRevenues';
        }
        else if (type == 'OutletSales') {
            apiURL = apiURL + '/SHCOutletSales/SignOffOutletSales';
        }
        else if (type == 'ProductClassificationSales') {
            apiURL =
                apiURL +
                    '/SHCProductClassificationSales/SignOffProductClassificationSales';
        }
        else if (type == 'SalonCount') {
            apiURL = apiURL + '/SHCSalonCount/SignOffSalonCount';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** END SCH */
    /** Solon Hair Care */
    getEHCStudyData(type, marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        let URL = this.apiEndpoint;
        if (type == 'Sales') {
            URL = URL + '/SalesEHC/Sales';
        }
        else if (type == 'MarketConsumption') {
            URL = URL + '/MarketConsumptionEHC/MarketConsumption';
        }
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveEHCData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'Sales') {
            apiURL = apiURL + '/SalesEHC/Sales';
        }
        else if (type == 'MarketConsumption') {
            apiURL = apiURL + '/MarketConsumptionEHC/MarketConsumption';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffEHCData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'Sales') {
            apiURL = apiURL + '/SalesEHC/SignOffSales';
        }
        else if (type == 'MarketConsumption') {
            apiURL = apiURL + '/MarketConsumptionEHC/SignOffMarketConsumption';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** END SCH */
    /*EHC Market Consumption*/
    getMarketConsumptionStudyData(marketYearCategoryId, studyProjectMarketYearId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId);
        let URL = this.apiEndpoint + '/MarketConsumptionEHC/MarketConsumption';
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveMaketConsumptionData(formData) {
        let apiURL = this.apiEndpoint + '/MarketConsumptionEHC/MarketConsumption';
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffMaketConsumptionData(formData) {
        let apiURL = this.apiEndpoint + '/MarketConsumptionEHC/SignOffMarketConsumption';
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    getEHCSalesSegment(sectorId) {
        let apiURL = this.apiEndpoint + '/EHCDataEntry/Segments?SectorId=' + sectorId;
        return this.http
            .get(apiURL, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** Industrial Vegetation Management */
    getIVMStudyData(type, marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        let URL = this.apiEndpoint;
        if (type == 'Sales') {
            URL = URL + '/IVMProductSales/IVMProductSales';
        }
        else if (type == 'MarketConsumption') {
            URL = URL + '/MarketConsumptionEHC/MarketConsumption';
        }
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveIVMData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'Sales') {
            apiURL = apiURL + '/IVMProductSales/IVMProductSales';
        }
        else if (type == 'MarketConsumption') {
            apiURL = apiURL + '/MarketConsumptionEHC/MarketConsumption';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffIVMData(type, formData) {
        let apiURL = this.apiEndpoint;
        if (type == 'Sales') {
            apiURL = apiURL + '/IVMProductSales/SignOffIVMProductSales';
        }
        else if (type == 'MarketConsumption') {
            apiURL = apiURL + '/MarketConsumptionEHC/SignOffMarketConsumption';
        }
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /** END SCH */
    /*IVM Product Composition*/
    getIVMProductCompositionStudyData(marketYearCategoryId, studyProjectMarketYearId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId);
        let URL = this.apiEndpoint + '/IVMProductComposition/IVMProductComposition';
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveIVMProductCompositionData(formData) {
        let apiURL = this.apiEndpoint + '/IVMProductComposition/IVMProductComposition';
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffIVMProductCompositionData(formData) {
        let apiURL = this.apiEndpoint + '/IVMProductComposition/SignOffIVMProductComposition';
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    /*PNC Product Type Sales*/
    getPNCProductTypeSalesStudyData(marketYearCategoryId, studyProjectMarketYearId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId);
        let URL = this.apiEndpoint + '/PNCProductType/ProductTypeSales';
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    savePNCProductTypeSalesData(formData) {
        let apiURL = this.apiEndpoint + '/PNCProductType/ProductTypeSales';
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffPNCProductTypeSalesData(formData) {
        let apiURL = this.apiEndpoint + '/PNCProductType/SignOffProductTypeSales';
        return this.http
            .put(apiURL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    exportToExcel(data, state, settings, title, userMenuSettings, viewId = 0) {
        let url = this.apiEndpoint + '/PivotToExcelConvert';
        const pivotData = JSON.stringify(data);
        const userState = JSON.stringify(state);
        const userSettings = JSON.stringify(settings);
        const menuSettings = JSON.stringify(userMenuSettings);
        const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpHeaders()
            .set('Content-Type', 'application/json')
            .set('Cache-control', 'no-store')
            .set('Cache-control', 'no-store')
            .set('Pragma', 'no-cache')
            .set('Expires', '0');
        return this.http.post(url, { pivotData, userState, userSettings, title, menuSettings, viewId }, { headers, responseType: 'blob' });
    }
    exportToCsv(data, filename = 'data') {
        let columns = Object.keys(data[0]);
        columns = columns.filter((item) => item !== 'DataType');
        let csvData = this.convertToCSV(data, columns);
        let blob = new Blob(['\ufeff' + csvData], {
            type: 'text/csv;charset=utf-8;',
        });
        let dwldLink = document.createElement('a');
        let url = URL.createObjectURL(blob);
        let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 &&
            navigator.userAgent.indexOf('Chrome') == -1;
        if (isSafariBrowser) {
            //if Safari open in new window to save file with random filename.
            dwldLink.setAttribute('target', '_blank');
        }
        dwldLink.setAttribute('href', url);
        dwldLink.setAttribute('download', filename + '.csv');
        dwldLink.style.visibility = 'hidden';
        document.body.appendChild(dwldLink);
        dwldLink.click();
        document.body.removeChild(dwldLink);
        this.changeExcelLoading(false);
    }
    convertToCSV(objArray, headerList) {
        let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;
        let str = '';
        let row = '';
        for (let index in headerList) {
            row += headerList[index] + ',';
        }
        row = row.slice(0, -1);
        str += row + '\r\n';
        for (let i = 0; i < array.length; i++) {
            let line = '';
            for (let index in headerList) {
                let head = headerList[index];
                let val = String(array[i][head]);
                if (val.includes(',')) {
                    line += ',"' + array[i][head] + '"';
                }
                else {
                    line += ',' + array[i][head];
                }
            }
            str += line.substring(1) + '\r\n';
        }
        return str;
    }
    changeExcelLoading(state) {
        this.excelLoading.next(state);
    }
    getPreviewStudyData(StudyUrl, marketYearCategoryId, studyProjectMarketYearId, currencyId = 0, volumeUnitId = 0, currencyConversionType = 0) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId)
            .set('CurrencyId', currencyId)
            .set('VolumeUnitId', volumeUnitId)
            .set('CurrencyConversionType', currencyConversionType);
        let URL = this.apiEndpoint + StudyUrl;
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    // Generic Study APIs
    getStudyData(marketYearCategoryId, studyProjectMarketYearId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('MarketYearCategoryId', marketYearCategoryId)
            .set('StudyProjectMarketYearId', studyProjectMarketYearId);
        let URL = this.apiEndpoint + '/Generic';
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveStudyData(formData) {
        let URL = this.apiEndpoint + '/Generic';
        return this.http
            .put(URL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    signOffStudyData(formData) {
        let URL = this.apiEndpoint + '/Generic/SignOff';
        return this.http
            .put(URL, formData, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    // Comment Section
    addCommentForCell(formData) {
        let qParams = [];
        Object.keys(formData).map((key) => {
            qParams.push(`${key}=${formData[key]}`);
        });
        return this.http
            .post(`${this.apiEndpoint}/CellLevelComments/SaveCellLevelComment?${qParams.join('&')}`, {}, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    getAllCommentsForStudy(dataItemCategoryId, marketYearCategoryDataId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('dataItemCategoryId', dataItemCategoryId)
            .set('marketYearCategoryDataId', marketYearCategoryDataId);
        let URL = `${this.apiEndpoint}/CellLevelComments/GetAllCellLevelCommentsOfAStudy`;
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    getCellCommentsForStudy(dataItemCategoryId, marketYearCategoryDataId, draftDataRowId, columnName, attributeType = '') {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('dataItemCategoryId', dataItemCategoryId)
            .set('marketYearCategoryDataId', marketYearCategoryDataId)
            .set('draftDataRowId', draftDataRowId)
            .set('columnName', columnName)
            .set('attributeType', attributeType);
        let URL = `${this.apiEndpoint}/CellLevelComments/GetCellLevelComments`;
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    deleteCellComment(marketYearCategoryDataId, draftDataRowId, columnName, cellNotesId) {
        const params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .append('marketYearCategoryDataId', marketYearCategoryDataId)
            .append('draftDataRowId', draftDataRowId)
            .append('columnName', columnName)
            .append('cellNotesId', cellNotesId);
        return this.http
            .delete(`${this.apiEndpoint}/CellLevelComments/DeleteCellLevelComment`, {
            params,
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    //end
    getCurrencyConversionFactor(year, inputCurrencyId, outputCurrencyId, currencyConversionType) {
        return this.http.get(`${this.apiEndpoint}/Common/CurrencyConversionFactor?year=${year}&inputCurrencyId=${inputCurrencyId}&outputCurrencyId=${outputCurrencyId}&currencyConversionType=${currencyConversionType}`);
    }
    getVolumeConversionFactor(inputVolumeUnitId, outputVolumeUnitId, dataSetId) {
        return this.http.get(`${this.apiEndpoint}/Common/VolumeConversionFactor?inputVolumeUnitId=${inputVolumeUnitId}&outputVolumeUnitId=${outputVolumeUnitId}&dataSetId=${dataSetId}`);
    }
    getAllStudyNotes(dataItemCategoryId, marketYearCategoryDataId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('dataItemCategoryId', dataItemCategoryId)
            .set('marketYearCategoryDataId', marketYearCategoryDataId);
        let URL = `${this.apiEndpoint}/StudyNotes/StudyNotes`;
        return this.http
            .get(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    deleteStudyNotes(studyNoteLogId, marketYearCategoryDataId) {
        const qParams = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams()
            .set('marketYearCategoryDataId', marketYearCategoryDataId)
            .set('studyNoteLogId', studyNoteLogId);
        let URL = `${this.apiEndpoint}/StudyNotes/StudyNote`;
        return this.http
            .delete(URL, {
            params: qParams,
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
    saveStudyNote(formData) {
        let qParams = [];
        Object.keys(formData).map((key) => {
            qParams.push(`${key}=${formData[key]}`);
        });
        return this.http
            .post(`${this.apiEndpoint}/StudyNotes/StudyNote?${qParams.join('&')}`, {}, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.map)((data) => {
            return data;
        }));
    }
}
StudyService.ɵfac = function StudyService_Factory(t) { return new (t || StudyService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient)); };
StudyService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: StudyService, factory: StudyService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 72996:
/*!**************************************!*\
  !*** ./src/services/user.service.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "UserService": () => (/* binding */ UserService)
/* harmony export */ });
/* harmony import */ var src_app_Constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/app/Constant */ 21003);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 28784);




class UserService {
    constructor(http) {
        this.http = http;
        this.apiEndpoint = '';
        this.apiEndpoint = src_app_Constant__WEBPACK_IMPORTED_MODULE_0__.Constants.apiEndpoint;
    }
    getUserDetail(emailAddress) {
        const params = JSON.stringify(emailAddress);
        return this.http
            .post(`${this.apiEndpoint}/UserDetails/UserDetail`, params, {
            headers: {
                'Content-Type': 'application/json',
            },
        })
            .pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_1__.map)((data) => {
            return data;
        }));
    }
}
UserService.ɵfac = function UserService_Factory(t) { return new (t || UserService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient)); };
UserService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: UserService, factory: UserService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 46700:
/*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": 58685,
	"./af.js": 58685,
	"./ar": 254,
	"./ar-dz": 4312,
	"./ar-dz.js": 4312,
	"./ar-kw": 32614,
	"./ar-kw.js": 32614,
	"./ar-ly": 18630,
	"./ar-ly.js": 18630,
	"./ar-ma": 28674,
	"./ar-ma.js": 28674,
	"./ar-sa": 49032,
	"./ar-sa.js": 49032,
	"./ar-tn": 24730,
	"./ar-tn.js": 24730,
	"./ar.js": 254,
	"./az": 53052,
	"./az.js": 53052,
	"./be": 60150,
	"./be.js": 60150,
	"./bg": 38080,
	"./bg.js": 38080,
	"./bm": 13466,
	"./bm.js": 13466,
	"./bn": 18516,
	"./bn-bd": 90557,
	"./bn-bd.js": 90557,
	"./bn.js": 18516,
	"./bo": 26273,
	"./bo.js": 26273,
	"./br": 9588,
	"./br.js": 9588,
	"./bs": 19815,
	"./bs.js": 19815,
	"./ca": 83331,
	"./ca.js": 83331,
	"./cs": 21320,
	"./cs.js": 21320,
	"./cv": 72219,
	"./cv.js": 72219,
	"./cy": 68266,
	"./cy.js": 68266,
	"./da": 66427,
	"./da.js": 66427,
	"./de": 67435,
	"./de-at": 52871,
	"./de-at.js": 52871,
	"./de-ch": 12994,
	"./de-ch.js": 12994,
	"./de.js": 67435,
	"./dv": 82357,
	"./dv.js": 82357,
	"./el": 95649,
	"./el.js": 95649,
	"./en-au": 59961,
	"./en-au.js": 59961,
	"./en-ca": 19878,
	"./en-ca.js": 19878,
	"./en-gb": 67570,
	"./en-gb.js": 67570,
	"./en-ie": 70864,
	"./en-ie.js": 70864,
	"./en-il": 91579,
	"./en-il.js": 91579,
	"./en-in": 30940,
	"./en-in.js": 30940,
	"./en-nz": 16181,
	"./en-nz.js": 16181,
	"./en-sg": 44301,
	"./en-sg.js": 44301,
	"./eo": 85291,
	"./eo.js": 85291,
	"./es": 54529,
	"./es-do": 53764,
	"./es-do.js": 53764,
	"./es-mx": 12584,
	"./es-mx.js": 12584,
	"./es-us": 63425,
	"./es-us.js": 63425,
	"./es.js": 54529,
	"./et": 35203,
	"./et.js": 35203,
	"./eu": 70678,
	"./eu.js": 70678,
	"./fa": 83483,
	"./fa.js": 83483,
	"./fi": 96262,
	"./fi.js": 96262,
	"./fil": 52521,
	"./fil.js": 52521,
	"./fo": 34555,
	"./fo.js": 34555,
	"./fr": 63131,
	"./fr-ca": 88239,
	"./fr-ca.js": 88239,
	"./fr-ch": 21702,
	"./fr-ch.js": 21702,
	"./fr.js": 63131,
	"./fy": 267,
	"./fy.js": 267,
	"./ga": 23821,
	"./ga.js": 23821,
	"./gd": 71753,
	"./gd.js": 71753,
	"./gl": 4074,
	"./gl.js": 4074,
	"./gom-deva": 92762,
	"./gom-deva.js": 92762,
	"./gom-latn": 5969,
	"./gom-latn.js": 5969,
	"./gu": 82809,
	"./gu.js": 82809,
	"./he": 45402,
	"./he.js": 45402,
	"./hi": 315,
	"./hi.js": 315,
	"./hr": 10410,
	"./hr.js": 10410,
	"./hu": 38288,
	"./hu.js": 38288,
	"./hy-am": 67928,
	"./hy-am.js": 67928,
	"./id": 71334,
	"./id.js": 71334,
	"./is": 86959,
	"./is.js": 86959,
	"./it": 34864,
	"./it-ch": 51124,
	"./it-ch.js": 51124,
	"./it.js": 34864,
	"./ja": 36141,
	"./ja.js": 36141,
	"./jv": 29187,
	"./jv.js": 29187,
	"./ka": 42136,
	"./ka.js": 42136,
	"./kk": 94332,
	"./kk.js": 94332,
	"./km": 18607,
	"./km.js": 18607,
	"./kn": 84305,
	"./kn.js": 84305,
	"./ko": 70234,
	"./ko.js": 70234,
	"./ku": 16003,
	"./ku.js": 16003,
	"./ky": 75061,
	"./ky.js": 75061,
	"./lb": 32786,
	"./lb.js": 32786,
	"./lo": 66183,
	"./lo.js": 66183,
	"./lt": 50029,
	"./lt.js": 50029,
	"./lv": 24169,
	"./lv.js": 24169,
	"./me": 68577,
	"./me.js": 68577,
	"./mi": 68177,
	"./mi.js": 68177,
	"./mk": 50337,
	"./mk.js": 50337,
	"./ml": 65260,
	"./ml.js": 65260,
	"./mn": 52325,
	"./mn.js": 52325,
	"./mr": 14695,
	"./mr.js": 14695,
	"./ms": 75334,
	"./ms-my": 37151,
	"./ms-my.js": 37151,
	"./ms.js": 75334,
	"./mt": 63570,
	"./mt.js": 63570,
	"./my": 97963,
	"./my.js": 97963,
	"./nb": 88028,
	"./nb.js": 88028,
	"./ne": 86638,
	"./ne.js": 86638,
	"./nl": 50302,
	"./nl-be": 66782,
	"./nl-be.js": 66782,
	"./nl.js": 50302,
	"./nn": 33501,
	"./nn.js": 33501,
	"./oc-lnc": 50563,
	"./oc-lnc.js": 50563,
	"./pa-in": 50869,
	"./pa-in.js": 50869,
	"./pl": 65302,
	"./pl.js": 65302,
	"./pt": 49687,
	"./pt-br": 74884,
	"./pt-br.js": 74884,
	"./pt.js": 49687,
	"./ro": 79107,
	"./ro.js": 79107,
	"./ru": 33627,
	"./ru.js": 33627,
	"./sd": 30355,
	"./sd.js": 30355,
	"./se": 83427,
	"./se.js": 83427,
	"./si": 11848,
	"./si.js": 11848,
	"./sk": 54590,
	"./sk.js": 54590,
	"./sl": 20184,
	"./sl.js": 20184,
	"./sq": 56361,
	"./sq.js": 56361,
	"./sr": 78965,
	"./sr-cyrl": 81287,
	"./sr-cyrl.js": 81287,
	"./sr.js": 78965,
	"./ss": 25456,
	"./ss.js": 25456,
	"./sv": 70451,
	"./sv.js": 70451,
	"./sw": 77558,
	"./sw.js": 77558,
	"./ta": 51356,
	"./ta.js": 51356,
	"./te": 73693,
	"./te.js": 73693,
	"./tet": 21243,
	"./tet.js": 21243,
	"./tg": 42500,
	"./tg.js": 42500,
	"./th": 55768,
	"./th.js": 55768,
	"./tk": 77761,
	"./tk.js": 77761,
	"./tl-ph": 35780,
	"./tl-ph.js": 35780,
	"./tlh": 29590,
	"./tlh.js": 29590,
	"./tr": 33807,
	"./tr.js": 33807,
	"./tzl": 93857,
	"./tzl.js": 93857,
	"./tzm": 60654,
	"./tzm-latn": 8806,
	"./tzm-latn.js": 8806,
	"./tzm.js": 60654,
	"./ug-cn": 30845,
	"./ug-cn.js": 30845,
	"./uk": 19232,
	"./uk.js": 19232,
	"./ur": 47052,
	"./ur.js": 47052,
	"./uz": 77967,
	"./uz-latn": 32233,
	"./uz-latn.js": 32233,
	"./uz.js": 77967,
	"./vi": 98615,
	"./vi.js": 98615,
	"./x-pseudo": 12320,
	"./x-pseudo.js": 12320,
	"./yo": 31313,
	"./yo.js": 31313,
	"./zh-cn": 64490,
	"./zh-cn.js": 64490,
	"./zh-hk": 55910,
	"./zh-hk.js": 55910,
	"./zh-mo": 98262,
	"./zh-mo.js": 98262,
	"./zh-tw": 44223,
	"./zh-tw.js": 44223
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 46700;

/***/ }),

/***/ 14591:
/*!*****************************************************!*\
  !*** ./src/assets/lubesNetTrendViewDataSample.json ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":2.4,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":2.4,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.9,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.9,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.9,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":2.2,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.5,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.6,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":2.3,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":2.2,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.9,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.9,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.9,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":2.2,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":2.1,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":2.3,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":2.3,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":2,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":1.9,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":1.8,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":1.8,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":1.6,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":2,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":2,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.9,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.8,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.5,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":1,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":7.1,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":7.6,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":7.7,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":7.6,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":7.3,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":6.7,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":8,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":9.8,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":191.2,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":190.5,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":163.4,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":162.1,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":160.6,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":163.6,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":150.2,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 30","Volume":141.5,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":145.2,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":148.4,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":124.2,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":123.3,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":122.1,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":124.3,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":119.9,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 40","Volume":105.1,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":97.4,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":96.2,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":82.9,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":82.3,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":81.5,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":82.9,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":79.8,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Monograde","ViscosityGrade":"SAE 50","Volume":70.5,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":0.9,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":1.6,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":1.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":1.6,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":1.6,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":1.9,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"0W-20 / 0W-30 / 0W-40","Volume":4.1,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":13,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":12.9,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":12.7,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":12.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":12.5,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":12.9,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":14,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-30","Volume":22.5,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":3.2,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":4.9,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":4.1,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":4,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":4,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":4.3,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":3.8,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"10W-40","Volume":3.7,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":37.1,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":28.1,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":32.3,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":32,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":31.7,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":32.3,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":64.3,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"15W-40","Volume":99.2,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":46,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":50,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":46.6,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":46.3,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":45.9,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":46.9,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":68.9,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"20W-50","Volume":76.6,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.5,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.6,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.3,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.3,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.3,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.3,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":4.5,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"5W-30","Volume":5.9,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":17.6,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":17.5,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":16.8,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":16.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":16.6,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":16.7,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":18.6,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HDMO","SubProduct":"Multigrade","ViscosityGrade":"All Other","Volume":19.7,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.9,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.6,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.7,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.7,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.5,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":4.9,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":32.5,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":32.8,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":30.1,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":29.8,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":29.6,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":30.1,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":29.9,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Hydraulic and Transmission Fluid","Volume":30.2,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":1.8,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":2,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":2.3,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":2.3,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":2.3,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":2.2,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":2.4,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Commercial","ProductCategory":"HTF","SubProduct":"All grades","ViscosityGrade":"Tractor Hydraulic Fluid","Volume":3.7,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":5.1,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":5.1,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":3,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":2.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":2.6,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":2.7,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":3.1,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"2T/4T","SubProduct":"All grades","ViscosityGrade":"2T/4T","Volume":3,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":5.9,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":4.6,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.7,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.5,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.3,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.4,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":2.8,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"ATF","SubProduct":"All grades","ViscosityGrade":"Automatic Transmission Fluid","Volume":3.4,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":0.8,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":0.8,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":0.7,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":0.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":0.6,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":0.6,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.3,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"80W-90","Volume":1.3,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":3,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":2.7,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.6,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.5,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.4,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.5,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.5,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"85W-140","Volume":1.4,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.7,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.6,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.3,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.3,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.3,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.3,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.5,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Conventional","SubProduct":"All grades","ViscosityGrade":"All Other","Volume":0.5,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":1.3,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":1.3,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2020,"BaseYear":2021,"SubscriptionYear":2021},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.7,"Year":2021,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":0.8,"Year":2025,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Gear Oil: Synthetic","SubProduct":"All grades","ViscosityGrade":"All grades","Volume":1.3,"Year":2030,"BaseYear":2021,"SubscriptionYear":2022},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":4.3,"Year":2016,"BaseYear":2021,"SubscriptionYear":2017},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":3.7,"Year":2017,"BaseYear":2021,"SubscriptionYear":2018},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":2.2,"Year":2018,"BaseYear":2021,"SubscriptionYear":2019},{"Region":"Africa and the Middle East","Country":"All Other","MarketSegment":"Consumer","ProductCategory":"Grease","SubProduct":"All grades","ViscosityGrade":"Grease","Volume":2,"Year":2019,"BaseYear":2021,"SubscriptionYear":2020}]');

/***/ }),

/***/ 33467:
/*!******************************!*\
  !*** ./src/assets/mock.json ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"HttpStatusCode":200,"Data":{"MarketYearCategoryId":1051,"InitialSetup":{"StudyDataSetId":3,"StudyDataSetName":"Professional Skin Care","StudyProjectId":4,"ProjectName":"Y563D","ProjectLeadId":23521,"ProjectLead":"sarosh zulfiqar","AnalystIdList":[23521],"AnalystNameList":["sarosh zulfiqar"],"AnalystId":23521,"AnalystName":"sarosh zulfiqar","StudyYear":2022,"MarketId":187,"MarketName":"India","Name":"PSC COLOR","Description":"PSC COLOR","Id":221,"PrefillFromId":0,"StudyAreaId":24,"StudyAreaName":"ALL - Sales","IsSignOff":false,"IsMidYear":false,"LockedForEditBy":23521,"LockedForEditByName":"sarosh zulfiqar","CSVAnalystIds":"23521","CSVAnalystNames":"sarosh zulfiqar","CalculatorId":0},"BrandSales":[{"Company":"All other","CompanyId":38,"Brand":"All other","BrandId":41,"ChannelId":4,"Channel":"Beauty institutes and salons","CurrencyCode":"INR","CurrencyName":"Indian Rupee","CurrencyId":11,"YearsData":[{"Year":2021,"YearType":"Previous","Values":[{"UnitOfValue":"Volume","Value":1.1},{"UnitOfValue":"Currency","Value":100}]},{"Year":2022,"YearType":"Current","Values":[{"UnitOfValue":"Volume","Value":1.2},{"UnitOfValue":"Currency","Value":200}]},{"Year":2027,"YearType":"Forecast","Values":[{"UnitOfValue":"Volume","Value":1.3},{"UnitOfValue":"Currency","Value":300}]}],"DataRelationId":null,"Notes":null,"DataRowId":"762f8486-6e73-4f6c-b842-fe60ede6ffa4","ChangeLog":null,"IsNewRow":false}]}}');

/***/ }),

/***/ 40478:
/*!*******************************!*\
  !*** ./src/assets/mocke.json ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"HttpStatusCode":200,"Data":{"MarketYearCategoryId":1051,"InitialSetup":{"StudyDataSetId":3,"StudyDataSetName":"Professional Skin Care","StudyProjectId":4,"ProjectName":"Y563D","ProjectLeadId":23521,"ProjectLead":"sarosh zulfiqar","AnalystIdList":[23521],"AnalystNameList":["sarosh zulfiqar"],"AnalystId":23521,"AnalystName":"sarosh zulfiqar","StudyYear":2022,"MarketId":187,"MarketName":"India","Name":"PSC COLOR","Description":"PSC COLOR","Id":221,"PrefillFromId":0,"StudyAreaId":24,"StudyAreaName":"ALL - Sales","IsSignOff":false,"IsMidYear":false,"LockedForEditBy":23521,"LockedForEditByName":"sarosh zulfiqar","CSVAnalystIds":"23521","CSVAnalystNames":"sarosh zulfiqar","CalculatorId":0},"UnitOfValue":[{"ValueTitle":"Volume","UnitOfValue":"KTonne","UnitOfValueId":"2"},{"ValueTitle":"Currency","UnitOfValue":"INR","UnitOfValueId":11}],"ColumnList":[{"CoulmnTitle":"Company","CoulmnIndex":0,"IsVisible":1},{"CoulmnTitle":"CompanyId","CoulmnIndex":2,"IsVisible":0},{"CoulmnTitle":"Brand","CoulmnIndex":3},{"CoulmnTitle":"BrandId","CoulmnIndex":4},{"CoulmnTitle":"Channel","CoulmnIndex":5},{"CoulmnTitle":"ChannelId","CoulmnIndex":6}],"YearsList":[{"Year":2021,"YearType":"Previous","Values":[{"CoulmnTitle":12.34,"CoulmnIndex":0},{"CoulmnTitle":345,"CoulmnIndex":1}]},{"Year":2022,"YearType":"Current","Values":[{"CoulmnTitle":346.34,"CoulmnIndex":0},{"CoulmnTitle":123,"CoulmnIndex":1}]}],"DataItems":[{"DataAttributes":["All other",1,"All other",34,"Beauty institutes and spas",45],"YearsData":[[12.34,345],[346.34,123]],"DataRowId":"762f8486-6e73-4f6c-b842-fe60ede6ffa4","ChangeLog":null,"IsNewRow":false}]}}');

/***/ }),

/***/ 36759:
/*!************************************!*\
  !*** ./src/assets/updatejson.json ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"HttpStatusCode":200,"Data":{"MarketYearCategoryId":849,"Description":{"StudyDataSetId":3,"StudyDataSetName":"Professional Skin Care","StudyProjectId":4,"ProjectName":"Y563D","ProjectLeadId":23218,"ProjectLead":"Sachin Patidar","AnalystIdList":[23012],"AnalystNameList":["pranav gandhi"],"AnalystId":23012,"AnalystName":"pranav gandhi","StudyYear":2022,"MarketId":187,"MarketName":"India","Name":"Professional Skin Care-2022-India-BS-001-CHNG","Description":"Testing Change Log","Id":78,"PrefillFromId":0,"StudyAreaId":24,"StudyAreaName":"Brand Sales","IsSignOff":false,"IsMidYear":false,"LockedForEditBy":23218,"LockedForEditByName":"Sachin Patidar","CSVAnalystIds":null,"CSVAnalystNames":null,"CalculatorId":0},"HasAttribute":false,"settings":{"basicSettings":{"title":""},"handontableSettings":{"dropdownMenu":false,"filters":true,"columnSorting":true,"copyPaste":true},"fields":[{"isVisible":true,"isValue":false,"caption":"Company123","dataField":"Company","dataType":"text","fieldType":"static","width":150,"formula":"","readOnly":true},{"isVisible":false,"isValue":false,"caption":"","dataField":"CompanyId","dataType":"numeric","fieldType":"hide","width":150,"formula":"","readOnly":true},{"isVisible":true,"isValue":false,"caption":"Brand","dataField":"Brand","dataType":"text","fieldType":"static","width":150,"formula":"","readOnly":true},{"isVisible":false,"isValue":false,"caption":"","dataField":"BrandId","dataType":"numeric","fieldType":"hide","width":150,"formula":"","readOnly":true},{"isVisible":true,"isValue":false,"caption":"Channel","dataField":"Channel","dataType":"text","fieldType":"static","width":170,"formula":"","readOnly":true},{"isVisible":false,"isValue":false,"caption":"","dataField":"ChannelId","dataType":"numeric","fieldType":"hide","width":150,"formula":"","readOnly":true},{"isVisible":true,"isValue":true,"isYearValue":true,"caption":"Value","dataField":"Value","dataType":"numeric","fieldType":"year","yearType":["Previous","Current","Forecast"],"width":50,"formula":"","readOnly":false}]},"UnitOfValues":[{"Title":"Currency","Unit":"INR","Id":11}],"ColumnList":[{"Title":"Company","Index":0,"IsVisible":true},{"Title":"CompanyId","Index":1,"IsVisible":false},{"Title":"Brand","Index":2,"IsVisible":true},{"Title":"BrandId","Index":3,"IsVisible":false},{"Title":"Channel","Index":4,"IsVisible":true},{"Title":"ChannelId","Index":5,"IsVisible":false}],"YearsList":[{"Year":"2017","Type":"Previous","Index":0,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2018","Type":"Previous","Index":1,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2019","Type":"Previous","Index":2,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2020","Type":"Previous","Index":3,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2021","Type":"Previous","Index":4,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2022","Type":"Current","Index":5,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2023","Type":"Forecast","Index":6,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2024","Type":"Forecast","Index":7,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2025","Type":"Forecast","Index":8,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2026","Type":"Forecast","Index":9,"AttributeList":[{"Title":"Value","Index":0}]},{"Year":"2027","Type":"Forecast","Index":10,"AttributeList":[{"Title":"Value","Index":0}]}],"DataList":[{"ColumnsData":["All other",38,"All other",41,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[1614.2],"2019":[1700.6],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"0a3a903c-2acb-4a61-bb43-717c31dcf1f0","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["All other",38,"All other",41,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[368.3],"2019":[400.1],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"16942786-1ba3-406e-b986-5e1d0cabc360","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["All other",38,"All other",41,"Retail",2],"YearsData":{"2017":[0],"2018":[811.6],"2019":[895.3],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"01db1add-9373-4de8-b667-1d024f0cac6d","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["All other",38,"All other",41,"Spas",3],"YearsData":{"2017":[0],"2018":[90],"2019":[94.6],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"851cb17a-3166-4a82-8cb6-08d17d425026","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Anoo\'s Salon & Clinic",311,"Anoo\'s",328,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[31],"2019":[34],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c36b5688-0b0f-408c-a3eb-a313fb1a77cc","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["B.Lab",305,"B.Lab",323,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[22],"2019":[24],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"45199046-be72-4615-a71b-c83623ca9e92","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["B.Lab",305,"B.Lab",323,"Retail",2],"YearsData":{"2017":[0],"2018":[3],"2019":[4],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"66f91ae0-3cf8-49ac-be53-77a3119a0e5a","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["B.Lab",305,"B.Lab",323,"Spas",3],"YearsData":{"2017":[0],"2018":[6],"2019":[7],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"2b745446-e443-49c5-8d34-5d2a8832da1b","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["BABOR",33,"BABOR",36,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[49],"2019":[54.2],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"5942e6c3-1711-4a1b-8965-caea4bb1274f","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["BABOR",33,"BABOR",36,"Retail",2],"YearsData":{"2017":[0],"2018":[20],"2019":[21.2],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"531fa569-d2c2-4462-a346-37347981b7e1","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["BABOR",33,"BABOR",36,"Spas",3],"YearsData":{"2017":[0],"2018":[31],"2019":[33.9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"f57255cd-fcd6-4625-a7db-a19dc8d9891b","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Bio Veda Action Research Co.",308,"Biotique",326,"Spas",3],"YearsData":{"2017":[0],"2018":[100],"2019":[110],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"ba2d3fe3-ae21-446c-9e49-11b62d94049f","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Bioderma Laboratoire Dermatologique",310,"Bioderma",163,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[35],"2019":[39],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"2cc4df3a-8d87-4d45-9e45-fed3a8ade7d0","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Bioderma Laboratoire Dermatologique",310,"Bioderma",163,"Retail",2],"YearsData":{"2017":[0],"2018":[15],"2019":[17],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"cf93486d-79a5-4a95-b3f1-564a26bb0894","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Casmara Cosmetics",312,"Casmara",329,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[132],"2019":[155.6],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"8686d8b1-0aa2-446b-83df-426c4449a642","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Casmara Cosmetics",312,"Casmara",329,"Retail",2],"YearsData":{"2017":[0],"2018":[44],"2019":[49.2],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"33f35d65-3510-4c49-b656-7ff8504bd446","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Casmara Cosmetics",312,"Casmara",329,"Spas",3],"YearsData":{"2017":[0],"2018":[44],"2019":[46.2],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"ecf58b8b-76ac-4f39-a98d-cca8540ed864","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["CavinKare Pvt. Ltd.",313,"Raaga Professional",330,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[60],"2019":[66],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"1266ecbf-e65f-4199-b5c9-8d68f6bd1ec1","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["CavinKare Pvt. Ltd.",313,"Raaga Professional",330,"Retail",2],"YearsData":{"2017":[0],"2018":[10],"2019":[12],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"3c0ed715-8861-461c-9981-8c4b45a1c6ea","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["CavinKare Pvt. Ltd.",313,"Raaga Professional",330,"Spas",3],"YearsData":{"2017":[0],"2018":[30],"2019":[34],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"7b53bb36-d0c8-4a59-b5d6-faa785046047","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Christine Valmy",309,"Christine Valmy",327,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[72],"2019":[83],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"edc0dcf4-31c5-462e-b4eb-34db44d83633","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Christine Valmy",309,"Christine Valmy",327,"Retail",2],"YearsData":{"2017":[0],"2018":[12],"2019":[13],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"2eb35867-0762-49ea-9327-7141d63bf983","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Christine Valmy",309,"Christine Valmy",327,"Spas",3],"YearsData":{"2017":[0],"2018":[36],"2019":[40],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"6cb93113-7073-4fd1-b547-c61138c92b92","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Davines",59,"Comfort Zone",65,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[30],"2019":[36],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"0a811f81-b565-4040-a0a6-426fe427b91b","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Davines",59,"Comfort Zone",65,"Spas",3],"YearsData":{"2017":[0],"2018":[20],"2019":[22],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"795a60ce-a893-4abd-877e-705483ff526e","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Ellementco",297,"Ellementco",314,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[49.5],"2019":[54.1],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"90da568b-32f7-4b9c-92cf-6525f4c8dbeb","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Ellementco",297,"Ellementco",314,"Retail",2],"YearsData":{"2017":[0],"2018":[9.5],"2019":[10.4],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"9af83a8c-cb8c-43f4-b84b-c6193d12ebbe","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Ellementco",297,"Ellementco",314,"Spas",3],"YearsData":{"2017":[0],"2018":[11],"2019":[11.5],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"d7d38ad1-079b-421a-b196-82aecda34927","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Forest Essentials Pvt. Ltd.",298,"Forest Essentials",315,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[35],"2019":[40],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"2de7d759-cae3-4890-953d-832545e31313","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Forest Essentials Pvt. Ltd.",298,"Forest Essentials",315,"Spas",3],"YearsData":{"2017":[0],"2018":[225],"2019":[270],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"97eb551f-da9d-4472-8c14-362608ce8834","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Janssen Cosmetics",66,"Janssen Cosmetics",258,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[36],"2019":[40],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"67be6a22-f6e3-44c4-b01c-30459ee2134d","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Janssen Cosmetics",66,"Janssen Cosmetics",258,"Spas",3],"YearsData":{"2017":[0],"2018":[85],"2019":[97],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"8bd87b99-93ba-4ab7-8a7a-04a931fe272d","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Jolen Inc.",306,"Jolen",324,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[30],"2019":[33],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"0c612022-d3df-4387-95ab-118e4f8cb9b9","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Jolen Inc.",306,"Jolen",324,"Retail",2],"YearsData":{"2017":[0],"2018":[15],"2019":[17],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"fe22e1ac-bc34-4cd8-89b8-79a033766c30","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Jolen Inc.",306,"Jolen",324,"Spas",3],"YearsData":{"2017":[0],"2018":[105],"2019":[115],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"6b72afc3-02bf-4ed4-90b9-b96b8c5d871e","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Kama Ayurveda Pvt. Ltd.",291,"Kama Ayurveda",308,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[20],"2019":[21.9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"b50413a4-bacd-49d3-a90b-df83380a041c","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Kama Ayurveda Pvt. Ltd.",291,"Kama Ayurveda",308,"Spas",3],"YearsData":{"2017":[0],"2018":[72],"2019":[88.1],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"77537f8f-07df-4d10-a639-91367e14cedc","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Kaya Limited",314,"Kaya",331,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[200],"2019":[230],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"9be84a3d-bc2b-4f9a-b76b-f2e2360e2c1f","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Kundan Care Products Limited",292,"Allaine",309,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[36],"2019":[43],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"e4d3b653-a8f4-4a7a-aeaa-d7d5167c53cc","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Kundan Care Products Limited",292,"Allaine",309,"Retail",2],"YearsData":{"2017":[0],"2018":[5],"2019":[5.6],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"1831507a-0234-4ad7-986e-5563d2dd0996","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Kundan Care Products Limited",292,"Allaine",309,"Spas",3],"YearsData":{"2017":[0],"2018":[10],"2019":[11.4],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"e4421323-3f95-472d-a6f6-eaf2866f646e","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["L’Oréal",2,"Cheryl\'s Cosmeceuticals",316,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[351.2],"2019":[461.6],"2020":[10000],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c18ac13f-c579-48b5-8e6b-58ad7c053542","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["L’Oréal",2,"Cheryl\'s Cosmeceuticals",316,"Spas",3],"YearsData":{"2017":[0],"2018":[17.7],"2019":[18.5],"2020":[132],"2021":[100],"2022":[312],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"207a72d8-993a-4739-b9d0-76391ee82317","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["L’Oréal",2,"Decléor Paris",45,"Beauty institutes and salons",4],"YearsData":{"2017":[34],"2018":[23],"2019":[45],"2020":[78],"2021":[23],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c3326269-3dd4-4f41-923a-8b7f1220271b","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Lotus Professional Pvt. Ltd.",307,"Lotus Professional",325,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[469],"2019":[552],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"a58c441f-da5e-431b-92e3-c574c87eb330","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Lotus Professional Pvt. Ltd.",307,"Lotus Professional",325,"Retail",2],"YearsData":{"2017":[0],"2018":[175],"2019":[211],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"880358ff-2fe5-4342-980e-3d6287d72ea9","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Lotus Professional Pvt. Ltd.",307,"Lotus Professional",325,"Spas",3],"YearsData":{"2017":[0],"2018":[126],"2019":[141],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"77a246f8-bcf4-4115-9611-4189c53956b3","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Olivia Cosmetics",301,"Olivia",319,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[120],"2019":[132.5],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c41bc561-441c-4106-906e-f1e9779a0482","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Olivia Cosmetics",301,"Olivia",319,"Retail",2],"YearsData":{"2017":[0],"2018":[50],"2019":[58],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"45788038-4428-4a48-bdc1-4a9ede18ce85","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Olivia Cosmetics",301,"Olivia",319,"Spas",3],"YearsData":{"2017":[0],"2018":[30],"2019":[32.5],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"d1c480a6-4b6b-48bd-95b6-db034f5da9a5","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Omorovicza Cosmetics Limited",294,"Omorovicza",311,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[29],"2019":[31.9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c6f97c69-a58f-491c-ad70-822da3d53ac7","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Omorovicza Cosmetics Limited",294,"Omorovicza",311,"Retail",2],"YearsData":{"2017":[0],"2018":[4],"2019":[4.4],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"3a4363c3-9269-414a-bfea-7d91cda79b88","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Omorovicza Cosmetics Limited",294,"Omorovicza",311,"Spas",3],"YearsData":{"2017":[0],"2018":[8],"2019":[8.7],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"5c68cd55-5106-4830-bae6-635cc8c83e87","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Organic Harvest Pvt. Ltd.",304,"Organic Harvest",322,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[30],"2019":[31],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"15260e1c-8843-423a-945d-fce58885aee6","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Organic Harvest Pvt. Ltd.",304,"Organic Harvest",322,"Retail",2],"YearsData":{"2017":[0],"2018":[5],"2019":[6],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"0266915b-d6ee-4496-af9d-c0e69f59a4e7","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Organic Harvest Pvt. Ltd.",304,"Organic Harvest",322,"Spas",3],"YearsData":{"2017":[0],"2018":[15],"2019":[16],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"9ecf5572-1aea-4818-a790-ebcbf5f9400c","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Pevonia Botanica",46,"Pevonia",209,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[22.8],"2019":[24.5],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"d5c56f73-087a-453f-bd85-4192d9fd8773","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Pevonia Botanica",46,"Pevonia",209,"Spas",3],"YearsData":{"2017":[0],"2018":[53.2],"2019":[57.2],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"7f934295-c956-4d05-9ef4-6ebdf28f1b7e","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Pharmos Natur Green Luxury",289,"Glytone",6,"Beauty institutes and spas",5],"YearsData":{"2017":[200],"2018":[300],"2019":[400],"2020":[500],"2021":[600],"2022":[700],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"8f9b06d7-5523-4271-90be-b12a7dbf3388","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Phytomer",31,"Phytomer",34,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[33.9],"2019":[38.9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"b9548b68-6a0f-482e-85eb-77155e701218","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Phytomer",31,"Phytomer",34,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[5.1],"2019":[5.7],"2020":[6],"2021":[7],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"a6c39221-8cf0-477d-b4d9-3dea3768fce1","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Phytomer",31,"Phytomer",34,"Retail",2],"YearsData":{"2017":[0],"2018":[6],"2019":[6.9],"2020":[7],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"f21273d3-1a82-4559-a27f-0090323d3eae","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Phytomer",31,"Phytomer",34,"Spas",3],"YearsData":{"2017":[0],"2018":[11],"2019":[11.5],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"bd6c2a85-c4ac-4b1a-8243-9fc51c12faf4","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Pierre Fabre",6,"Avène",232,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[30],"2019":[32.1],"2020":[34],"2021":[34],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c0521d32-10bc-474e-939e-80dd82a82f85","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Private label",9,"Private label",9,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[966.9],"2019":[1019.8],"2020":[566],"2021":[566],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"da133980-4370-4012-9962-8cc58f179292","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Private label",9,"Private label",9,"Retail",2],"YearsData":{"2017":[0],"2018":[440.6],"2019":[480.1],"2020":[450],"2021":[460],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"24adf0d9-ec57-419b-8849-c4b7d6ebbb75","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Private label",9,"Private label",9,"Spas",3],"YearsData":{"2017":[0],"2018":[107.5],"2019":[111.1],"2020":[56],"2021":[0],"2022":[67],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"b9b291a9-b9b1-4791-8bbd-aa8377206012","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Rejsol",299,"Rejsol",317,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[10.7],"2019":[11.4],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"e8f8afac-aab3-41fd-b6fc-83c5f6ee2182","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Rémy Laure",296,"Rémy Laure",313,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[45],"2019":[53],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"ffdae724-5f04-4cd2-9758-2bbef330abb9","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Rémy Laure",296,"Rémy Laure",313,"Retail",2],"YearsData":{"2017":[0],"2018":[8],"2019":[9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"f1e3bd6e-c7eb-4525-88b4-acbc5f595d6b","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Rémy Laure",296,"Rémy Laure",313,"Spas",3],"YearsData":{"2017":[0],"2018":[22],"2019":[26],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"af1b1f17-4be4-417e-9ddc-0201a2306092","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Repêchage",155,"Repêchage",37,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[77],"2019":[85],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"37b1e50e-a4e3-4544-9dfa-ea78982e9d28","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Repêchage",155,"Repêchage",37,"Retail",2],"YearsData":{"2017":[0],"2018":[11],"2019":[12],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"83a5ca88-3d29-46f9-8350-7ddb8509fe44","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Repêchage",155,"Repêchage",37,"Spas",3],"YearsData":{"2017":[0],"2018":[22],"2019":[24],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"8293ea3a-0653-4b76-8e92-52de29d87df8","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Reviderm",65,"Reviderm",71,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[75],"2019":[84],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"55201ea8-b541-4711-8017-1d517f630d4a","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Sesderma Laboratorios",300,"Sesderma",318,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[2.4],"2019":[2.7],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"f6543d20-73a5-447d-8736-6d7560333d91","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Sesderma Laboratorios",300,"Sesderma",318,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[20],"2019":[22.4],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"3cd04933-55fa-4800-b014-c95eedc47666","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Sesderma Laboratorios",300,"Sesderma",318,"Spas",3],"YearsData":{"2017":[0],"2018":[2.6],"2019":[2.9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"e9d48a14-a1e7-41b8-9f2c-c5667d1c90be","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Shahnaz Husain Group",295,"Shahnaz Husain",312,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[150],"2019":[156],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"eb6d520e-4c97-4b69-b76b-7570fbec9fe5","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Shahnaz Husain Group",295,"Shahnaz Husain",312,"Retail",2],"YearsData":{"2017":[0],"2018":[60],"2019":[64],"2020":[10000],"2021":[9000],"2022":[8000],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"9f1e2a8a-b185-4e1f-90cb-8957d5feb91e","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Shahnaz Husain Group",295,"Shahnaz Husain",312,"Spas",3],"YearsData":{"2017":[0],"2018":[90],"2019":[92],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"bcff66da-c0dc-46c0-ab61-a3d234954f80","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Skeyndor",62,"Skeyndor",68,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[143.4],"2019":[172.1],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"ca3c58cf-275e-4ef4-bead-56b08eba0eb5","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Skeyndor",62,"Skeyndor",68,"Retail",2],"YearsData":{"2017":[0],"2018":[21],"2019":[25],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"019dc341-bc2d-4f78-96a3-ffaa3213c61f","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Skeyndor",62,"Skeyndor",68,"Spas",3],"YearsData":{"2017":[0],"2018":[35.6],"2019":[37.9],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"e34e3f98-c234-432f-9d13-b1fb232355a0","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Sothys Paris",37,"Sothys Paris",40,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[10],"2019":[11],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"20a270ea-7f5e-4eaa-8dcb-1da948ebc762","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Sothys Paris",37,"Sothys Paris",40,"Spas",3],"YearsData":{"2017":[0],"2018":[6],"2019":[7],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"b8b0755d-4da6-4b49-b029-db14812dcfb9","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Thalgo Cosmetics",53,"Thalgo",57,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[48.7],"2019":[54.8],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"749220c0-fd54-4bfd-bdeb-099a9c1195d7","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Thalgo Cosmetics",53,"Thalgo",57,"Retail",2],"YearsData":{"2017":[0],"2018":[6.9],"2019":[8.2],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"689517e4-2d78-4165-a61a-02d3c9b5214c","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Thalgo Cosmetics",53,"Thalgo",57,"Spas",3],"YearsData":{"2017":[0],"2018":[14.4],"2019":[15.7],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"34535ba5-6857-4cf8-930f-46a173a2aaae","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Three-N-Products Pvt. Ltd.",303,"Ayur Herbals",321,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[105],"2019":[117],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"c99b8e5a-6fa7-4044-8a14-8460abd047c1","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Three-N-Products Pvt. Ltd.",303,"Ayur Herbals",321,"Retail",2],"YearsData":{"2017":[0],"2018":[95],"2019":[112],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"94e86455-b2fa-4e4c-88fa-d396d90e0830","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Three-N-Products Pvt. Ltd.",303,"Ayur Herbals",321,"Spas",3],"YearsData":{"2017":[0],"2018":[50],"2019":[55],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"6cd65c12-00a9-4142-9b83-9352e7d064d8","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Unilever",180,"Dermalogica",33,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[9],"2019":[10],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"d31e4f17-8104-4c65-a300-56507e0d6864","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Unilever",180,"Dermalogica",33,"Spas",3],"YearsData":{"2017":[0],"2018":[21],"2019":[23],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"5111a1d1-db6c-4c64-a633-fb4e996be879","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Visage Beauty & Health Care Pvt Ltd",302,"O3+",320,"Beauty institutes and salons",4],"YearsData":{"2017":[0],"2018":[600],"2019":[735],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"91509e76-4a68-46b7-91d4-a74f52b601f5","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Visage Beauty & Health Care Pvt Ltd",302,"O3+",320,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[65],"2019":[72],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"6ce817e3-3ebd-4da8-85e4-85743432ee9a","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Visage Beauty & Health Care Pvt Ltd",302,"O3+",320,"Retail",2],"YearsData":{"2017":[0],"2018":[128],"2019":[159],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"d9ed7d1b-15dd-40e8-8749-f3cc7afeb50a","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["Visage Beauty & Health Care Pvt Ltd",302,"O3+",320,"Spas",3],"YearsData":{"2017":[0],"2018":[222],"2019":[242],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"accbb67c-3037-4421-aae3-f0f13ea706ee","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["VLCC",293,"VLCC",310,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[150],"2019":[158],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"d9cb9cfb-5af5-46d9-a424-87086f083241","ChangeLog":null,"IsNewRow":false},{"ColumnsData":["ZO Skin Health",199,"ZO Skin Health",21,"Medical care providers",1],"YearsData":{"2017":[0],"2018":[75],"2019":[92],"2020":[0],"2021":[0],"2022":[0],"2023":[null],"2024":[null],"2025":[null],"2026":[null],"2027":[null]},"DataRowId":"2487b34d-86cb-4e52-86ec-643418fd6ef6","ChangeLog":null,"IsNewRow":false}]}}');

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(14431)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map