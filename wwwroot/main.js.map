{"version":3,"file":"main.js","mappings":"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":["./src/app/Constant.ts","./src/app/animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data-grids-configuration/data-grids-configuration.component.ts","./src/app/data-grids-configuration/data-grids-configuration.component.html","./src/app/initial-setup/initial-setup.component.ts","./src/app/initial-setup/initial-setup.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/pages/calculator/calculator.component.ts","./src/app/pages/calculator/calculator.component.html","./src/app/pages/calculator/components/calculator-preview/calculator-preview.component.ts","./src/app/pages/calculator/components/calculator-preview/calculator-preview.component.html","./src/app/pages/calculator/components/input-selector/input-selector.component.ts","./src/app/pages/calculator/components/input-selector/input-selector.component.html","./src/app/pages/pages-routing.module.ts","./src/app/pages/pages.module.ts","./src/app/pages/share/share.component.ts","./src/app/pages/share/share.component.html","./src/app/pages/study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component.ts","./src/app/pages/study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component.html","./src/app/pages/study-area-preview/components/service-category-consumption-preview/service-category-consumption-preview.component.ts","./src/app/pages/study-area-preview/components/service-category-consumption-preview/service-category-consumption-preview.component.html","./src/app/pages/study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component.ts","./src/app/pages/study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component.html","./src/app/pages/study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component.ts","./src/app/pages/study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component.html","./src/app/pages/study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component.ts","./src/app/pages/study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component.html","./src/app/pages/study-area-preview/study-area-preview.component.ts","./src/app/pages/study-area-preview/study-area-preview.component.html","./src/app/pages/study-area-summary/study-area-summary.component.ts","./src/app/pages/study-area-summary/study-area-summary.component.html","./src/app/pages/study-area/components/average-price/average-price-preview/average-price-preview.component.ts","./src/app/pages/study-area/components/average-price/average-price-preview/average-price-preview.component.html","./src/app/pages/study-area/components/average-price/average-price.component.ts","./src/app/pages/study-area/components/average-price/average-price.component.html","./src/app/pages/study-area/components/ehc/ehc.component.ts","./src/app/pages/study-area/components/ehc/ehc.component.html","./src/app/pages/study-area/components/ehc/sub/ehc-sales/ehc-sales-preview/ehc-sales-preview.component.ts","./src/app/pages/study-area/components/ehc/sub/ehc-sales/ehc-sales-preview/ehc-sales-preview.component.html","./src/app/pages/study-area/components/ehc/sub/ehc-sales/ehc-sales.component.ts","./src/app/pages/study-area/components/ehc/sub/ehc-sales/ehc-sales.component.html","./src/app/pages/study-area/components/ehc/sub/market-consumption/market-consumption-preview/market-consumption-preview.component.ts","./src/app/pages/study-area/components/ehc/sub/market-consumption/market-consumption-preview/market-consumption-preview.component.html","./src/app/pages/study-area/components/ehc/sub/market-consumption/market-consumption.component.ts","./src/app/pages/study-area/components/ehc/sub/market-consumption/market-consumption.component.html","./src/app/pages/study-area/components/ivm/ivm.component.ts","./src/app/pages/study-area/components/ivm/ivm.component.html","./src/app/pages/study-area/components/ivm/sub/product-composition/product-composition-preview/product-composition-preview.component.ts","./src/app/pages/study-area/components/ivm/sub/product-composition/product-composition-preview/product-composition-preview.component.html","./src/app/pages/study-area/components/ivm/sub/product-composition/product-composition.component.ts","./src/app/pages/study-area/components/ivm/sub/product-composition/product-composition.component.html","./src/app/pages/study-area/components/ivm/sub/ps/ps.component.ts","./src/app/pages/study-area/components/ivm/sub/ps/ps.component.html","./src/app/pages/study-area/components/lubricant-demand/lubricant-demand.component.ts","./src/app/pages/study-area/components/lubricant-demand/lubricant-demand.component.html","./src/app/pages/study-area/components/pnc/pnc.component.ts","./src/app/pages/study-area/components/pnc/pnc.component.html","./src/app/pages/study-area/components/pnc/sub/pts/pts.component.ts","./src/app/pages/study-area/components/pnc/sub/pts/pts.component.html","./src/app/pages/study-area/components/psc/psc.component.ts","./src/app/pages/study-area/components/psc/psc.component.html","./src/app/pages/study-area/components/psc/sub/brand-sales/brand-sales-preview/brand-sales-preview.component.ts","./src/app/pages/study-area/components/psc/sub/brand-sales/brand-sales-preview/brand-sales-preview.component.html","./src/app/pages/study-area/components/psc/sub/brand-sales/brand-sales.component.ts","./src/app/pages/study-area/components/psc/sub/brand-sales/brand-sales.component.html","./src/app/pages/study-area/components/psc/sub/european-country-sales/european-country-sales-preview/european-country-sales-preview.component.ts","./src/app/pages/study-area/components/psc/sub/european-country-sales/european-country-sales-preview/european-country-sales-preview.component.html","./src/app/pages/study-area/components/psc/sub/european-country-sales/european-country-sales.component.ts","./src/app/pages/study-area/components/psc/sub/european-country-sales/european-country-sales.component.html","./src/app/pages/study-area/components/psc/sub/product-type-sales/product-type-sale-preview/product-type-sale-preview.component.ts","./src/app/pages/study-area/components/psc/sub/product-type-sales/product-type-sale-preview/product-type-sale-preview.component.html","./src/app/pages/study-area/components/psc/sub/product-type-sales/product-type-sales.component.ts","./src/app/pages/study-area/components/psc/sub/product-type-sales/product-type-sales.component.html","./src/app/pages/study-area/components/psc/sub/segment-sales/segment-sales-preview/segment-sales-preview.component.ts","./src/app/pages/study-area/components/psc/sub/segment-sales/segment-sales-preview/segment-sales-preview.component.html","./src/app/pages/study-area/components/psc/sub/segment-sales/segment-sales.component.ts","./src/app/pages/study-area/components/psc/sub/segment-sales/segment-sales.component.html","./src/app/pages/study-area/components/service-category-consumption/service-category-consumption.component.ts","./src/app/pages/study-area/components/service-category-consumption/service-category-consumption.component.html","./src/app/pages/study-area/components/shc/shc.component.ts","./src/app/pages/study-area/components/shc/shc.component.html","./src/app/pages/study-area/components/shc/sub/cbs/cbs.component.ts","./src/app/pages/study-area/components/shc/sub/cbs/cbs.component.html","./src/app/pages/study-area/components/shc/sub/fs/fs.component.ts","./src/app/pages/study-area/components/shc/sub/fs/fs.component.html","./src/app/pages/study-area/components/shc/sub/ir/ir.component.ts","./src/app/pages/study-area/components/shc/sub/ir/ir.component.html","./src/app/pages/study-area/components/shc/sub/os/os.component.ts","./src/app/pages/study-area/components/shc/sub/os/os.component.html","./src/app/pages/study-area/components/shc/sub/pcs/pcs.component.ts","./src/app/pages/study-area/components/shc/sub/pcs/pcs.component.html","./src/app/pages/study-area/components/shc/sub/pts/pts.component.ts","./src/app/pages/study-area/components/shc/sub/pts/pts.component.html","./src/app/pages/study-area/components/shc/sub/sc/sc.component.ts","./src/app/pages/study-area/components/shc/sub/sc/sc.component.html","./src/app/pages/study-area/components/shc/sub/shc-preview/preview-top-menu/preview-top-menu.component.ts","./src/app/pages/study-area/components/shc/sub/shc-preview/preview-top-menu/preview-top-menu.component.html","./src/app/pages/study-area/components/shc/sub/shc-preview/shc-preview.component.ts","./src/app/pages/study-area/components/shc/sub/shc-preview/shc-preview.component.html","./src/app/pages/study-area/components/show-initial-setup/show-initial-setup.component.ts","./src/app/pages/study-area/components/show-initial-setup/show-initial-setup.component.html","./src/app/pages/study-area/components/specialty-excipient-sales/specialty-excipient-sales-preview/specialty-excipient-sales-preview.component.ts","./src/app/pages/study-area/components/specialty-excipient-sales/specialty-excipient-sales-preview/specialty-excipient-sales-preview.component.html","./src/app/pages/study-area/components/specialty-excipient-sales/specialty-excipient-sales.component.ts","./src/app/pages/study-area/components/specialty-excipient-sales/specialty-excipient-sales.component.html","./src/app/pages/study-area/components/study/study.component.ts","./src/app/pages/study-area/components/study/study.component.html","./src/app/pages/study-area/components/supplier-market-share/supplier-market-share.component.ts","./src/app/pages/study-area/components/supplier-market-share/supplier-market-share.component.html","./src/app/pages/study-area/components/synthetic-penetration/synthetic-penetration.component.ts","./src/app/pages/study-area/components/synthetic-penetration/synthetic-penetration.component.html","./src/app/pages/study-area/components/vehicle-parc-statistics/vehicle-parc-statistics.component.ts","./src/app/pages/study-area/components/vehicle-parc-statistics/vehicle-parc-statistics.component.html","./src/app/pages/study-area/study-area.component.ts","./src/app/pages/study-area/study-area.component.html","./src/app/shared/ag-grid/ag-grid.component.ts","./src/app/shared/ag-grid/ag-grid.component.html","./src/app/shared/confirm-navigation/confirm-navigation.component.ts","./src/app/shared/confirm-navigation/confirm-navigation.component.html","./src/app/shared/disable-study-editing/disable-study-editing.component.ts","./src/app/shared/disable-study-editing/disable-study-editing.component.html","./src/app/shared/handson-table/components/comments/comments.component.ts","./src/app/shared/handson-table/components/comments/comments.component.html","./src/app/shared/handson-table/components/study-comments/study-comments.component.ts","./src/app/shared/handson-table/components/study-comments/study-comments.component.html","./src/app/shared/handson-table/handson-table.component.ts","./src/app/shared/handson-table/handson-table.component.html","./src/app/shared/handsontable/handsontable.component.ts","./src/app/shared/handsontable/handsontable.component.html","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/pivot-grid-preview/pivot-grid-preview-top-menu/pivot-grid-preview-top-menu.component.ts","./src/app/shared/pivot-grid-preview/pivot-grid-preview-top-menu/pivot-grid-preview-top-menu.component.html","./src/app/shared/pivot-grid-preview/pivot-grid-preview.component.ts","./src/app/shared/pivot-grid-preview/pivot-grid-preview.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/extensions/common.extension.ts","./src/guard/auth.guard.ts","./src/guard/commonHelper.ts","./src/guard/error.interceptor.ts","./src/guard/jwt.interceptor.ts","./src/main.ts","./src/model/dataGridConfiguration.model.ts","./src/model/dataGridState.model.ts","./src/model/dataSourceResponse.model.ts","./src/model/dropdownCurrency.model.ts","./src/model/dropdownUnits.model.ts","./src/model/enums/calculatedFieldType.enum.ts","./src/model/enums/computingType.enum.ts","./src/model/enums/currencyConversionType.enum.ts","./src/model/enums/dataFieldArea.enum.ts","./src/model/enums/dataRelations.enum.ts","./src/model/enums/pivotGridDataFieldType.enum.ts","./src/model/enums/specialValueType.enum.ts","./src/model/enums/studyDataUrl.enum.ts","./src/model/initialSetup.model.ts","./src/model/pivotGridOptions.model.ts","./src/model/studyAreaSummary.model.ts","./src/model/userDetail.model.ts","./src/model/userStateAndSetttings.model.ts","./src/services/calculator.service.ts","./src/services/common.service.ts","./src/services/localStorage.service.ts","./src/services/pending-changes.guard.ts","./src/services/pending-changes.service.ts","./src/services/settings.service.ts","./src/services/shared.service.ts","./src/services/study.service.ts","./src/services/user.service.ts","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["export class Constants {\r\n  public static environment = '-uat'; // dev -> -dev, uat -> -uat, prod -> ''\r\n  public static serverEndpoint: string = `https://klinecorewebapi${this.environment}.azurewebsites.net`;\r\n\r\n  // Localhost\r\n  //public static serverEndpoint: string = \"https://localhost:5001\";\r\n\r\n  // UAT -> https://klinecorewebapi-uat.azurewebsites.net\r\n  // DEV -> https://klinecorewebapi-dev.azurewebsites.net\r\n  // PROD -> https://klinecorewebapi.azurewebsites.net\r\n\r\n  public static apiEndpoint: string = `${this.serverEndpoint}/api`;\r\n\r\n  // store user data in the local storage\r\n  public static userDataKey = '7d70cb2c-bf6a-42dd-9c0b-b0d78df47391';\r\n\r\n  public static userDetailKey = '8a6f42b7-0162-41e3-b353-fa1c6e1f2167';\r\n\r\n  public static MSAL_CLIENT_ID = '26ce7496-7c7e-4f8d-adef-e99f6a80a6c4';\r\n}\r\n","import {\r\n    trigger, state, style, transition,\r\n    animate, group, query, stagger, keyframes\r\n} from '@angular/animations';\r\n\r\nexport const SlideInOutAnimation = [\r\n    trigger('slideInOut', [\r\n        state('in', style({\r\n            'opacity': '1', 'visibility': 'visible'\r\n        })),\r\n        state('out', style({\r\n            'opacity': '0', 'visibility': 'hidden'\r\n        })),\r\n        transition('in => out', [group([\r\n            animate('200ms ease-in-out', style({\r\n                'opacity': '0'\r\n            })),\r\n            animate('500ms ease-in-out', style({\r\n                'visibility': 'hidden'\r\n            }))\r\n        ]\r\n        )]),\r\n        transition('out => in', [group([\r\n            animate('1ms ease-in-out', style({\r\n                'visibility': 'visible'\r\n            })),\r\n            animate('200ms ease-in-out', style({\r\n                'opacity': '1'\r\n            }))\r\n        ]\r\n        )])\r\n    ]),\r\n]","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/guard/auth.guard';\r\nimport { DataGridsConfigurationComponent } from './data-grids-configuration/data-grids-configuration.component';\r\nimport { InitialSetupComponent } from './initial-setup/initial-setup.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'initial-setup',\r\n    component: InitialSetupComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      role: 'MANAGER',\r\n    },\r\n  },\r\n  {\r\n    path: 'app-data-grids-configuration',\r\n    component: DataGridsConfigurationComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      role: 'MANAGER',\r\n    },\r\n  },\r\n  // {\r\n  //   path: 'study-summary',\r\n  //   component: StudyAreaSummaryComponent,\r\n  //   canActivate: [AuthGuard],\r\n  // },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'study-summary',\r\n    pathMatch: 'full',\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { AuthenticationResult } from '@azure/msal-browser';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { UserData } from 'src/model/userData.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Constants } from './Constant';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'KlineCoreUI';\r\n  isLoading!: Observable<boolean>;\r\n  constructor(\r\n    private authService: MsalService,\r\n    private localStorageService: LocalStorageService,\r\n    private route: Router,\r\n    private userService: UserService,\r\n    private isLoadingService: IsLoadingService\r\n  ) {\r\n    // this.isLoading = this.isLoadingService.isLoading$();\r\n  }\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.isLoading = this.isLoadingService.isLoading$();\r\n    }, 0);\r\n    const currentUser = this.localStorageService.getData(\r\n      Constants.userDataKey\r\n    ) as UserData;\r\n\r\n    const currentUserData = this.localStorageService.getData(\r\n      Constants.userDetailKey\r\n    );\r\n\r\n    if (\r\n      typeof currentUser.idToken === 'undefined' ||\r\n      typeof currentUserData.EmailAddress === 'undefined'\r\n    ) {\r\n      this.authService.instance.handleRedirectPromise().then((res) => {\r\n        if (res != null && res.account != null) {\r\n          this.authService.instance.setActiveAccount(res.account);\r\n          // console.log(res);\r\n          this.localStorageService.setData(\r\n            {\r\n              userName: res.account.username,\r\n              token: res.accessToken,\r\n              idToken: res.idToken,\r\n            },\r\n            Constants.userDataKey\r\n          );\r\n          this.getUserDetail(res.account.username);\r\n        } else {\r\n          this.route.navigate(['login']);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.instance.getActiveAccount() != null;\r\n  }\r\n\r\n  login() {\r\n    this.authService.loginRedirect();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  getUserDetail(emailAddress: string) {\r\n    this.userService.getUserDetail(emailAddress).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          const userDetail = new UserDetail().deserialize(res.Data);\r\n          this.localStorageService.setData(userDetail, Constants.userDetailKey);\r\n\r\n          this.route.navigate(['study-summary']);\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div\n  *ngIf=\"isLoading | async\"\n  class=\"d-flex justify-content-center align-items-center isload\"\n>\n  <div class=\"centerKlinePreloader\">\n    <div class=\"spinner-container\">\n      <img id=\"logoOut\" src=\"../../images/KlineLogoOut.png\" />\n      <img id=\"logoIn\" src=\"../../images/KlineLogoIn.png\" />\n    </div>\n  </div>\n</div>\n<router-outlet></router-outlet>\n<ff-alerts></ff-alerts>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { MsalModule, MsalService, MSAL_INSTANCE } from '@azure/msal-angular';\nimport {\n  IPublicClientApplication,\n  PublicClientApplication,\n} from '@azure/msal-browser';\nimport {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS,\n} from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { InitialSetupComponent } from './initial-setup/initial-setup.component';\nimport { LocalStorageService } from 'src/services/localStorage.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { DxDataGridModule } from 'devextreme-angular';\n\nimport { PagesModule } from './pages/pages.module';\nimport { SharedModule } from './shared/shared.module';\nimport { JwtInterceptor } from 'src/guard/jwt.interceptor';\nimport { Constants } from './Constant';\nimport { AuthGuard } from 'src/guard/auth.guard';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { AlertModule } from '@full-fledged/alerts';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { ErrorInterceptor } from 'src/guard/error.interceptor';\nimport { LoginComponent } from './login/login.component';\n\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  return new PublicClientApplication({\n    auth: {\n      // clientId: '26ce7496-7c7e-4f8d-adef-e99f6a80a6c4',\n      clientId: Constants.MSAL_CLIENT_ID,\n      redirectUri: window.location.origin,\n    },\n  });\n}\n\n@NgModule({\n  declarations: [AppComponent, InitialSetupComponent, LoginComponent],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    PagesModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    MsalModule,\n    BrowserAnimationsModule,\n    ModalModule.forRoot(),\n    NgSelectModule,\n    SharedModule,\n    AlertModule.forRoot({\n      maxMessages: 1,\n      timeout: 5000,\n      positionX: 'right',\n      positionY: 'top',\n    }),\n    DxDataGridModule,\n  ],\n  providers: [\n    {\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory,\n    },\n    MsalService,\n    AuthGuard,\n    LocalStorageService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { Common } from '../../extensions/common.extension';\r\nimport { ApiResponse } from '../../model/apiResponse.model';\r\nimport { DataGridConfiguration } from '../../model/dataGridConfiguration.model';\r\nimport { SettingsService } from '../../services/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-data-grids-configuration',\r\n  templateUrl: './data-grids-configuration.component.html',\r\n  styleUrls: ['./data-grids-configuration.component.css']\r\n})\r\nexport class DataGridsConfigurationComponent implements OnInit {\r\n  studyDatasetAndCategories: any;\r\n  studyDatasetAndCategoriesTree: any;\r\n  parsingJsonSettingsErrorMessage: string = \"\";\r\n  selectedDataItemCategory: any;\r\n  currentlyLoadedSettingsJson: string = \"\";\r\n  currentlyLoadedSettingsObj: any;\r\n\r\n  constructor(\r\n    private settingsService: SettingsService,\r\n    private alertService: AlertService,\r\n    private isLoadingService: IsLoadingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudyDatasetAndCategories();\r\n  }\r\n\r\n  getStudyDatasetAndCategories() {\r\n    this.isLoadingService.add();\r\n    this.settingsService.getStudyDatasetAndCategories().subscribe(\r\n      (data: ApiResponse) => {\r\n        if (data?.HttpStatusCode === 200) {\r\n          this.createStudyDatasetAndCategoriesTreeSource(data.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  createStudyDatasetAndCategoriesTreeSource(studyDatasetAndCategories: any[]) {\r\n    let id = 1;\r\n    let studyDatasetAndCategoriesTree: any[] = [];\r\n    for (let category of studyDatasetAndCategories) {\r\n      let dataset = studyDatasetAndCategoriesTree.find(f => f.dataSetId === category.DataSetId);\r\n      if (dataset) {\r\n        dataset.items.push({\r\n          id: id++,\r\n          dataItemCategoryId: category.DataItemCategoryId,\r\n          text: category.DataItemCategoryName,\r\n          isRoot: false\r\n        });\r\n      }\r\n      else {\r\n        studyDatasetAndCategoriesTree.push({\r\n          id: id++,\r\n          dataSetId: category.DataSetId,\r\n          text: category.DataSetName,\r\n          isRoot: true,\r\n          items: [\r\n            {\r\n              id: id++,\r\n              dataItemCategoryId: category.DataItemCategoryId,\r\n              text: category.DataItemCategoryName,\r\n              isRoot: false\r\n            }]\r\n        });\r\n      }\r\n    }\r\n    console.log(studyDatasetAndCategoriesTree);\r\n    this.studyDatasetAndCategoriesTree = studyDatasetAndCategoriesTree;\r\n  }\r\n\r\n  onCategoryClick(e: any) {\r\n    if (e.itemData.isRoot === false) {\r\n      this.selectedDataItemCategory = e.itemData;\r\n      this.getDataGridSettings(e.itemData.dataItemCategoryId);\r\n    }\r\n  }\r\n\r\n  getDataGridSettings(dataItemCategoryId: number) {\r\n    this.isLoadingService.add();\r\n    this.settingsService.getDataGridSettings(dataItemCategoryId).subscribe(\r\n      (data: ApiResponse) => {\r\n        if (data?.HttpStatusCode === 200) {\r\n          try {\r\n            console.log(data.Data);\r\n            const settingsObj = Common.realMerge(new DataGridConfiguration(), JSON.parse(data.Data[0]?.DataJson as string || \"{}\"));\r\n            this.currentlyLoadedSettingsObj = settingsObj\r\n            this.currentlyLoadedSettingsJson = JSON.stringify(settingsObj, null, 2);\r\n          }\r\n          catch (e) {\r\n            this.parsingJsonSettingsErrorMessage = e as string;\r\n          }\r\n          finally {\r\n            this.isLoadingService.remove();\r\n          }\r\n        } else {\r\n          this.alertService.danger(data?.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  saveDataGridSettings() {\r\n    this.parsingJsonSettingsErrorMessage = \"\";\r\n    let settingsJson = this.currentlyLoadedSettingsJson;\r\n    try {\r\n      //try to parse and check if JSON is valid and stringify it to make it minimized\r\n      const parsedJson = JSON.parse(settingsJson);\r\n      settingsJson = JSON.stringify(parsedJson);\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n      this.parsingJsonSettingsErrorMessage = e as string;\r\n    }\r\n\r\n    if (this.parsingJsonSettingsErrorMessage.length === 0) {\r\n\r\n      this.isLoadingService.add();\r\n      this.settingsService.saveDataGridSettings(this.selectedDataItemCategory.dataItemCategoryId, settingsJson).subscribe(\r\n        (data: ApiResponse) => {\r\n          if (data?.HttpStatusCode === 200) {\r\n            this.alertService.success(data?.Data)\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(data?.Data);\r\n            this.isLoadingService.remove();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <dx-tree-view #treeview\r\n                  [items]=\"studyDatasetAndCategoriesTree\"\r\n                  expandEvent=\"click\"\r\n                  selectionMode=\"single\"\r\n                  [selectByClick]=\"true\"\r\n                  [searchEnabled]=\"true\"\r\n                  searchMode=\"contains\"\r\n                  (onItemClick)=\"onCategoryClick($event)\">\r\n    </dx-tree-view>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"currentlyLoadedSettingsJson\" class=\"row\">\r\n  <div class=\"col\">\r\n    <h3 class=\"marginHeader\">{{selectedDataItemCategory.text}}</h3>\r\n    <dx-button class=\"marginBtn\"\r\n               stylingMode=\"contained\"\r\n               text=\"Save settings JSON\"\r\n               type=\"normal\"\r\n               (onClick)=\"saveDataGridSettings()\">\r\n    </dx-button>\r\n    <div *ngIf=\"parsingJsonSettingsErrorMessage\" class=\"alert alert-danger\" role=\"alert\">\r\n      {{parsingJsonSettingsErrorMessage}}\r\n    </div>\r\n    <dx-text-area class=\"marginTextbox\"\r\n                  [autoResizeEnabled]=\"true\"\r\n                  [minHeight]=\"100\"\r\n                  [(value)]=\"currentlyLoadedSettingsJson\">\r\n    </dx-text-area>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"!currentlyLoadedSettingsJson\" class=\"row\">\r\n  <div class=\"col\">\r\n    <div class=\"marginTextbox\">\r\n      Please select category\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ModalDirective } from 'ngx-bootstrap/modal';\r\nimport { Analyst } from 'src/model/analyst.model';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { Market } from 'src/model/market.model';\r\nimport { Project } from 'src/model/project.model';\r\nimport { ProjectLead } from 'src/model/projectLead.model';\r\nimport { StudyAreaCategory, StudyDataSet } from 'src/model/studyDataSet.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { Constants } from '../Constant';\r\n\r\n@Component({\r\n  selector: 'app-initial-setup',\r\n  templateUrl: './initial-setup.component.html',\r\n  styleUrls: ['./initial-setup.component.css'],\r\n})\r\nexport class InitialSetupComponent implements OnInit {\r\n  studyAreas: StudyDataSet[] = [];\r\n  studyAreaCategories: StudyAreaCategory[] = [];\r\n  projects: Project[] = [];\r\n  studyYears: number[] = [];\r\n  projectLeads: ProjectLead[] = [];\r\n  markets: Market[] = [];\r\n  analyst: Analyst[] = [];\r\n  preFillFormData: InitialSetup[] = [];\r\n\r\n  initialSetupForm: FormGroup;\r\n\r\n  initialSetupData: any = null;\r\n\r\n  submitted: boolean = false;\r\n\r\n  showSuccessMsg = false;\r\n\r\n  studySummary: any;\r\n\r\n  @ViewChild('prefillFromModel', { static: false })\r\n  prefillFromModel?: ModalDirective;\r\n\r\n  studyAreaSummary: any[] = [];\r\n  userDetail: UserDetail;\r\n\r\n  constructor(\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private isLoadingService: IsLoadingService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    if (this.isLoadingService.isLoading$()) {\r\n      this.isLoadingService.remove();\r\n    }\r\n    const currentYear = new Date().getFullYear();\r\n    // for (var i = currentYear + 1; i >= currentYear - 10; i--) {\r\n    //   this.studyYears.push(i);\r\n    // }\r\n\r\n    this.userDetail = this.localStorageService.getData(Constants.userDetailKey);\r\n\r\n    // this.initialSetupForm = this.initialSetupForm.patchValue({\r\n    this.initialSetupForm = this.formBuilder.group({\r\n      studyDataSetId: [null, Validators.required],\r\n      studyProjectId: [null, Validators.required],\r\n      projectLeadId: [null, Validators.required],\r\n      analystId: [null, Validators.required],\r\n      studyAreaId: [null],\r\n      studyYear: [null, Validators.required],\r\n      marketId: [null, Validators.required],\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      preFillForm: [null],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudyArea();\r\n    this.getProjectLeads();\r\n    this.getAnalyst();\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.initialSetupForm.controls;\r\n  }\r\n\r\n  getStudyArea() {\r\n    this.sharedService.getStudyArea().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.studyAreas = res.Data as StudyDataSet[];\r\n        // this.getProjects();\r\n      }\r\n    });\r\n  }\r\n\r\n  changeDataSet() {\r\n    const dataSet = this.initialSetupForm.get('studyDataSetId')?.value;\r\n    let studyYear = this.initialSetupForm.get('studyYear')?.value;\r\n    this.studyYears = [];\r\n    if (dataSet !== null) {\r\n      studyYear = studyYear > 0 ? studyYear : 0;\r\n      dataSet.Years.map((year: number) => {\r\n        this.studyYears.push(year);\r\n      });\r\n\r\n      // console.log(this.studyYears);\r\n      // this.getProjects(dataSet.Id, studyYear);\r\n      this.getStudyAreaCategory(dataSet.Id);\r\n      // this.getMarket(dataSet.Id, studyYear);\r\n    } else {\r\n      this.studyAreaCategories = [];\r\n    }\r\n    this.initialSetupForm.get('studyYear')?.setValue(null);\r\n    this.initialSetupForm.get('studyProjectId')?.setValue(null);\r\n    this.initialSetupForm.get('studyAreaId')?.setValue(null);\r\n    this.initialSetupForm.get('marketId')?.setValue(null);\r\n    this.initialSetupForm.updateValueAndValidity();\r\n\r\n    this.generateStudyName();\r\n  }\r\n\r\n  changeStudyYear() {\r\n    const dataSet = this.initialSetupForm.get('studyDataSetId')?.value;\r\n    let studyYear = this.initialSetupForm.get('studyYear')?.value;\r\n    if (dataSet !== null) {\r\n      studyYear = studyYear > 0 ? studyYear : 0;\r\n      this.getProjects(dataSet.Id, studyYear);\r\n      this.getMarket(dataSet.Id, studyYear);\r\n    }\r\n    this.initialSetupForm.get('studyProjectId')?.setValue(null);\r\n    this.initialSetupForm.get('marketId')?.setValue(null);\r\n    this.initialSetupForm.updateValueAndValidity();\r\n\r\n    this.generateStudyName();\r\n  }\r\n\r\n  getStudyAreaCategory(dataSetId: number) {\r\n    this.sharedService\r\n      .getStudyAreaCategory(dataSetId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyAreaCategories = res.Data as StudyAreaCategory[];\r\n          if(dataSetId == 4){\r\n            const lastIndex = this.studyAreaCategories.length - 1;\r\n            if(lastIndex>0){\r\n              this.studyAreaCategories[lastIndex-1] = this.studyAreaCategories.splice(lastIndex,1,this.studyAreaCategories[lastIndex-1])[0];\r\n            }\r\n          }\r\n          // this.getProjects(dataSetId);\r\n        }\r\n      });\r\n  }\r\n\r\n  getProjects(dataSetId: number, year: number) {\r\n    this.sharedService\r\n      .getProject(dataSetId, year)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.projects = res.Data as Project[];\r\n          const firstProject =\r\n            typeof this.projects[0] !== 'undefined' ? this.projects[0] : {};\r\n          if (firstProject) {\r\n            this.initialSetupForm.get('studyProjectId')?.setValue(firstProject);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getProjectLeads() {\r\n    this.sharedService.getProjectLead().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.projectLeads = res.Data as ProjectLead[];\r\n        this.initialSetupForm\r\n          .get('projectLeadId')\r\n          ?.setValue(this.userDetail.Id);\r\n      }\r\n    });\r\n  }\r\n\r\n  getMarket(dataSetId: number, year: number) {\r\n    this.sharedService\r\n      .getMarket(dataSetId, year)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.markets = res.Data as Market[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getAnalyst() {\r\n    this.sharedService.getAnalyst().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.analyst = res.Data as Analyst[];\r\n      }\r\n    });\r\n  }\r\n\r\n  getInitialSetupByMarketId(marketId: number, studyArea: number) {\r\n    this.sharedService\r\n      .getInitialSetupByMarketId(marketId, studyArea)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.preFillFormData = res.Data.map((list: InitialSetup) =>\r\n            new InitialSetup().deserialize(list)\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  onMarketChange() {\r\n    const selectedMarket = this.initialSetupForm.get('marketId')\r\n      ?.value as Market;\r\n\r\n    const selectedStudyArea = this.initialSetupForm.get('studyAreaId')?.value;\r\n    this.initialSetupForm.get('preFillForm')?.setValue(null);\r\n    if (selectedMarket && selectedStudyArea) {\r\n      this.getInitialSetupByMarketId(selectedMarket.Id, selectedStudyArea.Id);\r\n    }\r\n    this.generateStudyName();\r\n  }\r\n\r\n  onStudyAreaChange() {\r\n    const selectedStudyArea = this.initialSetupForm.get('studyAreaId')?.value;\r\n    if (\r\n      selectedStudyArea &&\r\n      selectedStudyArea.Id === 26 &&\r\n      selectedStudyArea.DataSetStudyId === 3\r\n    ) {\r\n      this.initialSetupForm.get('marketId')?.setValue(null);\r\n      this.initialSetupForm.get('marketId')?.disable();\r\n    } else {\r\n      this.initialSetupForm.get('marketId')?.enable();\r\n    }\r\n\r\n    const selectedMarket = this.initialSetupForm.get('marketId')\r\n      ?.value as Market;\r\n    this.initialSetupForm.get('preFillForm')?.setValue(null);\r\n    if (selectedMarket && selectedStudyArea) {\r\n      this.getInitialSetupByMarketId(selectedMarket.Id, selectedStudyArea.Id);\r\n    }\r\n    this.generateStudyName();\r\n  }\r\n\r\n  onMarketClear() {\r\n    this.initialSetupForm.get('marketId')?.enable();\r\n    this.preFillFormData = [];\r\n    this.initialSetupForm.get('preFillForm')?.setValue(null);\r\n  }\r\n\r\n  generateStudyName() {\r\n    const studyDataSet = this.initialSetupForm.get('studyDataSetId')?.value;\r\n    const studyDataYear = this.initialSetupForm.get('studyYear')?.value;\r\n    const studyDataMarket = this.initialSetupForm.get('marketId')?.value;\r\n    const studyArea = this.initialSetupForm.get('studyAreaId')?.value;\r\n    const studyAreaId = studyArea !== null ? studyArea.Description : '';\r\n    const givenRef = this.convertDateToHexCode();\r\n\r\n    //Abbrivating DataSet Name \r\n    var originalDataSetName = studyDataSet ? studyDataSet.Name : '';\r\n    var matches = originalDataSetName.match(/\\b(\\w)/g);\r\n    const studyDataSetName = matches.join('');\r\n    \r\n    const studyDataMarketName = studyDataMarket\r\n      ? studyDataMarket.ShortName.replace('All Other','AO')\r\n      : '';\r\n\r\n    let studyName = '';\r\n    if (\r\n      studyDataSetName &&\r\n      studyDataYear &&\r\n      studyDataMarketName &&\r\n      studyAreaId\r\n    ) {\r\n      studyName = `${studyDataSetName}-${studyDataYear}-${studyDataMarketName}-${studyAreaId}-${givenRef}`;\r\n    } else if (studyDataSetName && studyDataMarketName && studyAreaId) {\r\n      studyName = `${studyDataSetName}-${studyDataMarketName}-${studyAreaId}-${givenRef}`;\r\n    } else if (studyDataSetName && studyDataYear && studyAreaId) {\r\n      studyName = `${studyDataSetName}-${studyDataYear}-${studyAreaId}-${givenRef}`;\r\n    } else if (studyDataSetName && studyAreaId) {\r\n      studyName = `${studyDataSetName}-${studyAreaId}-${givenRef}`;\r\n    } else if (studyAreaId) {\r\n      studyName = `${studyAreaId}-${givenRef}`;\r\n    }\r\n\r\n    this.initialSetupForm.get('name')?.setValue(studyName);\r\n  }\r\n\r\n  convertDateToHexCode(){\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    const mm = date.getMonth()+1;\r\n    const day = date.getDate();\r\n    const hh = date.getHours();\r\n    const min = date.getMinutes();\r\n    const sec = date.getSeconds();\r\n    const dateString = parseInt(\"\"+mm+day+hh+min+sec);\r\n    return (dateString.toString(16));\r\n  }\r\n  getStudyAreaSummaryByMarketYearId() {\r\n    const preFillForm: InitialSetup =\r\n      this.initialSetupForm.get('preFillForm')?.value;\r\n\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .getStudyAreaSummaryByStudyMarketYearId(preFillForm.Id)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyAreaSummary = res.Data;\r\n\r\n          const selectedStudyArea =\r\n            this.initialSetupForm.get('studyAreaId')?.value;\r\n          this.sharedService\r\n            .getInitialSetupById(preFillForm.Id, selectedStudyArea.Id)\r\n            .subscribe((response: ApiResponse) => {\r\n              if (response.HttpStatusCode === 200) {\r\n                const initialSetupData = response.Data.map(\r\n                  (item: InitialSetup) => new InitialSetup().deserialize(item)\r\n                );\r\n                this.initialSetupData = initialSetupData[0] as InitialSetup;\r\n                this.isLoadingService.remove();\r\n                this.prefillFromModel?.show();\r\n              }\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  onFromSubmit() {\r\n    this.submitted = true;\r\n    if (this.initialSetupForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const projectLead = this.projectLeads.find(\r\n      (item) => item.Id === this.initialSetupForm.value.projectLeadId\r\n    );\r\n\r\n    const studyData = this.initialSetupForm.value.studyAreaId;\r\n    let marketId =\r\n      typeof this.initialSetupForm.value.marketId !== 'undefined' &&\r\n      this.initialSetupForm.value.marketId !== null\r\n        ? this.initialSetupForm.value.marketId.Id\r\n        : 0;\r\n    let marketName =\r\n      typeof this.initialSetupForm.value.marketId !== 'undefined' &&\r\n      this.initialSetupForm.value.marketId !== null\r\n        ? this.initialSetupForm.value.marketId.OfficialName\r\n        : '';\r\n    if (studyData && studyData.DataSetStudyId === 3 && studyData.Id === 26) {\r\n      marketId = 21;\r\n      marketName = 'Europe';\r\n    }\r\n\r\n    let analystId: number[] = [];\r\n    let analystName: string[] = [];\r\n    if (this.initialSetupForm.value.analystId.length > 0) {\r\n      this.initialSetupForm.value.analystId.map((single: any) => {\r\n        analystId.push(single.Id);\r\n        analystName.push(single.Name);\r\n      });\r\n    }\r\n\r\n    const formData = {\r\n      analystIdList: analystId,\r\n      analystNameList: analystName,\r\n      analystId: 0,\r\n      analystName: '',\r\n      description: this.initialSetupForm.value.description,\r\n      marketId: marketId,\r\n      marketName: marketName,\r\n      name: this.initialSetupForm.value.name,\r\n      projectLeadId: projectLead?.Id,\r\n      projectLead: projectLead?.Name,\r\n      studyDataSetId: this.initialSetupForm.value.studyDataSetId.Id,\r\n      studyDataSetName: this.initialSetupForm.value.studyDataSetId.Name,\r\n      studyProjectId: this.initialSetupForm.value.studyProjectId.Id,\r\n      projectName: this.initialSetupForm.value.studyProjectId.Name,\r\n      studyYear: this.initialSetupForm.value.studyYear,\r\n      prefillFromId:\r\n        this.initialSetupForm.value.preFillForm !== null\r\n          ? this.initialSetupForm.value.preFillForm.Id\r\n          : 0,\r\n      studyAreaId: this.initialSetupForm.value.studyAreaId.Id,\r\n      studyAreaName: this.initialSetupForm.value.studyAreaId.Name,\r\n      id: 0,\r\n      isSignOff: false,\r\n      isMidYear: false,\r\n      lockedForEditBy: 0,\r\n      lockedForEditByName: '',\r\n      csvAnalystIds: '',\r\n      csvAnalystNames: '',\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.sharedService.saveInitialSetupData(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          // this.alertService.success(res.Data);\r\n          this.submitted = false;\r\n          this.initialSetupForm.reset();\r\n          this.initialSetupForm.updateValueAndValidity();\r\n          this.showSuccessMsg = true;\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n        this.isLoadingService.remove();\r\n      },\r\n      (err) => {\r\n        const msg =\r\n          typeof err.message !== 'undefined'\r\n            ? err.message\r\n            : 'Something went wrong.';\r\n        this.alertService.danger(msg);\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"container my-4\">\r\n  <form [formGroup]=\"initialSetupForm\" (submit)=\"onFromSubmit()\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-md-8\">\r\n        <h4>Initial Setup</h4>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <ng-container *ngIf=\"!showSuccessMsg\">\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"staticEmail\" class=\"col-sm-5 col-form-label\"\r\n                  >Study DataSet</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['studyDataSetId'].errors\r\n                    }\"\r\n                    bindLabel=\"Name\"\r\n                    formControlName=\"studyDataSetId\"\r\n                    placeholder=\"Select Study DataSet...\"\r\n                    (change)=\"changeDataSet()\"\r\n                  >\r\n                    <ng-option\r\n                      *ngFor=\"let item of studyAreas\"\r\n                      [value]=\"item\"\r\n                      [disabled]=\"!item.IsActive\"\r\n                      >{{ item.Name }}</ng-option\r\n                    >\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Study Year</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['studyYear'].errors\r\n                    }\"\r\n                    formControlName=\"studyYear\"\r\n                    placeholder=\"Select Study Year...\"\r\n                    (change)=\"changeStudyYear()\"\r\n                  >\r\n                    <ng-option *ngFor=\"let item of studyYears\" [value]=\"item\">{{\r\n                      item\r\n                    }}</ng-option>\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Project #</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [items]=\"projects\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['studyProjectId'].errors\r\n                    }\"\r\n                    bindLabel=\"Name\"\r\n                    formControlName=\"studyProjectId\"\r\n                    [readonly]=\"true\"\r\n                    placeholder=\"Select Project #...\"\r\n                  >\r\n                    <ng-option *ngFor=\"let item of projects\" [value]=\"item\">{{\r\n                      item.Name\r\n                    }}</ng-option>\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Project Lead</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['projectLeadId'].errors\r\n                    }\"\r\n                    formControlName=\"projectLeadId\"\r\n                    placeholder=\"Select Project Lead...\"\r\n                  >\r\n                    <ng-option\r\n                      *ngFor=\"let item of projectLeads\"\r\n                      [value]=\"item.Id\"\r\n                      [disabled]=\"!item.IsActive\"\r\n                      >{{ item.Name }} ({{ item.EmailAddress }})</ng-option\r\n                    >\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Market</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['marketId'].errors\r\n                    }\"\r\n                    formControlName=\"marketId\"\r\n                    placeholder=\"Select Market...\"\r\n                    (change)=\"onMarketChange()\"\r\n                    (clear)=\"onMarketClear()\"\r\n                  >\r\n                    <ng-option\r\n                      *ngFor=\"let item of markets\"\r\n                      [disabled]=\"!item.Active\"\r\n                      [value]=\"item\"\r\n                      >{{ item.OfficialName }}</ng-option\r\n                    >\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Study Area</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    formControlName=\"studyAreaId\"\r\n                    placeholder=\"Select Study Area...\"\r\n                    (change)=\"onStudyAreaChange()\"\r\n                    (clear)=\"onMarketClear()\"\r\n                  >\r\n                    <ng-option\r\n                      *ngFor=\"let item of studyAreaCategories\"\r\n                      [value]=\"item\"\r\n                      [disabled]=\"!item.IsActive\"\r\n                      >{{ item.Name }}</ng-option\r\n                    >\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Analyst</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['analystId'].errors\r\n                    }\"\r\n                    [multiple]=\"true\"\r\n                    formControlName=\"analystId\"\r\n                    placeholder=\"Select Analyst...\"\r\n                  >\r\n                    <ng-option\r\n                      *ngFor=\"let item of analyst\"\r\n                      [value]=\"item\"\r\n                      [disabled]=\"!item.IsActive\"\r\n                      >{{ item.Name }} ({{ item.EmailAddress }})</ng-option\r\n                    >\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Description</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <textarea\r\n                    class=\"form-control\"\r\n                    id=\"exampleFormControlTextarea1\"\r\n                    rows=\"3\"\r\n                    maxlength=\"250\"\r\n                    formControlName=\"description\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['description'].errors\r\n                    }\"\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Pre-Fill From</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <ng-select\r\n                    [items]=\"preFillFormData\"\r\n                    bindLabel=\"Name\"\r\n                    placeholder=\"Select Pre-Fill From...\"\r\n                    formControlName=\"preFillForm\"\r\n                  >\r\n                  </ng-select>\r\n                  <div *ngIf=\"f['preFillForm'].value\" class=\"text-right\">\r\n                    <button\r\n                      type=\"button\"\r\n                      (click)=\"getStudyAreaSummaryByMarketYearId()\"\r\n                      class=\"btn btn-link btn-sm p-0\"\r\n                    >\r\n                      Show Form\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"mb-3 row\">\r\n                <label for=\"inputPassword\" class=\"col-sm-5 col-form-label\"\r\n                  >Study Name</label\r\n                >\r\n                <div class=\"col-sm-7\">\r\n                  <input\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"name\"\r\n                    maxlength=\"50\"\r\n                    [ngClass]=\"{\r\n                      'is-invalid': submitted && f['name'].errors\r\n                    }\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div class=\"mb-3 mt-4 row\">\r\n                <div class=\"offset-sm-5 col-sm-7 text-right\">\r\n                  <button class=\"btn btn-primary\">Set it up!</button>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n            <div *ngIf=\"showSuccessMsg\" class=\"mb-3 mt-4 row\">\r\n              <div class=\"alert alert-success small\">\r\n                Your Initial setup is created successfully in database. The\r\n                notification email is sent to the Business Analyst.<br />\r\n                <a [routerLink]=\"['/study-summary']\" class=\"alert-link\"\r\n                  >Click here</a\r\n                >\r\n                to go to the Study Area Summary.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div\r\n  class=\"modal fade\"\r\n  bsModal\r\n  #prefillFromModel=\"bs-modal\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"dialog-static-name\"\r\n>\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header py-2\">\r\n        <h5>Study Area Summary</h5>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn-close close pull-right\"\r\n          aria-label=\"Close\"\r\n          (click)=\"prefillFromModel.hide()\"\r\n        >\r\n          <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div *ngIf=\"initialSetupData\" class=\"row small mb-3\">\r\n          <div class=\"col\">\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Study Name:</div>\r\n              <div class=\"col-md-8\">{{ initialSetupData.Name }}</div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Data Set:</div>\r\n              <div class=\"col-md-8\">\r\n                {{ initialSetupData.StudyDataSetName }}\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Category:</div>\r\n              <div class=\"col-md-8\">\r\n                {{ initialSetupData.StudyAreaName}}\r\n              </div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Study Year:</div>\r\n              <div class=\"col-md-8\">{{ initialSetupData.StudyYear }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Project:</div>\r\n              <div class=\"col-md-8\">{{ initialSetupData.ProjectName }}</div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Project Lead:</div>\r\n              <div class=\"col-md-8\">{{ initialSetupData.ProjectLead }}</div>\r\n            </div>\r\n            <div class=\"row mb-2\">\r\n              <div class=\"col-md-4 text-secondary\">Analyst:</div>\r\n              <div class=\"col-md-8\">{{ initialSetupData.AnalystName }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <dx-data-grid\r\n          id=\"dataGrid\"\r\n          [dataSource]=\"studyAreaSummary\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"false\"\r\n          [columnHidingEnabled]=\"false\"\r\n        >\r\n          <dxi-column\r\n            caption=\"Study Area\"\r\n            dataField=\"StudyName\"\r\n            [width]=\"210\"\r\n          ></dxi-column>\r\n          <dxi-column dataField=\"StudyAreaName\" [visible]=\"false\"></dxi-column>\r\n          <dxi-column dataField=\"Total\" [width]=\"50\"></dxi-column>\r\n          <dxi-column dataField=\"LastComment\"></dxi-column>\r\n          <dxi-column dataField=\"LastModified\" dataType=\"date\"></dxi-column>\r\n          <dxi-column dataField=\"ModifiedBy\"></dxi-column>\r\n        </dx-data-grid>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MsalService } from '@azure/msal-angular';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { Constants } from '../Constant';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  errorMessage: boolean = false;\r\n  constructor(\r\n    private authService: MsalService,\r\n    private localStorageService: LocalStorageService,\r\n    private route: Router,\r\n    private userService: UserService,\r\n    private isLoadingService: IsLoadingService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLoadingService.add();\r\n    this.authService.instance.handleRedirectPromise().then((res) => {\r\n      if (res != null && res.account != null) {\r\n        this.authService.instance.setActiveAccount(res.account);\r\n        // console.log(res);\r\n        this.localStorageService.setData(\r\n          {\r\n            userName: res.account.username,\r\n            token: res.accessToken,\r\n            idToken: res.idToken,\r\n          },\r\n          Constants.userDataKey\r\n        );\r\n\r\n        this.getUserDetail(res.account.username);\r\n      } else {\r\n        this.login();\r\n      }\r\n    });\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.authService.instance.getActiveAccount() != null;\r\n  }\r\n\r\n  login() {\r\n    this.localStorageService.deleteData(Constants.userDataKey);\r\n    this.localStorageService.deleteData(Constants.userDetailKey);\r\n    this.authService.loginRedirect();\r\n  }\r\n\r\n  getUserDetail(emailAddress: string) {\r\n    this.userService.getUserDetail(emailAddress).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          const userDetail = new UserDetail().deserialize(res.Data);\r\n          this.localStorageService.setData(userDetail, Constants.userDetailKey);\r\n          const url = this.localStorageService.getData(\"URL\");\r\n          if(typeof(url)=='string' && !url.includes('login')){\r\n            this.route.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n              this.route.navigate([url]);\r\n            });\r\n          }\r\n          else{\r\n            this.route.navigate(['study-summary']);\r\n          }\r\n          \r\n        }\r\n      },\r\n      (err) => {\r\n        // this.errorMessage = true;\r\n        // this.isLoadingService.remove();\r\n        this.login();\r\n      }\r\n    );\r\n  }\r\n}\r\n","<p *ngIf=\"!errorMessage\" class=\"text-italic text-center\">\n  Redirecting... Please wait...\n</p>\n<div *ngIf=\"errorMessage\" class=\"text-italic text-center\">\n  <h5>Sorry,</h5>\n  <p>\n    You have no permission to access this application. Please contact\n    administrator.\n  </p>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '@full-fledged/alerts';\nimport { IsLoadingService } from '@service-work/is-loading';\nimport { ApiResponse } from 'src/model/apiResponse.model';\nimport { InitialSetup } from 'src/model/initialSetup.model';\nimport {\n  SpecialtyExcipientSaleItem,\n  SpecialtyExcipientSales,\n} from 'src/model/specialtyExcipientSales.model';\nimport { StudyService } from 'src/services/study.service';\n\n@Component({\n  selector: 'app-calculator',\n  templateUrl: './calculator.component.html',\n  styleUrls: ['./calculator.component.css'],\n})\nexport class CalculatorComponent implements OnInit {\n  calculatorId: number = 0;\n  marketYearCategoryId: number = 0;\n  StudyProjectMarketYearId: number = 0;\n  calculatedData: any;\n  calculatorOutputTemplateData: any;\n  restartInputComponent: boolean = false;\n\n  studyInitialSetup: InitialSetup = new InitialSetup().deserialize({});\n\n  studySpecialtyExcipientData: any = null;\n\n  Currency: any = {};\n  Volume: any = {};\n\n  constructor(\n    private activeRoute: ActivatedRoute,\n    private route: Router,\n    private studyService: StudyService,\n    private alertService: AlertService,\n    private isLoadingService: IsLoadingService\n  ) {\n    const params = this.activeRoute.snapshot.params;\n    this.calculatorId =\n      typeof params['calculatorId'] !== 'undefined'\n        ? params['calculatorId']\n        : 0;\n\n    this.marketYearCategoryId =\n      typeof params['marketYearCategoryId'] !== 'undefined'\n        ? params['marketYearCategoryId']\n        : 0;\n\n    this.StudyProjectMarketYearId =\n      typeof params['studyProjectMarketYearId'] !== 'undefined'\n        ? params['studyProjectMarketYearId']\n        : 0;\n  }\n\n  ngOnInit(): void {\n    this.getSalesData();\n  }\n\n  startOver() {\n    this.restartInputComponent = true;\n    this.calculatedData = undefined;\n    // prevent double click call for input data\n    setTimeout(() => {\n      this.restartInputComponent = false;\n    }, 1000);\n  }\n\n  onComputed(calculatedData: any) {\n    this.calculatedData = calculatedData;\n  }\n\n  onCalculatorTemplateReturned(calculatorOutputTemplateData: any) {\n    this.calculatorOutputTemplateData = calculatorOutputTemplateData;\n    // this.industryId = calculatorOutputTemplateData.IndustryId;\n  }\n\n  getSalesData() {\n    this.studyService\n      .getSalesData(this.marketYearCategoryId, this.StudyProjectMarketYearId)\n      .subscribe((res: ApiResponse) => {\n        if (res.HttpStatusCode === 200) {\n          // console.log(res.Data);\n          const studyData = res.Data as SpecialtyExcipientSales;\n\n          this.studySpecialtyExcipientData = studyData;\n\n          this.studyInitialSetup = new InitialSetup().deserialize(\n            studyData.InitialSetup\n          );\n\n          studyData.SpecialtyExcipientsSales.map(\n            (singleItem: SpecialtyExcipientSaleItem) => {\n              this.Currency = {\n                Name: singleItem.CurrencyName,\n                Code: singleItem.CurrencyCode,\n                Id: singleItem.CurrencyId,\n              };\n\n              this.Volume = {\n                Name: singleItem.VolumeUnitName,\n                Code: singleItem.VolumeUnitId,\n              };\n            }\n          );\n        }\n      });\n  }\n\n  onExportSpecialtyExcipientData(specialtyExcipientData: any) {\n    const studyDataInfo = {\n      marketYearCategoryId: this.marketYearCategoryId,\n      initialSetup: this.studyInitialSetup,\n      specialtyExcipientsSales: specialtyExcipientData,\n    };\n\n    this.isLoadingService.add();\n    this.studyService.saveSESData(studyDataInfo).subscribe(\n      (res: ApiResponse) => {\n        if (res.HttpStatusCode === 200) {\n          this.alertService.success(res.Data);\n          // this.dataGrid?.instance.refresh();\n          // this.reloadCurrentRoute();\n          // this.isLoadingService.remove();\n          this.route.navigateByUrl(this.getStudyUrl());\n        } else {\n          this.alertService.danger(res.Data);\n          this.isLoadingService.remove();\n        }\n      },\n      (err) => {\n        const msg =\n          typeof err.message !== 'undefined'\n            ? err.message\n            : 'Something went wrong.';\n        this.alertService.danger(msg);\n        this.isLoadingService.remove();\n      }\n    );\n  }\n\n  getStudyUrl() {\n    const url = `/study-area/${this.studyInitialSetup.StudyAreaId}/${this.StudyProjectMarketYearId}/${this.marketYearCategoryId}/${this.studyInitialSetup.StudyDataSetId}`;\n    return url;\n  }\n}\n","<app-header setTitle=\"Calculator\"></app-header>\n\n<div class=\"container my-4\">\n  <button\n    type=\"button\"\n    class=\"btn btn-light1 btn-outline-dark mb-3 margin5\"\n    data-dismiss=\"modal\"\n    (click)=\"startOver()\"\n  >\n    Start Over\n  </button>\n  <app-input-selector\n    *ngIf=\"!calculatedData && calculatorId\"\n    [calculatorId]=\"calculatorId\"\n    (calculatedData)=\"onComputed($event)\"\n    [restart]=\"restartInputComponent\"\n    [SetCurrency]=\"Currency\"\n    [SetVolume]=\"Volume\"\n  ></app-input-selector>\n\n  <div *ngIf=\"calculatedData\">\n    <app-calculator-preview\n      [setCalculatedData]=\"calculatedData\"\n      [setStudyInitialSetup]=\"studyInitialSetup\"\n      [setCalculatorId]=\"calculatorId\"\n      [setStudySpecialtyExcipientData]=\"studySpecialtyExcipientData\"\n      (exportData)=\"onExportSpecialtyExcipientData($event)\"\n    ></app-calculator-preview>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\n\n@Component({\n  selector: 'app-calculator-preview',\n  templateUrl: './calculator-preview.component.html',\n  styleUrls: ['./calculator-preview.component.css'],\n})\nexport class CalculatorPreviewComponent implements OnInit {\n  @ViewChild('printThis', { static: true })\n  printThis!: ElementRef;\n  calculatedData: any;\n  currentYear: string = new Date().getFullYear().toString();\n  @Input() set setCalculatedData(data: any) {\n    if (data) {\n      this.calculatedData = data;\n    }\n  }\n\n  title: string = '';\n  @Input() set setTitle(title: any) {\n    if (title) {\n      this.title = title;\n    }\n  }\n\n  studyInitialSetup: any;\n  @Input() set setStudyInitialSetup(initialSetup: any) {\n    if (initialSetup) {\n      this.studyInitialSetup = initialSetup;\n    }\n  }\n\n  studySpecialtyExcipientData: any;\n  @Input() set setStudySpecialtyExcipientData(data: any) {\n    if (data) {\n      this.studySpecialtyExcipientData = data;\n    }\n  }\n\n  @Output() exportData = new EventEmitter<any>();\n\n  volume: any;\n  currency: any;\n  dosageForm: any;\n  latestDataYear: number = 0;\n\n  calculatorId: number = 0;\n  @Input() set setCalculatorId(id: any) {\n    if (id) {\n      this.calculatorId = id;\n    }\n  }\n\n  public productData: any;\n\n  public unitOfMeasures = {\n    mass: 'kg',\n    electric: 'KwH',\n  };\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.productData = this.calculatedData;\n    this.getComputedData();\n  }\n\n  public getRowHide(value: any) {\n    // let hide = false;\n    const data = this.productData.find((element: any) => element.Tag == value);\n    if (data.Hide) {\n      return data.Hide;\n    } else {\n      return false;\n    }\n  }\n\n  public getRowValue(value: any, name: string) {\n    let data = value.find((element: any) => element.Tag == name);\n    if (data) {\n      return data.Value;\n    } else {\n      return '';\n    }\n  }\n\n  getComputedData() {\n    const studyDataItems =\n      this.studySpecialtyExcipientData.SpecialtyExcipientsSales;\n\n    const singleStudyItem = studyDataItems.find(\n      (item: any, i: number) => i === 0\n    );\n    if (singleStudyItem) {\n      this.currency = {\n        CurrencyCode: singleStudyItem.CurrencyCode,\n        CurrencyId: singleStudyItem.CurrencyId,\n        CurrencyName: singleStudyItem.CurrencyName,\n      };\n\n      this.volume = {\n        VolumeUnitId: singleStudyItem.VolumeUnitId,\n        VolumeUnitName: singleStudyItem.VolumeUnitName,\n        VolumeUnitRate: singleStudyItem.VolumeUnitRate,\n      };\n\n      this.dosageForm = {\n        DosageFormId: singleStudyItem.DosageFormId,\n        DosageFormName: singleStudyItem.DosageFormName,\n      };\n\n      this.latestDataYear = singleStudyItem.LatestDataYear;\n    }\n  }\n\n  /**\n   * print function\n   * @param e event\n   */\n\n  print(e: any) {\n    // let printContents, popupWin;\n    // // printContents = document.getElementById('printThis').innerHTML;\n    // printContents = this.printThis.nativeElement.innerHTML;\n    // popupWin = window.open('', '_blank', 'top=0,left=0')?.focus();\n    // popupWin?.document.open();\n    // popupWin.document.write(`\n    //         <!DOCTYPE html>\n    //         <html>\n    //             <head>\n    //                 <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    //                 <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" type=\"text/css\" media=\"print\">\n    //                 <style>\n    //                     body * {\n    //                         visibility: visible;\n    //                     }\n    //                     #titlePrint {\n    //                         font-size: 20px;\n    //                     }\n    //                     #printSection {\n    //                         width: 100%;\n    //                         height:100%;\n    //                         top:0px;\n    //                         bottom:0px;\n    //                         margin: auto;\n    //                         margin-top: 0px !important;\n    //                         -webkit-print-color-adjust: exact !important;\n    //                     }\n    //                     .trdarkblue {\n    //                         background-color: #01649B !important;\n    //                     }\n    //                     .trblue {\n    //                         background-color: #66CBFF;\n    //                     }\n    //                     .trlightblue {\n    //                         background-color: #9ECDEB;\n    //                     }\n    //                     .trdarkgray {\n    //                         background-color: #A5A5A5;\n    //                     }\n    //                     .trgray {\n    //                         background-color: #C8C8C8;\n    //                     }\n    //                     .trorange {\n    //                         background-color: #F8A704;\n    //                     }\n    //                     @media print {\n    //                         .table-bordered th,\n    //                         .table-bordered td {\n    //                             border: 1px solid #ddd !important;\n    //                         }\n    //                         .table tr.trdarkblue > th {\n    //                             background-color: #01649B !important;\n    //                             border: 1px solid #ddd !important;\n    //                             -webkit-print-color-adjust: exact !important;\n    //                         }\n    //                         .table tr.trblue > th {\n    //                             background-color: #66CBFF !important;\n    //                             -webkit-print-color-adjust: exact !important;\n    //                         }\n    //                         .table tr.trblue > td {\n    //                             background-color: #66CBFF !important;\n    //                         }\n    //                         .table tr.trlightblue > th {\n    //                             background-color: #9ECDEB !important;\n    //                         }\n    //                         .table tr.trdarkgray > th {\n    //                             background-color: #A5A5A5 !important;\n    //                         }\n    //                         .table tr.trgray > th {\n    //                             background-color: #C8C8C8 !important;\n    //                         }\n    //                         .table tr.trorange > th {\n    //                             background-color: #F8A704 !important;\n    //                         }\n    //                         .table tr.trorange > td {\n    //                             background-color: #F8A704 !important;\n    //                         }\n    //                         .div {\n    //                             overflow:visible;\n    //                         }\n    //                     }\n    //                 </style>\n    //             </head>\n    //             <body onload=\"window.print();\">\n    //                 <div id=\"printSection\" #printSection> ${printContents}</div>\n    //             </body>\n    //         </html>`);\n    // popupWin.document.close();\n    // window.close()\n    // let print = document.getElementById('printThis');\n    // var domClone = print.cloneNode(true);\n    // var $printSection = document.getElementById(\"printSection\");\n    // if (!$printSection) {\n    //   $printSection = document.createElement(\"div\");\n    //   $printSection.id = \"printSection\";\n    //   document.body.appendChild($printSection);\n    // }\n    // $printSection.innerHTML = \"\";\n    // $printSection.appendChild(domClone);\n    // window.print();\n  }\n\n  onImportDataClick() {\n    const studyJson: any[] = [];\n    this.productData.map((item: any) => {\n      studyJson.push({\n        CAGR1: 0,\n        CAGR2: 0,\n        CalculatorId: this.calculatorId,\n        CurrencyCode: this.currency.CurrencyCode,\n        CurrencyId: this.currency.CurrencyId,\n        CurrencyName: this.currency.CurrencyName,\n        DataRelationId: null,\n        DataRowId: null,\n        DosageFormId: this.dosageForm.DosageFormId,\n        DosageFormName: this.dosageForm.DosageFormName,\n        ExcipientCategoryId: 0,\n        ExcipientCategoryName: this.getRowValue(\n          item.Value,\n          'ExcipientCategory'\n        ),\n        ExcipientGroupId: 0,\n        ExcipientGroupName: this.getRowValue(item.Value, 'ExcipientGroup'),\n        ExcipientId: 0,\n        ExcipientName: this.getRowValue(item.Value, 'Excipient'),\n        LatestDataYear: this.latestDataYear,\n        Notes: null,\n        SupplierId: 0,\n        SupplierName: this.getRowValue(item.Value, 'Supplier'),\n        Value1: null,\n        Value2: this.getRowValue(item.Value, 'Sales'),\n        Volume1: null,\n        Volume2: this.getRowValue(item.Value, 'Volume'),\n        VolumeUnitId: this.volume.VolumeUnitId,\n        VolumeUnitName: this.volume.VolumeUnitName,\n        VolumeUnitRate: this.volume.VolumeUnitRate,\n      });\n    });\n\n    this.exportData.emit(studyJson);\n    // console.log(studyJson);\n  }\n}\n","<div class=\"col-xs-12 col-sm-12 col-md-12\">\n  <div\n    id=\"printThis\"\n    #printThis\n    style=\"-webkit-print-color-adjust: exact !important\"\n  >\n    <h2 id=\"titlePrint\" #titlePrint>Specialty Excipient</h2>\n    <table *ngIf=\"productData\" class=\"table table-bordered\">\n      <tr>\n        <th>Excipient Category</th>\n        <th>Excipient Group</th>\n        <th>Excipient</th>\n        <th>Supplier</th>\n        <th>Volume</th>\n        <th>Sales</th>\n      </tr>\n      <tr *ngFor=\"let value of productData\">\n        <!-- <td *ngFor=\"let item of value.Value\">\n                    {{ item.Value }} \n                </td> -->\n        <td>\n          {{ getRowValue(value.Value, \"ExcipientCategory\") }}\n        </td>\n        <td>\n          {{ getRowValue(value.Value, \"ExcipientGroup\") }}\n        </td>\n        <td>\n          {{ getRowValue(value.Value, \"Excipient\") }}\n        </td>\n        <td>\n          {{ getRowValue(value.Value, \"Supplier\") }}\n        </td>\n        <td class=\"text-right\">\n          {{ getRowValue(value.Value, \"Volume\") | number: \"1.1-1\" }}\n        </td>\n        <td class=\"text-right\">\n          {{ getRowValue(value.Value, \"Sales\") | number: \"1.1-1\" }}\n        </td>\n      </tr>\n    </table>\n\n    <div\n      class=\"container-fluid footer\"\n      id=\"footerPrint\"\n      #footerPrint\n      style=\"padding: 2em\"\n    >\n      <div class=\"text-center\">\n        <small class=\"text-muted\"\n          >&copy; {{ currentYear }} Kline &amp; Company, all rights\n          reserved.</small\n        >\n      </div>\n    </div>\n  </div>\n  <!-- <button\n    #printButton\n    id=\"printButton\"\n    type=\"button\"\n    class=\"btn btn-primary\"\n    (click)=\"print($event)\"\n  >\n    Print\n  </button> -->\n\n  <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\">\n    <span class=\"right\">\n      <button\n        type=\"button\"\n        class=\"btn btn-primary buttonMargin\"\n        (click)=\"onImportDataClick()\"\n      >\n        Import Data to Study\n      </button>\n    </span>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { CalculatorService } from 'src/services/calculator.service';\r\nimport notify from 'devextreme/ui/notify';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-input-selector',\r\n  templateUrl: './input-selector.component.html',\r\n  styleUrls: ['./input-selector.component.css'],\r\n})\r\nexport class InputSelectorComponent implements OnInit {\r\n  calculatorInputsDataFull: any;\r\n  calculatorInputsData: any;\r\n  calculatorData: any;\r\n  inputGroups: string[] = [];\r\n  countOfPages: number = 0;\r\n  pageNumber: number = 1;\r\n\r\n  prewPageButtonAllowed: boolean = false;\r\n  nextPageButtonAllowed: boolean = true;\r\n  buttonCalculateAllowed: boolean = false;\r\n  isDependentValue: boolean = false;\r\n  isDataContainsRequired: boolean = false;\r\n\r\n  selectedCalculator: number = 0;\r\n\r\n  computedExcipients: any = [];\r\n\r\n  supplierCountDpValues: number[] = [];\r\n\r\n  suppliers: any[] = [];\r\n\r\n  @Input() set calculatorId(id: any) {\r\n    if (id) {\r\n      this.selectedCalculator = id;\r\n    }\r\n  }\r\n\r\n  @Input() set restart(canRestart: boolean) {\r\n    if (canRestart) {\r\n      this.restartInputComponent();\r\n    }\r\n  }\r\n\r\n  Currency: any;\r\n  @Input() set SetCurrency(item: any) {\r\n    if (item) {\r\n      this.Currency = item;\r\n    }\r\n  }\r\n\r\n  Volume: any;\r\n  @Input() set SetVolume(item: any) {\r\n    if (item) {\r\n      this.Volume = item;\r\n    }\r\n  }\r\n\r\n  @Output() calculatedData = new EventEmitter<any>();\r\n  @Output() calculatorTemplateReturnedData = new EventEmitter<any>();\r\n\r\n  constructor(\r\n    private calculatorService: CalculatorService,\r\n    private sharedService: SharedService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllInputsByCalculatorId();\r\n    // this.getCalculatorDataById();\r\n    this.getSupplierCountValues();\r\n    this.getSuppliers();\r\n  }\r\n\r\n  getAllInputsByCalculatorId() {\r\n    this.calculatorService\r\n      .getAllInputsByCalculatorId(this.selectedCalculator)\r\n      .subscribe(\r\n        (data: any) => {\r\n          if (data.HttpStatusCode === 200) {\r\n            const items =\r\n              typeof data.Data.CalculatorInputs !== 'undefined'\r\n                ? data.Data.CalculatorInputs\r\n                : [];\r\n            this.calculatorInputsDataFull = items;\r\n          } else {\r\n            throw new Error('Something went wrong.');\r\n          }\r\n        },\r\n        (error) => {\r\n          throw new Error(error);\r\n        },\r\n        () => {\r\n          this.calculatorInputsData = this.calculatorInputsDataFull.filter(\r\n            (input: any) => input.PageNumber == 1\r\n          );\r\n          this.distinctGroups();\r\n          this.canDisplayDependentInfo();\r\n          this.dataContainsRequired();\r\n          this.countOfPages = Math.max.apply(\r\n            this,\r\n            this.calculatorInputsDataFull.map((c: any) => c.PageNumber)\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  getSuppliers() {\r\n    this.sharedService.getSEDataEntryData('Suppliers').subscribe(\r\n      (data: any) => (this.suppliers = data.Data),\r\n      (error) => {\r\n        throw new Error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  distinctGroups() {\r\n    this.inputGroups = Array.from(\r\n      new Set(this.calculatorInputsData.map((input: any) => input.GroupName))\r\n    );\r\n  }\r\n\r\n  canDisplayDependentInfo() {\r\n    this.isDependentValue =\r\n      this.calculatorInputsData.filter(\r\n        (input: any) =>\r\n          input.IsDependentDefaultValue && input.DefaultValueEngineTypeId\r\n      ).length > 0\r\n        ? true\r\n        : false;\r\n  }\r\n\r\n  dataContainsRequired() {\r\n    this.isDataContainsRequired =\r\n      this.calculatorInputsData.filter(\r\n        (input: any) => input.IsRequired && input.IsVisible\r\n      ).length > 0\r\n        ? true\r\n        : false;\r\n  }\r\n\r\n  getNoteText(): string {\r\n    if (\r\n      this.calculatorInputsData.filter(\r\n        (input: any) => !input.IsDependentDefaultValue\r\n      ).length > 0\r\n    ) {\r\n      return 'independent variables';\r\n    } else if (\r\n      this.calculatorInputsData.filter(\r\n        (input: any) =>\r\n          input.IsDependentDefaultValue && !input.DefaultValueEngineTypeId\r\n      ).length > 0\r\n    ) {\r\n      return 'dependent variables';\r\n    } else if (\r\n      this.calculatorInputsData.filter(\r\n        (input: any) =>\r\n          input.IsDependentDefaultValue && input.DefaultValueEngineTypeId\r\n      ).length > 0\r\n    ) {\r\n      return 'precalculated dependent variables';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  isGroupVisible(group: string): boolean {\r\n    return this.calculatorInputsData.filter(\r\n      (input: any) => input.IsVisible && input.GroupName == group\r\n    ).length > 0\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  getStep(calculatorInput: any): number {\r\n    if (calculatorInput.IsDecimalValue) {\r\n      if (calculatorInput.DecimalScale == 1) {\r\n        return 0.1;\r\n      } else if (calculatorInput.DecimalScale == 2) {\r\n        return 0.01;\r\n      } else {\r\n        return 0.001;\r\n      }\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  goToPage(direction: number) {\r\n    for (let input of this.calculatorInputsData) {\r\n      input.Value = input.DefaultValue;\r\n      input.ValueText = input.DefaultValueText;\r\n    }\r\n\r\n    if (direction == 1) {\r\n      let filterInputsWithoutValues = this.calculatorInputsData.filter(\r\n        (c: any) => c.IsRequired && !c.Value && !c.DefaultValueText\r\n      );\r\n      if (filterInputsWithoutValues.length > 0) {\r\n        notify('*denotes a required value!', 'warning', 3000);\r\n        return;\r\n      }\r\n\r\n      const isValidPer = this.validateCalculatorInputs();\r\n      if (isValidPer !== true) {\r\n        notify(isValidPer, 'error', 3000);\r\n        return;\r\n      }\r\n    }\r\n\r\n    let valuesForValidation = this.calculatorInputsData.filter(\r\n      (inp: any) => inp.ValidatorEngineName && inp.ValidatorMethodName\r\n    );\r\n    if (direction == -1) {\r\n      this.goToPageAction(direction);\r\n    } else if (direction == 1 && valuesForValidation.length == 0) {\r\n      this.goToPageAction(direction);\r\n    } else {\r\n      let validationResult: any;\r\n      // this.calculatorService\r\n      //   .validateValues(this.calculatorInputsDataFull, this.pageNumber)\r\n      //   .subscribe(\r\n      //     (data: any) => (validationResult = data),\r\n      //     (error: any) => {\r\n      //       throw new Error(error);\r\n      //     },\r\n      //     () => {\r\n      //       if (\r\n      //         validationResult &&\r\n      //         validationResult.filter((res) => res.IsValid == false).length > 0\r\n      //       ) {\r\n      //         notify(\r\n      //           validationResult.filter((res) => res.IsValid == false)[0]\r\n      //             .Message,\r\n      //           'error',\r\n      //           3000\r\n      //         );\r\n      //         return;\r\n      //       } else {\r\n      //         this.goToPageAction(direction);\r\n      //       }\r\n      //     }\r\n      //   );\r\n      this.goToPageAction(direction);\r\n    }\r\n  }\r\n\r\n  goToPageAction(direction: number) {\r\n    // On last page call for data\r\n    if (this.pageNumber == this.countOfPages && direction == 0) {\r\n      const isValidPer = this.validateCalculatorInputs();\r\n      if (isValidPer !== true) {\r\n        notify(isValidPer, 'error', 3000);\r\n        return;\r\n      }\r\n\r\n      this.callServiceForCalculatedData();\r\n      return;\r\n    }\r\n\r\n    this.pageNumber = this.validatePageNumber(this.pageNumber, direction);\r\n    if (this.pageNumber > 1) {\r\n      this.getComputedDefaultValues(\r\n        this.calculatorInputsDataFull,\r\n        this.pageNumber\r\n      );\r\n    } else {\r\n      this.calculatorInputsData = this.calculatorInputsDataFull.filter(\r\n        (input: any) => input.PageNumber == 1\r\n      );\r\n      this.distinctGroups();\r\n      this.canDisplayDependentInfo();\r\n      this.dataContainsRequired();\r\n      this.updateNavigationVisibility(this.pageNumber);\r\n    }\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  callServiceForCalculatedData() {\r\n    let d: any;\r\n    // const totalVolumeObj = this.calculatorInputsDataFull.find(\r\n    //   (c: any) => c.GroupName === 'TotalVolume'\r\n    // );\r\n    // const totalVolume = totalVolumeObj.ValueText;\r\n    const totalVolume = 0;\r\n\r\n    // const totalSalesObj = this.calculatorInputsDataFull.find(\r\n    //   (c: any) => c.GroupName === 'Sales'\r\n    // );\r\n    // const totalSales = totalSalesObj.ValueText;\r\n    const totalSales = 0;\r\n\r\n    this.calculatorService\r\n      .getComponentDataByInputs(\r\n        this.calculatorInputsDataFull,\r\n        totalVolume,\r\n        totalSales\r\n      )\r\n      .subscribe(\r\n        (data: any) => (d = data.Data),\r\n        (error) => {\r\n          const msg =\r\n            typeof error.error !== 'undefined'\r\n              ? error.error\r\n              : 'Invalid input value';\r\n          // throw new Error(error);\r\n          notify(msg, 'error', 3000);\r\n        },\r\n        () => {\r\n          if (d) {\r\n            this.calculatedData.emit(d);\r\n          } else {\r\n            this.restartInputComponent();\r\n            notify('Data Not Found, restarting workflow...', 'error', 7000);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  validatePageNumber(currentPageNumber: number, direction: number): number {\r\n    let pageNumber = currentPageNumber + direction;\r\n    if (pageNumber >= 1 && pageNumber <= this.countOfPages) {\r\n      return pageNumber;\r\n    } else {\r\n      return currentPageNumber;\r\n    }\r\n  }\r\n\r\n  updateNavigationVisibility(pageNumber: number) {\r\n    if (pageNumber == 1) {\r\n      this.prewPageButtonAllowed = false;\r\n      this.nextPageButtonAllowed = true;\r\n    }\r\n    if (pageNumber > 1 && pageNumber <= this.countOfPages) {\r\n      this.prewPageButtonAllowed = true;\r\n      this.nextPageButtonAllowed = true;\r\n    }\r\n\r\n    if (pageNumber == this.countOfPages) {\r\n      this.prewPageButtonAllowed = true;\r\n      this.nextPageButtonAllowed = false;\r\n    }\r\n\r\n    if (pageNumber == this.countOfPages) {\r\n      this.buttonCalculateAllowed = true;\r\n    } else {\r\n      this.buttonCalculateAllowed = false;\r\n    }\r\n  }\r\n\r\n  getSupplierCountValues() {\r\n    for (let i = 1; i <= 15; i++) {\r\n      this.supplierCountDpValues.push(i);\r\n    }\r\n  }\r\n\r\n  getComputedExcipient() {\r\n    return this.calculatorInputsDataFull.filter(\r\n      (input: any) => input.GroupName == 'Excipient' && input.IsVisible\r\n    );\r\n  }\r\n\r\n  getCalculatorDataById() {\r\n    this.calculatorService\r\n      .getCalculatorDataById(this.selectedCalculator)\r\n      .subscribe(\r\n        (data) => (this.calculatorData = data),\r\n        (error) => {\r\n          throw new Error(error);\r\n        },\r\n        () => {\r\n          this.calculatorTemplateReturnedData.emit(this.calculatorData);\r\n        }\r\n      );\r\n  }\r\n\r\n  getComputedDefaultValues(calculatorInputsDataFull: any, pageNumber: number) {\r\n    for (let input of calculatorInputsDataFull) {\r\n      input.Value = input.DefaultValue;\r\n    }\r\n\r\n    this.calculatorService\r\n      .getComputedDefaultValues(calculatorInputsDataFull, pageNumber)\r\n      .subscribe(\r\n        (data: any) => {\r\n          if (data.HttpStatusCode === 200) {\r\n            const items =\r\n              typeof data.Data.CalculatorInputs !== 'undefined'\r\n                ? data.Data.CalculatorInputs\r\n                : [];\r\n            this.calculatorInputsDataFull = items;\r\n          } else {\r\n            throw new Error('Something went wrong.');\r\n          }\r\n          // (this.calculatorInputsDataFull = data)\r\n        },\r\n        (error) => {\r\n          throw new Error(error);\r\n        },\r\n        () => {\r\n          if (this.calculatorInputsDataFull) {\r\n            this.calculatorInputsData = this.calculatorInputsDataFull.filter(\r\n              (input: any) => input.PageNumber == pageNumber\r\n            );\r\n\r\n            if (pageNumber === 4) {\r\n              // console.log(this.calculatorInputsData);\r\n              // this.calculatorInputsData.map(\r\n              //   (item: any) => (item.IsVisible = true)\r\n              // );\r\n            }\r\n\r\n            if (this.validateIfVisibleItemOrNot()) {\r\n              this.distinctGroups();\r\n              this.canDisplayDependentInfo();\r\n              this.dataContainsRequired();\r\n              this.updateNavigationVisibility(pageNumber);\r\n\r\n              this.calculatorInputsData.map((item: any) => {\r\n                if (item.IsDecimalValue) {\r\n                  item.DxFormat = \"#0.# '%'\";\r\n                }\r\n              });\r\n\r\n              // this.updateSuppliers();\r\n            }\r\n          } else {\r\n            this.restartInputComponent();\r\n            notify('Data Not Found, restarting workflow...', 'error', 7000);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  createRange(number: number) {\r\n    // var items: number[] = [];\r\n    // for(var i = 1; i <= number; i++){\r\n    //   items.push(i);\r\n    // }\r\n    // return items;\r\n    return new Array(number);\r\n  }\r\n\r\n  updateSuppliers() {\r\n    this.inputGroups.map((group: any) => {\r\n      if (group === 'Suppliers') {\r\n        this.getComputedExcipient().map((item: any) => {\r\n          if (item.SupplierCount > 0) {\r\n            const suppliers = [];\r\n            for (let i = 0; i < item.SupplierCount; i++) {\r\n              suppliers.push({\r\n                SupplierId: 0,\r\n                SupplierName: null,\r\n                Value: 0,\r\n                Volume: 0,\r\n                AvgPrice: 0,\r\n              });\r\n            }\r\n            item.Suppliers = suppliers;\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  onChangeSupplier(\r\n    e: any,\r\n    index: number,\r\n    calculatorInput: any,\r\n    suppliers: any[]\r\n  ) {\r\n    const selectedSupplier = suppliers.find((item) => item.Id === e);\r\n    calculatorInput.Suppliers[index].SupplierName = selectedSupplier.Name;\r\n    // calculatorInput.Suppliers[index].SupplierId = e.Id;\r\n    return calculatorInput;\r\n  }\r\n\r\n  validateCalculatorInputs() {\r\n    let group = '';\r\n    this.inputGroups.map((item: any) => {\r\n      group = item;\r\n    });\r\n\r\n    if (this.calculatorInputsData.filter((c: any) => c.IsVisible).length == 0) {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      group !== 'Excipient' &&\r\n      group !== 'SupplierCount' &&\r\n      group !== 'Suppliers' &&\r\n      group !== 'TotalVolume'\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    if (group === 'Excipient') {\r\n      const totalPer = this.calculatorInputsData\r\n        .filter(\r\n          (c: any) => c.GroupName == group && c.IsVisible && c.Volume <= 0\r\n        )\r\n        .map((val: any) => val.DefaultValue)\r\n        .reduce((sum: number, current: number) => sum + current, 0);\r\n\r\n      const totalSelectedData = this.calculatorInputsData\r\n        .filter((c: any) => c.GroupName == group && c.IsVisible)\r\n        .map((val: any) => +val.Volume).length;\r\n\r\n      const totalSelLength = this.calculatorInputsData\r\n        .filter(\r\n          (c: any) =>\r\n            c.GroupName == group &&\r\n            c.IsVisible &&\r\n            c.Volume <= 0 &&\r\n            c.DefaultValue <= 0\r\n        )\r\n        .map((val: any) => +val.Volume).length;\r\n\r\n      return (totalSelLength != totalSelectedData && totalPer == 0) ||\r\n        totalPer === 100\r\n        ? true\r\n        : 'You need to add excipient volume.';\r\n\r\n      // : 'You need to set 100% for combinations.';\r\n    } else if (group === 'SupplierCount') {\r\n      const noSelectedCount = this.getComputedExcipient().filter(\r\n        (c: any) => c.Value > 0 && c.SupplierCount === 0\r\n      );\r\n\r\n      return noSelectedCount.length === 0\r\n        ? true\r\n        : 'Please select supplier count.';\r\n    } else if (group === 'Suppliers') {\r\n      let supplierError = 0;\r\n      let avgPriceError = 0;\r\n      let totalPerError = 0;\r\n      this.getComputedExcipient().map((val: any) => {\r\n        const selectedSuppliers = [];\r\n\r\n        for (let i = 0; i < val.SupplierCount; i++) {\r\n          selectedSuppliers.push(val.Suppliers[i]);\r\n        }\r\n\r\n        const emptySuppliers = selectedSuppliers.filter(\r\n          (v: any) => v.SupplierName === null || v.SupplierName === ''\r\n        );\r\n\r\n        const emptyAvgPrice = selectedSuppliers.filter(\r\n          (v: any) =>\r\n            v.AvgPrice === null || v.AvgPrice === '' || v.AvgPrice === 0\r\n        );\r\n\r\n        const totalPer = selectedSuppliers\r\n          .map((v: any) => v.Value)\r\n          .reduce((sum: number, current: number) => sum + current);\r\n\r\n        const totalSelLength = selectedSuppliers\r\n          .filter((c: any) => c.Value <= 0 && c.Volume <= 0)\r\n          .map((val: any) => +val.Volume).length;\r\n\r\n        if (emptySuppliers.length > 0) {\r\n          supplierError++;\r\n          // return 'Please select supplier.';\r\n        }\r\n\r\n        if ((totalSelLength == 0 && totalPer == 0) || totalPer == 100) {\r\n          // return 'You need to set 100% for combinations of suppliers.';\r\n        } else {\r\n          totalPerError++;\r\n        }\r\n\r\n        if (emptyAvgPrice.length > 0) {\r\n          avgPriceError++;\r\n        }\r\n      });\r\n\r\n      if (supplierError > 0) {\r\n        return 'Please select supplier.';\r\n      } else if (totalPerError > 0) {\r\n        return 'You need to set 100% for combinations of suppliers.';\r\n      } else if (avgPriceError > 0) {\r\n        return 'Please enter avg. price.';\r\n      } else {\r\n        return true;\r\n      }\r\n    } else if (group === 'TotalVolume') {\r\n      const totalPer = this.getComputedExcipient()\r\n        .map((val: any) => val.DefaultValue)\r\n        .reduce((sum: number, current: number) => sum + current, 0);\r\n\r\n      const totalVolume = this.getComputedExcipient()\r\n        .map((val: any) => val.Volume)\r\n        .reduce((sum: number, current: number) => sum + current, 0);\r\n\r\n      const totalVolumeEnter = this.calculatorInputsData\r\n        .filter((c: any) => c.GroupName == group && c.IsVisible)\r\n        .map((val: any) => +val.ValueText)\r\n        .reduce((sum: number, current: number) => sum + current, 0);\r\n\r\n      if (totalPer === 0 && totalVolume !== totalVolumeEnter) {\r\n        return `Total Volume should be same as sum of volumes of excipient's taken from page #3`;\r\n      } else if (totalPer > 0 && totalVolume >= totalVolumeEnter) {\r\n        return `Please enter volume greater than the total excipient volume.`;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  restartInputComponent() {\r\n    this.calculatorInputsDataFull = undefined;\r\n    this.calculatorInputsData = undefined;\r\n    this.calculatorData = undefined;\r\n    this.inputGroups = [];\r\n    this.countOfPages = 0;\r\n    this.pageNumber = 1;\r\n\r\n    this.prewPageButtonAllowed = false;\r\n    this.nextPageButtonAllowed = true;\r\n    this.buttonCalculateAllowed = false;\r\n    this.isDependentValue = false;\r\n    this.isDataContainsRequired = false;\r\n\r\n    this.getAllInputsByCalculatorId();\r\n    // this.getCalculatorDataById();\r\n  }\r\n\r\n  addNewSupplier(data: any, index: number, calculatorInput: any) {\r\n    if (!data.text) {\r\n      data.customItem = null;\r\n      return;\r\n    }\r\n\r\n    const newItem = {\r\n      Name: data.text,\r\n      ID: 0,\r\n    };\r\n\r\n    data.customItem = newItem;\r\n    calculatorInput.Suppliers[index].SupplierName = data.text;\r\n    calculatorInput.Suppliers[index].SupplierId = 0;\r\n    return calculatorInput;\r\n  }\r\n\r\n  validateIfVisibleItemOrNot() {\r\n    const isVisibleItems = this.calculatorInputsData.filter(\r\n      (item: any) => item.IsVisible\r\n    );\r\n    if (isVisibleItems.length === 0) {\r\n      this.restartInputComponent();\r\n      notify('Data Not Found, restarting workflow...', 'error', 7000);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getGroupTitle(group: string) {\r\n    if (group === 'Excipient' || group === 'TotalVolume') {\r\n      return `${group} (${this.Volume.Name})`;\r\n    }\r\n    return group.replace(/([A-Z])/g, ' $1').trim();\r\n  }\r\n\r\n  setValueOrVolume(e: any, excipient: any, i: number, type: string) {\r\n    const totalVolume = +excipient.Volume;\r\n    const singleSupplier = excipient.Suppliers[i];\r\n    const enterValue = +e.value;\r\n    // const ValuePer = +singleSupplier.Value;\r\n    // const Volume = +singleSupplier.Volume;\r\n\r\n    if (type == 'value' && enterValue > 0) {\r\n      const calVolume = ((totalVolume * enterValue) / 100).toFixed(1);\r\n      excipient.Suppliers[i].Volume = +calVolume;\r\n    }\r\n\r\n    if (type == 'volume' && enterValue > 0) {\r\n      const calPer = ((enterValue / totalVolume) * 100).toFixed(0);\r\n      excipient.Suppliers[i].Value = +calPer;\r\n    }\r\n  }\r\n\r\n  getCurrencyAndUnit() {\r\n    const CurrencyCode = this.Currency.CurrencyCode || 'USD';\r\n    const VolumeName = this.Volume.Name || 'Kg';\r\n\r\n    return `${CurrencyCode}/${VolumeName}`;\r\n  }\r\n\r\n  onChangeSupplierCount(selectedObject: any, calculatorInput: any) {\r\n    const currentValue = selectedObject.value;\r\n    const previousValue = selectedObject.previousValue;\r\n\r\n    if (currentValue !== previousValue) {\r\n      calculatorInput.Suppliers.map((item: any) => {\r\n        item['SupplierId'] = null;\r\n        item['SupplierName'] = null;\r\n        item['AvgPrice'] = 0;\r\n        item['Value'] = 0;\r\n        item['Volume'] = 0;\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"calculatorInputsData\">\r\n  <div class=\"container\">\r\n    <h4>Page {{ pageNumber }} of {{ countOfPages }} ({{ getNoteText() }})</h4>\r\n    <!-- <h5 class=\"h5Color\" *ngIf=\"isDependentValue\">{{localization.resourcesPlaceholders.KEY_Calculator_Precalculated}}</h5> -->\r\n    <div *ngFor=\"let group of inputGroups\">\r\n      <h5 *ngIf=\"isGroupVisible(group)\">{{ getGroupTitle(group) }}</h5>\r\n      <!--<h6 *ngIf=\"isTotalPercentVisible(group)\">{{getTotalPercent(group)}}</h6>-->\r\n      <div class=\"row\">\r\n        <div\r\n          class=\"hideIfEmpty col-lg-4 col-xl-4 col-md-6 col-sm-12\"\r\n          *ngFor=\"let calculatorInput of calculatorInputsData\"\r\n        >\r\n          <div\r\n            *ngIf=\"\r\n              (inputGroups.length == 1 || group == calculatorInput.GroupName) &&\r\n              calculatorInput.IsVisible\r\n            \"\r\n          >\r\n            <div\r\n              class=\"card margin6TopBottom\"\r\n              *ngIf=\"\r\n                calculatorInput.GroupName != 'SupplierCount' &&\r\n                calculatorInput.GroupName != 'Suppliers'\r\n              \"\r\n            >\r\n              <div *ngIf=\"calculatorInput.InputStyleId == 3\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"card-title\">\r\n                    <div>\r\n                      {{ calculatorInput.Name }}\r\n                      <span *ngIf=\"calculatorInput.IsRequired\" class=\"redText\"\r\n                        >*</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-text\">\r\n                    <dx-text-box\r\n                      [(value)]=\"calculatorInput.DefaultValueText\"\r\n                    ></dx-text-box>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"calculatorInput.InputStyleId == 2\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"card-title\">\r\n                    <div>\r\n                      {{ calculatorInput.Name }}\r\n                      <span *ngIf=\"calculatorInput.IsRequired\" class=\"redText\"\r\n                        >*</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-text\">\r\n                    <dx-select-box\r\n                      [dataSource]=\"calculatorInput.InputValues\"\r\n                      [(value)]=\"calculatorInput.DefaultValue\"\r\n                      displayExpr=\"Name\"\r\n                      valueExpr=\"Id\"\r\n                    >\r\n                    </dx-select-box>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"calculatorInput.InputStyleId == 1\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"card-title\">\r\n                    <div>\r\n                      {{ calculatorInput.Name }}\r\n                      <span *ngIf=\"calculatorInput.IsRequired\" class=\"redText\"\r\n                        >*</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-text\">\r\n                    <ng-container *ngIf=\"!calculatorInput.IsDecimalValue\">\r\n                      <dx-slider\r\n                        #slider\r\n                        [min]=\"calculatorInput.MinimumValue\"\r\n                        [max]=\"calculatorInput.MaximumValue\"\r\n                        [(value)]=\"calculatorInput.DefaultValue\"\r\n                        [step]=\"getStep(calculatorInput)\"\r\n                        [rtlEnabled]=\"false\"\r\n                        [disabled]=\"calculatorInput.Volume > 0\"\r\n                      >\r\n                        <dxo-label [visible]=\"true\" position=\"top\"></dxo-label>\r\n                      </dx-slider>\r\n                      <div class=\"horizontalSpace\"></div>\r\n                      <dx-number-box\r\n                        format=\"{{ calculatorInput.DxFormat }}\"\r\n                        [min]=\"calculatorInput.MinimumValue\"\r\n                        [max]=\"calculatorInput.MaximumValue\"\r\n                        [showSpinButtons]=\"true\"\r\n                        [step]=\"getStep(calculatorInput)\"\r\n                        [(value)]=\"slider.value\"\r\n                        [disabled]=\"calculatorInput.Volume > 0\"\r\n                      ></dx-number-box>\r\n                    </ng-container>\r\n                    <div *ngIf=\"calculatorInput.IsDecimalValue\" class=\"mt-2\">\r\n                      <!-- <div class=\"mb-2 text-center text-secondary\">OR</div> -->\r\n                      <dx-text-box\r\n                        [(ngModel)]=\"calculatorInput.Volume\"\r\n                        type=\"text\"\r\n                        [disabled]=\"calculatorInput.DefaultValue > 0\"\r\n                      ></dx-text-box>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div *ngIf=\"calculatorInput.InputStyleId == 0\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"card-title\">\r\n                    <div>\r\n                      {{ calculatorInput.Name }}\r\n                      <span *ngIf=\"calculatorInput.IsRequired\" class=\"redText\"\r\n                        >*</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"card-text\">\r\n                    <dx-text-box\r\n                      [(ngModel)]=\"calculatorInput.DefaultValue\"\r\n                      type=\"text\"\r\n                      [disabled]=\"true\"\r\n                    ></dx-text-box>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"group == 'SupplierCount' && getComputedExcipient().length > 0\"\r\n      >\r\n        <div\r\n          class=\"hideIfEmpty col-lg-4 col-xl-4 col-md-6 col-sm-12\"\r\n          *ngFor=\"let calculatorInput of getComputedExcipient()\"\r\n        >\r\n          <div\r\n            *ngIf=\"calculatorInput.Value > 0 || calculatorInput.Volume > 0\"\r\n            class=\"card margin6TopBottom\"\r\n          >\r\n            <div class=\"card-body\">\r\n              <div class=\"card-title\">\r\n                <div>\r\n                  {{ calculatorInput.Name }}\r\n                  <span *ngIf=\"calculatorInput.IsRequired\" class=\"redText\"\r\n                    >*</span\r\n                  >\r\n                </div>\r\n              </div>\r\n              <div class=\"card-text\">\r\n                <dx-select-box\r\n                  [dataSource]=\"supplierCountDpValues\"\r\n                  [(value)]=\"calculatorInput.SupplierCount\"\r\n                  [disabled]=\"\r\n                    calculatorInput.Value == 0 && calculatorInput.Volume == 0\r\n                  \"\r\n                  (onValueChanged)=\"\r\n                    onChangeSupplierCount($event, calculatorInput)\r\n                  \"\r\n                >\r\n                </dx-select-box>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        class=\"row\"\r\n        *ngIf=\"group == 'Suppliers' && getComputedExcipient().length > 0\"\r\n      >\r\n        <div\r\n          class=\"hideIfEmpty col-md-12 col-sm-12\"\r\n          *ngFor=\"let calculatorInput of getComputedExcipient()\"\r\n        >\r\n          <div\r\n            class=\"card margin6TopBottom\"\r\n            *ngIf=\"calculatorInput.Value > 0 || calculatorInput.Volume > 0\"\r\n          >\r\n            <div class=\"card-header\">\r\n              <div class=\"card-title\">{{ calculatorInput.Name }}</div>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div\r\n                  class=\"col-md-4\"\r\n                  *ngFor=\"\r\n                    let noSuppler of createRange(calculatorInput.SupplierCount);\r\n                    let i = index\r\n                  \"\r\n                >\r\n                  <div class=\"border p-2\">\r\n                    <div class=\"card-title\">\r\n                      <div>\r\n                        Supplier {{ i + 1 }}\r\n                        <span *ngIf=\"calculatorInput.IsRequired\" class=\"redText\"\r\n                          >*</span\r\n                        >\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"card-text1 form-group\">\r\n                      <label>Name</label>\r\n                      <!-- <dx-text-box\r\n                        [(value)]=\"calculatorInput.Suppliers[i].SupplierName\"\r\n                      ></dx-text-box> -->\r\n                      <dx-select-box\r\n                        [dataSource]=\"suppliers\"\r\n                        displayExpr=\"Name\"\r\n                        valueExpr=\"Id\"\r\n                        [acceptCustomValue]=\"true\"\r\n                        (onCustomItemCreating)=\"\r\n                          addNewSupplier($event, i, calculatorInput)\r\n                        \"\r\n                        (valueChange)=\"\r\n                          onChangeSupplier(\r\n                            $event,\r\n                            i,\r\n                            calculatorInput,\r\n                            suppliers\r\n                          )\r\n                        \"\r\n                        [minSearchLength]=\"2\"\r\n                        [searchEnabled]=\"true\"\r\n                        [showDataBeforeSearch]=\"true\"\r\n                        [(value)]=\"calculatorInput.Suppliers[i].SupplierId\"\r\n                      ></dx-select-box>\r\n                      <!-- <dx-text-box\r\n                        [(ngModel)]=\"calculatorInput.Suppliers[i].SupplierName\"\r\n                        type=\"text\"\r\n                      ></dx-text-box> -->\r\n                    </div>\r\n                    <div class=\"card-text1 form-group\">\r\n                      <label>Volume</label>\r\n                      <dx-slider\r\n                        #slider\r\n                        [min]=\"0\"\r\n                        [max]=\"100\"\r\n                        [(value)]=\"calculatorInput.Suppliers[i].Value\"\r\n                        [step]=\"getStep(calculatorInput)\"\r\n                        [rtlEnabled]=\"false\"\r\n                        (onValueChanged)=\"\r\n                          setValueOrVolume($event, calculatorInput, i, 'value')\r\n                        \"\r\n                      >\r\n                        <dxo-label [visible]=\"true\" position=\"top\"></dxo-label>\r\n                      </dx-slider>\r\n                      <div class=\"horizontalSpace\"></div>\r\n                      <dx-number-box\r\n                        format=\"{{ calculatorInput.DxFormat }}\"\r\n                        [min]=\"0\"\r\n                        [max]=\"100\"\r\n                        [showSpinButtons]=\"true\"\r\n                        [step]=\"getStep(calculatorInput)\"\r\n                        [(value)]=\"calculatorInput.Suppliers[i].Value\"\r\n                        valueChangeEvent=\"keyup\"\r\n                        (change)=\"\r\n                          setValueOrVolume($event, calculatorInput, i, 'value')\r\n                        \"\r\n                      ></dx-number-box>\r\n\r\n                      <div *ngIf=\"calculatorInput.IsDecimalValue\" class=\"mt-2\">\r\n                        <div class=\"mb-2 text-center text-secondary\">OR</div>\r\n                        <dx-text-box\r\n                          [(ngModel)]=\"calculatorInput.Suppliers[i].Volume\"\r\n                          type=\"text\"\r\n                          (onValueChanged)=\"\r\n                            setValueOrVolume(\r\n                              $event,\r\n                              calculatorInput,\r\n                              i,\r\n                              'volume'\r\n                            )\r\n                          \"\r\n                        ></dx-text-box>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"card-text1 form-group\">\r\n                      <label\r\n                        >Avg. Price ({{ getCurrencyAndUnit() }})\r\n                        <span class=\"redText\">*</span></label\r\n                      >\r\n                      <dx-text-box\r\n                        [(ngModel)]=\"calculatorInput.Suppliers[i].AvgPrice\"\r\n                        type=\"text\"\r\n                      ></dx-text-box>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\">\r\n          <span *ngIf=\"isDataContainsRequired\" class=\"redText left\"\r\n            >*denotes a required value!</span\r\n          >\r\n        </div>\r\n        <div class=\"col-lg-6 col-xl-6 col-md-6 col-sm-12\">\r\n          <span class=\"right\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-dark buttonMargin\"\r\n              (click)=\"goToPage(-1)\"\r\n              [disabled]=\"!prewPageButtonAllowed\"\r\n            >\r\n              Prev\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-dark buttonMargin\"\r\n              (click)=\"goToPage(1)\"\r\n              [disabled]=\"!nextPageButtonAllowed\"\r\n              [ngClass]=\"{ 'd-none': buttonCalculateAllowed }\"\r\n            >\r\n              Next\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-primary buttonMargin\"\r\n              [ngClass]=\"{ 'd-none': !buttonCalculateAllowed }\"\r\n              (click)=\"goToPage(0)\"\r\n              [disabled]=\"!buttonCalculateAllowed\"\r\n            >\r\n              Calculate\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from 'src/guard/auth.guard';\r\nimport { PendingChangesGuard } from 'src/services/pending-changes.guard';\r\nimport { CalculatorComponent } from './calculator/calculator.component';\r\nimport { ShareComponent } from './share/share.component';\r\nimport { StudyAreaPreviewComponent } from './study-area-preview/study-area-preview.component';\r\nimport { StudyAreaSummaryComponent } from './study-area-summary/study-area-summary.component';\r\nimport { StudyAreaComponent } from './study-area/study-area.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'study-summary',\r\n    component: StudyAreaSummaryComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'study-area/:studyArea/:spmId/:mycId/:dataSetId',\r\n    component: StudyAreaComponent,\r\n    canActivate: [AuthGuard],\r\n    canDeactivate: [PendingChangesGuard]\r\n  },\r\n  {\r\n    path: 'study-area-preview/:spmId/:mycId',\r\n    component: StudyAreaPreviewComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'calculator/:calculatorId/:marketYearCategoryId/:studyProjectMarketYearId',\r\n    component: CalculatorComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'share',\r\n    component: ShareComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport {\r\n  DxDataGridModule,\r\n  DxPivotGridModule,\r\n  DxSelectBoxModule,\r\n  DxButtonModule,\r\n  DxPopupModule,\r\n  DxTabPanelModule,\r\n  DxTemplateModule,\r\n  DxTooltipModule,\r\n  DxTextBoxModule,\r\n  DxTextAreaModule,\r\n  DxSliderModule,\r\n  DxNumberBoxModule,\r\n  DxListModule,\r\n  DxLoadIndicatorModule,\r\n  DxRadioGroupModule,\r\n  DxFormModule,\r\n  DxDropDownButtonModule,\r\n  DxTreeViewModule,\r\n} from 'devextreme-angular';\r\nimport { StudyAreaSummaryComponent } from './study-area-summary/study-area-summary.component';\r\nimport { StudyAreaComponent } from './study-area/study-area.component';\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\nimport { StudyAreaPreviewComponent } from './study-area-preview/study-area-preview.component';\r\nimport { ShareComponent } from './share/share.component';\r\nimport { SupplierMarketShareComponent } from './study-area/components/supplier-market-share/supplier-market-share.component';\r\nimport { LubricantDemandComponent } from './study-area/components/lubricant-demand/lubricant-demand.component';\r\nimport { ShowInitialSetupComponent } from './study-area/components/show-initial-setup/show-initial-setup.component';\r\nimport { LubricantDemandPreviewComponent } from './study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component';\r\nimport { SupplierMarketSharePreviewComponent } from './study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component';\r\nimport { SyntheticPenetrationComponent } from './study-area/components/synthetic-penetration/synthetic-penetration.component';\r\nimport { SyntheticPenetrationPreviewComponent } from './study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component';\r\nimport { VehicleParcStatisticsComponent } from './study-area/components/vehicle-parc-statistics/vehicle-parc-statistics.component';\r\nimport { VehicleParcStatisticsPreviewComponent } from './study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component';\r\nimport { ServiceCategoryConsumptionComponent } from './study-area/components/service-category-consumption/service-category-consumption.component';\r\nimport { ServiceCategoryConsumptionPreviewComponent } from './study-area-preview/components/service-category-consumption-preview/service-category-consumption-preview.component';\r\nimport { AveragePriceComponent } from './study-area/components/average-price/average-price.component';\r\nimport { AveragePricePreviewComponent } from './study-area/components/average-price/average-price-preview/average-price-preview.component';\r\nimport { SpecialtyExcipientSalesComponent } from './study-area/components/specialty-excipient-sales/specialty-excipient-sales.component';\r\nimport { SpecialtyExcipientSalesPreviewComponent } from './study-area/components/specialty-excipient-sales/specialty-excipient-sales-preview/specialty-excipient-sales-preview.component';\r\nimport { CalculatorComponent } from './calculator/calculator.component';\r\nimport { InputSelectorComponent } from './calculator/components/input-selector/input-selector.component';\r\nimport { CalculatorPreviewComponent } from './calculator/components/calculator-preview/calculator-preview.component';\r\nimport { PSCComponent } from './study-area/components/psc/psc.component';\r\nimport { ProductTypeSalesComponent } from './study-area/components/psc/sub/product-type-sales/product-type-sales.component';\r\nimport { ProductTypeSalePreviewComponent } from './study-area/components/psc/sub/product-type-sales/product-type-sale-preview/product-type-sale-preview.component';\r\nimport { BrandSalesComponent } from './study-area/components/psc/sub/brand-sales/brand-sales.component';\r\nimport { BrandSalesPreviewComponent } from './study-area/components/psc/sub/brand-sales/brand-sales-preview/brand-sales-preview.component';\r\nimport { SegmentSalesComponent } from './study-area/components/psc/sub/segment-sales/segment-sales.component';\r\nimport { SegmentSalesPreviewComponent } from './study-area/components/psc/sub/segment-sales/segment-sales-preview/segment-sales-preview.component';\r\nimport { EuropeanCountrySalesComponent } from './study-area/components/psc/sub/european-country-sales/european-country-sales.component';\r\nimport { EuropeanCountrySalesPreviewComponent } from './study-area/components/psc/sub/european-country-sales/european-country-sales-preview/european-country-sales-preview.component';\r\nimport { SHCComponent } from './study-area/components/shc/shc.component';\r\nimport { PtsComponent } from './study-area/components/shc/sub/pts/pts.component';\r\nimport { ShcPreviewComponent } from './study-area/components/shc/sub/shc-preview/shc-preview.component';\r\nimport { PcsComponent } from './study-area/components/shc/sub/pcs/pcs.component';\r\nimport { IrComponent } from './study-area/components/shc/sub/ir/ir.component';\r\nimport { CbsComponent } from './study-area/components/shc/sub/cbs/cbs.component';\r\nimport { FsComponent } from './study-area/components/shc/sub/fs/fs.component';\r\nimport { OsComponent } from './study-area/components/shc/sub/os/os.component';\r\nimport { ScComponent } from './study-area/components/shc/sub/sc/sc.component';\r\nimport { PreviewTopMenuComponent } from './study-area/components/shc/sub/shc-preview/preview-top-menu/preview-top-menu.component';\r\nimport { EhcComponent } from './study-area/components/ehc/ehc.component';\r\nimport { EhcSalesComponent } from './study-area/components/ehc/sub/ehc-sales/ehc-sales.component';\r\nimport { MarketConsumptionComponent } from './study-area/components/ehc/sub/market-consumption/market-consumption.component';\r\nimport { MarketConsumptionPreviewComponent } from './study-area/components/ehc/sub/market-consumption/market-consumption-preview/market-consumption-preview.component';\r\nimport { EhcSalesPreviewComponent } from './study-area/components/ehc/sub/ehc-sales/ehc-sales-preview/ehc-sales-preview.component';\r\nimport { IvmComponent } from './study-area/components/ivm/ivm.component';\r\nimport { ProductCompositionComponent } from './study-area/components/ivm/sub/product-composition/product-composition.component';\r\nimport { PsComponent } from './study-area/components/ivm/sub/ps/ps.component';\r\nimport { ProductCompositionPreviewComponent } from './study-area/components/ivm/sub/product-composition/product-composition-preview/product-composition-preview.component';\r\nimport { PncComponent } from './study-area/components/pnc/pnc.component';\r\nimport { PncPtsComponent } from './study-area/components/pnc/sub/pts/pts.component';\r\nimport { HotTableModule } from '@handsontable/angular';\r\nimport { registerAllModules } from 'handsontable/registry';\r\nimport { DataGridsConfigurationComponent } from '../data-grids-configuration/data-grids-configuration.component';\r\nimport { StudyComponent } from './study-area/components/study/study.component';\r\nimport { PivotGridPreviewComponent } from '../shared/pivot-grid-preview/pivot-grid-preview.component';\r\nimport { PivotGridPreviewTopMenuComponent } from '../shared/pivot-grid-preview/pivot-grid-preview-top-menu/pivot-grid-preview-top-menu.component';\r\n\r\nregisterAllModules();\r\n\r\n@NgModule({\r\n  declarations: [\r\n    StudyAreaSummaryComponent,\r\n    StudyAreaComponent,\r\n    StudyAreaPreviewComponent,\r\n    ShareComponent,\r\n    SupplierMarketShareComponent,\r\n    LubricantDemandComponent,\r\n    ShowInitialSetupComponent,\r\n    LubricantDemandPreviewComponent,\r\n    SupplierMarketSharePreviewComponent,\r\n    SyntheticPenetrationComponent,\r\n    SyntheticPenetrationPreviewComponent,\r\n    VehicleParcStatisticsComponent,\r\n    VehicleParcStatisticsPreviewComponent,\r\n    ServiceCategoryConsumptionComponent,\r\n    ServiceCategoryConsumptionPreviewComponent,\r\n    AveragePriceComponent,\r\n    AveragePricePreviewComponent,\r\n    SpecialtyExcipientSalesComponent,\r\n    SpecialtyExcipientSalesPreviewComponent,\r\n    CalculatorComponent,\r\n    InputSelectorComponent,\r\n    CalculatorPreviewComponent,\r\n    PSCComponent,\r\n    ProductTypeSalesComponent,\r\n    ProductTypeSalePreviewComponent,\r\n    BrandSalesComponent,\r\n    BrandSalesPreviewComponent,\r\n    SegmentSalesComponent,\r\n    SegmentSalesPreviewComponent,\r\n    EuropeanCountrySalesComponent,\r\n    EuropeanCountrySalesPreviewComponent,\r\n    SHCComponent,\r\n    PtsComponent,\r\n    ShcPreviewComponent,\r\n    PcsComponent,\r\n    IrComponent,\r\n    CbsComponent,\r\n    FsComponent,\r\n    OsComponent,\r\n    ScComponent,\r\n    PreviewTopMenuComponent,\r\n    EhcComponent,\r\n    EhcSalesComponent,\r\n    MarketConsumptionComponent,\r\n    MarketConsumptionPreviewComponent,\r\n    EhcSalesPreviewComponent,\r\n    IvmComponent,\r\n    ProductCompositionComponent,\r\n    PsComponent,\r\n    ProductCompositionPreviewComponent,\r\n    PncComponent,\r\n    PncPtsComponent,\r\n    DataGridsConfigurationComponent,\r\n    StudyComponent,\r\n    PivotGridPreviewComponent,\r\n    PivotGridPreviewTopMenuComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DxDataGridModule,\r\n    DxPivotGridModule,\r\n    DxSelectBoxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    DxButtonModule,\r\n    DxTextBoxModule,\r\n    DxSliderModule,\r\n    DxNumberBoxModule,\r\n    DxTabPanelModule,\r\n    PagesRoutingModule,\r\n    DxPopupModule,\r\n    DxTemplateModule,\r\n    DxTooltipModule,\r\n    DxListModule,\r\n    DxRadioGroupModule,\r\n    DxLoadIndicatorModule,\r\n    NgSelectModule,\r\n    HotTableModule,\r\n    DxTextAreaModule,\r\n    DxFormModule,\r\n    DxDropDownButtonModule,\r\n    DxTreeViewModule,\r\n  ],\r\n})\r\nexport class PagesModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-share',\n  templateUrl: './share.component.html',\n  styleUrls: ['./share.component.css'],\n})\nexport class ShareComponent implements OnInit {\n  shareData: any = [\n    {\n      Country: 'Bahrain',\n      Supplier: 'Venoco',\n      MarketSegment: 'Commercial',\n      PreviousYearConsumer: 1.3,\n      PreviousYearPerConsumer: 5.3,\n      BaseYearConsumer: '',\n      BaseYearPerConsumer: '',\n      PreviousYearIndustrial: 1.6,\n      PreviousYearPerIndustrial: 7.0,\n      BaseYearIndustrial: '',\n      BaseYearPerIndustrial: '',\n      PreviousYearCommercial: 0.7,\n      PreviousYearPerCommercial: 5.8,\n      BaseYearCommercial: '',\n      BaseYearPerCommercial: '',\n    },\n    {\n      Country: 'Bahrain',\n      Supplier: 'Shell',\n      MarketSegment: 'Consumer',\n      PreviousYearConsumer: 1.3,\n      PreviousYearPerConsumer: 5.3,\n      BaseYearConsumer: '',\n      BaseYearPerConsumer: '',\n      PreviousYearIndustrial: 1.6,\n      PreviousYearPerIndustrial: 7.0,\n      BaseYearIndustrial: '',\n      BaseYearPerIndustrial: '',\n      PreviousYearCommercial: 0.7,\n      PreviousYearPerCommercial: 5.8,\n      BaseYearCommercial: '',\n      BaseYearPerCommercial: '',\n    },\n  ];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-header setTitle=\"Lubricant Demand\"></app-header>\n\n<div class=\"container-fluid my-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col\">\n      <div class=\"card\">\n        <!-- <div class=\"card-header\">\n          <h6 class=\"card-title\">Study Info</h6>\n        </div> -->\n        <div class=\"card-body p-2 small\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <div class=\"text-secondary\">Study Name:</div>\n              <div class=\"field-value\">Lubesnet-2022-India-001-DEV</div>\n            </div>\n            <div class=\"col\">\n              <div class=\"text-secondary\">Data Set:</div>\n              <div class=\"field-value\">Lubesnet</div>\n            </div>\n            <div class=\"col\">\n              <div class=\"text-secondary\">Study Year:</div>\n              <div class=\"field-value\">2022</div>\n            </div>\n            <div class=\"col\">\n              <div class=\"text-secondary\">Project:</div>\n              <div class=\"field-value\">LBN-PRJ-2022-001</div>\n            </div>\n            <div class=\"col\">\n              <div class=\"text-secondary\">Project Lead:</div>\n              <div class=\"field-value\">pranav gandhi</div>\n            </div>\n            <div class=\"col\">\n              <div class=\"text-secondary\">Analyst:</div>\n              <div class=\"field-value\">Sachin Patidar</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"container-fluid my-4\">\n  <dx-data-grid\n    id=\"gridContainer\"\n    [dataSource]=\"shareData\"\n    [showBorders]=\"true\"\n    [allowColumnResizing]=\"true\"\n    [columnMinWidth]=\"50\"\n    [columnHidingEnabled]=\"false\"\n    [rowAlternationEnabled]=\"true\"\n  >\n    <!-- <dxi-column caption=\"Country\" [width]=\"120\"></dxi-column> -->\n    <dxi-column caption=\"Market Segment\" dataField=\"MarketSegment\"></dxi-column>\n    <dxi-column caption=\"Supplier\" dataField=\"Supplier\"></dxi-column>\n\n    <dxi-column\n      caption=\"2020\"\n      [width]=\"60\"\n      dataField=\"PreviousYearCommercial\"\n    ></dxi-column>\n    <dxi-column\n      caption=\"% Of Total\"\n      width=\"100\"\n      dataField=\"PreviousYearPerCommercial\"\n    ></dxi-column>\n    <dxi-column\n      caption=\"2021\"\n      [width]=\"60\"\n      dataField=\"BaseYearCommercial\"\n      cellTemplate=\"baseYearCellTemplate\"\n    ></dxi-column>\n    <dxi-column\n      caption=\"% Of Total\"\n      [width]=\"100\"\n      dataField=\"BaseYearPerCommercial\"\n    ></dxi-column>\n\n    <dxi-column\n      caption=\"Notes\"\n      dataField=\"StudyNotes\"\n      cellTemplate=\"notesCellTemplate\"\n      [allowEditing]=\"false\"\n    ></dxi-column>\n\n    <div *dxTemplate=\"let data of 'notesCellTemplate'\">\n      <div class=\"text-left\" style=\"height: 15px\">\n        <dx-button\n          stylingMode=\"text\"\n          icon=\"plus\"\n          type=\"default\"\n          class=\"small floating-note-button\"\n        >\n        </dx-button>\n      </div>\n      <div class=\"mt-2 note-cell-value\">\n        <a href=\"javascript: void(0);\">{{ data.value }}</a>\n      </div>\n    </div>\n\n    <!-- <dxi-column caption=\"Consumer (In KTonnes)\">\n      <dxi-column caption=\"2020\" dataField=\"PreviousYearConsumer\"></dxi-column>\n      <dxi-column\n        caption=\"% Of Total\"\n        dataField=\"PreviousYearPerConsumer\"\n      ></dxi-column>\n      <dxi-column\n        caption=\"2021\"\n        dataField=\"BaseYearConsumer\"\n        cellTemplate=\"baseYearCellTemplate\"\n      ></dxi-column>\n      <dxi-column\n        caption=\"% Of Total\"\n        dataField=\"BaseYearPerConsumer\"\n      ></dxi-column>\n    </dxi-column>\n    <dxi-column caption=\"Industrial (In KTonnes)\">\n      <dxi-column\n        caption=\"2020\"\n        dataField=\"PreviousYearIndustrial\"\n      ></dxi-column>\n      <dxi-column\n        caption=\"% Of Total\"\n        dataField=\"PreviousYearPerIndustrial\"\n      ></dxi-column>\n      <dxi-column\n        caption=\"2021\"\n        dataField=\"BaseYearIndustrial\"\n        cellTemplate=\"baseYearCellTemplate\"\n      ></dxi-column>\n      <dxi-column\n        caption=\"% Of Total\"\n        dataField=\"BaseYearPerIndustrial\"\n      ></dxi-column>\n    </dxi-column> -->\n\n    <div *dxTemplate=\"let data of 'baseYearCellTemplate'\">\n      <input\n        type=\"text\"\n        [value]=\"data.value > 0 ? data.value : ''\"\n        class=\"form-control form-control-sm\"\n      />\n    </div>\n  </dx-data-grid>\n</div>\n","import {\n  Component,\n  Input,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '@full-fledged/alerts';\nimport { IsLoadingService } from '@service-work/is-loading';\nimport { ApiResponse } from 'src/model/apiResponse.model';\nimport { LubricantDemandDataItem, StudyArea } from 'src/model/studyArea.model';\nimport { StudyService } from 'src/services/study.service';\nimport { InitialSetup } from 'src/model/initialSetup.model';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\n\n@Component({\n  selector: 'app-lubricant-demand-preview',\n  templateUrl: './lubricant-demand-preview.component.html',\n  styleUrls: ['./lubricant-demand-preview.component.css'],\n})\nexport class LubricantDemandPreviewComponent implements OnInit {\n  marketYearCategoryId: number = 0;\n  studyProjectMarketYearId: number = 0;\n  studyAreaId: number = 0;\n\n  // studyData: LubricantDemandDataItem[] = [];\n\n  private _studyData: LubricantDemandDataItem[] = [];\n  @Input() set studyData(v: LubricantDemandDataItem[]) {\n    // console.log(v);\n    this._studyData = v;\n  }\n\n  get studyData(): LubricantDemandDataItem[] {\n    return this._studyData;\n  }\n\n  @Input() currentYear: number = 0;\n\n  // currentYear: number = 0;\n  previousYear1: number = 0;\n  previousYear2: number = 0;\n\n  @Input() foreCastYear1: number = 0;\n  @Input() foreCastYear2: number = 0;\n\n  volumeYears: any[] = [];\n\n  cagr1: string = '';\n  cagr2: string = '';\n\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor(\n    private studyService: StudyService,\n    private isLoadingService: IsLoadingService,\n    private alertService: AlertService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    const params = this.route.snapshot.params;\n\n    this.marketYearCategoryId = params['mycId'];\n    this.studyProjectMarketYearId = params['spmId'];\n    this.studyAreaId = params['studyArea'];\n\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {\n    // this.getLubricantDemandData();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    // this.foreCastYear1 = changes['foreCastYear1'].currentValue;\n\n    this.getPreviewData(this.studyData);\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'MarketSegment',\n        area: 'row',\n        caption: 'Market Segment',\n        dataType: 'string',\n        width: 110,\n      },\n      {\n        dataField: 'ProductCategory',\n        area: 'row',\n        caption: 'Product Category',\n        width: 150,\n        dataType: 'string',\n      },\n      {\n        dataField: 'SubProduct',\n        caption: 'Sub Product',\n        area: 'filter',\n        width: 90,\n        summaryDisplayMode: 'none',\n        dataType: 'string',\n      },\n      {\n        dataField: 'ViscosityGrade',\n        area: 'filter',\n        caption: 'Viscosity Grade',\n        width: 150,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Lubricant Demand, KTonnes',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 80,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n\n  getPreviewData(studyData: LubricantDemandDataItem[]) {\n    const currentYear = this.currentYear;\n    // this.foreCastYear1 = currentYear + 4;\n    // this.foreCastYear2 = currentYear + 10;\n    // this.foreCastYear2 = this.foreCastYear1 + 5;\n\n    const previewData: {\n      MarketSegment: string;\n      ProductCategory: string;\n      SubProduct: string;\n      ViscosityGrade: string;\n      Year: number;\n      Volume: number;\n    }[] = [];\n    studyData.map((item: LubricantDemandDataItem) => {\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: currentYear - 5,\n        Volume: +item.PreviousYear5,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: currentYear - 4,\n        Volume: +item.PreviousYear4,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: currentYear - 3,\n        Volume: +item.PreviousYear3,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: currentYear - 2,\n        Volume: +item.PreviousYear2,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: currentYear - 1,\n        Volume: +item.PreviousYear1,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: currentYear,\n        Volume: +item.CurrentYear,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: this.foreCastYear1,\n        Volume: +item.Forecast1,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        ProductCategory: item.ProductCategory,\n        SubProduct: item.SubProduct,\n        ViscosityGrade: item.ViscosityGrade,\n        Year: this.foreCastYear2,\n        Volume: +item.Forecast2,\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  changeStudyData(studyData: LubricantDemandDataItem[]) {\n    this.studyData = studyData;\n    this.getPreviewData(this.studyData);\n  }\n\n  // not in use\n  getLubricantDemandData() {\n    this.isLoadingService.add();\n    this.studyService\n      .getLubricantDemandData(\n        this.marketYearCategoryId,\n        this.studyProjectMarketYearId\n      )\n      .subscribe((res: ApiResponse) => {\n        if (res.HttpStatusCode === 200) {\n          const studyData = res.Data as StudyArea;\n\n          this.studyData =\n            studyData.LubricantDemandDataItems as LubricantDemandDataItem[];\n\n          this.studySummary = new InitialSetup().deserialize(\n            studyData.InitialSetup\n          );\n\n          let currentYear =\n            this.studySummary.StudyYear || new Date().getFullYear();\n\n          currentYear = currentYear - 1;\n\n          this.volumeYears = [];\n          const myYears = [];\n          for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\n            this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\n            myYears[j] = i;\n          }\n\n          this.currentYear = currentYear;\n          // this.foreCastYear1 = currentYear + 5;\n          this.foreCastYear1 = currentYear + 4;\n          // this.foreCastYear2 = currentYear + 10;\n          this.foreCastYear2 = this.foreCastYear1 + 5;\n\n          const previewData: {\n            MarketSegment: string;\n            ProductCategory: string;\n            SubProduct: string;\n            ViscosityGrade: string;\n            Year: number;\n            Volume: number;\n          }[] = [];\n          this.studyData.map((item: LubricantDemandDataItem) => {\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 5,\n              Volume: item.PreviousYear5,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 4,\n              Volume: item.PreviousYear4,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 3,\n              Volume: item.PreviousYear3,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 2,\n              Volume: item.PreviousYear2,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 1,\n              Volume: item.PreviousYear1,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear,\n              Volume: item.CurrentYear,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: this.foreCastYear1,\n              Volume: item.Forecast1,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: this.foreCastYear2,\n              Volume: item.Forecast2,\n            });\n          });\n\n          this.pivotGridDataSource = new PivotGridDataSource({\n            store: previewData,\n            fields: this.getGridFields(),\n          });\n\n          this.currentYear = currentYear;\n          // this.foreCastYear1 = currentYear + 5;\n          this.foreCastYear1 = currentYear + 4;\n          // this.foreCastYear2 = currentYear + 10;\n          this.foreCastYear2 = this.foreCastYear1 + 5;\n\n          this.cagr1 = `${currentYear}-${this.foreCastYear1}`;\n          this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;\n\n          this.volumeYears.push({ field: `CurrentYear`, year: currentYear });\n\n          this.isLoadingService.remove();\n        } else {\n          this.alertService.danger(res.Data);\n        }\n      });\n  }\n}\n","<dx-pivot-grid\n  [allowSortingBySummary]=\"true\"\n  [allowSorting]=\"true\"\n  [allowFiltering]=\"true\"\n  [allowExpandAll]=\"true\"\n  [showColumnGrandTotals]=\"false\"\n  [showRowGrandTotals]=\"true\"\n  [showRowTotals]=\"true\"\n  [showColumnTotals]=\"false\"\n  showTotalsPrior=\"none\"\n  [showBorders]=\"true\"\n  [dataSource]=\"pivotGridDataSource\"\n  [fieldPanel]=\"{\n    showColumnFields: true,\n    showDataFields: true,\n    showFilterFields: true,\n    showRowFields: true,\n    allowFieldDragging: true,\n    visible: true\n  }\"\n  [fieldChooser]=\"{ enabled: true }\"\n>\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\n</dx-pivot-grid>\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\nimport { ServiceCategoryConsumptionItem } from 'src/model/serviceCategoryConsumption.model';\n\n@Component({\n  selector: 'app-service-category-consumption-preview',\n  templateUrl: './service-category-consumption-preview.component.html',\n  styleUrls: ['./service-category-consumption-preview.component.css'],\n})\nexport class ServiceCategoryConsumptionPreviewComponent implements OnInit {\n  @Input() studyData: ServiceCategoryConsumptionItem[] = [];\n  @Input() currentYear: number = 0;\n  @Input() previousYear: number = 0;\n\n  // private _studyData: ServiceCategoryConsumptionItem[] = [];\n  // @Input() set studyData(v: ServiceCategoryConsumptionItem[]) {\n  //   // console.log(v);\n  //   this._studyData = v;\n  //   this.getPreviewData();\n  // }\n\n  // get studyData(): ServiceCategoryConsumptionItem[] {\n  //   return this._studyData;\n  // }\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor() {\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getPreviewData(this.studyData);\n  }\n\n  getPreviewData(studyData: ServiceCategoryConsumptionItem[]) {\n    const previewData: {\n      EngineOilTypeName: string | null;\n      SourceTypeCode: string;\n      ServiceCategoryCode: string;\n      Year: number;\n      Volume: number;\n      perOfTotal: number;\n    }[] = [];\n\n    studyData.map((item: ServiceCategoryConsumptionItem) => {\n      let prevPer: number = 0;\n      if (item.PreviousYear1 > 0) {\n        prevPer = 0;\n      }\n\n      let currPer: number = 0;\n      if (item.CurrentYear > 0) {\n        currPer = 0;\n      }\n\n      previewData.push({\n        EngineOilTypeName: item.EngineOilTypeName,\n        SourceTypeCode: item.SourceTypeCode,\n        ServiceCategoryCode: item.ServiceCategoryCode,\n        Year: this.previousYear,\n        Volume: item.PreviousYear1,\n        perOfTotal: parseFloat(prevPer.toFixed(1)),\n      });\n      previewData.push({\n        EngineOilTypeName: item.EngineOilTypeName,\n        SourceTypeCode: item.SourceTypeCode,\n        ServiceCategoryCode: item.ServiceCategoryCode,\n        Year: this.currentYear,\n        Volume: item.CurrentYear,\n        perOfTotal: parseFloat(currPer.toFixed(1)),\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'EngineOilTypeName',\n        area: 'column',\n        caption: 'Engine Oil Type',\n        dataType: 'string',\n      },\n      {\n        dataField: 'SourceTypeCode',\n        area: 'row',\n        caption: 'Source Type',\n        dataType: 'string',\n        width: 110,\n      },\n      {\n        dataField: 'ServiceCategoryCode',\n        area: 'row',\n        caption: 'Service Category',\n        width: 150,\n        dataType: 'string',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Lubricant Demand, KTonnes',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: '% of Total',\n        dataField: 'perOfTotal',\n        dataFieldType: 'perOfTotal',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 30,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n}\n","<dx-pivot-grid\n  [allowSortingBySummary]=\"true\"\n  [allowSorting]=\"true\"\n  [allowFiltering]=\"true\"\n  [allowExpandAll]=\"true\"\n  [showColumnGrandTotals]=\"false\"\n  [showRowGrandTotals]=\"true\"\n  [showRowTotals]=\"true\"\n  [showColumnTotals]=\"false\"\n  showTotalsPrior=\"none\"\n  [showBorders]=\"true\"\n  [dataSource]=\"pivotGridDataSource\"\n  [fieldPanel]=\"{\n    showColumnFields: true,\n    showDataFields: true,\n    showFilterFields: true,\n    showRowFields: true,\n    allowFieldDragging: true,\n    visible: true\n  }\"\n  [fieldChooser]=\"{ enabled: true }\"\n>\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\n</dx-pivot-grid>\n","import {\n  Component,\n  Input,\n  OnInit,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '@full-fledged/alerts';\nimport { IsLoadingService } from '@service-work/is-loading';\nimport { ApiResponse } from 'src/model/apiResponse.model';\nimport { StudyService } from 'src/services/study.service';\nimport { InitialSetup } from 'src/model/initialSetup.model';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\nimport {\n  supplierMarketShare,\n  SupplierMarketShareItem,\n} from 'src/model/supplierMarketShare.model';\nimport { DataEntry } from 'src/model/dataEntry.model';\nimport { SharedService } from 'src/services/shared.service';\n\n@Component({\n  selector: 'app-supplier-market-share-preview',\n  templateUrl: './supplier-market-share-preview.component.html',\n  styleUrls: ['./supplier-market-share-preview.component.css'],\n})\nexport class SupplierMarketSharePreviewComponent implements OnInit {\n  marketYearCategoryId: number = 0;\n  studyProjectMarketYearId: number = 0;\n  studyAreaId: number = 0;\n\n  // studyData: SupplierMarketShareItem[] = [];\n\n  studyData: SupplierMarketShareItem[] = [];\n  @Input() set setStudyData(v: SupplierMarketShareItem[]) {\n    // console.log(v);\n    this.studyData = v;\n  }\n\n  // get studyData(): SupplierMarketShareItem[] {\n  //   return this._studyData;\n  // }\n\n  @Input() currentYear: number = 0;\n  @Input() previousYear1: number = 0;\n\n  // currentYear: number = 0;\n  // previousYear1: number = 0;\n\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  marketSegments: DataEntry[] = [];\n\n  marketSegmentVisePreviousYearTotal: any = {};\n  marketSegmentViseCurrentYearTotal: any = {};\n\n  constructor(\n    private studyService: StudyService,\n    private isLoadingService: IsLoadingService,\n    private alertService: AlertService,\n    private route: ActivatedRoute,\n    private sharedService: SharedService\n  ) {\n    const params = this.route.snapshot.params;\n\n    this.marketYearCategoryId = params['mycId'];\n    this.studyProjectMarketYearId = params['spmId'];\n    this.studyAreaId = params['studyArea'];\n\n    this.pivotGridDataSource = new PivotGridDataSource();\n    this.getMarketSegment();\n  }\n\n  ngOnInit(): void {\n    // this.getSupplierMarketShareData();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n    //Add '${implements OnChanges}' to the class.\n    // console.log(changes);\n    this.getPreviewData(this.studyData);\n  }\n\n  changeStudyData(studyData: SupplierMarketShareItem[]) {\n    this.setStudyData = studyData;\n    this.getPreviewData(this.studyData);\n  }\n\n  getPreviewData(studyData: SupplierMarketShareItem[]) {\n    const currentYear = this.currentYear;\n    // this.foreCastYear1 = currentYear + 4;\n    // this.foreCastYear2 = currentYear + 10;\n    // this.foreCastYear2 = this.foreCastYear1 + 5;\n\n    this.marketSegments.map((segmentData: DataEntry) => {\n      this.marketSegmentVisePreviousYearTotal[segmentData.Name] = this.studyData\n        .filter((data) => data.MarketSegmentId === segmentData.Id)\n        .reduce((prev: number, curr: any) => prev + curr.PreviousYear1, 0);\n\n      this.marketSegmentViseCurrentYearTotal[segmentData.Name] = this.studyData\n        .filter((data) => data.MarketSegmentId === segmentData.Id)\n        .reduce((prev: number, curr: any) => prev + curr.CurrentYear, 0);\n    });\n\n    const previewData: {\n      MarketSegment: string;\n      SupplierName: string;\n      Year: number;\n      Volume: number;\n      perOfTotal: number;\n    }[] = [];\n    studyData.map((item: SupplierMarketShareItem) => {\n      let prevPer: number = 0;\n      if (item.PreviousYear1 > 0) {\n        prevPer = this.calculatePerVolume(\n          item.PreviousYear1,\n          this.marketSegmentVisePreviousYearTotal[item.MarketSegment]\n        );\n      }\n\n      let currPer: number = 0;\n      if (item.CurrentYear > 0) {\n        currPer = this.calculatePerVolume(\n          item.CurrentYear,\n          this.marketSegmentViseCurrentYearTotal[item.MarketSegment]\n        );\n      }\n\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        SupplierName: item.SupplierName,\n        Year: this.previousYear1,\n        Volume: item.PreviousYear1,\n        perOfTotal: prevPer,\n      });\n      previewData.push({\n        MarketSegment: item.MarketSegment,\n        SupplierName: item.SupplierName,\n        Year: this.currentYear,\n        Volume: item.CurrentYear,\n        perOfTotal: currPer,\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  getSupplierMarketShareData() {\n    this.isLoadingService.add();\n    this.studyService\n      .getSupplierMarketShareData(\n        this.marketYearCategoryId,\n        this.studyProjectMarketYearId\n      )\n      .subscribe((res: ApiResponse) => {\n        if (res.HttpStatusCode === 200) {\n          const studyData = res.Data as supplierMarketShare;\n\n          this.studyData =\n            studyData.SupplierMarketShareItems as SupplierMarketShareItem[];\n\n          this.studySummary = new InitialSetup().deserialize(\n            studyData.InitialSetup\n          );\n\n          let currentYear =\n            this.studySummary.StudyYear || new Date().getFullYear();\n\n          currentYear = currentYear - 2;\n\n          this.currentYear = currentYear;\n          this.previousYear1 = currentYear - 1;\n\n          this.marketSegments.map((segmentData: DataEntry) => {\n            this.marketSegmentVisePreviousYearTotal[segmentData.Name] =\n              this.studyData\n                .filter((data) => data.MarketSegmentId === segmentData.Id)\n                .reduce(\n                  (prev: number, curr: any) => prev + curr.PreviousYear1,\n                  0\n                );\n\n            this.marketSegmentViseCurrentYearTotal[segmentData.Name] =\n              this.studyData\n                .filter((data) => data.MarketSegmentId === segmentData.Id)\n                .reduce(\n                  (prev: number, curr: any) => prev + curr.CurrentYear,\n                  0\n                );\n          });\n\n          // const totalPreviousVolume = this.studyData.reduce(\n          //   (prev: number, curr: any) => prev + curr.PreviousYear1,\n          //   0\n          // );\n          // const totalCurrentVolume = this.studyData.reduce(\n          //   (prev: number, curr: any) => prev + curr.CurrentYear,\n          //   0\n          // );\n\n          const previewData: {\n            MarketSegment: string;\n            SupplierName: string;\n            Year: number;\n            Volume: number;\n            perOfTotal: number;\n          }[] = [];\n          this.studyData.map((item: SupplierMarketShareItem) => {\n            let prevPer: number = 0;\n            if (item.PreviousYear1 > 0) {\n              prevPer = this.calculatePerVolume(\n                item.PreviousYear1,\n                this.marketSegmentVisePreviousYearTotal[item.MarketSegment]\n              );\n            }\n\n            let currPer: number = 0;\n            if (item.CurrentYear > 0) {\n              currPer = this.calculatePerVolume(\n                item.CurrentYear,\n                this.marketSegmentViseCurrentYearTotal[item.MarketSegment]\n              );\n            }\n\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              SupplierName: item.SupplierName,\n              Year: this.previousYear1,\n              Volume: item.PreviousYear1,\n              perOfTotal: prevPer,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              SupplierName: item.SupplierName,\n              Year: this.currentYear,\n              Volume: item.CurrentYear,\n              perOfTotal: currPer,\n            });\n          });\n\n          this.pivotGridDataSource = new PivotGridDataSource({\n            store: previewData,\n            fields: this.getGridFields(),\n          });\n\n          this.isLoadingService.remove();\n        } else {\n          this.alertService.danger(res.Data);\n        }\n      });\n  }\n\n  getMarketSegment() {\n    this.sharedService.getMarketSegment().subscribe((res: ApiResponse) => {\n      if (res.HttpStatusCode === 200) {\n        this.marketSegments = res.Data as DataEntry[];\n      }\n    });\n  }\n\n  calculatePerVolume(colValue: number, totalColValue: number) {\n    return parseFloat(((colValue * 100) / totalColValue).toFixed(1));\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'MarketSegment',\n        area: 'column',\n        caption: 'Market Segment',\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n      },\n      {\n        dataField: 'SupplierName',\n        area: 'row',\n        caption: 'Supplier',\n        width: 150,\n        dataType: 'string',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Lubricant Demand, KTonnes',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: '% of Total',\n        dataField: 'perOfTotal',\n        dataFieldType: 'perOfTotal',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 80,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n}\n","<dx-pivot-grid\r\n  [allowSortingBySummary]=\"true\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"true\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"true\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n</dx-pivot-grid>\r\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\nimport { SyntheticPenetrationItem } from 'src/model/syntheticPenetration.model';\n\n@Component({\n  selector: 'app-synthetic-penetration-preview',\n  templateUrl: './synthetic-penetration-preview.component.html',\n  styleUrls: ['./synthetic-penetration-preview.component.css'],\n})\nexport class SyntheticPenetrationPreviewComponent implements OnInit, OnChanges {\n  @Input() studyData: SyntheticPenetrationItem[] = [];\n  @Input() currentYear: number = 0;\n  @Input() previousYear: number = 0;\n\n  marketYearCategoryId: number = 0;\n  studyProjectMarketYearId: number = 0;\n  studyAreaId: number = 0;\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor(private route: ActivatedRoute) {\n    const params = this.route.snapshot.params;\n\n    this.marketYearCategoryId = params['mycId'];\n    this.studyProjectMarketYearId = params['spmId'];\n    this.studyAreaId = params['studyArea'];\n\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getPreviewData(this.studyData);\n  }\n\n  getPreviewData(studyData: SyntheticPenetrationItem[]) {\n    const previewData: {\n      Segment: string;\n      SyntheticType: string;\n      Year: number;\n      Volume: number;\n    }[] = [];\n\n    studyData.map((item: SyntheticPenetrationItem) => {\n      previewData.push({\n        Segment: item.Segment,\n        SyntheticType: item.SyntheticType,\n        Year: this.previousYear,\n        Volume: item.PreviousYear1,\n      });\n      previewData.push({\n        Segment: item.Segment,\n        SyntheticType: item.SyntheticType,\n        Year: this.currentYear,\n        Volume: item.CurrentYear,\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'Segment',\n        area: 'row',\n        caption: 'Segment',\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        width: 200,\n      },\n      {\n        dataField: 'SyntheticType',\n        area: 'column',\n        caption: 'Synthetic Type',\n\n        dataType: 'string',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Market Penetration',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 30,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 30,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n\n  changeStudyData(studyData: SyntheticPenetrationItem[]) {\n    this.studyData = studyData;\n    this.getPreviewData(this.studyData);\n  }\n}\n","<dx-pivot-grid\n  [allowSortingBySummary]=\"true\"\n  [allowSorting]=\"true\"\n  [allowFiltering]=\"true\"\n  [allowExpandAll]=\"true\"\n  [showColumnGrandTotals]=\"false\"\n  [showRowGrandTotals]=\"true\"\n  [showRowTotals]=\"true\"\n  [showColumnTotals]=\"false\"\n  showTotalsPrior=\"none\"\n  [showBorders]=\"true\"\n  [dataSource]=\"pivotGridDataSource\"\n  [fieldPanel]=\"{\n    showColumnFields: true,\n    showDataFields: true,\n    showFilterFields: true,\n    showRowFields: true,\n    allowFieldDragging: true,\n    visible: true\n  }\"\n  [fieldChooser]=\"{ enabled: true }\"\n>\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\n</dx-pivot-grid>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\nimport { VehicleParcStatisticItem } from 'src/model/vehicleParcStatistics.model';\n\n@Component({\n  selector: 'app-vehicle-parc-statistics-preview',\n  templateUrl: './vehicle-parc-statistics-preview.component.html',\n  styleUrls: ['./vehicle-parc-statistics-preview.component.css'],\n})\nexport class VehicleParcStatisticsPreviewComponent implements OnInit {\n  @Input() studyData: VehicleParcStatisticItem[] = [];\n  @Input() currentYear: number = 0;\n  @Input() previousYear: number = 0;\n\n  marketYearCategoryId: number = 0;\n  studyProjectMarketYearId: number = 0;\n  studyAreaId: number = 0;\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor(private route: ActivatedRoute) {\n    const params = this.route.snapshot.params;\n\n    this.marketYearCategoryId = params['mycId'];\n    this.studyProjectMarketYearId = params['spmId'];\n    this.studyAreaId = params['studyArea'];\n\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getPreviewData(this.studyData);\n  }\n\n  getPreviewData(studyData: VehicleParcStatisticItem[]) {\n    // console.log(studyData);\n    const { totalCurrentYear, totalPreviousYear1 } = studyData.reduce(\n      ({ totalCurrentYear, totalPreviousYear1 }, currentYear) => ({\n        totalCurrentYear: totalCurrentYear + currentYear.CurrentYear,\n        totalPreviousYear1: totalPreviousYear1 + currentYear.PreviousYear1,\n      }),\n      { totalCurrentYear: 0, totalPreviousYear1: 0 }\n    );\n\n    const previewData: {\n      VehicleType: string;\n      Year: number;\n      Volume: number;\n      perOfTotal: number;\n    }[] = [];\n\n    studyData.map((item: VehicleParcStatisticItem) => {\n      let prevPer: number = 0;\n      if (item.PreviousYear1 > 0) {\n        prevPer = this.calculatePerVolume(\n          item.PreviousYear1,\n          totalPreviousYear1\n        );\n      }\n\n      let currPer: number = 0;\n      if (item.CurrentYear > 0) {\n        currPer = this.calculatePerVolume(item.CurrentYear, totalCurrentYear);\n      }\n\n      previewData.push({\n        VehicleType: item.VehicleType,\n        Year: this.previousYear,\n        Volume: item.PreviousYear1,\n        perOfTotal: parseFloat(prevPer.toFixed(1)),\n      });\n      previewData.push({\n        VehicleType: item.VehicleType,\n        Year: this.currentYear,\n        Volume: item.CurrentYear,\n        perOfTotal: parseFloat(currPer.toFixed(1)),\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'VehicleType',\n        area: 'row',\n        caption: 'Vehicle Type',\n\n        dataType: 'string',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Mil Unit',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: '% of Total',\n        dataField: 'perOfTotal',\n        dataFieldType: 'perOfTotal',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 30,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n\n  calculatePerVolume(colValue: number, totalColValue: number) {\n    return parseFloat(((colValue * 100) / totalColValue).toFixed(1));\n  }\n\n  changeStudyData(studyData: VehicleParcStatisticItem[]) {\n    this.studyData = studyData;\n    this.getPreviewData(this.studyData);\n  }\n}\n","<dx-pivot-grid\n  [allowSortingBySummary]=\"true\"\n  [allowSorting]=\"true\"\n  [allowFiltering]=\"true\"\n  [allowExpandAll]=\"true\"\n  [showColumnGrandTotals]=\"false\"\n  [showRowGrandTotals]=\"true\"\n  [showRowTotals]=\"true\"\n  [showColumnTotals]=\"false\"\n  showTotalsPrior=\"none\"\n  [showBorders]=\"true\"\n  [dataSource]=\"pivotGridDataSource\"\n  [fieldPanel]=\"{\n    showColumnFields: true,\n    showDataFields: true,\n    showFilterFields: true,\n    showRowFields: true,\n    allowFieldDragging: true,\n    visible: true\n  }\"\n  [fieldChooser]=\"{ enabled: true }\"\n>\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\n</dx-pivot-grid>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from '@full-fledged/alerts';\nimport { IsLoadingService } from '@service-work/is-loading';\nimport { ApiResponse } from 'src/model/apiResponse.model';\nimport { LubricantDemandDataItem, StudyArea } from 'src/model/studyArea.model';\nimport { StudyService } from 'src/services/study.service';\nimport { SharedService } from 'src/services/shared.service';\nimport { LocalStorageService } from 'src/services/localStorage.service';\nimport { InitialSetup } from 'src/model/initialSetup.model';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\n\n@Component({\n  selector: 'app-study-area-preview',\n  templateUrl: './study-area-preview.component.html',\n  styleUrls: ['./study-area-preview.component.css'],\n})\nexport class StudyAreaPreviewComponent implements OnInit {\n  marketYearCategoryId: number = 0;\n  studyProjectMarketYearId: number = 0;\n  studyAreaId: number = 0;\n\n  studyData: LubricantDemandDataItem[] = [];\n\n  currentYear: number = 0;\n  previousYear1: number = 0;\n  previousYear2: number = 0;\n\n  foreCastYear1: number = 0;\n  foreCastYear2: number = 0;\n\n  volumeYears: any[] = [];\n\n  cagr1: string = '';\n  cagr2: string = '';\n\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor(\n    private studyService: StudyService,\n    private isLoadingService: IsLoadingService,\n    private alertService: AlertService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private sharedService: SharedService,\n    private localStorageService: LocalStorageService\n  ) {\n    const params = this.route.snapshot.params;\n\n    this.marketYearCategoryId = params['mycId'];\n    this.studyProjectMarketYearId = params['spmId'];\n    this.studyAreaId = params['studyArea'];\n\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {\n    // this.getLubricantDemandData();\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'MarketSegment',\n        area: 'row',\n        caption: 'Market Segment',\n        dataType: 'string',\n        width: 110,\n      },\n      {\n        dataField: 'ProductCategory',\n        area: 'row',\n        caption: 'Product Category',\n        width: 150,\n        dataType: 'string',\n      },\n      {\n        dataField: 'SubProduct',\n        caption: 'Sub Product',\n        area: 'filter',\n        width: 90,\n        summaryDisplayMode: 'none',\n        dataType: 'string',\n      },\n      {\n        dataField: 'ViscosityGrade',\n        area: 'filter',\n        caption: 'Viscosity Grade',\n        width: 150,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Lubricant Demand, KTonnes',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 80,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n\n  getLubricantDemandData() {\n    this.isLoadingService.add();\n    this.studyService\n      .getLubricantDemandData(\n        this.marketYearCategoryId,\n        this.studyProjectMarketYearId\n      )\n      .subscribe((res: ApiResponse) => {\n        if (res.HttpStatusCode === 200) {\n          const studyData = res.Data as StudyArea;\n\n          this.studyData =\n            studyData.LubricantDemandDataItems as LubricantDemandDataItem[];\n\n          this.studySummary = new InitialSetup().deserialize(\n            studyData.InitialSetup\n          );\n\n          let currentYear =\n            this.studySummary.StudyYear || new Date().getFullYear();\n\n          currentYear = currentYear - 1;\n\n          this.volumeYears = [];\n          const myYears = [];\n          for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\n            this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\n            myYears[j] = i;\n          }\n\n          this.currentYear = currentYear;\n          // this.foreCastYear1 = currentYear + 5;\n          this.foreCastYear1 = currentYear + 4;\n          // this.foreCastYear2 = currentYear + 10;\n          this.foreCastYear2 = this.foreCastYear1 + 5;\n\n          const previewData: {\n            MarketSegment: string;\n            ProductCategory: string;\n            SubProduct: string;\n            ViscosityGrade: string;\n            Year: number;\n            Volume: number;\n          }[] = [];\n          this.studyData.map((item: LubricantDemandDataItem) => {\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 5,\n              Volume: item.PreviousYear5,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 4,\n              Volume: item.PreviousYear4,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 3,\n              Volume: item.PreviousYear3,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 2,\n              Volume: item.PreviousYear2,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear - 1,\n              Volume: item.PreviousYear1,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: currentYear,\n              Volume: item.CurrentYear,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: this.foreCastYear1,\n              Volume: item.Forecast1,\n            });\n            previewData.push({\n              MarketSegment: item.MarketSegment,\n              ProductCategory: item.ProductCategory,\n              SubProduct: item.SubProduct,\n              ViscosityGrade: item.ViscosityGrade,\n              Year: this.foreCastYear2,\n              Volume: item.Forecast2,\n            });\n          });\n\n          this.pivotGridDataSource = new PivotGridDataSource({\n            store: previewData,\n            fields: this.getGridFields(),\n          });\n\n          this.currentYear = currentYear;\n          // this.foreCastYear1 = currentYear + 5;\n          this.foreCastYear1 = currentYear + 4;\n          // this.foreCastYear2 = currentYear + 10;\n          this.foreCastYear2 = this.foreCastYear1 + 5;\n\n          this.cagr1 = `${currentYear}-${this.foreCastYear1}`;\n          this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;\n\n          this.volumeYears.push({ field: `CurrentYear`, year: currentYear });\n\n          this.isLoadingService.remove();\n        } else {\n          this.alertService.danger(res.Data);\n        }\n      });\n  }\n\n  goBack() {\n    this.router.navigate([\n      '/',\n      'study-area',\n      this.studyProjectMarketYearId,\n      this.marketYearCategoryId,\n    ]);\n  }\n}\n","<!-- <app-header setTitle=\"Lubricant Demand\"></app-header> -->\n\n<div class=\"container-fluid my-4 text-right\">\n  <!-- <dx-button\n    class=\"mb-2\"\n    text=\"Back\"\n    icon=\"revert\"\n    (onClick)=\"goBack()\"\n  ></dx-button> -->\n\n  <app-lubricant-demand-preview\n    *ngIf=\"studyAreaId == 1\"\n  ></app-lubricant-demand-preview>\n  <app-supplier-market-share-preview\n    *ngIf=\"studyAreaId == 2\"\n  ></app-supplier-market-share-preview>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { StudyAreaSummary } from 'src/model/studyAreaSummary.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-study-area-summary',\r\n  templateUrl: './study-area-summary.component.html',\r\n  styleUrls: ['./study-area-summary.component.css'],\r\n})\r\nexport class StudyAreaSummaryComponent implements OnInit {\r\n  summaryData: StudyAreaSummary[] = [];\r\n  signedOffSummaryData: StudyAreaSummary[] = [];\r\n  confirmPopup: boolean = false;\r\n  isManager: boolean = false;\r\n  userDetail: UserDetail;\r\n  currentUserId: number;\r\n\r\n  newSummaryData: StudyAreaSummary[] = [];\r\n\r\n  confirmUnlockPopup: boolean = false;\r\n  selectedStudyRowData: any;\r\n\r\n  constructor(\r\n    private sharedService: SharedService,\r\n    private alertService: AlertService,\r\n    private isLoadingService: IsLoadingService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    if (this.isLoadingService.isLoading()) {\r\n      this.isLoadingService.remove();\r\n    }\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n    this.currentUserId = this.userDetail.Id || 0;\r\n\r\n    this.isManager = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudySummary();\r\n  }\r\n\r\n  getStudySummary() {\r\n    this.isLoadingService.add();\r\n    this.sharedService.getStudyAreaSummary().subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          // res.Data.sort((a,b) => b-a)\r\n          this.summaryData = res.Data.map((item: StudyAreaSummary) =>\r\n            new StudyAreaSummary().deserialize(item)\r\n          );\r\n          this.summaryData.reverse();\r\n          this.newSummaryData = [];\r\n          this.summaryData.map((item: StudyAreaSummary) => {\r\n            if (item.IsLatestStudy) {\r\n              this.newSummaryData.push(item);\r\n            }\r\n            if(item.IsSignOff){\r\n              this.signedOffSummaryData.push(item);\r\n            }\r\n            if(item.LastModified){\r\n              item.LastModified = this.formatLastModifiedDate(item.LastModified);\r\n            }\r\n          });\r\n          this.summaryData = this.summaryData.filter(item=> !item.IsSignOff);    \r\n          this.summaryData.sort((a: any, b: any) =>\r\n            a.StudyAreaName.localeCompare(b.StudyAreaName)\r\n          );\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n        this.isLoadingService.remove();\r\n      },\r\n      (err) => {\r\n        if (err.status === 401) {\r\n          this.isLoadingService.remove();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  formatLastModifiedDate(date: string){\r\n    const [month, day, year] = date.split(' ');\r\n    const monthNumber = this.getMonthNumberFromName(month) \r\n    return new Date(+year, +monthNumber, +day);\r\n  }\r\n  getMonthNumberFromName(monthName: any) {\r\n    return new Date(`${monthName} 1, 2022`).getMonth();\r\n  }\r\n  make_hyperlink_calculateCellValue(rowData: StudyAreaSummary) {\r\n    return `<a href=\"#\">${rowData.StudyAreaName}</a>`;\r\n  }\r\n\r\n  selectedDataSetId: number = 0;\r\n  selectedStudyAreaId: number = 0;\r\n  selectedItemCategoryId: number = 0;\r\n  selectedMarketYearCategoryId: number = 0;\r\n  isStudyDataChanged: boolean = false;\r\n  deleteRow(studyRowData: StudyAreaSummary) {\r\n    this.selectedDataSetId = studyRowData.DataSetId || 0;\r\n    this.selectedStudyAreaId = studyRowData.StudyAreaId || 0;\r\n    this.selectedItemCategoryId = studyRowData.DataItemCategoryId || 0;\r\n    this.selectedMarketYearCategoryId = studyRowData.MarketYearCategoryId || 0;\r\n    this.isStudyDataChanged = studyRowData.IsChanged;\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyAreaMaster(\r\n        this.selectedDataSetId,\r\n        this.selectedItemCategoryId,\r\n        this.selectedMarketYearCategoryId,\r\n        this.selectedStudyAreaId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onConfirmPopupHide();\r\n          if (res.Data === true) {\r\n            this.alertService.success(\r\n              'Your study has been removed successfully.'\r\n            );\r\n            this.getStudySummary();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Study can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onConfirmPopupHide() {\r\n    this.selectedDataSetId = 0;\r\n    this.selectedItemCategoryId = 0;\r\n    this.selectedMarketYearCategoryId = 0;\r\n    this.selectedStudyAreaId = 0;\r\n    this.confirmPopup = false;\r\n    this.confirmUnlockPopup = false;\r\n    this.selectedStudyRowData;\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (e.rowType == 'data' && e.data.IsSignOff === true) {\r\n      e.rowElement.style.backgroundColor = '#cdffcd';\r\n    }\r\n\r\n    // if (e.rowType == 'group') {\r\n    //   this.getRowDataItems(e).map((item: any) => {\r\n    //     if (typeof item.items !== 'undefined') {\r\n    //       item.items.map((summaryItem: any) => {\r\n    //         if (summaryItem.IsLatestStudy) {\r\n    //           e.rowElement.classList.add('text-success');\r\n    //         }\r\n    //       });\r\n    //     } else {\r\n    //       if (item.IsLatestStudy) {\r\n    //         e.rowElement.classList.add('text-success');\r\n    //       }\r\n    //     }\r\n    //     console.log(item);\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  getRowDataItems(data: any) {\r\n    console.log(data);\r\n    // if (typeof data.items !== 'undefined' && data.items !== null) {\r\n    //   return data.items;\r\n    // } else {\r\n    //   return data.collapsedItems;\r\n    // }\r\n  }\r\n\r\n  onCellPrepared(column: any, data: any, component: any, displayValue: any) {\r\n    const groupRowData = data.data;\r\n\r\n    let items: any[] = [];\r\n    if (\r\n      typeof groupRowData.items !== 'undefined' &&\r\n      groupRowData.items !== null\r\n    ) {\r\n      items = groupRowData.items;\r\n    } else {\r\n      items = groupRowData.collapsedItems;\r\n    }\r\n\r\n    console.log(groupRowData);\r\n\r\n    return 'sdds';\r\n\r\n    // if (e.rowType == 'group') {\r\n    //   console.log(e);\r\n    // this.getRowDataItems(e).map((item: any) => {\r\n    //   if (typeof item.items !== 'undefined') {\r\n    //     item.items.map((summaryItem: any) => {\r\n    //       if (summaryItem.IsLatestStudy) {\r\n    //         e.rowElement.classList.add('text-success');\r\n    //       }\r\n    //     });\r\n    //   } else {\r\n    //     if (item.IsLatestStudy) {\r\n    //       e.rowElement.classList.add('text-success');\r\n    //     }\r\n    //   }\r\n    // });\r\n    // }\r\n  }\r\n\r\n  onLockStudy(data: any) {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .setLockUnlockStudy(data.MarketYearCategoryId, true)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            this.getStudySummary();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          if (err.status === 401) {\r\n            this.isLoadingService.remove();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onUnlockStudy(data: any) {\r\n    if (data.IsProjectLead && data.ProjectLeadId !== data.LockedForEditBy) {\r\n      this.selectedStudyRowData = data;\r\n      this.confirmUnlockPopup = true;\r\n    } else {\r\n      this.unlockStudy(data);\r\n    }\r\n  }\r\n\r\n  unlockStudy(data: any) {\r\n    this.confirmUnlockPopup = false;\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .setLockUnlockStudy(data.MarketYearCategoryId, false)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            this.getStudySummary();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n          this.isLoadingService.remove();\r\n          this.selectedStudyRowData;\r\n        },\r\n        (err) => {\r\n          if (err.status === 401) {\r\n            this.isLoadingService.remove();\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (e.component.getCombinedFilter()) {\r\n        if (e.component.__needExpand) {\r\n          e.component.__needExpand = false;\r\n          return;\r\n        }\r\n       e.component.__needExpand = true;\r\n       e.component.expandAll(); \r\n        \r\n    }\r\n  }\r\n  onCollapseRow(e: any) {\r\n    if (e.expanded) {\r\n        e.component.__needExpand = true;\r\n    }\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col\">\r\n      <!-- <div class=\"card mb-4\">\r\n        <div class=\"card-header\">Newly Created Study</div>\r\n        <div class=\"card-body\">\r\n          <dx-data-grid\r\n            *ngIf=\"newSummaryData\"\r\n            [dataSource]=\"newSummaryData\"\r\n            [showBorders]=\"true\"\r\n            [allowColumnResizing]=\"true\"\r\n            [columnMinWidth]=\"50\"\r\n            [columnHidingEnabled]=\"false\"\r\n            [rowAlternationEnabled]=\"true\"\r\n          >\r\n            <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n            <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n            <dxi-column\r\n              dataField=\"MarketName\"\r\n              caption=\"Market\"\r\n              [width]=\"210\"\r\n              groupIndex=\"1\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"DataSetName\"\r\n              caption=\"Project\"\r\n              [width]=\"210\"\r\n              groupIndex=\"0\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"StudyAreaName\"\r\n              caption=\"Study Name\"\r\n              [width]=\"210\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"StudyName\"\r\n              caption=\"Study Area Name\"\r\n              [width]=\"350\"\r\n              cellTemplate=\"linkCellTemplate\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"Total\"\r\n              [width]=\"150\"\r\n              cellTemplate=\"totalTemplate\"\r\n            ></dxi-column>\r\n            <dxi-column dataField=\"LastComment\"></dxi-column>\r\n            <dxi-column dataField=\"LastModified\" dataType=\"date\"></dxi-column>\r\n            <dxi-column dataField=\"ModifiedBy\"></dxi-column>\r\n            <dxi-column\r\n              *ngIf=\"isManager\"\r\n              caption=\"\"\r\n              cellTemplate=\"deleteCellTemplate\"\r\n              class=\"text-center\"\r\n            ></dxi-column>\r\n\r\n            <dxi-column\r\n              caption=\"\"\r\n              cellTemplate=\"lockUnlockCellTemplate\"\r\n              class=\"text-center\"\r\n            ></dxi-column>\r\n\r\n            <div *dxTemplate=\"let d of 'linkCellTemplate'\">\r\n              <a\r\n                [routerLink]=\"[\r\n                  '/study-area',\r\n                  d.data.StudyAreaId,\r\n                  d.data.StudyProjectMarketYearId,\r\n                  d.data.MarketYearCategoryId,\r\n                  d.data.DataSetId\r\n                ]\"\r\n                [attr.data-col]=\"d.data.Total\"\r\n                >{{ d.value }}</a\r\n              >\r\n            </div>\r\n\r\n            <div\r\n              *dxTemplate=\"let d of 'deleteCellTemplate'\"\r\n              class=\"text-center\"\r\n            >\r\n              <dx-button\r\n                *ngIf=\"\r\n                  !d.data.IsSignOff && d.data.IsProjectLead && !d.data.IsLocked\r\n                \"\r\n                icon=\"trash\"\r\n                stylingMode=\"text\"\r\n                type=\"danger\"\r\n                (onClick)=\"deleteRow(d.data)\"\r\n              ></dx-button>\r\n              <span class=\"badge badge-success\" *ngIf=\"d.data.IsSignOff\"\r\n                >SignedOff</span\r\n              >\r\n            </div>\r\n\r\n            <div\r\n              *dxTemplate=\"let d of 'lockUnlockCellTemplate'\"\r\n              class=\"text-center\"\r\n            >\r\n              <ng-container *ngIf=\"!d.data.IsSignOff\">\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    d.data.IsLocked && d.data.LockedForEditBy !== currentUserId\r\n                  \"\r\n                  icon=\"fas fa-lock\"\r\n                  stylingMode=\"text\"\r\n                  type=\"default\"\r\n                  (onClick)=\"onUnlockStudy(d.data)\"\r\n                ></dx-button>\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    !d.data.IsLocked && d.data.LockedForEditBy !== currentUserId\r\n                  \"\r\n                  icon=\"fas fa-unlock\"\r\n                  stylingMode=\"text\"\r\n                  type=\"default\"\r\n                  (onClick)=\"onLockStudy(d.data)\"\r\n                ></dx-button>\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    !d.data.IsLocked && d.data.LockedForEditBy === currentUserId\r\n                  \"\r\n                  icon=\"fas fa-lock\"\r\n                  stylingMode=\"text\"\r\n                  type=\"default\"\r\n                  (onClick)=\"onUnlockStudy(d.data)\"\r\n                ></dx-button>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <div *dxTemplate=\"let data of 'totalTemplate'\">\r\n              <span>{{ data.value ? data.value : \"\" }}</span>\r\n            </div>\r\n\r\n            <div *dxTemplate=\"let d of 'highlightCellTemplate'\">\r\n              <span [ngClass]=\"{ 'text-success': true }\"\r\n                >{{ d.value }} - {{ d.data | json }}</span\r\n              >\r\n            </div>\r\n\r\n            <div *dxTemplate=\"let cell of 'studyCellTemplate'\">\r\n              <td>\r\n                {{ cell.value }}\r\n                <span\r\n                  [ngClass]=\"{\r\n                    'badge badge-success': cell.data.IsLatestStudy\r\n                  }\"\r\n                  >New</span\r\n                >\r\n              </td>\r\n            </div>\r\n          </dx-data-grid>\r\n        </div>\r\n      </div> -->\r\n\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">In Progress Studies</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive\">\r\n            <dx-data-grid\r\n              *ngIf=\"summaryData\"\r\n              [dataSource]=\"summaryData\"\r\n              [showBorders]=\"true\"\r\n              [allowColumnResizing]=\"true\"\r\n              [columnMinWidth]=\"50\"\r\n              [columnHidingEnabled]=\"false\"\r\n              [rowAlternationEnabled]=\"true\"\r\n              (onContentReady)=\"onContentReady($event)\"\r\n              (onRowCollapsing)=\"onCollapseRow($event)\"\r\n            >\r\n              <dxo-header-filter [visible]=\"true\" [allowSearch]=\"true\"></dxo-header-filter>\r\n              <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\r\n              <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n              <dxo-grouping [autoExpandAll]=\"false\"></dxo-grouping>\r\n              <dxi-column\r\n                dataField=\"MarketName\"\r\n                caption=\"Market\"\r\n                [width]=\"210\"\r\n                groupIndex=\"1\"\r\n              ></dxi-column>\r\n              <dxi-column\r\n                dataField=\"DataSetName\"\r\n                caption=\"Project\"\r\n                [width]=\"210\"\r\n                groupIndex=\"0\"\r\n              ></dxi-column>\r\n              <dxi-column\r\n                dataField=\"StudyAreaName\"\r\n                caption=\"Study Name\"\r\n                [width]=\"210\"\r\n              >\r\n              </dxi-column>\r\n              <dxi-column\r\n                dataField=\"StudyName\"\r\n                caption=\"Study Area Name\"\r\n                [width]=\"350\"\r\n                cellTemplate=\"linkCellTemplate\"\r\n              >\r\n              <dxo-header-filter width=\"400\"></dxo-header-filter>\r\n              </dxi-column>\r\n              <dxi-column\r\n                dataField=\"Total\"\r\n                [width]=\"150\"\r\n                cellTemplate=\"totalTemplate\"\r\n              ></dxi-column>\r\n              <dxi-column dataField=\"LastComment\"></dxi-column>\r\n              <dxi-column dataField=\"LastModified\" dataType=\"date\"></dxi-column>\r\n              <dxi-column dataField=\"ModifiedBy\"></dxi-column>\r\n              <dxi-column\r\n                *ngIf=\"isManager\"\r\n                caption=\"\"\r\n                cellTemplate=\"deleteCellTemplate\"\r\n                class=\"text-center\"\r\n              ></dxi-column>\r\n\r\n              <dxi-column\r\n                caption=\"\"\r\n                cellTemplate=\"lockUnlockCellTemplate\"\r\n                class=\"text-center\"\r\n              ></dxi-column>\r\n\r\n              <dxi-column\r\n                caption=\"Locked By\"\r\n                cellTemplate=\"lockByUserCellTemplate\"\r\n                class=\"text-center\"\r\n              ></dxi-column>\r\n\r\n              <div *dxTemplate=\"let d of 'linkCellTemplate'\">\r\n                <a\r\n                  [routerLink]=\"[\r\n                    '/study-area',\r\n                    d.data.StudyAreaId,\r\n                    d.data.StudyProjectMarketYearId,\r\n                    d.data.MarketYearCategoryId,\r\n                    d.data.DataSetId\r\n                  ]\"\r\n                  [attr.data-col]=\"d.data.Total\"\r\n                  >{{ d.value }}</a\r\n                >\r\n              </div>\r\n\r\n              <div\r\n                *dxTemplate=\"let d of 'deleteCellTemplate'\"\r\n                class=\"text-center\"\r\n              >\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    !d.data.IsSignOff &&\r\n                    d.data.IsProjectLead &&\r\n                    !d.data.IsLocked\r\n                  \"\r\n                  icon=\"trash\"\r\n                  stylingMode=\"text\"\r\n                  type=\"danger\"\r\n                  (onClick)=\"deleteRow(d.data)\"\r\n                ></dx-button>\r\n                <span class=\"badge badge-success\" *ngIf=\"d.data.IsSignOff\"\r\n                  >SignedOff</span\r\n                >\r\n              </div>\r\n\r\n              <div\r\n                *dxTemplate=\"let d of 'lockUnlockCellTemplate'\"\r\n                class=\"text-center\"\r\n              >\r\n                <ng-container *ngIf=\"!d.data.IsSignOff\">\r\n                  <dx-button\r\n                    *ngIf=\"\r\n                      d.data.IsLocked &&\r\n                      d.data.LockedForEditBy !== currentUserId\r\n                    \"\r\n                    icon=\"fas fa-lock\"\r\n                    stylingMode=\"text\"\r\n                    type=\"default\"\r\n                    [elementAttr]=\"{ title: 'Lock Study' }\"\r\n                    hint=\"Click for Unlock Study\"\r\n                    (onClick)=\"onUnlockStudy(d.data)\"\r\n                  ></dx-button>\r\n                  <dx-button\r\n                    *ngIf=\"\r\n                      !d.data.IsLocked &&\r\n                      d.data.LockedForEditBy !== currentUserId\r\n                    \"\r\n                    icon=\"fas fa-unlock\"\r\n                    stylingMode=\"text\"\r\n                    type=\"default\"\r\n                    [elementAttr]=\"{ title: 'Unlock Study' }\"\r\n                    hint=\"Click for Lock Study\"\r\n                    (onClick)=\"onLockStudy(d.data)\"\r\n                  ></dx-button>\r\n                  <dx-button\r\n                    *ngIf=\"\r\n                      !d.data.IsLocked &&\r\n                      d.data.LockedForEditBy === currentUserId\r\n                    \"\r\n                    icon=\"fas fa-lock\"\r\n                    stylingMode=\"text\"\r\n                    type=\"default\"\r\n                    hint=\"Click for Unlock Study\"\r\n                    (onClick)=\"onUnlockStudy(d.data)\"\r\n                  ></dx-button>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <div\r\n                *dxTemplate=\"let d of 'lockByUserCellTemplate'\"\r\n                class=\"text-center\"\r\n              >\r\n                <ng-container *ngIf=\"!d.data.IsSignOff\">\r\n                  <span\r\n                    class=\"badge badge-success\"\r\n                    *ngIf=\"d.data.LockedForEditByName != null\"\r\n                    [innerText]=\"d.data.LockedForEditByName\"\r\n                  ></span>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <div *dxTemplate=\"let data of 'totalTemplate'\">\r\n                <span>{{ data.value ? data.value : \"\" }}</span>\r\n              </div>\r\n\r\n              <div *dxTemplate=\"let d of 'highlightCellTemplate'\">\r\n                <span [ngClass]=\"{ 'text-success': true }\"\r\n                  >{{ d.value }} - {{ d.data | json }}</span\r\n                >\r\n              </div>\r\n\r\n              <div *dxTemplate=\"let cell of 'studyCellTemplate'\">\r\n                <td>\r\n                  {{ cell.value }}\r\n                  <span\r\n                    [ngClass]=\"{\r\n                      'badge badge-success': cell.data.IsLatestStudy\r\n                    }\"\r\n                    >New</span\r\n                  >\r\n                </td>\r\n              </div>\r\n            </dx-data-grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-header\">Signed Off Studies</div>\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive\">\r\n            <dx-data-grid\r\n            *ngIf=\"signedOffSummaryData\"\r\n            [dataSource]=\"signedOffSummaryData\"\r\n            [showBorders]=\"true\"\r\n            [allowColumnResizing]=\"true\"\r\n            [columnMinWidth]=\"50\"\r\n            [columnHidingEnabled]=\"false\"\r\n            [rowAlternationEnabled]=\"true\"\r\n            (onContentReady)=\"onContentReady($event)\"\r\n            (onRowCollapsing)=\"onCollapseRow($event)\"\r\n          >\r\n            <dxo-header-filter [visible]=\"true\" [allowSearch]=\"true\"></dxo-header-filter>\r\n            <dxo-search-panel [visible]=\"true\"></dxo-search-panel>\r\n            <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n            <dxo-grouping [autoExpandAll]=\"false\"></dxo-grouping>\r\n            <dxi-column\r\n              dataField=\"MarketName\"\r\n              caption=\"Market\"\r\n              [width]=\"210\"\r\n              groupIndex=\"1\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"DataSetName\"\r\n              caption=\"Project\"\r\n              [width]=\"210\"\r\n              groupIndex=\"0\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"StudyAreaName\"\r\n              caption=\"Study Name\"\r\n              [width]=\"210\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              dataField=\"StudyName\"\r\n              caption=\"Study Area Name\"\r\n              [width]=\"350\"\r\n              cellTemplate=\"linkCellTemplate\"\r\n            >\r\n            <dxo-header-filter width=\"400\"></dxo-header-filter>\r\n            </dxi-column>\r\n            <dxi-column\r\n              dataField=\"Total\"\r\n              [width]=\"150\"\r\n              cellTemplate=\"totalTemplate\"\r\n            ></dxi-column>\r\n            <dxi-column dataField=\"LastComment\"></dxi-column>\r\n            <dxi-column dataField=\"LastModified\" dataType=\"date\"></dxi-column>\r\n            <dxi-column dataField=\"ModifiedBy\"></dxi-column>\r\n            <dxi-column\r\n              *ngIf=\"isManager\"\r\n              caption=\"\"\r\n              cellTemplate=\"deleteCellTemplate\"\r\n              class=\"text-center\"\r\n            ></dxi-column>\r\n\r\n            <dxi-column\r\n              caption=\"\"\r\n              cellTemplate=\"lockUnlockCellTemplate\"\r\n              class=\"text-center\"\r\n            ></dxi-column>\r\n\r\n            <dxi-column\r\n              caption=\"Locked By\"\r\n              cellTemplate=\"lockByUserCellTemplate\"\r\n              class=\"text-center\"\r\n            ></dxi-column>\r\n\r\n            <div *dxTemplate=\"let d of 'linkCellTemplate'\">\r\n              <a\r\n                [routerLink]=\"[\r\n                  '/study-area',\r\n                  d.data.StudyAreaId,\r\n                  d.data.StudyProjectMarketYearId,\r\n                  d.data.MarketYearCategoryId,\r\n                  d.data.DataSetId\r\n                ]\"\r\n                [attr.data-col]=\"d.data.Total\"\r\n                >{{ d.value }}</a\r\n              >\r\n            </div>\r\n\r\n            <div\r\n              *dxTemplate=\"let d of 'deleteCellTemplate'\"\r\n              class=\"text-center\"\r\n            >\r\n              <dx-button\r\n                *ngIf=\"\r\n                  !d.data.IsSignOff &&\r\n                  d.data.IsProjectLead &&\r\n                  !d.data.IsLocked\r\n                \"\r\n                icon=\"trash\"\r\n                stylingMode=\"text\"\r\n                type=\"danger\"\r\n                (onClick)=\"deleteRow(d.data)\"\r\n              ></dx-button>\r\n              <span class=\"badge badge-success\" *ngIf=\"d.data.IsSignOff\"\r\n                >SignedOff</span\r\n              >\r\n            </div>\r\n\r\n            <div\r\n              *dxTemplate=\"let d of 'lockUnlockCellTemplate'\"\r\n              class=\"text-center\"\r\n            >\r\n              <ng-container *ngIf=\"!d.data.IsSignOff\">\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    d.data.IsLocked &&\r\n                    d.data.LockedForEditBy !== currentUserId\r\n                  \"\r\n                  icon=\"fas fa-lock\"\r\n                  stylingMode=\"text\"\r\n                  type=\"default\"\r\n                  [elementAttr]=\"{ title: 'Lock Study' }\"\r\n                  hint=\"Click for Unlock Study\"\r\n                  (onClick)=\"onUnlockStudy(d.data)\"\r\n                ></dx-button>\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    !d.data.IsLocked &&\r\n                    d.data.LockedForEditBy !== currentUserId\r\n                  \"\r\n                  icon=\"fas fa-unlock\"\r\n                  stylingMode=\"text\"\r\n                  type=\"default\"\r\n                  [elementAttr]=\"{ title: 'Unlock Study' }\"\r\n                  hint=\"Click for Lock Study\"\r\n                  (onClick)=\"onLockStudy(d.data)\"\r\n                ></dx-button>\r\n                <dx-button\r\n                  *ngIf=\"\r\n                    !d.data.IsLocked &&\r\n                    d.data.LockedForEditBy === currentUserId\r\n                  \"\r\n                  icon=\"fas fa-lock\"\r\n                  stylingMode=\"text\"\r\n                  type=\"default\"\r\n                  hint=\"Click for Unlock Study\"\r\n                  (onClick)=\"onUnlockStudy(d.data)\"\r\n                ></dx-button>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <div\r\n              *dxTemplate=\"let d of 'lockByUserCellTemplate'\"\r\n              class=\"text-center\"\r\n            >\r\n              <ng-container *ngIf=\"!d.data.IsSignOff\">\r\n                <span\r\n                  class=\"badge badge-success\"\r\n                  *ngIf=\"d.data.LockedForEditByName != null\"\r\n                  [innerText]=\"d.data.LockedForEditByName\"\r\n                ></span>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <div *dxTemplate=\"let data of 'totalTemplate'\">\r\n              <span>{{ data.value ? data.value : \"\" }}</span>\r\n            </div>\r\n\r\n            <div *dxTemplate=\"let d of 'highlightCellTemplate'\">\r\n              <span [ngClass]=\"{ 'text-success': true }\"\r\n                >{{ d.value }} - {{ d.data | json }}</span\r\n              >\r\n            </div>\r\n\r\n            <div *dxTemplate=\"let cell of 'studyCellTemplate'\">\r\n              <td>\r\n                {{ cell.value }}\r\n                <span\r\n                  [ngClass]=\"{\r\n                    'badge badge-success': cell.data.IsLatestStudy\r\n                  }\"\r\n                  >New</span\r\n                >\r\n              </td>\r\n            </div>\r\n          </dx-data-grid>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"isStudyDataChanged ? 185 : 150\"\r\n  [showTitle]=\"false\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup && isManager\"\r\n  (onHidden)=\"onConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\" *ngIf=\"!isStudyDataChanged\">\r\n        Are you sure you want to delete this study?\r\n      </p>\r\n      <div *ngIf=\"isStudyDataChanged\">\r\n        <p class=\"mb-1\">This study has some changes.</p>\r\n        <p>Still you want to delete this study?</p>\r\n      </div>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"185\"\r\n  [showTitle]=\"false\"\r\n  title=\"Unlock Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmUnlockPopup && isManager\"\r\n  (onHidden)=\"onConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to Unlock this study?</p>\r\n      <div *ngIf=\"isStudyDataChanged\">\r\n        <p class=\"mb-1\">\r\n          This study has locked by\r\n          {{ selectedStudyRowData.LockedForEditByName }}.\r\n        </p>\r\n        <p>Still you want to unlock this study?</p>\r\n      </div>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"unlockStudy(selectedStudyRowData)\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"confirmUnlockPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\nimport { SpecialtyExcipientItem } from 'src/model/avgPriceSE.model';\n\n@Component({\n  selector: 'app-average-price-preview',\n  templateUrl: './average-price-preview.component.html',\n  styleUrls: ['./average-price-preview.component.css'],\n})\nexport class AveragePricePreviewComponent implements OnInit {\n  @Input() studyData: SpecialtyExcipientItem[] = [];\n  @Input() currentYear: number = 0;\n  @Input() previousYear: number = 0;\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor() {\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getPreviewData(this.studyData);\n  }\n\n  getPreviewData(studyData: SpecialtyExcipientItem[]) {\n    const previewData: {\n      ExcipientCategory: string;\n      ExcipientGroup: string;\n      Excipient: string;\n      Year: number;\n      AvgMinPrice: number;\n      AvgMaxPrice: number;\n    }[] = [];\n\n    studyData.map((item: SpecialtyExcipientItem) => {\n      previewData.push({\n        ExcipientCategory: item.ExcipientCategoryName,\n        ExcipientGroup: item.ExcipientGroupName,\n        Excipient: item.ExcipientName,\n        Year: this.previousYear,\n        AvgMinPrice: item.AveragePriceMin1,\n        AvgMaxPrice: item.AveragePriceMax1,\n      });\n      previewData.push({\n        ExcipientCategory: item.ExcipientCategoryName,\n        ExcipientGroup: item.ExcipientGroupName,\n        Excipient: item.ExcipientName,\n        Year: this.currentYear,\n        AvgMinPrice: item.AveragePriceMin2,\n        AvgMaxPrice: item.AveragePriceMax2,\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'ExcipientCategory',\n        area: 'row',\n        caption: 'Excipient Category',\n        dataType: 'string',\n      },\n      {\n        dataField: 'ExcipientGroup',\n        area: 'row',\n        caption: 'Excipient Group',\n        dataType: 'string',\n      },\n      {\n        dataField: 'Excipient',\n        area: 'row',\n        caption: 'Excipient',\n        dataType: 'string',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Avg. Min Price',\n        dataField: 'AvgMinPrice',\n        dataFieldType: 'AvgMinPrice',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Avg. Max Price',\n        dataField: 'AvgMaxPrice',\n        dataFieldType: 'AvgMaxPrice',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 30,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n}\n","<dx-pivot-grid\n  [allowSortingBySummary]=\"true\"\n  [allowSorting]=\"true\"\n  [allowFiltering]=\"true\"\n  [allowExpandAll]=\"true\"\n  [showColumnGrandTotals]=\"false\"\n  [showRowGrandTotals]=\"true\"\n  [showRowTotals]=\"true\"\n  [showColumnTotals]=\"false\"\n  showTotalsPrior=\"none\"\n  [showBorders]=\"true\"\n  [dataSource]=\"pivotGridDataSource\"\n  [fieldPanel]=\"{\n    showColumnFields: true,\n    showDataFields: true,\n    showFilterFields: true,\n    showRowFields: true,\n    allowFieldDragging: true,\n    visible: true\n  }\"\n  [fieldChooser]=\"{ enabled: true }\"\n>\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\n</dx-pivot-grid>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport {\r\n  AveragePriceSE,\r\n  SpecialtyExcipientItem,\r\n} from 'src/model/avgPriceSE.model';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-average-price',\r\n  templateUrl: './average-price.component.html',\r\n  styleUrls: ['./average-price.component.css'],\r\n})\r\nexport class AveragePriceComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  currentYear: number = 0;\r\n  previousYear1: number = 0;\r\n  selectedCurrencyCode: string = '';\r\n  selectedCurrency: any = {};\r\n  selectedCurrencyCodeDefault: string = '';\r\n  selectedVolumeUnit: string = '';\r\n  selectedVolumeUnitDefault: string = '';\r\n  selectedVolumeUnitId: number = 0;\r\n  selectedVolumeUnitIdDefault: number = 0;\r\n  selectedVolumeUnitObj: any = {};\r\n\r\n  selectedDosageFormId: number = 0;\r\n  selectedDosageFormName: string = '';\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  isStudyEditable: boolean = false;\r\n\r\n  isManage: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: SpecialtyExcipientItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n\r\n  disabledButtons: boolean = false;\r\n  errorMessages: string[] = [];\r\n\r\n  yearReduce: number = 1;\r\n\r\n  excipientCategories: SEDataEntry[] = [];\r\n  excipientGroups: SEDataEntry[] = [];\r\n  excipients: SEDataEntry[] = [];\r\n  currencies: SEDataEntry[] = [];\r\n  volumeUnits: SEDataEntry[] = [];\r\n\r\n  currencyRates: any = {};\r\n\r\n  previousSelectedCurrencyCode: string = '';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  allowedCols = ['AveragePriceMin2', 'AveragePriceMax2'];\r\n\r\n  constructor(\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ExcipientCategory: [null, Validators.required],\r\n      ExcipientGroup: [null, Validators.required],\r\n      Excipient: [null, Validators.required],\r\n      Currency: [null],\r\n      VolumeUnit: [null],\r\n      DosageForm: [null],\r\n      AvgMinPrice: [null, Validators.required],\r\n      AvgMaxPrice: [null, Validators.required],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n    this.getDataRelations();\r\n    this.getExcipientCategory();\r\n    this.getExcipientGroups();\r\n    this.getExcipients();\r\n    this.getCurrencies();\r\n    this.getVolumeUnits();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSEAPData();\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n\r\n        this.studyDataRelations = this.datRelationsData.find(\r\n          (item) =>\r\n            item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n        );\r\n\r\n        if (this.studyDataRelations) {\r\n          this.studyDataViewId = this.studyDataRelations.ViewId;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getExcipientCategory() {\r\n    this.sharedService\r\n      .getSEDataEntryData('ExcipientCategories')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.excipientCategories = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getExcipientGroups() {\r\n    this.sharedService\r\n      .getSEDataEntryData('ExcipientGroups')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.excipientGroups = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getExcipients() {\r\n    this.sharedService\r\n      .getSEDataEntryData('Excipients')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.excipients = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getCurrencies() {\r\n    this.sharedService\r\n      .getSEDataEntryData('Currencies')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.currencies = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getCurrencyConversionRate(years: number[]) {\r\n    // const p = [{ key: 'CurrencyId', value: currency.Id }];\r\n    const p: any[] = [];\r\n    if (years.length > 0) {\r\n      years.map((year) => {\r\n        p.push({ key: 'Years', value: year });\r\n      });\r\n    }\r\n    this.sharedService\r\n      .getSEDataEntryData('CurrencyRates', p)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          res.Data.map((item: any) => {\r\n            if (typeof this.currencyRates[item.CurrencyCode] === 'undefined') {\r\n              this.currencyRates[item.CurrencyCode] = [];\r\n            }\r\n\r\n            this.currencyRates[item.CurrencyCode].push({\r\n              currencyCode: item.CurrencyCode,\r\n              Rate: item.Rate,\r\n              Year: item.Year,\r\n            });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getVolumeUnits() {\r\n    this.sharedService\r\n      .getSEDataEntryData('VolumeUnits')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.volumeUnits = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getSEAPData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getSEAPData(this.marketYearCategoryId, this.studyProjectMarketYearId)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyData = res.Data as AveragePriceSE;\r\n            this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n            this.studyData =\r\n              studyData.SpecialtyExcipients as SpecialtyExcipientItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              studyData.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n            this.previousYear1 = 0;\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    changelogObj[colValueArray[4]] = {};\r\n                    changelogObj[colValueArray[4]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.previewGridData.push({\r\n                ExcipientCategoryName: item.ExcipientCategoryName,\r\n                ExcipientGroupName: item.ExcipientGroupName,\r\n                ExcipientName: item.ExcipientName,\r\n                SupplierName: item.SupplierName,\r\n                Year: this.previousYear1,\r\n                Value: item.Value1,\r\n                VolumeValue: item.Volume1,\r\n                CagrPer: item.CAGR1,\r\n              });\r\n\r\n              this.previewGridData.push({\r\n                ExcipientCategoryName: item.ExcipientCategoryName,\r\n                ExcipientGroupName: item.ExcipientGroupName,\r\n                ExcipientName: item.ExcipientName,\r\n                SupplierName: item.SupplierName,\r\n                Year: this.currentYear,\r\n                Value: item.Value2,\r\n                VolumeValue: item.Volume2,\r\n                CagrPer: item.CAGR2,\r\n              });\r\n\r\n              this.previousYear1 = item.LatestDataYear;\r\n              this.selectedCurrencyCode = item.CurrencyCode;\r\n              this.selectedCurrencyCodeDefault = item.CurrencyCode;\r\n              this.previousSelectedCurrencyCode = item.CurrencyCode;\r\n              this.selectedVolumeUnit = item.VolumeUnitName;\r\n              this.selectedVolumeUnitDefault = item.VolumeUnitName;\r\n              this.selectedVolumeUnitId = item.VolumeUnitId;\r\n              this.selectedVolumeUnitIdDefault = item.VolumeUnitId;\r\n\r\n              this.selectedDosageFormId = item.DosageFormId;\r\n              this.selectedDosageFormName = item.DosageFormName;\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.getCurrencyConversionRate([\r\n              this.previousYear1,\r\n              this.currentYear,\r\n            ]);\r\n\r\n            this.selectedCurrency = this.currencies.find(\r\n              (item) => item.CurrencyCode === this.selectedCurrencyCode\r\n            );\r\n\r\n            this.selectedVolumeUnitObj = this.volumeUnits.find(\r\n              (item) => item.Id === this.selectedVolumeUnitId\r\n            );\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try after sometimes.'\r\n          );\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ExcipientCategoryName',\r\n        area: 'row',\r\n        caption: 'Excipient Category',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'ExcipientGroupName',\r\n        area: 'row',\r\n        caption: 'Excipient Group',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'ExcipientName',\r\n        area: 'row',\r\n        caption: 'Excipient',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'SupplierName',\r\n        area: 'row',\r\n        caption: 'Supplier',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 5,\r\n        caption: 'Volume',\r\n        dataField: 'VolumeValue',\r\n        dataFieldType: 'Volume',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'CAGR(%)',\r\n        dataField: 'CagrPer',\r\n        dataFieldType: 'CAGR',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    const selectedCurrency = this.currencies.find(\r\n      (item) => item.CurrencyCode === this.selectedCurrencyCode\r\n    );\r\n    this.newRowForm.get('Currency')?.setValue(selectedCurrency);\r\n\r\n    const selectedVolumeUnit = this.volumeUnits.find(\r\n      (item) => item.Id === this.selectedVolumeUnitId\r\n    );\r\n    this.newRowForm.get('Currency')?.setValue(selectedCurrency);\r\n    this.newRowForm.get('VolumeUnit')?.setValue(selectedVolumeUnit);\r\n\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    // this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: SpecialtyExcipientItem = {\r\n      CurrentYear: 0,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      AveragePriceMax1: 0,\r\n      AveragePriceMax2: +newRowData.AvgMaxPrice,\r\n      AveragePriceMin1: 0,\r\n      AveragePriceMin2: +newRowData.AvgMinPrice,\r\n      CurrencyCode: newRowData.Currency.CurrencyCode,\r\n      CurrencyId: newRowData.Currency.Id,\r\n      CurrencyName: newRowData.Currency.Name,\r\n      DosageFormId: this.selectedDosageFormId,\r\n      DosageFormName: this.selectedDosageFormName,\r\n      ExcipientCategoryId: newRowData.ExcipientCategory.Id,\r\n      ExcipientCategoryName: newRowData.ExcipientCategory.Name,\r\n      ExcipientGroupId: newRowData.ExcipientGroup.Id,\r\n      ExcipientGroupName: newRowData.ExcipientGroup.Name,\r\n      ExcipientId: newRowData.Excipient.Id,\r\n      ExcipientName: newRowData.Excipient.Name,\r\n      LatestDataYear: this.previousYear1,\r\n      VolumeUnitId: newRowData.VolumeUnit.Id,\r\n      VolumeUnitName: newRowData.VolumeUnit.Name,\r\n      VolumeUnitRate: newRowData.VolumeUnit.Rate,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ExcipientCategoryId == newRow.ExcipientCategoryId &&\r\n        item.ExcipientGroupId === newRow.ExcipientGroupId &&\r\n        item.ExcipientId === newRow.ExcipientId\r\n    );\r\n\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          a.ExcipientCategoryId - b.ExcipientCategoryId ||\r\n          a.ExcipientGroupId - b.ExcipientGroupId ||\r\n          a.ExcipientId - b.ExcipientId\r\n      );\r\n\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as SpecialtyExcipientItem;\r\n      data.AveragePriceMax1 = +data.AveragePriceMax1;\r\n      data.AveragePriceMax2 = +data.AveragePriceMax2;\r\n      data.AveragePriceMin1 = +data.AveragePriceMin1;\r\n      data.AveragePriceMin2 = +data.AveragePriceMin2;\r\n\r\n      //   this.studyData.map((item: any, i) => {\r\n      //     this.studyData[i].AveragePriceMin2 = parseFloat(\r\n      //       data.AveragePriceMin2.toFixed(1)\r\n      //     );\r\n      //     this.studyData[i].AveragePriceMax2 = parseFloat(\r\n      //       data.AveragePriceMax2.toFixed(1)\r\n      //     );\r\n      //   });\r\n    }\r\n    // console.log(this.studyData);\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    // console.log(e.data.ChangeLogObj);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (typeof e.data.ChangeLogObj !== 'undefined') {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.dataField]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (typeof event.data.ChangeLogObj !== 'undefined') {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.dataField] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.dataField]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      specialtyExcipients: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveSEAPData(studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCurrencyChange(e: any) {\r\n    const defaultCurrency = this.currencies.find(\r\n      (item) => item.CurrencyCode === this.selectedCurrencyCodeDefault\r\n    );\r\n    const currency: SEDataEntry =\r\n      typeof e !== 'undefined' ? e : defaultCurrency;\r\n\r\n    this.selectedCurrencyCode = currency.CurrencyCode || '';\r\n    this.selectedCurrency = currency;\r\n\r\n    const previousSelectedRates =\r\n      this.currencyRates[this.previousSelectedCurrencyCode];\r\n    const rates = this.currencyRates[this.selectedCurrencyCode];\r\n\r\n    const previousSelectedRate = previousSelectedRates.find(\r\n      (rate: any) => rate.Year === this.previousYear1\r\n    ).Rate;\r\n    const currentSelectedRate = previousSelectedRates.find(\r\n      (rate: any) => rate.Year === this.currentYear\r\n    ).Rate;\r\n\r\n    let previousRate = rates.find(\r\n      (rate: any) => rate.Year === this.previousYear1\r\n    ).Rate;\r\n    let currentRate = rates.find(\r\n      (rate: any) => rate.Year === this.previousYear1\r\n    ).Rate;\r\n\r\n    this.previousSelectedCurrencyCode = currency.CurrencyCode || '';\r\n\r\n    this.studyData.map((item: SpecialtyExcipientItem, i) => {\r\n      const convertUSDPreviousPrice =\r\n        item.AveragePriceMin1 / previousSelectedRate;\r\n      const finalMinValue = convertUSDPreviousPrice * previousRate;\r\n\r\n      const convertUSDMaxPrice = item.AveragePriceMax1 / previousSelectedRate;\r\n      const finalMaxValue = convertUSDMaxPrice * previousRate;\r\n\r\n      let finalMin2Value = 0;\r\n      if (this.studyData[i].AveragePriceMin2 > 0) {\r\n        const convertUSDMin1Price = item.AveragePriceMin2 / currentSelectedRate;\r\n        finalMin2Value = convertUSDMin1Price * currentRate;\r\n      }\r\n\r\n      let finalMax2Value = 0;\r\n      if (this.studyData[i].AveragePriceMin2 > 0) {\r\n        const convertUSDMax2Price = item.AveragePriceMax2 / currentSelectedRate;\r\n        finalMax2Value = convertUSDMax2Price * currentRate;\r\n      }\r\n\r\n      this.studyData[i].AveragePriceMin1 = +finalMinValue.toFixed(1);\r\n      this.studyData[i].AveragePriceMax1 = +finalMaxValue.toFixed(1);\r\n      this.studyData[i].AveragePriceMin2 = +finalMin2Value.toFixed(1);\r\n      this.studyData[i].AveragePriceMax2 = +finalMax2Value.toFixed(1);\r\n\r\n      this.studyData[i].CurrencyCode = currency.CurrencyCode || '';\r\n      this.studyData[i].CurrencyId = currency.Id;\r\n      this.studyData[i].CurrencyName = currency.Name;\r\n    });\r\n  }\r\n\r\n  onVolumeUnitChange(e: any) {\r\n    const defaultUnit = this.volumeUnits.find(\r\n      (item) => item.Id === this.selectedVolumeUnitIdDefault\r\n    );\r\n    const volumeUnit: SEDataEntry = typeof e !== 'undefined' ? e : defaultUnit;\r\n\r\n    this.selectedVolumeUnit = volumeUnit.Name || '';\r\n    this.selectedVolumeUnitId = volumeUnit.Id || 0;\r\n    this.selectedVolumeUnitObj = volumeUnit;\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSEAPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSEAPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      specialtyExcipients: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .signOffSEAPData(formData)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.getSEAPData();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ExcipientCategory:\r\n        this.getExcipientCategory();\r\n        break;\r\n\r\n      case DataRelationsEnum.ExcipientGroup:\r\n        this.getExcipientGroups();\r\n        break;\r\n\r\n      case DataRelationsEnum.Excipient:\r\n        this.getExcipients();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <dxi-item location=\"after\">\r\n              <div style=\"width: 150px\" *dxTemplate>\r\n                <ng-select\r\n                  [items]=\"currencies\"\r\n                  bindLabel=\"Name\"\r\n                  placeholder=\"Select Currency\"\r\n                  [(ngModel)]=\"selectedCurrency\"\r\n                  [clearable]=\"false\"\r\n                  (clear)=\"onCurrencyChange($event)\"\r\n                  (change)=\"onCurrencyChange($event)\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <dxi-item location=\"after\">\r\n              <div style=\"width: 150px\" *dxTemplate>\r\n                <ng-select\r\n                  [items]=\"volumeUnits\"\r\n                  bindLabel=\"Name\"\r\n                  [clearable]=\"false\"\r\n                  [(ngModel)]=\"selectedVolumeUnitObj\"\r\n                  placeholder=\"Select Volume Unit\"\r\n                  (change)=\"onVolumeUnitChange($event)\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            caption=\"Excipient Category\"\r\n            dataField=\"ExcipientCategoryName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Excipient Group\"\r\n            dataField=\"ExcipientGroupName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <!-- <dxi-column\r\n            caption=\"Dosage Form\"\r\n            dataField=\"DosageFormName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column> -->\r\n          <dxi-column\r\n            dataField=\"ExcipientName\"\r\n            caption=\"Excipient\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Year: {{ previousYear1 }} ({{ selectedCurrencyCode }})\"\r\n          >\r\n            <dxi-column\r\n              [width]=\"110\"\r\n              dataField=\"AveragePriceMin1\"\r\n              caption=\"Avg. Min Price\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"110\"\r\n              caption=\"Avg. Max Price\"\r\n              dataField=\"AveragePriceMax1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Year: {{ currentYear }} ({{ selectedCurrencyCode }})\"\r\n          >\r\n            <dxi-column\r\n              [width]=\"110\"\r\n              dataField=\"AveragePriceMin2\"\r\n              caption=\"Avg. Min Price\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"110\"\r\n              caption=\"Avg. Max Price\"\r\n              dataField=\"AveragePriceMax2\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <!-- <app-vehicle-parc-statistics-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear1\"\r\n          [studyData]=\"studyData\"\r\n        ></app-vehicle-parc-statistics-preview> -->\r\n        <app-average-price-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear1\"\r\n          [studyData]=\"studyData\"\r\n        ></app-average-price-preview>\r\n\r\n        <!-- <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          #studyPreview\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setStudyType]=\"studyDataUrlEnum.SE_AVG_PRICE\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview> -->\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [width]=\"300\"\r\n  [height]=\"540\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"form-group\">\r\n          <label>Excipient Category</label>\r\n          <ng-select\r\n            [items]=\"excipientCategories\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"ExcipientCategory\"\r\n            placeholder=\"Select Excipient Category\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.ExcipientCategory)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Excipient Group</label>\r\n          <ng-select\r\n            [items]=\"excipientGroups\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"ExcipientGroup\"\r\n            placeholder=\"Select Excipient Group\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.ExcipientGroup)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Excipient</label>\r\n          <ng-select\r\n            [items]=\"excipients\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"Excipient\"\r\n            placeholder=\"Select Excipient\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.Excipient)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Avg. Min Price ({{ selectedCurrencyCode }})</label>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"AvgMinPrice\"\r\n            />\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\" id=\"basic-addon2\"\r\n                >/ {{ selectedVolumeUnitDefault }}</span\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Avg. Max Price ({{ selectedCurrencyCode }})</label>\r\n          <div class=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              formControlName=\"AvgMaxPrice\"\r\n            />\r\n            <div class=\"input-group-append\">\r\n              <span class=\"input-group-text\" id=\"basic-addon2\"\r\n                >/ {{ selectedVolumeUnitDefault }}</span\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (onClick)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-ehc',\r\n  templateUrl: './ehc.component.html',\r\n  styleUrls: ['./ehc.component.css'],\r\n})\r\nexport class EhcComponent implements OnInit {\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<app-market-consumption *ngIf=\"studyAreaId == 37\"  [setDataRelationsData]=\"datRelationsData\"></app-market-consumption>\r\n<app-ehc-sales\r\n  *ngIf=\"studyAreaId == 36\"\r\n  [setDataRelationsData]=\"datRelationsData\"\r\n></app-ehc-sales>\r\n\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\r\nimport { marketConsumptionEHCItems } from 'src/model/marketConsumptionEHCItems.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport { EHCSalesItem } from 'src/model/emptyHardCapsule.model';\r\n\r\n@Component({\r\n  selector: 'app-ehc-sales-preview',\r\n  templateUrl: './ehc-sales-preview.component.html',\r\n  styleUrls: ['./ehc-sales-preview.component.css'],\r\n})\r\nexport class EhcSalesPreviewComponent implements OnInit {\r\n  @Input() studyData: EHCSalesItem[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() previousYear: number = 0;\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions | undefined;\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n\r\n  getPreviewData(studyData: EHCSalesItem[]) {\r\n    const previewData: {\r\n      Channel: string;\r\n      Segment: string;\r\n      Sector: string;\r\n      ProductType: string;\r\n      CustomerType: string;\r\n      Polymer: string;\r\n      Supplier: string;\r\n      Functionality: string;\r\n      Year: number;\r\n      CAGR: number;\r\n      Unit: number;\r\n      Sales: number;\r\n      Avg: number;\r\n    }[] = [];\r\n\r\n    studyData.map((item: any) => {\r\n      previewData.push({\r\n        Channel: item.Channel,\r\n        Segment: item.Segment,\r\n        Sector: item.Sector,\r\n        CustomerType: item.CustomerType,\r\n        Year: this.previousYear,\r\n        CAGR: item.Cagr1,\r\n        Unit: item.Unit1,\r\n        ProductType: item.ProductType,\r\n        Polymer: item.Polymer,\r\n        Supplier: item.SupplierName,\r\n        Functionality: item.FunctionalityName,\r\n        Sales: item.Value1,\r\n        Avg: item.AvgPrice1,\r\n      });\r\n\r\n      previewData.push({\r\n        Channel: item.Channel,\r\n        Segment: item.Segment,\r\n        Sector: item.Sector,\r\n        CustomerType: item.CustomerType,\r\n        Year: this.currentYear,\r\n        CAGR: item.Cagr2,\r\n        Unit: item.Unit2,\r\n        ProductType: item.ProductType,\r\n        Polymer: item.Polymer,\r\n        Supplier: item.Supplier,\r\n        Functionality: item.Functionality,\r\n        Sales: item.Value2,\r\n        Avg: item.AvgPrice2,\r\n      });\r\n    });\r\n    this.previewData = previewData;\r\n\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'Channel',\r\n        area: 'row',\r\n        caption: 'Channel',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Sector',\r\n        area: 'row',\r\n        caption: 'Sector',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'row',\r\n        caption: 'ProductType',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'CustomerType',\r\n        area: 'row',\r\n        caption: 'CustomerType',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Polymer',\r\n        area: 'row',\r\n        caption: 'Polymer',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Supplier',\r\n        area: 'row',\r\n        caption: 'Supplier',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Functionality',\r\n        area: 'row',\r\n        caption: 'Functionality',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Unit',\r\n        dataField: 'Unit',\r\n        dataFieldType: 'Unit',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Sales',\r\n        dataField: 'Sales',\r\n        dataFieldType: 'Sales',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Avg. Price',\r\n        dataField: 'Avg',\r\n        dataFieldType: 'Avg',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'CAGR(%)',\r\n        dataField: 'CAGR',\r\n        dataFieldType: 'CAGR',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n}\r\n","<dx-pivot-grid\r\n  [allowSortingBySummary]=\"true\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n</dx-pivot-grid>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { HyperFormula } from 'hyperformula';\r\n// import { ColDef, CellEditingStartedEvent,\r\n//   CellEditingStoppedEvent,\r\n\r\n//   ICellEditorParams, } from 'ag-grid-community';\r\nimport { DxDataGridComponent, } from 'devextreme-angular';\r\n// import { Field } from 'devextreme/ui/pivot_grid/data_source';\r\n\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport {\r\n  EHCSalesItem,\r\n  EmptyHardCapsule,\r\n} from 'src/model/emptyHardCapsule.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport Handsontable from 'handsontable';\r\n\r\n\r\n// import Handsontable from 'handsontable';\r\n// import { ConsoleLogger } from '@angular/compiler-cli/private/localize';\r\n\r\n@Component({\r\n  selector: 'app-ehc-sales',\r\n  templateUrl: './ehc-sales.component.html',\r\n  styleUrls: ['./ehc-sales.component.css'],\r\n})\r\nexport class EhcSalesComponent implements OnInit {\r\n\r\n  // data1 = [\r\n  //   ['10.26', null, 'Sum', '=SUM(A:A)'],\r\n  //   ['20.12', null, 'Average', '=AVERAGE(A:A)'],\r\n  //   ['30.01', null, 'Median', '=MEDIAN(A:A)'],\r\n  //   ['40.29', null, 'MAX', '=MAX(A:A)'],\r\n  //   ['50.18', null, 'MIN', '=MIN(A1:A5)'],\r\n  // ];\r\n  hyperformulaInstance = HyperFormula.buildEmpty({\r\n    // to use an external HyperFormula instance,\r\n    // initialize it with the `'internal-use-in-handsontable'` license key\r\n    licenseKey: 'internal-use-in-handsontable',\r\n  });\r\n  data3 = Handsontable.helper.createSpreadsheetData(15, 10)\r\n\r\n\r\n  settings = {\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    height: 'auto',\r\n    formulas: {\r\n      engine: this.hyperformulaInstance,\r\n      sheetName: 'Sheet1'\r\n    },\r\n    licenseKey: 'non-commercial-and-evaluation'\r\n  }\r\n\r\n\r\n\r\n\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n\r\n  formulas = {\r\n    engine: HyperFormula,\r\n    sheet: 'sheet1'\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  formulasArray: any[] = [\r\n\r\n  ]\r\n  dataGrid: DxDataGridComponent | undefined;\r\n  previousYear: number = 0;\r\n  columnDefs?: any[];\r\n  columns?: any[];\r\n  columnHeaders?: any[];\r\n  data?: any[];\r\n  studyTitle: string = '';\r\n  currentYear: number = 0;\r\n\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup = new FormGroup({});\r\n  newNoteForm: FormGroup = new FormGroup({});\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail = new UserDetail().deserialize({});\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  studyDataObj: EmptyHardCapsule = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    SalesEHCItems: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: any[] = [];\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  allowedCols = ['AvgPrice2', 'Cagr2', 'Unit2', 'Value2'];\r\n\r\n  studyAreaType = 'Sales';\r\n\r\n  dataRelationsData: DataRelationsData[] = [];\r\n  @Input() set setDataRelationsData(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.dataRelationsData = data;\r\n      this.dataRelationsForEntry = this.dataRelationsData.filter(\r\n        (item) => item.ViewId === 0\r\n      );\r\n\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.Polymer);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.CustomerType);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.Sector);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.ProductType);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.Supplier);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.Functionality);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.Channel);\r\n      this.getDataEntryDropDown(this.dataRelationsEnum.Segment);\r\n    }\r\n  }\r\n  dataRelationsForEntry: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  customerTypeLists: DataEntry[] = [];\r\n  productTypeLists: DataEntry[] = [];\r\n  sectorLists: DataEntry[] = [];\r\n  channelLists: DataEntry[] = [];\r\n  segmentLists: DataEntry[] = [];\r\n  polymerLists: DataEntry[] = [];\r\n  supplierLists: DataEntry[] = [];\r\n  functionalityLists: DataEntry[] = [];\r\n\r\n  selectedCurrency: any = {\r\n    CurrencyCode: 'USD',\r\n    Id: 27,\r\n    IsActive: true,\r\n    Name: 'United States Dollar',\r\n  };\r\n\r\n  dataRowChanges: any[] = [];\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    Handsontable.renderers.registerRenderer('cellHighLighting', (hotInstance, TD, ...rest) => {\r\n      Handsontable.renderers.getRenderer('text')(hotInstance, TD, ...rest);\r\n    \r\n      TD.style.fontWeight = 'bold';\r\n      TD.style.color = 'green';\r\n      TD.style.background = '#d7f1e1';\r\n    });\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Channel: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      Sector: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      CustomerType: [null, Validators.required],\r\n      Polymer: [null, Validators.required],\r\n      SupplierName: [null, Validators.required],\r\n      FunctionalityName: [null, Validators.required],\r\n      Unit: [null],\r\n      Sales: [null],\r\n      AvgPrice: [null],\r\n      Cagr: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `EHC-SALES-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n  }\r\n\r\n  getDataEntryDropDown(masterEntryField: string) {\r\n    const dataRelationData = this.dataRelationsForEntry.find(\r\n      (item) => item.TableName === masterEntryField\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.sharedService\r\n        .getDataEntryDropDowns(dataRelationData.DataRelationId)\r\n        .subscribe((res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            switch (masterEntryField) {\r\n              case this.dataRelationsEnum.Polymer:\r\n                this.polymerLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.CustomerType:\r\n                this.customerTypeLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.Sector:\r\n                this.sectorLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.ProductType:\r\n                this.productTypeLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.Supplier:\r\n                this.supplierLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.Functionality:\r\n                this.functionalityLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.Channel:\r\n                this.channelLists = res.Data;\r\n                break;\r\n              case this.dataRelationsEnum.Segment:\r\n                this.segmentLists = res.Data;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  getEHCSegmentList(sectorId: number) {\r\n    this.studyService.getEHCSalesSegment(sectorId).subscribe((res) => {\r\n      this.segmentLists = res.Data;\r\n    });\r\n  }\r\n\r\n  onSectorChange(evt: DataEntry) {\r\n    this.getEHCSegmentList(evt.Id);\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getEHCStudyData(\r\n        this.studyAreaType,\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as EmptyHardCapsule;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj.SalesEHCItems as EHCSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n            this.previousYear = 0;\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[4]] = {};\r\n\r\n                    changelogObj[colValueArray[4]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n              // this.onCellPreparedHighlighter(item)\r\n              // console.log(changelogObj);\r\n\r\n              this.selectedCurrency = {\r\n                CurrencyCode: item.CurrencyCode,\r\n                Id: item.CurrencyId,\r\n                IsActive: true,\r\n                Name: item.CurrencyName,\r\n              };\r\n\r\n              this.previousYear = item.LatestDataYear;\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n              this.studyData[i].DataRowKey =\r\n                item.DataRowId !== null ? item.DataRowId : i;\r\n            });\r\n            console.log('data', this.studyData)\r\n            this.studyData.map((data) => {\r\n              data.sum = \"=SUM(J:J)\"\r\n\r\n            })\r\n            //  this.studyData = this.studyData.map(Object.values)\r\n\r\n\r\n            this.setColumnHeaders();\r\n            this.setUpColumnsToShow();\r\n            this.isLoadingService.remove();\r\n\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // const isFound = this.allowedCols.some(\r\n    //   (item) => item === e.column.dataField\r\n    // );\r\n\r\n    // if (e.rowType === 'data' && isFound) {\r\n      if (e.ChangeLogObj) {\r\n        // console.log(e.data.ChangeLogObj);\r\n        const cellValue =\r\n          typeof e.ChangeLogObj[e.column.dataField] !== 'undefined'\r\n            ? e.ChangeLogObj[e.column.dataField]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // console.log('highlight');\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    // }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.dataField] !==\r\n                'undefined'\r\n                ? event.data.ChangeLogObj[event.column.dataField]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    console.log(data)\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    // this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n    const newRow: EHCSalesItem = {\r\n      DataRowId: '',\r\n      DataRowKey: this.studyData.length.toString(),\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      CurrencyCode: this.selectedCurrency.CurrencyCode,\r\n      CurrencyId: this.selectedCurrency.Id,\r\n      CurrencyName: this.selectedCurrency.Name,\r\n\r\n      ChannelId: newRowData.Channel.Id,\r\n      Channel: newRowData.Channel.Name,\r\n      SegmentId: newRowData.Segment.Id,\r\n      Segment: newRowData.Segment.Name,\r\n      SectorId: newRowData.Sector.Id,\r\n      Sector: newRowData.Sector.Name,\r\n      ProductTypeId: newRowData.ProductType.Id,\r\n      ProductType: newRowData.ProductType.Name,\r\n      CustomerTypeId: newRowData.CustomerType.Id,\r\n      CustomerType: newRowData.CustomerType.Name,\r\n      PolymerId: newRowData.Polymer.Id,\r\n      Polymer: newRowData.Polymer.Name,\r\n      SupplierId: newRowData.SupplierName.Id,\r\n      SupplierName: newRowData.SupplierName.Name,\r\n      FunctionalityId: newRowData.FunctionalityName.Id,\r\n      FunctionalityName: newRowData.FunctionalityName.Name,\r\n\r\n      Unit1: 0,\r\n      Unit2: newRowData.Unit,\r\n      Value1: 0,\r\n      Value2: newRowData.Sales,\r\n      AvgPrice1: 0,\r\n      AvgPrice2: newRowData.AvgPrice,\r\n      Cagr1: 0,\r\n      Cagr2: newRowData.Cagr,\r\n\r\n      DataRelationId: '0',\r\n      LatestDataYear: 0,\r\n      CalculatorId: 0,\r\n      CurrentYear: 0,\r\n      OldCurrentYear: 0,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ChannelId == newRow.ChannelId &&\r\n        item.SectorId === newRow.SectorId &&\r\n        item.SegmentId === newRow.SegmentId &&\r\n        item.ProductTypeId === newRow.ProductTypeId &&\r\n        item.CustomerTypeId === newRow.CustomerTypeId &&\r\n        item.PolymerId === newRow.PolymerId &&\r\n        item.FunctionalityId === newRow.FunctionalityId &&\r\n        item.SupplierId === newRow.SupplierId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          a.ChannelId - b.ChannelId ||\r\n          a.SectorId - b.SectorId ||\r\n          a.SegmentId - b.SegmentId ||\r\n          a.ProductTypeId - b.ProductTypeId ||\r\n          a.CustomerTypeId - b.CustomerTypeId ||\r\n          a.PolymerId - b.PolymerId ||\r\n          a.FunctionalityId - b.FunctionalityId ||\r\n          a.SupplierId - b.SupplierId\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    // if (this.dataRowChanges) {\r\n    //   this.dataRowChanges.map((change) => {\r\n    //     const dataChange = change.data;\r\n    //     const changeKey = change.key.DataRowKey\r\n    //       ? change.key.DataRowKey\r\n    //       : undefined;\r\n\r\n    //     if (changeKey) {\r\n    //       const currentIndex = this.studyData.findIndex(\r\n    //         (study) => study.DataRowKey === changeKey\r\n    //       );\r\n\r\n    //       if (\r\n    //         currentIndex &&\r\n    //         typeof this.studyData[currentIndex] !== 'undefined'\r\n    //       ) {\r\n    //         if (typeof dataChange.AvgPrice2 !== 'undefined') {\r\n    //           this.studyData[currentIndex].AvgPrice2 = +dataChange.AvgPrice2;\r\n    //         }\r\n    //         if (typeof dataChange.Value2 !== 'undefined') {\r\n    //           this.studyData[currentIndex].Value2 = dataChange.Value2;\r\n    //         }\r\n    //         if (typeof dataChange.Cagr2 !== 'undefined') {\r\n    //           this.studyData[currentIndex].Cagr2 = dataChange.Cagr2;\r\n    //         }\r\n    //         if (typeof dataChange.Unit2 !== 'undefined') {\r\n    //           this.studyData[currentIndex].Unit2 = dataChange.Unit2;\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   });\r\n    // }\r\n\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      AvgPrice2: item.AvgPrice2 > 0 ? item.AvgPrice2 : null,\r\n      Value2: item.Value2 > 0 ? item.Value2 : null,\r\n      Cagr2: item.Cagr2 > 0 ? item.Cagr2 : null,\r\n      Unit2: item.Unit2 > 0 ? item.Unit2 : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      salesEHCItems: this.studyData,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveEHCData(this.studyAreaType, studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          console.log(this.hyperformulaInstance)\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      salesEHCItems: [],\r\n    };\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .signOffEHCData(this.studyAreaType, formData)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.getSalesData();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.dataRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    this.getDataEntryDropDown(type);\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  setColumnHeaders(): void {\r\n    this.columnHeaders = [\r\n      [\r\n        'Channel',\r\n        'Segment',\r\n        'Sector',\r\n        'Product Type',\r\n        'Customer Type',\r\n        'Polymer',\r\n        'Supplier Name',\r\n        'Functionality',\r\n        { label: `Year: ${this.previousYear.toString()}`, colspan: 4 },\r\n        { label: `Year: ${this.currentYear.toString()}`, colspan: 4 },\r\n        '',\r\n\r\n      ],\r\n      [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        { label: 'Unit' },\r\n        { label: 'Sales' },\r\n        { label: 'Avg.Price' },\r\n        { label: 'CAGR' },\r\n        { label: 'Unit' },\r\n        { label: 'Sales' },\r\n        { label: 'Avg.Price' },\r\n        { label: 'CAGR' },\r\n        null,\r\n\r\n\r\n      ]\r\n    ]\r\n  }\r\n\r\n  setUpColumnsToShow(): void {\r\n    this.columns = [\r\n      { data: 'Channel', readOnly: true },\r\n      { data: 'Segment', readOnly: true },\r\n      { data: 'Sector', readOnly: true },\r\n      { data: 'ProductType', readOnly: true },\r\n      { data: 'CustomerType', readOnly: true },\r\n      { data: 'Polymer', readOnly: true },\r\n      { data: 'SupplierName', readOnly: true },\r\n      { data: 'FunctionalityName', readOnly: true },\r\n\r\n      { data: 'Unit1',  type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'Value1',  type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'AvgPrice1',  type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'Cagr1',  type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'Unit2', type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'Value2', type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'AvgPrice2', type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      { data: 'Cagr2', type: 'numeric', numericFormat: { pattern: '0.00' } },\r\n      // {data:'sum'},\r\n\r\n   \r\n\r\n\r\n\r\n    ]\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // cellEditorSelector(params: ICellEditorParams<IRow>) {\r\n  //   if (params.data.type === 'age') {\r\n  //     return {\r\n  //       component: NumericCellEditor,\r\n  //     };\r\n  //   }\r\n  //   if (params.data.type === 'gender') {\r\n  //     return {\r\n  //       component: 'agRichSelectCellEditor',\r\n  //       params: {\r\n  //         values: ['Male', 'Female'],\r\n  //       },\r\n  //       popup: true,\r\n  //     };\r\n  //   }\r\n  //   if (params.data.type === 'mood') {\r\n  //     return {\r\n  //       component: MoodEditor,\r\n  //       popup: true,\r\n  //       popupPosition: 'under',\r\n  //     };\r\n  //   }\r\n  //   return undefined;\r\n  // }\r\n\r\n\r\n  renderNotesButtons(instance: any, td: any, row: any, col: any, prop: any, value: any, cellProperties: any) {\r\n    // td.innerHTML = \"<dx-button  stylingMode='text' icon='plus' type='default' class='small floating-note-button' (onClick)='addNotes(data)' > </dx-button>\";\r\n    //  const test = Handsontable.helper.stringify(value);\r\n    //  let btn = document.createElement('button')\r\n    //  btn.textContent = 'Notes';\r\n    console.log('Top', instance, row, value);\r\n\r\n    Handsontable.renderers.TextRenderer.apply(this, [instance, td, row, col, prop, value, cellProperties]);\r\n    let btn = document.createElement('button');\r\n    btn.innerHTML = 'Delete';\r\n\r\n    btn.addEventListener('click', event => {\r\n      //event.preventDefault();\r\n      console.log('hi', row);\r\n      this.addNotes(value);\r\n    });\r\n\r\n    td.innerText = '';\r\n    td.appendChild(btn);\r\n\r\n    return td;\r\n\r\n  }\r\n\r\n \r\n  cellHighighting() {\r\n    console.log(\"========After lOAD fIRED =======\");\r\n    \r\n  }\r\n\r\n   firstRowRenderer(instance: any, td: any, row: any, col: any, prop: any, value: any, cellProperties: any) {\r\n    Handsontable.renderers.TextRenderer.apply(this,  [instance, td, row, col, prop, value, cellProperties]);\r\n    td.style.fontWeight = 'bold';\r\n    td.style.color = 'green';\r\n    td.style.background = '#CEC';\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n<div class=\"container-fluid my-4\">\r\n  <!-- <hot-table\r\n  [colHeaders]= \"['Channel', 'Segment', 'Sector','Product Type','Customer Type','Polymer','Supplier Name','Functionality','Previous Year',\r\n  'Sales', 'Avg.Price','CAGR(%)','Current Year','Sales','Avg.Price', 'CAGR', 'Notes']\"\r\n  [rowHeaders]=\"true\"\r\n  [data]=\"studyData\"\r\n  [fixedRowsTop]=\"2\" \r\n  [fixedColumnsLeft]=\"2\"\r\n  [colWidths]=\"100\" \r\n   width= '100%'\r\n  height= 500\r\n  [dropdownMenu] = true\r\n  [comments] = true\r\n  [contextMenu]= true\r\n  [filters] = true\r\n  [columnSorting] = true\r\n  [copyPaste] = true\r\n  [cell]= \"[\r\n  { row: 0, col: 1, comment: { value: 'Add comment.' } },\r\n  { row: 0, col: 3, comment: { value: 'You can add comment' } }\r\n]\"\r\n  [columns]=\"[{data:'Channel'}, {data:'Segment'}, {data:'Sector'},{data:'ProductType'},{data:'CustomerType'},{data:'Polymer'},{data:'SupplierName'},{data:'FunctionalityName'},{data:'Unit1'},\r\n  {data:'Value1'}, {data:'AvgPrice1'},{data:'CAGR1'},{data:'Unit2'},{data:'Value2'},{data:'AvgPrice2'}, {data:'CAGR'}, {data:'Notes',editor: false, renderer: renderNotesButtons}]\"\r\n  licenseKey=\"non-commercial-and-evaluation\">\r\n</hot-table> -->\r\n  <div class=\"mb-3\" style=\"float: right\">\r\n    <dx-button\r\n      icon=\"plus\"\r\n      class=\"ml-2\"\r\n      text=\"Add New Row\"\r\n      (onClick)=\"addNewRowPopup()\"\r\n    ></dx-button>\r\n    <dx-button\r\n      icon=\"save\"\r\n      class=\"ml-2\"\r\n      stylingMode=\"outlined\"\r\n      text=\"Save Data\"\r\n      type=\"default\"\r\n      (onClick)=\"saveStudyData()\"\r\n    ></dx-button>\r\n\r\n    <dx-button\r\n      icon=\"check\"\r\n      class=\"ml-2\"\r\n      type=\"success\"\r\n      text=\"Request for SignOff\"\r\n      (onClick)=\"onRequestForSignOffClick()\"\r\n    ></dx-button>\r\n    <dx-button\r\n      icon=\"revert\"\r\n      class=\"ml-2\"\r\n      type=\"default\"\r\n      text=\"Request for Change Data\"\r\n      (onClick)=\"onRequestForChangeDataClick()\"\r\n    ></dx-button>\r\n  </div>\r\n\r\n  <app-handsontable\r\n    [nestedHeaders]=\"columnHeaders\"\r\n    [data]=\"studyData\"\r\n    [columns]=\"columns\"\r\n    [settings]=\"settings\"\r\n    (afterRender)=\"cellHighighting()\"\r\n    cell=\"[\r\n    {\r\n      row: 0,\r\n      col: 0,\r\n      renderer: 'firstRowRenderer',\r\n    },\r\n  ]\"\r\n  >\r\n  </app-handsontable>\r\n</div>\r\n<!-- <div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"100\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"batch\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n            [(changes)]=\"dataRowChanges\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-scrolling\r\n            mode=\"virtual\"\r\n            columnRenderingMode=\"virtual\"\r\n          ></dxo-scrolling>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"selectedCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ selectedCurrency.Name }} ({{\r\n                    selectedCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            caption=\"Channel\"\r\n            dataField=\"Channel\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Segment\"\r\n            dataField=\"Segment\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Sector\"\r\n            dataField=\"Sector\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"150\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductType\"\r\n            caption=\"Product Type\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"130\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"CustomerType\"\r\n            caption=\"Customer Type\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"130\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"Polymer\"\r\n            caption=\"Polymer\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"SupplierName\"\r\n            caption=\"Supplier\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"FunctionalityName\"\r\n            caption=\"Functionality\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"130\"\r\n          ></dxi-column>\r\n          <dxi-column caption=\"Year: {{ previousYear }}\">\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"Unit1\"\r\n              caption=\"Unit\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"Value1\"\r\n              caption=\"Sales\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"AvgPrice1\"\r\n              caption=\"Avg. Price\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"Cagr(%)\"\r\n              dataField=\"Cagr1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column caption=\"Year: {{ currentYear }}\">\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"Unit2\"\r\n              caption=\"Unit\"\r\n              cellTemplate=\"editableCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"Value2\"\r\n              caption=\"Sales\"\r\n              cellTemplate=\"editableCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"AvgPrice2\"\r\n              caption=\"Avg. Price\"\r\n              cellTemplate=\"editableCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"Cagr(%)\"\r\n              dataField=\"Cagr2\"\r\n              cellTemplate=\"editableCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'editableCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-ehc-sales-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear\"\r\n          [studyData]=\"studyData\"\r\n        ></app-ehc-sales-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Channel</label>\r\n              <ng-select\r\n                [items]=\"channelLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Channel\"\r\n                placeholder=\"Select Channel\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Channel)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Sector</label>\r\n              <ng-select\r\n                [items]=\"sectorLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Sector\"\r\n                placeholder=\"Select Sector\"\r\n                addTagText=\"Create New\"\r\n                (change)=\"onSectorChange($event)\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Sector)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"segmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Type</label>\r\n              <ng-select\r\n                [items]=\"productTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductType\"\r\n                placeholder=\"Select Product Type\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Customer Type</label>\r\n              <ng-select\r\n                [items]=\"customerTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"CustomerType\"\r\n                placeholder=\"Select Customer Type\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.CustomerType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Polymer</label>\r\n              <ng-select\r\n                [items]=\"polymerLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Polymer\"\r\n                placeholder=\"Select Polymer\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Polymer)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Supplier</label>\r\n              <ng-select\r\n                [items]=\"supplierLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"SupplierName\"\r\n                placeholder=\"Select Supplier\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Supplier)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Functionality</label>\r\n              <ng-select\r\n                [items]=\"functionalityLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"FunctionalityName\"\r\n                placeholder=\"Select Functionality\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Functionality)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Unit</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Unit\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Sales</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Sales\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>AvgPrice</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"AvgPrice\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>CAGR(%)</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Cagr\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (onClick)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup> -->\r\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\r\nimport { marketConsumptionEHCItems } from 'src/model/marketConsumptionEHCItems.model';\r\nimport {\r\n  Field as PivotGridField,\r\n  PivotGridOptions,\r\n} from 'src/model/pivotGridOptions.model';\r\n\r\n@Component({\r\n  selector: 'app-market-consumption-preview',\r\n  templateUrl: './market-consumption-preview.component.html',\r\n  styleUrls: ['./market-consumption-preview.component.css']\r\n})\r\nexport class MarketConsumptionPreviewComponent implements OnInit {\r\n  @Input() studyData: marketConsumptionEHCItems[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() latestDataYear: number = 0;\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions | undefined;\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n  ) \r\n  {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n  \r\n  getPreviewData(studyData: marketConsumptionEHCItems[]) {\r\n    const previewData: {\r\n      CustomerType: string;\r\n      Sector: string;\r\n      Segment: string;\r\n      DosageForm: string;\r\n      Year: number;\r\n      CAGR: number;\r\n      Unit: number;\r\n    }[] = [];\r\n\r\n    studyData.map((item: any) => {\r\n      previewData.push({\r\n        CustomerType: item.CustomerType,\r\n        Sector: item.Sector,\r\n        Segment: item.Segment,\r\n        DosageForm: item.DosageForm,\r\n        Year: this.latestDataYear,\r\n        CAGR: item.Cagr1,\r\n        Unit: item.Unit1\r\n    });\r\n\r\n      previewData.push({\r\n        CustomerType: item.CustomerType,\r\n        Sector: item.Sector,\r\n        Segment: item.Segment,\r\n        DosageForm: item.DosageForm,\r\n        Year: this.currentYear,\r\n        CAGR: item.Cagr2,\r\n        Unit: item.Unit2\r\n      })\r\n    });\r\n    this.previewData = previewData;\r\n    \r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }  \r\n\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'CustomerType',\r\n        area: 'row',\r\n        caption: 'CustomerType',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Sector',\r\n        area: 'row',\r\n        caption: 'Sector',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'DosageForm',\r\n        area: 'row',\r\n        caption: 'DosageForm',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Unit',\r\n        dataField: 'Unit',\r\n        dataFieldType: 'Unit',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },      \r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'CAGR(%)',\r\n        dataField: 'CAGR',\r\n        dataFieldType: 'CAGR',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },      \r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n}\r\n","<dx-pivot-grid\r\n  [allowSortingBySummary]=\"true\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n</dx-pivot-grid>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { MarketConsumptionEHC } from 'src/model/marketConsumption.model';\r\nimport { marketConsumptionEHCItems } from 'src/model/marketConsumptionEHCItems.model';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-market-consumption',\r\n  templateUrl: './market-consumption.component.html',\r\n  styleUrls: ['./market-consumption.component.css'],\r\n})\r\nexport class MarketConsumptionComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n  latestDataYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setDataRelationsData(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n  dataRelationsForEntry: DataRelationsData[] = [];\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: MarketConsumptionEHC = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    MarketConsumptionEHCItems: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: marketConsumptionEHCItems[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  customerTypeLists: DataEntry[] = [];\r\n  sectorLists: DataEntry[] = [];\r\n  dosageFormLists: DataEntry[] = [];\r\n  segmentLists: DataEntry[] = [];\r\n\r\n  isCagr2Required: Boolean = false;\r\n\r\n  currentCurrency: any = {};\r\n  previewGridData: any[] = [];\r\n  previewGridStorageKey: string = '';\r\n  volumeYears: any[] = [];\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private localStorageService: LocalStorageService,\r\n    private sharedService: SharedService,\r\n    private router: Router\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.previewGridStorageKey = `EHC-MarketConsumption-${this.studyAreaId}`;\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      CustomerType: [null, Validators.required],\r\n      Sector: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      DosageForm: [null, Validators.required],\r\n      Unit2: [null, Validators.required],\r\n      Cagr2: [null, Validators.required],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getConsumptionMarketData();\r\n\r\n    this.getCustomerTypeLists();\r\n    this.getSectorLists();\r\n    this.getSegmentLists();\r\n    this.getDosageFormLists();\r\n  }\r\n\r\n  getCustomerTypeLists() {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(33)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.customerTypeLists = res.Data;\r\n        }\r\n      });\r\n  }\r\n  getSectorLists() {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(35)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.sectorLists = res.Data;\r\n        }\r\n      });\r\n  }\r\n  getDosageFormLists() {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(38)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.dosageFormLists = res.Data;\r\n        }\r\n      });\r\n  }\r\n  getSegmentLists() {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(37)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.segmentLists = res.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getConsumptionMarketData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getMarketConsumptionStudyData(\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyDataObj = res.Data as MarketConsumptionEHC;\r\n\r\n          this.studyMarketYearCategoryId =\r\n            this.studyDataObj.MarketYearCategoryId;\r\n\r\n          this.studyData = this.studyDataObj\r\n            .MarketConsumptionEHCItems as marketConsumptionEHCItems[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            this.studyDataObj.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          this.currentYear = currentYear;\r\n          this.latestDataYear =\r\n            typeof this.studyData[0] !== 'undefined'\r\n              ? this.studyData[0].LatestDataYear\r\n              : 0;\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            const rowNoteArray: any = [];\r\n            if (item.Notes !== null) {\r\n              const noteArray = item.Notes.split('|||');\r\n              noteArray.map((singleVal: any) => {\r\n                const n = singleVal.split('@@@');\r\n                const d = n[0].split('###');\r\n                rowNoteArray.push({\r\n                  name: d[0].trim(),\r\n                  date: new Date(d[1].trim()),\r\n                  note: n[1].trim(),\r\n                });\r\n              });\r\n            }\r\n\r\n            let sortRowNoteArray: any = [];\r\n            if (rowNoteArray.length > 0) {\r\n              sortRowNoteArray = rowNoteArray.sort(\r\n                (a: any, b: any) => b.date - a.date\r\n              );\r\n            }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  changelogObj[colValueArray[4]] = {};\r\n\r\n                  changelogObj[colValueArray[4]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            this.previewGridData.push({\r\n              CustomerType: item.CustomerType,\r\n              Sector: item.Sector,\r\n              Segment: item.Segment,\r\n              DosageForm: item.DosageForm,\r\n              Year: this.latestDataYear,\r\n              Unit: item.Unit1,\r\n              CagrPer: item.Cagr1,\r\n            });\r\n\r\n            this.previewGridData.push({\r\n              CustomerType: item.CustomerType,\r\n              Sector: item.Sector,\r\n              Segment: item.Segment,\r\n              DosageForm: item.DosageForm,\r\n              Year: this.currentYear,\r\n              Unit: item.Unit2,\r\n              CagrPer: item.Cagr2,\r\n            });\r\n\r\n            this.studyData[i].StudyNotes =\r\n              rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            this.studyData[i].EditNote = false;\r\n            this.studyData[i].Notes = null;\r\n            this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.volumeYears.push({\r\n            field: 'Value1',\r\n            unitField: 'Unit1',\r\n            avgPriceField: 'AvgPrice1',\r\n            cagrField: 'Cagr1',\r\n            year: this.latestDataYear,\r\n          });\r\n          this.volumeYears.push({\r\n            field: 'Value2',\r\n            unitField: 'Unit2',\r\n            avgPriceField: 'AvgPrice2',\r\n            cagrField: 'Cagr2',\r\n            year: this.currentYear,\r\n          });\r\n\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'CustomerType',\r\n        area: 'row',\r\n        caption: 'Customer Type',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'Sector',\r\n        area: 'row',\r\n        caption: 'Sector',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'DosageForm',\r\n        area: 'row',\r\n        caption: 'Dosage Form',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Unit',\r\n        dataField: 'Unit',\r\n        dataFieldType: 'Unit',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 5,\r\n        caption: 'CAGR(%)',\r\n        dataField: 'CagrPer',\r\n        dataFieldType: 'CagrPer',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: marketConsumptionEHCItems = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      Cagr1: 0,\r\n      CustomerType: newRowData.CustomerType.Name,\r\n      CustomerTypeId: +newRowData.CustomerType.Id,\r\n      DosageForm: newRowData.DosageForm.Name,\r\n      DosageFormId: +newRowData.DosageForm.Id,\r\n      MarketId: +newRowData.MarketId,\r\n      Sector: newRowData.Sector.Name,\r\n      SectorId: +newRowData.Sector.Id,\r\n      Segment: newRowData.Segment.Name,\r\n      SegmentId: +newRowData.Segment.Id,\r\n      Cagr2: +newRowData.Cagr2,\r\n      LatestDataYear: this.latestDataYear,\r\n      Unit1: 0,\r\n      Unit2: +newRowData.Unit2,\r\n      IsCagr2Required: false,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.DosageFormId === newRow.DosageFormId &&\r\n        item.CustomerTypeId === newRow.CustomerTypeId &&\r\n        item.SectorId === newRow.SectorId &&\r\n        item.SegmentId === newRow.SegmentId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.DosageFormId || 0) - (b.DosageFormId || 0) ||\r\n          (a.CustomerTypeId || 0) - (b.CustomerTypeId || 0) ||\r\n          (a.SectorId || 0) - (b.SectorId || 0) ||\r\n          (a.SegmentId || 0) - (b.SegmentId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as marketConsumptionEHCItems;\r\n      data.Unit2 = +data.Unit2;\r\n      data.Cagr2 = +data.Cagr2;\r\n      if (\r\n        (data.Unit2 != 0 || data.Unit2 != null) &&\r\n        (data.Cagr2 === 0 || data.Cagr2 === null)\r\n      )\r\n        data.IsCagr2Required = true;\r\n      else {\r\n        data.IsCagr2Required = false;\r\n      }\r\n    }\r\n  }\r\n  onCellPreparedHighlighter(e: any) {\r\n    const allowedCols = ['Unit2', 'Cagr2'];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.dataField]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = ['Unit2', 'Cagr2'];\r\n\r\n    const isFound = allowedCols.some((item) => item === event.column.dataField);\r\n    if (event.rowType === 'data' && isFound) {\r\n      this.TooltipTarget = event.cellElement;\r\n      if (event.eventType === 'mouseover') {\r\n        if (event.data.ChangeLogObj) {\r\n          const cellValue =\r\n            typeof event.data.ChangeLogObj[event.column.dataField] !==\r\n            'undefined'\r\n              ? event.data.ChangeLogObj[event.column.dataField]\r\n              : null;\r\n          if (cellValue !== null) {\r\n            const oldValue = !isNaN(cellValue.oldValue)\r\n              ? +cellValue.oldValue\r\n              : 0;\r\n            const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n            this.TooltipText = html;\r\n            this.isTooltipVisible = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (event.eventType === 'mouseout') {\r\n        this.isTooltipVisible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      Unit2: item.Unit2 > 0 ? item.Unit2 : 0,\r\n      Cagr2: item.Cagr2 > 0 ? item.Cagr2 : 0,\r\n      Unit1: item.Unit1 > 0 ? item.Unit1 : 0,\r\n      Cagr1: item.Cagr1 > 0 ? item.Cagr1 : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      marketConsumptionEHCItems: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveMaketConsumptionData(studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          // this.getConsumptionMarketData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      marketConsumptionEHCItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffMaketConsumptionData(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          this.getConsumptionMarketData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        const error =\r\n          typeof err.error !== 'undefined'\r\n            ? err.error\r\n            : 'Something went wrong. Please try after sometimes.';\r\n        this.alertService.danger(error);\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.CustomerType:\r\n        this.getCustomerTypeLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegmentLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.DosageForm:\r\n        this.getDosageFormLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Sector:\r\n        this.getSectorLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"CustomerType\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column dataField=\"Sector\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column dataField=\"Segment\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column\r\n            dataField=\"DosageForm\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <!-- <dxi-column\r\n              [width]=\"100\"\r\n              [dataField]=\"volumeYear.field\"\r\n              [caption]=\"volumeYear.year\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              *ngFor=\"let volumeYear of volumeYears\"\r\n            ></dxi-column> -->\r\n          <dxi-column [caption]=\"latestDataYear\">\r\n            <dxi-column\r\n              [allowFiltering]=\"false\"\r\n              [width]=\"80\"\r\n              caption=\"Unit\"\r\n              dataField=\"Unit1\"\r\n              cellTemplate=\"lastYearCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              caption=\"Cagr (%)\"\r\n              dataField=\"Cagr1\"\r\n              cellTemplate=\"lastYearCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n          </dxi-column>\r\n          <dxi-column [caption]=\"currentYear\">\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              caption=\"Unit\"\r\n              dataField=\"Unit2\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              dataField=\"Cagr2\"\r\n              caption=\"Cagr (%)\"\r\n              cellTemplate=\"EditCellCagr2Template\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let d of 'EditCellCagr2Template'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"d.data.Cagr2 > 0 ? d.data.Cagr2.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n              [ngClass]=\"d.data.IsCagr2Required ? 'mark-input-border' : ''\"\r\n              [title]=\"d.data.IsCagr2Required ? 'This field is required' : ''\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              d.data.Cagr2 > 0 ? d.data.Cagr2.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'lastYearCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'perCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <!-- <app-market-consumption-preview\r\n            [currentYear]=\"currentYear\"\r\n            [studyData]=\"studyData\"\r\n            [latestDataYear]=\"latestDataYear\"\r\n          ></app-market-consumption-preview> -->\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.EHC_MC\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [width]=\"600\"\r\n  [height]=\"400\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Customer Type</label>\r\n              <ng-select\r\n                [items]=\"customerTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"CustomerType\"\r\n                placeholder=\"Select Customer Type\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.CustomerType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Sector</label>\r\n              <ng-select\r\n                [items]=\"sectorLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Sector\"\r\n                placeholder=\"Select Sector\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Sector)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Dosage Form</label>\r\n              <ng-select\r\n                [items]=\"dosageFormLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"DosageForm\"\r\n                placeholder=\"Select Dosage Form\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.DosageForm)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"segmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }} Unit</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Unit2\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }} Cagr (%)</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Cagr2\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-ivm',\r\n  templateUrl: './ivm.component.html',\r\n  styleUrls: ['./ivm.component.css'],\r\n})\r\nexport class IvmComponent implements OnInit {\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        \r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n        \r\n      }\r\n    });\r\n  }\r\n}\r\n","<app-product-composition *ngIf=\"studyAreaId == 40\" [setDataRelationsData]=\"datRelationsData\"></app-product-composition>\r\n<app-ps\r\n  *ngIf=\"studyAreaId == 39\"\r\n  [setDataRelationsData]=\"datRelationsData\"\r\n></app-ps>\r\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport { ProductCompositionIVMItems } from 'src/model/productCompositionIVMItems.model';\r\nimport {\r\n  Field as PivotGridField,\r\n  PivotGridOptions,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\n\r\n@Component({\r\n  selector: 'app-product-composition-preview',\r\n  templateUrl: './product-composition-preview.component.html',\r\n  styleUrls: ['./product-composition-preview.component.css']\r\n})\r\nexport class ProductCompositionPreviewComponent implements OnInit {\r\n  @Input() studyData: ProductCompositionIVMItems[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() latestDataYear: number = 0;\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: SEDataEntry | undefined;\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n\r\n  currencyDropdownSelected: any;\r\n  \r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };  \r\n\r\n  @Input() set setSelectedCurrency(data: any) {\r\n    if (data) {\r\n      this.selectedCurrency = {\r\n        Id: data.CurrencyId,\r\n        IsActive: true,\r\n        Name: data.CurrencyName,\r\n        CurrencyCode: data.CurrencyCode,\r\n        CurrencyName: data.CurrencyName,\r\n      };\r\n\r\n      this.currencyDropdownSelected = this.selectedCurrency;\r\n    }\r\n  } \r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n  ) \r\n  {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n   }\r\n\r\n   ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n  \r\n  getPreviewData(studyData: ProductCompositionIVMItems[]) {\r\n    const previewData: {\r\n      Market: string;\r\n      ActiveIngredient: string;\r\n      Brand: string;\r\n      ProductForm: string;\r\n      ProductType: string;\r\n      Segment: string;\r\n      Supplier: string;\r\n      UnitOfMeasureName: string;\r\n      ProductClassification: string;\r\n      Year: number;\r\n      CAGR: number;\r\n      Measure: number;\r\n      Concentration: number;\r\n    }[] = [];\r\n\r\n    studyData.map((item: any) => {\r\n      previewData.push({\r\n        Market: item.Market,\r\n        ActiveIngredient: item.ActiveIngredient,\r\n        Brand: item.Brand,\r\n        ProductClassification: item.ProductClassification,\r\n        Year: this.latestDataYear,\r\n        CAGR: item.Cagr1,\r\n        Measure: item.Measure1,\r\n        Concentration: item.ActiveIngredientConcentration1,\r\n        ProductForm: item.ProductForm,\r\n        ProductType: item.ProductType,\r\n        Segment: item.Segment,\r\n        Supplier: item.Supplier,\r\n        UnitOfMeasureName: item.UnitOfMeasureName\r\n      });\r\n\r\n      previewData.push({\r\n        Market: item.Market,\r\n        ActiveIngredient: item.ActiveIngredient,\r\n        Brand: item.Brand,\r\n        ProductClassification: item.ProductClassification,\r\n        Year: this.currentYear,\r\n        CAGR: item.Cagr2,\r\n        Measure: item.Measure2,\r\n        Concentration: item.ActiveIngredientConcentration2,\r\n        ProductForm: item.ProductForm,\r\n        ProductType: item.ProductType,\r\n        Segment: item.Segment,\r\n        Supplier: item.Supplier,\r\n        UnitOfMeasureName: item.UnitOfMeasureName\r\n      })\r\n    });\r\n    this.previewData = previewData;\r\n    \r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'Market',\r\n        area: 'row',\r\n        caption: 'Market',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ActiveIngredient',\r\n        area: 'row',\r\n        caption: 'Active Ingredient',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Brand',\r\n        area: 'row',\r\n        caption: 'Brand',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ProductClassification',\r\n        area: 'row',\r\n        caption: 'Product Classification',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ProductForm',\r\n        area: 'row',\r\n        caption: 'Product Form',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'row',\r\n        caption: 'Product Type',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Supplier',\r\n        area: 'row',\r\n        caption: 'Supplier',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'UnitOfMeasureName',\r\n        area: 'row',\r\n        caption: 'Unit Of MeasureName',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Measure',\r\n        dataField: 'Measure',\r\n        dataFieldType: 'Measure',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },    \r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Concentration',\r\n        dataField: 'Concentration',\r\n        dataFieldType: 'Concentration',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },        \r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'CAGR(%)',\r\n        dataField: 'CAGR',\r\n        dataFieldType: 'CAGR',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },      \r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n\r\n  // currencySelectionChanged(currency: SEDataEntry) {\r\n  //   this.currencyDropdownSelected = currency;\r\n  //   this.readPivotDataFromApi();\r\n  // }  \r\n\r\n  // readPivotDataFromApi() {\r\n  //   this.isLoadingService.add();\r\n  //   this.yearDataFieldName = 'Year';\r\n  //   this.studyService\r\n  //     .getPreviewStudyData(\r\n  //       this.studyType,\r\n  //       this.marketYearCategoryId,\r\n  //       this.studyProjectMarketYearId,\r\n  //       typeof this.currencyDropdownSelected !== 'undefined'\r\n  //         ? this.currencyDropdownSelected.Id\r\n  //         : 0,\r\n  //       typeof this.unitOfMassDropdownSelected !== 'undefined'\r\n  //         ? this.unitOfMassDropdownSelected.Id\r\n  //         : 0,\r\n  //       typeof this.currencyConversionTypeSelected !== 'undefined'\r\n  //         ? this.currencyConversionTypeSelected\r\n  //         : 0\r\n  //     )\r\n  //     .subscribe(\r\n  //       (res: ApiResponse) => {\r\n  //         if (res.HttpStatusCode === 200) {\r\n  //           const studyDataObj = res.Data;\r\n\r\n  //           const studyData =\r\n  //             studyDataObj[`${this.getDataFieldName(this.studyType)}`];\r\n\r\n  //           const previewData: any[] = [];\r\n  //           let index = 0;\r\n  //           studyData.map((item: any, i: number) => {\r\n  //             this.volumeYears.map((d: any) => {\r\n  //               this.gridFields.map((field: any) => {\r\n  //                 if (typeof previewData[index] === 'undefined') {\r\n  //                   previewData[index] = {};\r\n  //                 }\r\n  //                 previewData[index][field.dataField] = item[field.dataField];\r\n  //                 if (field.dataField === 'Year') {\r\n  //                   previewData[index][field.dataField] = d.year;\r\n  //                 }\r\n  //                 if (\r\n  //                   field.dataField === 'Sales' ||\r\n  //                   field.dataField === 'Value'\r\n  //                 ) {\r\n  //                   previewData[index][field.dataField] = item[d.field];\r\n  //                 }\r\n  //               });\r\n  //               index++;\r\n  //             });\r\n  //           });\r\n\r\n  //           this.previewData = previewData;\r\n  //           if (typeof this.pivotGridOptions !== 'undefined') {\r\n  //             this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n  //             this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n  //             this.pivotGridDataSource = new PivotGridDataSource(\r\n  //               this.pivotGridOptions.pivotGridSource as any\r\n  //             );\r\n  //           }\r\n\r\n  //           this.fillPivot(this.pivotGridOptions, this.previewData);\r\n  //           // when pivot data is loaded allow with small delay save state to the database\r\n  //           setTimeout(() => {\r\n  //             this.canCallSaveState = true;\r\n  //           }, 300);\r\n\r\n  //           // console.log(this.previewData);\r\n  //           this.isLoadingService.remove();\r\n  //         } else {\r\n  //           this.alertService.danger(res.Data);\r\n  //         }\r\n  //       },\r\n  //       (err) => {\r\n  //         const errorShow =\r\n  //           typeof err.error !== 'undefined'\r\n  //             ? err.error\r\n  //             : 'Something went wrong. Please try again later.';\r\n  //         this.alertService.danger(errorShow);\r\n  //         this.isLoadingService.remove();\r\n  //       }\r\n  //     );\r\n  // }  \r\n\r\n  // getDataFieldName(fieldName: string) {\r\n  //   if (fieldName == this.studyDataUrlEnum.SHC_PT_SALES) {\r\n  //     return 'ProductTypeSalesSHC';\r\n  //   } else {\r\n  //     return 'dataItems';\r\n  //   }\r\n\r\n  // }\r\n}\r\n","<dx-pivot-grid\r\n  [allowSortingBySummary]=\"true\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n</dx-pivot-grid>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { Market } from 'src/model/market.model';\r\nimport { ProductCompositionIVM } from 'src/model/productCompositionIVM.model';\r\nimport { ProductCompositionIVMItems } from 'src/model/productCompositionIVMItems.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-product-composition',\r\n  templateUrl: './product-composition.component.html',\r\n  styleUrls: ['./product-composition.component.css'],\r\n})\r\nexport class ProductCompositionComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n  latestDataYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: ProductCompositionIVM = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    dataItems: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ProductCompositionIVMItems[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n  studyDataViewId: number = 0;\r\n\r\n  marketLists: Market[] = [];\r\n  activeIngredientLists: DataEntry[] = [];\r\n  brandLists: DataEntry[] = [];\r\n  productClassificationLists: DataEntry[] = [];\r\n  productFormLists: DataEntry[] = [];\r\n  productTypeLists: DataEntry[] = [];\r\n  segmentLists: DataEntry[] = [];\r\n  supplierLists: DataEntry[] = [];\r\n  unitOfMeasureLists: DataEntry[] = []; //[{Id: 2, Name: 'Gram', IsActive: true, Description: 'Gram'}]\r\n\r\n  dropDownsId = [71, 67, 70, 69, 66, 65, 68];\r\n\r\n  currentCurrency: any = {};\r\n  dataSetId: number = 0;\r\n\r\n  dataRelationsData: DataRelationsData[] = [];\r\n  @Input() set setDataRelationsData(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.dataRelationsData = data;\r\n\r\n      this.studyDataRelations = this.dataRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n\r\n  dataRelationsEnum = DataRelationsEnum;\r\n  studyDataRelations: DataRelationsData | undefined;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private formBuilder: FormBuilder,\r\n    private alertService: AlertService,\r\n    private localStorageService: LocalStorageService,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Market: [null, Validators.required],\r\n      ActiveIngredient: [null, Validators.required],\r\n      Brand: [null, Validators.required],\r\n      ProductClassification: [null, Validators.required],\r\n      ProductForm: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      Supplier: [null, Validators.required],\r\n      UnitOfMeasureName: [null, Validators.required],\r\n      Measure2: [null, Validators.required],\r\n      ActiveIngredientConcentration2: [null, Validators.required],\r\n      Cagr2: [null, Validators.required],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProductCompositionData();\r\n\r\n    this.dropDownsId.forEach((id) => {\r\n      this.getDataEntryDropDown(id);\r\n    });\r\n    this.getMarketLists();\r\n    this.getUnitOfMeasureLists();\r\n  }\r\n\r\n  getDataEntryDropDown(dataRelationId: number) {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(dataRelationId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          if (dataRelationId === this.dropDownsId[0])\r\n            this.activeIngredientLists = res.Data;\r\n          else if (dataRelationId === this.dropDownsId[1])\r\n            this.brandLists = res.Data;\r\n          else if (dataRelationId === this.dropDownsId[2])\r\n            this.productClassificationLists = res.Data;\r\n          else if (dataRelationId === this.dropDownsId[3])\r\n            this.productFormLists = res.Data;\r\n          else if (dataRelationId === this.dropDownsId[4])\r\n            this.productTypeLists = res.Data;\r\n          else if (dataRelationId === this.dropDownsId[5])\r\n            this.segmentLists = res.Data;\r\n          else if (dataRelationId === this.dropDownsId[6])\r\n            this.supplierLists = res.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getMarketLists() {\r\n    this.sharedService.getSubMarkets(this.dataSetId, 113).subscribe((res) => {\r\n      if (res.HttpStatusCode === 200) this.marketLists = res.Data;\r\n    });\r\n  }\r\n\r\n  getUnitOfMeasureLists() {\r\n    this.sharedService.getUnitOfMeasure().subscribe((res) => {\r\n      if (res.HttpStatusCode === 200) this.unitOfMeasureLists = res.Data;\r\n    });\r\n  }\r\n\r\n  getProductCompositionData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getIVMProductCompositionStudyData(\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyDataObj = res.Data as ProductCompositionIVM;\r\n\r\n          this.studyMarketYearCategoryId =\r\n            this.studyDataObj.MarketYearCategoryId;\r\n\r\n          this.studyData = this.studyDataObj\r\n            .dataItems as ProductCompositionIVMItems[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            this.studyDataObj.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          this.currentYear = currentYear;\r\n          this.latestDataYear = this.studyData[0].LatestDataYear;\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            const rowNoteArray: any = [];\r\n            if (item.Notes !== null) {\r\n              const noteArray = item.Notes.split('|||');\r\n              noteArray.map((singleVal: any) => {\r\n                const n = singleVal.split('@@@');\r\n                const d = n[0].split('###');\r\n                rowNoteArray.push({\r\n                  name: d[0].trim(),\r\n                  date: new Date(d[1].trim()),\r\n                  note: n[1].trim(),\r\n                });\r\n              });\r\n            }\r\n\r\n            let sortRowNoteArray: any = [];\r\n            if (rowNoteArray.length > 0) {\r\n              sortRowNoteArray = rowNoteArray.sort(\r\n                (a: any, b: any) => b.date - a.date\r\n              );\r\n            }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  changelogObj[colValueArray[4]] = {};\r\n\r\n                  changelogObj[colValueArray[4]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            this.currentCurrency = {\r\n              CurrencyId: item.CurrencyId,\r\n              CurrencyName: item.CurrencyName,\r\n              CurrencyCode: item.CurrencyCode,\r\n            };\r\n\r\n            this.latestDataYear = item.LatestDataYear;\r\n\r\n            this.previewGridData.push({\r\n              Market: item.Market,\r\n              Segment: item.Segment,\r\n              ProductType: item.ProductType,\r\n              Brand: item.Brand,\r\n              Supplier: item.Supplier,\r\n              ProductForm: item.ProductForm,\r\n              ProductClassification: item.ProductClassification,\r\n              UnitOfMeasureName: item.UnitOfMeasureName,\r\n              ActiveIngredient: item.ActiveIngredient,\r\n              Year: this.latestDataYear,\r\n              Value: item.ActiveIngredientConcentration1,\r\n            });\r\n\r\n            this.previewGridData.push({\r\n              Market: item.Market,\r\n              Segment: item.Segment,\r\n              ProductType: item.ProductType,\r\n              Brand: item.Brand,\r\n              Supplier: item.Supplier,\r\n              ProductForm: item.ProductForm,\r\n              ProductClassification: item.ProductClassification,\r\n              UnitOfMeasureName: item.UnitOfMeasureName,\r\n              ActiveIngredient: item.ActiveIngredient,\r\n              Year: this.currentYear,\r\n              Value: item.ActiveIngredientConcentration2,\r\n            });\r\n\r\n            this.studyData[i].StudyNotes =\r\n              rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            this.studyData[i].EditNote = false;\r\n            this.studyData[i].Notes = null;\r\n            this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.volumeYears.push({\r\n            field: 'ActiveIngredientConcentration1',\r\n            year: this.latestDataYear,\r\n          });\r\n          this.volumeYears.push({\r\n            field: 'ActiveIngredientConcentration2',\r\n            year: this.currentYear,\r\n          });\r\n\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: ProductCompositionIVMItems = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      Cagr1: 0,\r\n      IsCagr2Required: false,\r\n      ActiveIngredient: newRowData.ActiveIngredient.Name,\r\n      ActiveIngredientConcentration1:\r\n        +newRowData.ActiveIngredientConcentration1,\r\n      ActiveIngredientConcentration2:\r\n        +newRowData.ActiveIngredientConcentration2,\r\n      ActiveIngredientId: +newRowData.ActiveIngredient.Id,\r\n      Brand: newRowData.Brand.Name,\r\n      BrandId: +newRowData.Brand.Id,\r\n      Cagr2: +newRowData.Cagr2,\r\n      CalculatorId: 0,\r\n      DataRelationId: 0,\r\n      LatestDataYear: this.latestDataYear,\r\n      Market: newRowData.Market.OfficialName,\r\n      MarketId: +newRowData.Market.Id,\r\n      Measure1: 0,\r\n      Measure2: +newRowData.Measure2,\r\n      ProductClassification: newRowData.ProductClassification.Name,\r\n      ProductClassificationId: +newRowData.ProductClassification.Id,\r\n      ProductForm: newRowData.ProductForm.Name,\r\n      ProductFormId: +newRowData.ProductForm.Id,\r\n      ProductType: newRowData.ProductType.Name,\r\n      ProductTypeId: +newRowData.ProductType.Id,\r\n      Segment: newRowData.Segment.Name,\r\n      SegmentId: +newRowData.Segment.Id,\r\n      Supplier: newRowData.Supplier.Name,\r\n      SupplierId: +newRowData.Supplier.Id,\r\n      UnitOfMeasureId: +newRowData.UnitOfMeasureName.Id,\r\n      UnitOfMeasureName: newRowData.UnitOfMeasureName.Name,\r\n      UnitOfMeasureSymbol: newRowData.UnitOfMeasureName.symbol,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.MarketId == newRow.MarketId &&\r\n        item.BrandId == newRow.BrandId &&\r\n        item.ProductClassificationId == newRow.ProductClassificationId &&\r\n        item.ProductFormId == newRow.ProductFormId &&\r\n        item.ProductTypeId == newRow.ProductTypeId &&\r\n        item.SegmentId == newRow.SegmentId &&\r\n        item.SupplierId == newRow.SupplierId &&\r\n        item.ActiveIngredientId == newRow.ActiveIngredientId &&\r\n        item.UnitOfMeasureId == newRow.UnitOfMeasureId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.MarketId || 0) - (b.MarketId || 0) ||\r\n          (a.BrandId || 0) - (b.BrandId || 0) ||\r\n          (a.ProductClassificationId || 0) - (b.ProductClassificationId || 0) ||\r\n          (a.SegmentId || 0) - (b.SegmentId || 0) ||\r\n          (a.SupplierId || 0) - (b.SupplierId || 0) ||\r\n          (a.ActiveIngredientId || 0) - (b.ActiveIngredientId || 0) ||\r\n          (a.ProductFormId || 0) - (b.ProductFormId || 0) ||\r\n          (a.ProductTypeId || 0) - (b.ProductTypeId || 0) ||\r\n          (a.UnitOfMeasureId || 0) - (b.UnitOfMeasureId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ProductCompositionIVMItems;\r\n      data.ActiveIngredientConcentration2 =\r\n        +data.ActiveIngredientConcentration2;\r\n      data.Measure2 = +data.Measure2;\r\n      data.Cagr2 = +data.Cagr2;\r\n      if (\r\n        (data.ActiveIngredientConcentration2 != 0 ||\r\n          data.ActiveIngredientConcentration2 != null ||\r\n          data.Measure2 != 0 ||\r\n          data.Measure2 != null) &&\r\n        (data.Cagr2 === 0 || data.Cagr2 === null)\r\n      )\r\n        data.IsCagr2Required = true;\r\n      else {\r\n        data.IsCagr2Required = false;\r\n      }\r\n    }\r\n  }\r\n  onCellPreparedHighlighter(e: any) {\r\n    const allowedCols = ['ActiveIngredientConcentration2', 'Measure2', 'Cagr2'];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.dataField]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = ['ActiveIngredientConcentration2', 'Measure2', 'Cagr2'];\r\n\r\n    const isFound = allowedCols.some((item) => item === event.column.dataField);\r\n    if (event.rowType === 'data' && isFound) {\r\n      this.TooltipTarget = event.cellElement;\r\n      if (event.eventType === 'mouseover') {\r\n        if (event.data.ChangeLogObj) {\r\n          const cellValue =\r\n            typeof event.data.ChangeLogObj[event.column.dataField] !==\r\n            'undefined'\r\n              ? event.data.ChangeLogObj[event.column.dataField]\r\n              : null;\r\n          if (cellValue !== null) {\r\n            const oldValue = !isNaN(cellValue.oldValue)\r\n              ? +cellValue.oldValue\r\n              : 0;\r\n            const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n            this.TooltipText = html;\r\n            this.isTooltipVisible = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (event.eventType === 'mouseout') {\r\n        this.isTooltipVisible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      Measure2: item.Measure2 > 0 ? item.Measure2 : null,\r\n      ActiveIngredientConcentration2:\r\n        item.ActiveIngredientConcentration2 > 0\r\n          ? item.ActiveIngredientConcentration2\r\n          : null,\r\n      Cagr2: item.Cagr2 > 0 ? item.Cagr2 : null,\r\n      Cagr1: item.Cagr1 > 0 ? item.Cagr1 : null,\r\n      Measure1: item.Measure1 > 0 ? item.Measure1 : null,\r\n      ActiveIngredientConcentration1:\r\n        item.ActiveIngredientConcentration1 > 0\r\n          ? item.ActiveIngredientConcentration1\r\n          : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      dataItems: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveIVMProductCompositionData(studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          // this.getProductCompositionData();\r\n          this.loadCurrentStudy();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      iVMProductCompositionItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffIVMProductCompositionData(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          this.getProductCompositionData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        const error =\r\n          typeof err.error !== 'undefined'\r\n            ? err.error\r\n            : 'Something went wrong. Please try after sometimes.';\r\n        this.alertService.danger(error);\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.dataRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    this.dropDownsId.forEach((id) => {\r\n      this.getDataEntryDropDown(id);\r\n    });\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'Market',\r\n        area: 'row',\r\n        caption: 'Market',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'ActiveIngredient',\r\n        area: 'row',\r\n        caption: 'Active Ingredient',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'Brand',\r\n        area: 'row',\r\n        caption: 'Brand',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'ProductClassification',\r\n        area: 'row',\r\n        caption: 'Product Classification',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        dataField: 'ProductForm',\r\n        area: 'filter',\r\n        caption: 'Product Form',\r\n        dataType: 'string',\r\n        id: 4,\r\n      },\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'filter',\r\n        caption: 'Product Type',\r\n        dataType: 'string',\r\n        id: 5,\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n        id: 6,\r\n      },\r\n      {\r\n        dataField: 'Supplier',\r\n        area: 'row',\r\n        caption: 'Supplier',\r\n        dataType: 'string',\r\n        id: 7,\r\n      },\r\n      {\r\n        dataField: 'UnitOfMeasureName',\r\n        area: 'row',\r\n        caption: 'Unit Of Measure',\r\n        dataType: 'string',\r\n        id: 8,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 9,\r\n        caption: 'Concentration',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 10,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <dxo-scrolling\r\n            mode=\"virtual\"\r\n            columnRenderingMode=\"virtual\"\r\n          ></dxo-scrolling>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column dataField=\"Market\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ActiveIngredient\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"Brand\"\r\n            [width]=\"80\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductClassification\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductForm\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductType\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column dataField=\"Segment\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column dataField=\"Supplier\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column\r\n            dataField=\"UnitOfMeasureName\"\r\n            caption=\"Unit\"\r\n            [width]=\"80\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column [caption]=\"latestDataYear\">\r\n            <dxi-column\r\n              caption=\"Measure\"\r\n              dataField=\"Measure1\"\r\n              cellTemplate=\"lastYearCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              caption=\"Concentration\"\r\n              dataField=\"ActiveIngredientConcentration1\"\r\n              cellTemplate=\"lastYearCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              caption=\"Cagr (%)\"\r\n              dataField=\"Cagr1\"\r\n              cellTemplate=\"lastYearCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n          </dxi-column>\r\n          <dxi-column [caption]=\"currentYear\">\r\n            <dxi-column\r\n              caption=\"Measure\"\r\n              dataField=\"Measure2\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              [allowFiltering]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              caption=\"Concentration\"\r\n              dataField=\"ActiveIngredientConcentration2\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              [allowFiltering]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              dataField=\"Cagr2\"\r\n              caption=\"Cagr (%)\"\r\n              cellTemplate=\"EditCellCagr2Template\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let d of 'EditCellCagr2Template'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"d.data.Cagr2 > 0 ? d.data.Cagr2.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n              [ngClass]=\"d.data.IsCagr2Required ? 'mark-input-border' : ''\"\r\n              [title]=\"d.data.IsCagr2Required ? 'This field is required' : ''\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              d.data.Cagr2 > 0 ? d.data.Cagr2.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'lastYearCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'perCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <!-- <div class=\"container-fluid my-4\">\r\n          <app-product-composition-preview\r\n            [currentYear]=\"currentYear\"\r\n            [studyData]=\"studyData\"\r\n            [latestDataYear]=\"latestDataYear\"\r\n          ></app-product-composition-preview>\r\n        </div> -->\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.IVM_MarketConsumption\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Market</label>\r\n              <ng-select\r\n                [items]=\"marketLists\"\r\n                bindLabel=\"OfficialName\"\r\n                formControlName=\"Market\"\r\n                placeholder=\"Select Market\"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Active Ingredient</label>\r\n              <ng-select\r\n                [items]=\"activeIngredientLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ActiveIngredient\"\r\n                placeholder=\"Select Active Ingredient\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ActiveIngredient\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Brand</label>\r\n              <ng-select\r\n                [items]=\"brandLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Brand\"\r\n                placeholder=\"Select Brand\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Brand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Classification</label>\r\n              <ng-select\r\n                [items]=\"productClassificationLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductClassification\"\r\n                placeholder=\"Select Product Classification\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductClassification\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Form</label>\r\n              <ng-select\r\n                [items]=\"productFormLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductForm\"\r\n                placeholder=\"Select Product Form\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductForm)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Type</label>\r\n              <ng-select\r\n                [items]=\"productTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductType\"\r\n                placeholder=\"Select Product Type\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"segmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Supplier</label>\r\n              <ng-select\r\n                [items]=\"supplierLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Supplier\"\r\n                placeholder=\"Select Supplier\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Supplier)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Unit of Measure</label>\r\n              <ng-select\r\n                [items]=\"unitOfMeasureLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"UnitOfMeasureName\"\r\n                placeholder=\"Select Unit of Measure\"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }} Measure</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"Measure2\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }} Concentration</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"ActiveIngredientConcentration2\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }} Cagr (%)</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Cagr2\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { tap } from 'lodash';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { StudyDataItems } from 'src/model/studyDataItems.model';\r\nimport { StudyResponse } from 'src/model/studyResponse.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-ps',\r\n  templateUrl: './ps.component.html',\r\n  styleUrls: ['./ps.component.css'],\r\n})\r\nexport class PsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: StudyDataItems[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  studyDataObj: StudyResponse<any> = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    dataItems: undefined,\r\n  };\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = ['Value2', 'Measure2', 'Cagr2'];\r\n\r\n  studyTypeValue = 'Sales';\r\n\r\n  dataRelationsData: DataRelationsData[] = [];\r\n  @Input() set setDataRelationsData(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.dataRelationsData = data;\r\n      this.dataRelationsForEntry = this.dataRelationsData.filter(\r\n        (item) => item.ViewId === 0\r\n      );\r\n\r\n      this.studyDataRelations = this.dataRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n\r\n      this.getMasterEntryList();\r\n    }\r\n  }\r\n\r\n  dataRelationsForEntry: DataRelationsData[] = [];\r\n\r\n  dataRelationsEnum = DataRelationsEnum;\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n  latestDataYear: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  dataRowChanges: any[] = [];\r\n\r\n  MarketList: any[] = [];\r\n  SegmentList: any[] = [];\r\n  ProductTypeList: any[] = [];\r\n  BrandList: any[] = [];\r\n  SupplierList: any[] = [];\r\n  ProductFormList: any[] = [];\r\n  ProductClassificationList: any[] = [];\r\n  UnitOfMeasureList: any[] = [];\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Market: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      Brand: [null, Validators.required],\r\n      Supplier: [null, Validators.required],\r\n      ProductForm: [null, Validators.required],\r\n      ProductClassification: [null, Validators.required],\r\n      Value: [null],\r\n      Measure: [null],\r\n      UnitOfMeasure: [null],\r\n      Cagr: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUnitOfMeasureLists();\r\n    this.getSalesData();\r\n  }\r\n\r\n  getMarketLists(dataSetId: number, marketId: number) {\r\n    this.sharedService\r\n      .getSubMarketDropDowns(dataSetId, marketId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.MarketList = res.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getUnitOfMeasureLists() {\r\n    this.sharedService\r\n      .getUnitsOfMeasureDropDowns()\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.UnitOfMeasureList = res.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getIVMStudyData(\r\n        this.studyTypeValue,\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as StudyResponse<StudyDataItems>;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj.dataItems as StudyDataItems[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.getMarketLists(\r\n              this.studySummary.StudyDataSetId || 0,\r\n              this.studySummary.MarketId || 0\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[4]] = {};\r\n\r\n                    changelogObj[colValueArray[4]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.latestDataYear = item.LatestDataYear;\r\n\r\n              this.previewGridData.push({\r\n                Market: item.Market,\r\n                Segment: item.Segment,\r\n                ProductType: item.ProductType,\r\n                Brand: item.Brand,\r\n                Supplier: item.Supplier,\r\n                ProductForm: item.ProductForm,\r\n                ProductClassification: item.ProductClassification,\r\n                Year: this.latestDataYear,\r\n                Value: item.Value1,\r\n              });\r\n\r\n              this.previewGridData.push({\r\n                Market: item.Market,\r\n                Segment: item.Segment,\r\n                ProductType: item.ProductType,\r\n                Brand: item.Brand,\r\n                Supplier: item.Supplier,\r\n                ProductForm: item.ProductForm,\r\n                ProductClassification: item.ProductClassification,\r\n                Year: this.currentYear,\r\n                Value: item.Value2,\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n              this.studyData[i].DataRowKey =\r\n                item.DataRowId !== null ? item.DataRowId : `row_key_${i}`;\r\n            });\r\n\r\n            this.volumeYears.push({\r\n              field: 'Value1',\r\n              year: this.latestDataYear,\r\n            });\r\n            this.volumeYears.push({\r\n              field: 'Value2',\r\n              year: this.currentYear,\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getMasterEntryList() {\r\n    const masterEntries = [\r\n      this.dataRelationsEnum.Segment,\r\n      this.dataRelationsEnum.ProductType,\r\n      this.dataRelationsEnum.Brand,\r\n      this.dataRelationsEnum.Supplier,\r\n      this.dataRelationsEnum.ProductForm,\r\n      this.dataRelationsEnum.ProductClassification,\r\n    ];\r\n    masterEntries.map((masterEntry) => {\r\n      this.getMasterDataLists(masterEntry);\r\n    });\r\n  }\r\n\r\n  getMasterDataLists(masterEntryField: string) {\r\n    const dataRelationData = this.dataRelationsForEntry.find(\r\n      (item) => item.TableName === masterEntryField\r\n    );\r\n    if (dataRelationData) {\r\n      this.sharedService\r\n        .getDataEntryDropDowns(dataRelationData.DataRelationId)\r\n        .subscribe((res) => {\r\n          switch (masterEntryField) {\r\n            case this.dataRelationsEnum.Segment:\r\n              this.SegmentList = res.Data;\r\n              break;\r\n            case this.dataRelationsEnum.ProductType:\r\n              this.ProductTypeList = res.Data;\r\n              break;\r\n            case this.dataRelationsEnum.Brand:\r\n              this.BrandList = res.Data;\r\n              break;\r\n            case this.dataRelationsEnum.Supplier:\r\n              this.SupplierList = res.Data;\r\n              break;\r\n            case this.dataRelationsEnum.ProductForm:\r\n              this.ProductFormList = res.Data;\r\n              break;\r\n            case this.dataRelationsEnum.ProductClassification:\r\n              this.ProductClassificationList = res.Data;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'Market',\r\n        area: 'row',\r\n        caption: 'Market',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'row',\r\n        caption: 'Product Type',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'Brand',\r\n        area: 'row',\r\n        caption: 'Brand',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        dataField: 'Supplier',\r\n        area: 'row',\r\n        caption: 'Supplier',\r\n        dataType: 'string',\r\n        id: 4,\r\n      },\r\n      {\r\n        dataField: 'ProductForm',\r\n        area: 'row',\r\n        caption: 'Product Form',\r\n        dataType: 'string',\r\n        id: 5,\r\n      },\r\n      {\r\n        dataField: 'ProductClassification',\r\n        area: 'row',\r\n        caption: 'Product Classification',\r\n        dataType: 'string',\r\n        id: 6,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 8,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    if (typeof e.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === e.column.dataField\r\n      );\r\n      if (e.rowType === 'data' && isFound) {\r\n        if (e.data.ChangeLogObj) {\r\n          const cellValue =\r\n            typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'\r\n              ? e.data.ChangeLogObj[e.column.dataField]\r\n              : null;\r\n          if (cellValue !== null) {\r\n            // e.cellElement.bgColor = '#FFFF00';\r\n            e.cellElement.className = 'highlighter-td';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.dataField] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.dataField]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: StudyDataItems = {\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n\r\n      ProductType: newRowData.ProductType.Name,\r\n      ProductTypeId: newRowData.ProductType.Id,\r\n      SegmentId: newRowData.Segment.Id,\r\n      Segment: newRowData.Segment.Name,\r\n\r\n      SupplierId: newRowData.Supplier.Id,\r\n      Supplier: newRowData.Supplier.Name,\r\n      MarketId: newRowData.Market.Id,\r\n      Market: newRowData.Market.OfficialName,\r\n      BrandId: newRowData.Brand.Id,\r\n      Brand: newRowData.Brand.Name,\r\n      ProductFormId: newRowData.ProductForm.Id,\r\n      ProductForm: newRowData.ProductForm.Name,\r\n      ProductClassificationId: newRowData.ProductClassification.Id,\r\n      ProductClassification: newRowData.ProductClassification.Name,\r\n\r\n      Value2: +newRowData.Value,\r\n      Value1: 0,\r\n      UnitOfMeasureId: newRowData.UnitOfMeasure.Id,\r\n      UnitOfMeasureName: newRowData.UnitOfMeasure.Name,\r\n      UnitOfMeasureSymbol: newRowData.UnitOfMeasure.symbol,\r\n      Measure2: +newRowData.Measure,\r\n      Measure1: 0,\r\n      Cagr2: +newRowData.Cagr,\r\n      Cagr1: 0,\r\n      LatestDataYear: this.latestDataYear,\r\n      CurrentYear: this.currentYear,\r\n      DataRowKey: '',\r\n      CalculatorId: 0,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.MarketId == newRow.MarketId &&\r\n        item.SegmentId == newRow.SegmentId &&\r\n        item.ProductTypeId == newRow.ProductTypeId &&\r\n        item.BrandId == newRow.BrandId &&\r\n        item.SupplierId == newRow.SupplierId &&\r\n        item.ProductFormId == newRow.ProductFormId &&\r\n        item.ProductClassificationId == newRow.ProductClassificationId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.MarketId || 0) - (b.MarketId || 0) ||\r\n          (a.SegmentId || 0) - (b.SegmentId || 0) ||\r\n          (a.ProductTypeId || 0) - (b.ProductTypeId || 0) ||\r\n          (a.BrandId || 0) - (b.BrandId || 0) ||\r\n          (a.SupplierId || 0) - (b.SupplierId || 0) ||\r\n          (a.ProductFormId || 0) - (b.ProductFormId || 0) ||\r\n          (a.ProductClassificationId || 0) - (b.ProductClassificationId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  private changesDetectionOnSave() {\r\n    if (this.dataRowChanges) {\r\n      this.dataRowChanges.map((change) => {\r\n        const dataChange = change.data;\r\n        const changeKey =\r\n          change.key.DataRowKey !== '' ? change.key.DataRowKey : undefined;\r\n\r\n        if (changeKey !== undefined) {\r\n          const currentIndex = this.studyData.findIndex(\r\n            (study) => study.DataRowKey === changeKey\r\n          );\r\n\r\n          if (typeof this.studyData[currentIndex] !== 'undefined') {\r\n            if (typeof dataChange.Value2 !== 'undefined') {\r\n              this.studyData[currentIndex].Value2 = +dataChange.Value2;\r\n            }\r\n            if (typeof dataChange.Measure2 !== 'undefined') {\r\n              this.studyData[currentIndex].Measure2 = dataChange.Measure2;\r\n            }\r\n            if (typeof dataChange.Cagr2 !== 'undefined') {\r\n              this.studyData[currentIndex].Cagr2 = dataChange.Cagr2;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    this.changesDetectionOnSave();\r\n\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      Value2: item.Value2 > 0 ? item.Value2 : null,\r\n      Measure2: item.Measure2 > 0 ? item.Measure2 : null,\r\n      Cagr2: item.Cagr2 > 0 ? item.Cagr2 : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      dataItems: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveIVMData(this.studyTypeValue, studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.disabledSignOffButton = false;\r\n          // this.getSalesData();\r\n          this.loadCurrentStudy();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      dataItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffIVMData(this.studyTypeValue, formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.dataRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    this.getMasterDataLists(type);\r\n  }\r\n\r\n  toFloatValue(val: any) {\r\n    return parseFloat(val);\r\n  }\r\n\r\n  calculateCellValueUnitOfMeasure(data: any) {\r\n    return [data.UnitOfMeasureName, `(${data.UnitOfMeasureSymbol})`].join(' ');\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"100\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <dxo-scrolling\r\n            mode=\"virtual\"\r\n            columnRenderingMode=\"virtual\"\r\n          ></dxo-scrolling>\r\n          <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"batch\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n            [(changes)]=\"dataRowChanges\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"Market\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"Segment\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductType\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"Brand\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"Supplier\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductForm\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"120\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductClassification\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"150\"\r\n            [fixed]=\"true\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"UnitOfMeasureSymbol\"\r\n            caption=\"Unit of Measure\"\r\n            [allowEditing]=\"false\"\r\n            [width]=\"120\"\r\n            [calculateCellValue]=\"calculateCellValueUnitOfMeasure\"\r\n            [fixed]=\"true\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"{{ latestDataYear }} ({{ currentCurrency.CurrencyCode }})\"\r\n            cssClass=\"text-center\"\r\n          >\r\n            <dxi-column\r\n              dataField=\"Value1\"\r\n              caption=\"Value\"\r\n              [allowEditing]=\"false\"\r\n              cellTemplate=\"numberCellTemplate\"\r\n            >\r\n            </dxi-column>\r\n\r\n            <dxi-column\r\n              dataField=\"Measure1\"\r\n              caption=\"Measure\"\r\n              [allowEditing]=\"false\"\r\n              cellTemplate=\"numberCellTemplate\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              dataField=\"Cagr1\"\r\n              caption=\"Cagr (%)\"\r\n              [allowEditing]=\"false\"\r\n              cellTemplate=\"numberCellTemplate\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"{{ currentYear }} ({{ currentCurrency.CurrencyCode }})\"\r\n            cssClass=\"text-center\"\r\n          >\r\n            <dxi-column\r\n              dataField=\"Value2\"\r\n              caption=\"Value\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n            >\r\n            </dxi-column>\r\n\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"Measure2\"\r\n              caption=\"Measure\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"Cagr2\"\r\n              caption=\"Cagr (%)\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"\r\n                data.value > 0 ? toFloatValue(data.value).toFixed(1) : ''\r\n              \"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'numberCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.IVM_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Market</label>\r\n              <ng-select\r\n                [items]=\"MarketList\"\r\n                bindLabel=\"OfficialName\"\r\n                formControlName=\"Market\"\r\n                placeholder=\"Select Market\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Channel)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"SegmentList\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Type</label>\r\n              <ng-select\r\n                [items]=\"ProductTypeList\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductType\"\r\n                placeholder=\"Select Product Type\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Brand</label>\r\n              <ng-select\r\n                [items]=\"BrandList\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Brand\"\r\n                placeholder=\"Select Brand\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Brand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Supplier</label>\r\n              <ng-select\r\n                [items]=\"SupplierList\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Supplier\"\r\n                placeholder=\"Select Supplier\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Supplier)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Form</label>\r\n              <ng-select\r\n                [items]=\"ProductFormList\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductForm\"\r\n                placeholder=\"Select Product Form\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductForm)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Classification</label>\r\n              <ng-select\r\n                [items]=\"ProductClassificationList\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductClassification\"\r\n                placeholder=\"Select Product Classification\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductClassification\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Value ({{ currentCurrency.CurrencyCode }})</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Value\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Unit of Measure</label>\r\n              <ng-select\r\n                *ngIf=\"UnitOfMeasureList\"\r\n                formControlName=\"UnitOfMeasure\"\r\n                placeholder=\"Select Unit of Measure\"\r\n              >\r\n                <ng-option value=\"\">Select Unit of Measure</ng-option>\r\n                <ng-option *ngFor=\"let item of UnitOfMeasureList\" [value]=\"item\"\r\n                  >{{ item.Name }} ({{ item.symbol }})</ng-option\r\n                >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Measure</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"Measure\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>CAGR(%)</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Cagr\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (onClick)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { LubricantDemandDataItem, StudyArea } from 'src/model/studyArea.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport {\r\n  DxDataGridModule,\r\n  DxDataGridComponent,\r\n  DxTemplateModule,\r\n  DxSelectBoxModule,\r\n  DxTabPanelModule,\r\n  DxButtonModule,\r\n} from 'devextreme-angular';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { LubricantDemandPreviewComponent } from 'src/app/pages/study-area-preview/components/lubricant-demand-preview/lubricant-demand-preview.component';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-lubricant-demand',\r\n  templateUrl: './lubricant-demand.component.html',\r\n  styleUrls: ['./lubricant-demand.component.css'],\r\n})\r\nexport class LubricantDemandComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  groupingValues: any[] = [];\r\n\r\n  studyData: LubricantDemandDataItem[] = [];\r\n\r\n  currentYear: number;\r\n  previousYear1: number;\r\n  previousYear2: number;\r\n\r\n  foreCastYear1: number = 0;\r\n  foreCastYear2: number = 0;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  cagr1: string = '';\r\n  cagr2: string = '';\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  @ViewChild('studyPreview') studyPreview!: LubricantDemandPreviewComponent;\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  marketSegments: DataEntry[] = [];\r\n  productCategories: DataEntry[] = [];\r\n  subProducts: DataEntry[] = [];\r\n  viscosityGrades: DataEntry[] = [];\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  isStudyEditable: boolean = false;\r\n\r\n  studyTitle: string = '';\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  deleteRowConfirmPopup: boolean = false;\r\n  volumeYearsPreview: any;\r\n  previewGridData: any = [];\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n    this.previousYear1 = this.currentYear - 1;\r\n    this.previousYear2 = this.currentYear - 2;\r\n\r\n    // this.foreCastYear1 = this.currentYear + 5;\r\n    // this.foreCastYear2 = this.currentYear + 10;\r\n\r\n    // this.cagr1 = `${this.currentYear}-${this.foreCastYear1}`;\r\n    // this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.groupingValues = [\r\n      {\r\n        value: 'ProductCategory',\r\n        text: 'Product Category',\r\n      },\r\n      {\r\n        value: 'ViscosityGrade',\r\n        text: 'Viscosity Grade',\r\n      },\r\n    ];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      marketSegment: [null, Validators.required],\r\n      productCategory: [null, Validators.required],\r\n      subProduct: [null, Validators.required],\r\n      viscosityGrade: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n      forecastYear1: [null],\r\n      forecastYear2: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLubricantDemandData();\r\n\r\n    this.getMarketSegment();\r\n    this.getProductCategories();\r\n    this.getSubProducts();\r\n    this.getViscosityGrades();\r\n  }\r\n\r\n  getLubricantDemandData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getLubricantDemandData(\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyData = res.Data as StudyArea;\r\n\r\n            this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n            this.studyData =\r\n              studyData.LubricantDemandDataItems as LubricantDemandDataItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              studyData.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.isMidYear = this.studySummary.IsMidYear\r\n              ? this.studySummary.IsMidYear\r\n              : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            const studyYear = currentYear;\r\n            currentYear = currentYear - 1;\r\n\r\n            this.volumeYears = [];\r\n            this.volumeYearsPreview = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n              this.volumeYearsPreview.push({\r\n                field: `PreviousYear${j}`,\r\n                year: i,\r\n              });\r\n            }\r\n\r\n            let forecast1Add = 3;\r\n            let forecast2Add = 8;\r\n            if (this.isMidYear) {\r\n              forecast1Add = 4;\r\n              forecast2Add = 9;\r\n            }\r\n\r\n            this.currentYear = currentYear;\r\n            // this.foreCastYear1 = currentYear + 5;\r\n            // this.foreCastYear1 = currentYear + 4;\r\n            this.foreCastYear1 = studyYear + forecast1Add;\r\n            // this.foreCastYear2 = currentYear + 10;\r\n            // this.foreCastYear2 = this.foreCastYear1 + 5;\r\n            this.foreCastYear2 = studyYear + forecast2Add;\r\n\r\n            this.cagr1 = `${currentYear}-${this.foreCastYear1}`;\r\n            this.cagr2 = `${this.foreCastYear1}-${this.foreCastYear2}`;\r\n\r\n            this.volumeYears.push({ field: `CurrentYear`, year: currentYear });\r\n            this.volumeYearsPreview.push({\r\n              field: `CurrentYear`,\r\n              year: currentYear,\r\n            });\r\n\r\n            this.volumeYearsPreview.push({\r\n              field: `Forecast1`,\r\n              year: this.foreCastYear1,\r\n            });\r\n            this.volumeYearsPreview.push({\r\n              field: `Forecast2`,\r\n              year: this.foreCastYear2,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              this.studyData[i].Cagr1 = this.calculateCAGRPercentage(\r\n                item.CurrentYear,\r\n                item.Forecast1,\r\n                this.foreCastYear1 - this.currentYear\r\n              );\r\n              this.studyData[i].Cagr2 = this.calculateCAGRPercentage(\r\n                item.Forecast1,\r\n                item.Forecast2,\r\n                this.foreCastYear2 - this.foreCastYear1\r\n              );\r\n\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.volumeYearsPreview.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  MarketSegment: item.MarketSegment,\r\n                  ProductCategory: item.ProductCategory,\r\n                  SubProduct: item.SubProduct,\r\n                  ViscosityGrade: item.ViscosityGrade,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n            // console.log(this.studyData);\r\n            // this.studyPreview.changeStudyData(this.studyData);\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isLoadingService.remove();\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try again or contact administrator.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'MarketSegment',\r\n        area: 'row',\r\n        caption: 'Market Segment',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'ProductCategory',\r\n        area: 'row',\r\n        caption: 'Product Category',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'SubProduct',\r\n        area: 'row',\r\n        caption: 'Sub Product',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      // {\r\n      //   dataField: 'ProductType',\r\n      //   area: 'row',\r\n      //   caption: 'ProductType',\r\n      //   dataType: 'string',\r\n      //   id: 3,\r\n      // },\r\n      {\r\n        dataField: 'ViscosityGrade',\r\n        area: 'row',\r\n        caption: 'Viscosity Grade',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 5,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  getMarketSegment() {\r\n    this.sharedService.getMarketSegment().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.marketSegments = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  getProductCategories() {\r\n    this.sharedService.getProductCategories().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.productCategories = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubProducts() {\r\n    this.sharedService.getSubProducts().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.subProducts = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  getViscosityGrades() {\r\n    this.sharedService.getViscosityGrades().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.viscosityGrades = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  groupChanged(e: any) {\r\n    if (typeof this.dataGrid !== 'undefined') {\r\n      this.dataGrid.instance.clearGrouping();\r\n      this.dataGrid.instance.columnOption(e.value, 'groupIndex', 0);\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  setNumberFormat(data: any) {\r\n    return data.value.toFixed(4);\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as LubricantDemandDataItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n\r\n      const currentYear: number = +data.CurrentYear;\r\n      const forecast1: number = +data.Forecast1;\r\n      const forecast2: number = +data.Forecast2;\r\n\r\n      if (currentYear && forecast1) {\r\n        const cagrYear1Diff = this.foreCastYear1 - this.currentYear;\r\n        data.Cagr1 = this.calculateCAGRPercentage(\r\n          currentYear,\r\n          forecast1,\r\n          cagrYear1Diff\r\n        );\r\n      }\r\n\r\n      if (forecast1 && forecast2) {\r\n        const cagrYear2Diff = this.foreCastYear2 - this.foreCastYear1;\r\n\r\n        data.Cagr2 = this.calculateCAGRPercentage(\r\n          forecast1,\r\n          forecast2,\r\n          cagrYear2Diff\r\n        );\r\n      }\r\n\r\n      // this.studyPreview.changeStudyData(this.studyData);\r\n    }\r\n  }\r\n\r\n  calculateCAGRPercentage(startValue: number, endValue: number, year: number) {\r\n    let cargPer = '';\r\n    if (startValue && endValue && year) {\r\n      const cagr = Math.pow(endValue / startValue, 1 / year) - 1;\r\n      cargPer = (cagr * 100).toFixed(1);\r\n    }\r\n    return +cargPer;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const cagrYear1Diff = newRowData.forecastYear1 - newRowData.CurrentYear;\r\n    const cagrYear2Diff = newRowData.forecastYear2 - newRowData.forecastYear1;\r\n\r\n    const newRow: LubricantDemandDataItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: 0,\r\n      DataRowId: '',\r\n      Forecast1: +newRowData.forecastYear1,\r\n      Forecast2: +newRowData.forecastYear2,\r\n      LubricantDemandId: 0,\r\n      MarketSegment: newRowData.marketSegment.Name,\r\n      MarketSegmentId: newRowData.marketSegment.Id,\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ProductCategory: newRowData.productCategory.Name,\r\n      ProductCategoryId: newRowData.productCategory.Id,\r\n      SubProduct: newRowData.subProduct.Name,\r\n      SubProductId: newRowData.subProduct.Id,\r\n      ViscosityGrade: newRowData.viscosityGrade.Name,\r\n      ViscosityGradeId: newRowData.viscosityGrade.Id,\r\n      Cagr1: this.calculateCAGRPercentage(\r\n        newRowData.CurrentYear,\r\n        newRowData.forecastYear1,\r\n        cagrYear1Diff\r\n      ),\r\n      Cagr2: this.calculateCAGRPercentage(\r\n        newRowData.forecastYear1,\r\n        newRowData.forecastYear2,\r\n        cagrYear2Diff\r\n      ),\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.MarketSegmentId == newRow.MarketSegmentId &&\r\n        item.ProductCategoryId == newRow.ProductCategoryId &&\r\n        item.SubProductId == newRow.SubProductId &&\r\n        item.ViscosityGradeId == newRow.ViscosityGradeId\r\n    );\r\n\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          a.MarketSegmentId - b.MarketSegmentId ||\r\n          a.ProductCategoryId - b.ProductCategoryId ||\r\n          a.SubProductId - b.SubProductId ||\r\n          a.ViscosityGradeId - b.ViscosityGradeId\r\n      );\r\n\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n      // this.studyPreview.changeStudyData(this.studyData);\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      lubricantDemandDataItems: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveLubricantData(studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          // this.getLubricantDemandData();\r\n          this.loadPageAfterSave();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  showPreview() {\r\n    this.router.navigate([\r\n      '/',\r\n      'study-area-preview',\r\n      this.studyProjectMarketYearId,\r\n      this.marketYearCategoryId,\r\n    ]);\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffLubricationData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeLubricationData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      lubricantDemandDataItems: [],\r\n    };\r\n\r\n    const lubricantDemandItems: any[] = [];\r\n    // this.studyData.map((item: LubricantDemandDataItem) => {\r\n    //   lubricantDemandItems.push({\r\n    //     subProduct: item.SubProduct,\r\n    //     subProductId: item.SubProductId,\r\n    //     lubricantDemandId: item.LubricantDemandId,\r\n    //     marketSegment: item.MarketSegment,\r\n    //     marketSegmentId: item.MarketSegmentId,\r\n    //     dataRelationId: item.DataRelationId,\r\n    //     productCategory: item.ProductCategory,\r\n    //     productCategoryId: item.ProductCategoryId,\r\n    //     viscosityGrade: item.ViscosityGrade,\r\n    //     viscosityGradeId: item.ViscosityGradeId,\r\n    //     previousYear5: item.PreviousYear5,\r\n    //     previousYear4: item.PreviousYear4,\r\n    //     previousYear3: item.PreviousYear3,\r\n    //     previousYear1: item.PreviousYear1,\r\n    //     previousYear2: item.PreviousYear2,\r\n    //     currentYear: item.CurrentYear,\r\n    //     forecast1: item.Forecast1,\r\n    //     forecast2: item.Forecast2,\r\n    //     notes: item.Notes,\r\n    //     dataRowId: item.DataRowId,\r\n    //   });\r\n    // });\r\n\r\n    const formData = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n      },\r\n      lubricantDemandDataItems: lubricantDemandItems,\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .signOffLubricationData(formData)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.getLubricantDemandData();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = [\r\n      'PreviousYear1',\r\n      'PreviousYear2',\r\n      'PreviousYear3',\r\n      'PreviousYear4',\r\n      'PreviousYear5',\r\n      'CurrentYear',\r\n      'Forecast1',\r\n      'Forecast2',\r\n    ];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (\r\n        typeof e.data.ChangeLogObj !== 'undefined' &&\r\n        e.data.ChangeLogObj.length > 0\r\n      ) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = [\r\n      'PreviousYear1',\r\n      'PreviousYear2',\r\n      'PreviousYear3',\r\n      'PreviousYear4',\r\n      'PreviousYear5',\r\n      'CurrentYear',\r\n      'Forecast1',\r\n      'Forecast2',\r\n    ];\r\n\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.MarketSegment:\r\n        this.getMarketSegment();\r\n        break;\r\n\r\n      case DataRelationsEnum.ProductCategory:\r\n        this.getProductCategories();\r\n        break;\r\n\r\n      case DataRelationsEnum.SubProduct:\r\n        this.getSubProducts();\r\n        break;\r\n\r\n      case DataRelationsEnum.ViscosityGrade:\r\n        this.getViscosityGrades();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  loadPageAfterSave() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.loadPageAfterSave();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <!-- <dxi-item location=\"before\">\r\n              <div *dxTemplate class=\"pl-3\">\r\n                <dx-button text=\"Preview\" (onClick)=\"showPreview()\"></dx-button>\r\n              </div>\r\n            </dxi-item> -->\r\n\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxo-summary>\r\n            <dxi-group-item\r\n              column=\"SubProduct\"\r\n              displayFormat=\"Totals\"\r\n              [showInGroupFooter]=\"true\"\r\n            >\r\n            </dxi-group-item>\r\n            <dxi-group-item\r\n              column=\"PreviousYear2\"\r\n              summaryType=\"sum\"\r\n              displayFormat=\"{0}\"\r\n              [customizeText]=\"setNumberFormat\"\r\n              [showInGroupFooter]=\"true\"\r\n              [alignByColumn]=\"true\"\r\n            >\r\n            </dxi-group-item>\r\n            <dxi-group-item\r\n              column=\"PreviousYear1\"\r\n              summaryType=\"sum\"\r\n              displayFormat=\"{0}\"\r\n              [customizeText]=\"setNumberFormat\"\r\n              [showInGroupFooter]=\"true\"\r\n              [alignByColumn]=\"true\"\r\n            >\r\n            </dxi-group-item>\r\n            <dxi-group-item\r\n              column=\"CurrentYear\"\r\n              summaryType=\"sum\"\r\n              displayFormat=\"{0}\"\r\n              [customizeText]=\"setNumberFormat\"\r\n              [showInGroupFooter]=\"true\"\r\n              [alignByColumn]=\"true\"\r\n            >\r\n            </dxi-group-item>\r\n            <dxi-group-item\r\n              column=\"Forecast1\"\r\n              summaryType=\"sum\"\r\n              displayFormat=\"{0}\"\r\n              [customizeText]=\"setNumberFormat\"\r\n              [showInGroupFooter]=\"true\"\r\n              [alignByColumn]=\"true\"\r\n            >\r\n            </dxi-group-item>\r\n            <dxi-group-item\r\n              column=\"Forecast2\"\r\n              summaryType=\"sum\"\r\n              displayFormat=\"{0}\"\r\n              [customizeText]=\"setNumberFormat\"\r\n              [showInGroupFooter]=\"true\"\r\n              [alignByColumn]=\"true\"\r\n            >\r\n            </dxi-group-item>\r\n          </dxo-summary>\r\n          <dxi-column\r\n            dataField=\"MarketSegment\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ProductCategory\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"SubProduct\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"ViscosityGrade\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            *ngIf=\"volumeYears\"\r\n            caption=\"Year wise Volume (in KTonnes)\"\r\n          >\r\n            <dxi-column\r\n              *ngFor=\"let volumeYear of volumeYears\"\r\n              [width]=\"60\"\r\n              [dataField]=\"volumeYear.field\"\r\n              [caption]=\"volumeYear.year\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column caption=\"Forecast\">\r\n            <dxi-column\r\n              [width]=\"60\"\r\n              [caption]=\"foreCastYear1\"\r\n              dataField=\"Forecast1\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n              <!-- <dxo-format type=\"percent\" [precision]=\"1\"> </dxo-format> -->\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"60\"\r\n              [caption]=\"foreCastYear2\"\r\n              dataField=\"Forecast2\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n              <!-- <dxo-format type=\"percent\" [precision]=\"1\"> </dxo-format> -->\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column caption=\"CAGR, %\">\r\n            <dxi-column\r\n              [width]=\"90\"\r\n              [caption]=\"cagr1\"\r\n              dataField=\"Cagr1\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n            <dxi-column\r\n              [width]=\"90\"\r\n              [caption]=\"cagr2\"\r\n              dataField=\"Cagr2\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            ></dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'foreCastYear1CellTemplate'\">\r\n            <!-- <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm\"\r\n            /> -->\r\n\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              value=\"{{ data.value | number: '1.1-1' }}\"\r\n              class=\"form-control form-control-sm\"\r\n            />\r\n\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'foreCastYear2CellTemplate'\">\r\n            <!-- <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm\"\r\n            /> -->\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              value=\"{{ data.value | number: '1.1-1' }}\"\r\n              class=\"form-control form-control-sm\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <!-- <app-study-area-preview></app-study-area-preview> -->\r\n        <app-lubricant-demand-preview\r\n          #studyPreview\r\n          [currentYear]=\"currentYear\"\r\n          [studyData]=\"studyData\"\r\n          [foreCastYear1]=\"foreCastYear1\"\r\n          [foreCastYear2]=\"foreCastYear2\"\r\n        ></app-lubricant-demand-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Market Segment</label>\r\n              <ng-select\r\n                [items]=\"marketSegments\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"marketSegment\"\r\n                placeholder=\"Select Market Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.MarketSegment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Category</label>\r\n              <ng-select\r\n                [items]=\"productCategories\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"productCategory\"\r\n                placeholder=\"Select Product Category\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductCategory\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Sub-Product</label>\r\n              <ng-select\r\n                [items]=\"subProducts\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"subProduct\"\r\n                placeholder=\"Select Sub-Product\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.SubProduct)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Viscosity Grade</label>\r\n              <ng-select\r\n                [items]=\"viscosityGrades\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"viscosityGrade\"\r\n                placeholder=\"Select Viscosity Grade\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ViscosityGrade\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Volume Year - {{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Forecast Year - {{ foreCastYear1 }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"forecastYear1\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Forecast Year - {{ foreCastYear2 }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"forecastYear2\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-pnc',\r\n  templateUrl: './pnc.component.html',\r\n  styleUrls: ['./pnc.component.css']\r\n})\r\nexport class PncComponent implements OnInit {\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        \r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<app-pnc-pts *ngIf=\"studyAreaId == 43\" [setSelectedCurrency]=\"datRelationsData\"></app-pnc-pts>","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { PNCProductTypes } from 'src/model/pncProductTypes.model';\r\nimport { PncProductTypesItem } from 'src/model/pncProductTypesItems.model';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-pnc-pts',\r\n  templateUrl: './pts.component.html',\r\n  styleUrls: ['./pts.component.css'],\r\n})\r\nexport class PncPtsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: PNCProductTypes = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    dataItems: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: PncProductTypesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  productCategoryLists: DataEntrySHC[] = [];\r\n  productTypeLists: DataEntrySHC[] = [];\r\n  currencyLists: SEDataEntry[] = [];\r\n\r\n  currentCurrency: any = {};\r\n  foreCastYear1: number = 0;\r\n  previousYear1: number = 0;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = ['PreviousYear1', 'CurrentYear', 'ForecastYear1'];\r\n\r\n  studyTypeValue = 'ProductTypeSales';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ProductCategory: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      CurrentYear: [null],\r\n      Forecast1: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getProductTypeLists();\r\n    this.getProductCategoryLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getPNCProductTypeSalesStudyData(\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as PNCProductTypes;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .dataItems as PncProductTypesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.foreCastYear1 = currentYear + 5;\r\n            this.previousYear1 = currentYear - 1;\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.previewGridData.push({\r\n                ProductType: item.ProductType,\r\n                ProductCategory: item.ProductCategory,\r\n                CurrencyName: item.CurrencyName,\r\n                Year: this.previousYear1,\r\n                Value: item.PreviousYear1,\r\n              });\r\n              this.previewGridData.push({\r\n                ProductType: item.ProductType,\r\n                ProductCategory: item.ProductCategory,\r\n                CurrencyName: item.CurrencyName,\r\n                Year: this.currentYear,\r\n                Value: item.CurrentYear,\r\n              });\r\n              this.previewGridData.push({\r\n                ProductType: item.ProductType,\r\n                ProductCategory: item.ProductCategory,\r\n                CurrencyName: item.CurrencyName,\r\n                Year: this.foreCastYear1,\r\n                Value: item.Forecast1,\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'row',\r\n        caption: 'Product Type',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ProductCategory',\r\n        area: 'row',\r\n        caption: 'Product Category',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'CurrencyName',\r\n        area: 'row',\r\n        caption: 'Currency Name',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as Field[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as PncProductTypesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.Forecast1 = +data.Forecast1;\r\n    }\r\n  }\r\n\r\n  getProductTypeLists() {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(74)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.productTypeLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getProductCategoryLists() {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(77)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.productCategoryLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getCurrencyLists() {\r\n    this.sharedService\r\n      .getSEDataEntryData('Currencies')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.currencyLists = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: PncProductTypesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      ProductType: newRowData.ProductType.Name,\r\n      ProductTypeId: newRowData.ProductType.Id,\r\n      ProductCategory: newRowData.ProductCategory.Name,\r\n      ProductCategoryId: newRowData.ProductCategory.Id,\r\n      Forecast1: +newRowData.Forecast1,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ProductCategoryId == newRow.ProductCategoryId &&\r\n        item.ProductTypeId == newRow.ProductTypeId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0) ||\r\n          (a.ProductTypeId || 0) - (b.ProductTypeId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : null,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : null,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : null,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : null,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : null,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : null,\r\n      ForecastYear1: item.ForecastYear1 > 0 ? item.ForecastYear1 : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      dataItems: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.savePNCProductTypeSalesData(studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      dataItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffPNCProductTypeSalesData(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ProductCategory:\r\n        this.getProductCategoryLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.ProductType:\r\n        this.getProductTypeLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductType\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductCategory\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"CurrencyName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"previousYear1\"\r\n            dataField=\"PreviousYear1\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"currentYear\"\r\n            dataField=\"CurrentYear\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"foreCastYear1\"\r\n            dataField=\"Forecast1\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.PNC_PT_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Type</label>\r\n              <ng-select\r\n                [items]=\"productTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductType\"\r\n                placeholder=\"Select Product Type\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Category</label>\r\n              <ng-select\r\n                [items]=\"productCategoryLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductCategory\"\r\n                placeholder=\"Select Product Category\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductCategory\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ previousYear1 }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"PreviousYear1\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"CurrentYear\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ foreCastYear1 }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"Forecast1\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-psc',\r\n  templateUrl: './psc.component.html',\r\n  styleUrls: ['./psc.component.css'],\r\n})\r\nexport class PSCComponent implements OnInit {\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<app-product-type-sales\r\n  *ngIf=\"studyAreaId == 23\"\r\n  [setDataRelationsData]=\"datRelationsData\"\r\n></app-product-type-sales>\r\n<app-brand-sales\r\n  *ngIf=\"studyAreaId == 24\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-brand-sales>\r\n<app-segment-sales\r\n  *ngIf=\"studyAreaId == 25\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-segment-sales>\r\n<app-european-country-sales\r\n  *ngIf=\"studyAreaId == 26\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-european-country-sales>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource, {\r\n  Field,\r\n} from 'devextreme/ui/pivot_grid/data_source';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { ComboBox } from 'src/model/combo.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Workbook } from 'exceljs';\r\nimport * as lodash from 'lodash';\r\nimport { saveAs } from 'file-saver';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataFieldArea } from 'src/model/enums/dataFieldArea.enum';\r\nimport { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport {\r\n  UserSettings,\r\n  UserStateAndSetttings,\r\n} from 'src/model/userStateAndSetttings.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialValueType } from 'src/model/enums/specialValueType.enum';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport { CommonHelper } from 'src/guard/commonHelper';\r\nimport { Subject } from 'rxjs';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { ComputingType } from 'src/model/enums/computingType.enum';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-brand-sales-preview',\r\n  templateUrl: './brand-sales-preview.component.html',\r\n  styleUrls: ['./brand-sales-preview.component.css'],\r\n})\r\nexport class BrandSalesPreviewComponent implements OnInit {\r\n  @Input() studyData: PscSalesItem[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() foreCastYear: number = 0;\r\n  @Input() previousYears: any[] = [];\r\n\r\n  // pivotGridDataSource: PivotGridDataSource;\r\n  // gridFields: Field[] = [];\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };\r\n  @Input() set setSelectedCurrency(data: any) {\r\n    if (data) {\r\n      this.selectedCurrency = {\r\n        Id: data.CurrencyId,\r\n        IsActive: true,\r\n        Name: data.CurrencyName,\r\n        CurrencyCode: data.CurrencyCode,\r\n        CurrencyName: data.CurrencyName,\r\n      };\r\n\r\n      this.currencyDropdownSelected = this.selectedCurrency;\r\n    }\r\n  }\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  volumeYears: any[] = [];\r\n  @Input() set setVolumeYears(data: any[]) {\r\n    if (data) {\r\n      this.volumeYears = data;\r\n    }\r\n  }\r\n\r\n  viewId: number = 0;\r\n  @Input() set setViewId(data: number) {\r\n    if (data) {\r\n      this.viewId = data;\r\n      this.getPivotSettings();\r\n      this.getPivotState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: SEDataEntry | undefined;\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  stateData: UserStateAndSetttings | undefined;\r\n\r\n  computingType = ComputingType;\r\n\r\n  eventsCustomAction: Subject<string> = new Subject<string>();\r\n  pivotGridNoDataMessage = '';\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  firstAvailableId = 0;\r\n\r\n  currencyDropdownSelected: any;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n  canCallSaveState = false;\r\n  adminSetNewState = false;\r\n\r\n  pivotSummaryDisplayModesSubtotals: ComboBox[] = [\r\n    { id: undefined, name: 'Same as the Data Fields' },\r\n    { id: 'percentOfColumnTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowTotal', name: 'Always Rows' },\r\n  ];\r\n\r\n  pivotSummaryDisplayModesGrandTotals: ComboBox[] = [\r\n    { id: 'percentOfColumnGrandTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowGrandTotal', name: 'Always Rows' },\r\n    { id: 'percentOfGrandTotal', name: 'Table (Absolute) Grand Total' },\r\n  ];\r\n\r\n  shownYears: any = undefined;\r\n  invisibleFields: PivotGridField[] = [];\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateChange: Subject<UserStateAndSetttings> =\r\n    new Subject<UserStateAndSetttings>();\r\n\r\n  shownYearsPrev: any = undefined;\r\n  isAdmin = false;\r\n  pivotStateId: number = 0;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n    // this.stateData = new UserStateAndSetttings();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n\r\n  getPreviewData(studyData: PscSalesItem[]) {\r\n    const previewData: {\r\n      Channel: string;\r\n      Company: string;\r\n      Brand: string;\r\n      Year: number;\r\n      Value: number;\r\n    }[] = [];\r\n\r\n    studyData.map((item: any) => {\r\n      this.previousYears.map((year: any) => {\r\n        previewData.push({\r\n          Channel: item.Channel,\r\n          Company: item.Company,\r\n          Brand: item.Brand,\r\n          Year: year.year,\r\n          Value: item[year.field],\r\n        });\r\n      });\r\n\r\n      previewData.push({\r\n        Channel: item.Channel,\r\n        Company: item.Company,\r\n        Brand: item.Brand,\r\n        Year: this.currentYear,\r\n        Value: item.CurrentYear,\r\n      });\r\n\r\n      // previewData.push({\r\n      //   Channel: item.Channel,\r\n      //   Company: item.Company,\r\n      //   Brand: item.Brand,\r\n      //   Year: this.foreCastYear,\r\n      //   Value: item.Forecast1,\r\n      // });\r\n    });\r\n    this.previewData = previewData;\r\n    // console.log(previewData);\r\n    // this.pivotGridDataSource = new PivotGridDataSource({\r\n    //   store: previewData,\r\n    //   fields: this.getGridFields(),\r\n    // });\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'Channel',\r\n        area: 'row',\r\n        caption: 'Channel',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'Company',\r\n        area: 'row',\r\n        caption: 'Company',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'Brand',\r\n        area: 'row',\r\n        caption: 'Brand',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 3,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.sharedService.getPivotSettings(this.viewId).subscribe((res) => {\r\n      this.pivotGridOptions = res.Data;\r\n      if (this.pivotGridOptions) {\r\n        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPivotState() {\r\n    // console.log(this.stateData);\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService.getPivotState(this.viewId).subscribe((res) => {\r\n        // in case state is not exists yet\r\n        try {\r\n          const stateRes =\r\n            typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n          stateData = Common.realMerge(\r\n            new UserStateAndSetttings(),\r\n            JSON.parse(stateRes.StateData)\r\n          );\r\n          this.pivotStateId = stateRes.PivotStateId;\r\n        } catch {\r\n          stateData = new UserStateAndSetttings();\r\n          // stateData.state.fields = this.getGridFields();\r\n        }\r\n\r\n        this.directDatasourceRenderPivot(stateData);\r\n      });\r\n    } else {\r\n      this.directDatasourceRenderPivot(this.stateData);\r\n    }\r\n  }\r\n\r\n  async directDatasourceRenderPivot(stateData: UserStateAndSetttings) {\r\n    if (this.pivotGridOptions.settings.isCube) {\r\n      // let token = await this.getAzureAnalysisToken();\r\n      // let cubesStore = CubeStoreHelper.setCubeStore(\r\n      //   this.pivotGridOptions.settings.cubeSettings.catalog,\r\n      //   this.pivotGridOptions.settings.cubeSettings.cube,\r\n      //   token,\r\n      //   this.devEndpoint\r\n      // );\r\n      // this.pivotGridOptions.pivotGridSource.store = cubesStore;\r\n      // this.pivotGridDataSource = new PivotGridDataSource(\r\n      //   this.pivotGridOptions.pivotGridSource as any\r\n      // );\r\n      // setTimeout(() => {\r\n      //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);\r\n      // }, 5000);\r\n      // this.saveStateEnabled = true;\r\n      // if (stateData.settings) {\r\n      //   if (!stateData.settings.currency) {\r\n      //     stateData.settings.currency =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n      //   }\r\n      //   if (!stateData.settings.currencyConversionType) {\r\n      //     stateData.settings.currencyConversionType =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n      //   }\r\n      //   if (!stateData.settings.selectedYear) {\r\n      //     stateData.settings.selectedYear.PeriodKey = 2021;\r\n      //   }\r\n      // }\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.stateData = stateData;\r\n      // this.fillPivotCube();\r\n      // setTimeout(() => {\r\n      //   this.canCallSaveState = true;\r\n      // }, 300);\r\n    } else {\r\n      if (stateData.settings) {\r\n        if (!stateData.settings.currency) {\r\n          stateData.settings.currency =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n        }\r\n        if (!stateData.settings.currencyConversionType) {\r\n          stateData.settings.currencyConversionType =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n        }\r\n        if (!stateData.settings.selectedYear?.PeriodKey) {\r\n          // stateData.settings.selectedYear = await this.getLatestAccessibleYear(\r\n          //   this.sharedService.getUserData().userId,\r\n          //   this.requestedView.databaseId,\r\n          //   this.requestedView.viewId\r\n          // );\r\n          stateData.settings.selectedYear = this.currentYear;\r\n        }\r\n        // if (!stateData.settings.unitOfVolume) {\r\n        //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(\r\n        //     this.requestedView.databaseId\r\n        //   );\r\n        // }\r\n        if (!stateData.settings.unitOfMass) {\r\n          // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(\r\n          //   this.requestedView.databaseId\r\n          // );\r\n          stateData.settings.unitOfMass = { Id: 105, Name: 'Thousand Tonnes' };\r\n        }\r\n      }\r\n\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      this.stateData = stateData;\r\n      if (this.previewData && this.previewData.length) {\r\n        //get all invisible fields\r\n        this.invisibleFields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => f.visible === false\r\n          );\r\n        //filter invisible fields\r\n        this.pivotGridOptions.pivotGridSource.fields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => !f.visible || !f.isCalculated\r\n          );\r\n        //get count of visible fields for calculated fields ids\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions.pivotGridSource.fields.length;\r\n        // remove all invisible data from the datasource\r\n        if (this.invisibleFields && this.invisibleFields.length > 0) {\r\n          for (const invisibleField of this.invisibleFields) {\r\n            this.previewData.forEach((obj) => {\r\n              delete obj[invisibleField.dataField];\r\n            });\r\n          }\r\n        }\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      } else {\r\n        this.readPivotDataFromApi();\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    this.canCallSaveState = true;\r\n\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (\r\n      this.viewId &&\r\n      this.canCallSaveState &&\r\n      this.pivotGridOptions &&\r\n      this.stateData\r\n    ) {\r\n      this.stateData.state = data;\r\n      this.stateChange.next(this.stateData);\r\n      // find all shown years and reload pivot grid on change\r\n      const yearField = this.stateData.state.fields.filter(\r\n        (f: any) => f.dataField === this.yearDataFieldName\r\n      );\r\n      const hasCagrOrChange =\r\n        this.stateData.settings.cagrState.isSet ||\r\n        this.stateData.settings.changePercentState.isSet;\r\n      if (yearField && hasCagrOrChange) {\r\n        const pivotGridInstance: any = this.pivotGrid?.instance;\r\n        const pivotFridDataSource = pivotGridInstance.getDataSource();\r\n        const areaIndex: number = yearField[0].areaIndex;\r\n        const uniqArrByText: any = lodash.uniqBy(\r\n          pivotGridInstance._dataController._columnsInfo[areaIndex],\r\n          'text'\r\n        );\r\n        this.shownYears = uniqArrByText.map((t: any) => parseInt(t.text));\r\n        // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists\r\n        if (yearField[0].sortOrder === 'desc') {\r\n          pivotFridDataSource.field(this.yearDataFieldName, {\r\n            sortOrder: 'asc',\r\n          });\r\n          pivotFridDataSource.load();\r\n        }\r\n        if (!lodash.isEqual(this.shownYears, this.shownYearsPrev)) {\r\n          this.shownYearsPrev = this.shownYears;\r\n          pivotFridDataSource.load();\r\n        }\r\n      }\r\n\r\n      // in case user is NOT admin and has disable automatic saving state or remember latest state\r\n      else if (!isChangeAutoSaveStatus) {\r\n        if (this.stateData.settings.rememberLatestState == undefined) {\r\n          this.stateData.settings.rememberLatestState =\r\n            this.pivotGridOptions.canSaveUserState;\r\n        }\r\n        if (this.stateData.settings.rememberLatestState == false) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.viewId,\r\n            0,\r\n            this.isAdmin,\r\n            JSON.stringify(this.stateData)\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (\r\n                data &&\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions &&\r\n                this.isAdmin\r\n              ) {\r\n                this.alertService.info(\r\n                  'The system will remember the last state!'\r\n                );\r\n                // after save state, save also settings\r\n                this.saveSettings(this.viewId, this.pivotGridOptions);\r\n                // set can save default state to false\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      return this.stateData.state;\r\n    }\r\n  }\r\n\r\n  deleteCustomState() {\r\n    this.adminSetNewState = false;\r\n    if (this.viewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.viewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = new UserStateAndSetttings();\r\n\r\n            this.directDatasourceRenderPivot(stateData);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveSettings(\r\n    currentlySelectedViewId: number,\r\n    optionsDataSource: PivotGridOptions\r\n  ): void {\r\n    let saveResult = false;\r\n    const optionsDataSourceTemp = { ...optionsDataSource };\r\n    optionsDataSourceTemp.pivotGridSource.fields =\r\n      optionsDataSourceTemp.pivotGridSource.fields.filter(\r\n        (f) => !f.isCalculated\r\n      );\r\n    // set store to empty, system will read fresh data from backend next time\r\n    optionsDataSourceTemp.pivotGridSource.store = [];\r\n  }\r\n\r\n  readPivotDataFromApi() {\r\n    this.isLoadingService.add();\r\n    this.yearDataFieldName = 'Year';\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'BrandSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId,\r\n        typeof this.currencyDropdownSelected !== 'undefined'\r\n          ? this.currencyDropdownSelected.Id\r\n          : 0,\r\n        typeof this.unitOfMassDropdownSelected !== 'undefined'\r\n          ? this.unitOfMassDropdownSelected.Id\r\n          : 0,\r\n        typeof this.currencyConversionTypeSelected !== 'undefined'\r\n          ? this.currencyConversionTypeSelected\r\n          : 0\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyDataObj = res.Data;\r\n\r\n            const studyData = studyDataObj['BrandSales'];\r\n\r\n            const previewData: any[] = [];\r\n            let index = 0;\r\n            studyData.map((item: any, i: number) => {\r\n              this.volumeYears.map((d: any) => {\r\n                this.gridFields.map((field: any) => {\r\n                  if (typeof previewData[index] === 'undefined') {\r\n                    previewData[index] = {};\r\n                  }\r\n                  previewData[index][field.dataField] = item[field.dataField];\r\n                  if (field.dataField === 'Year') {\r\n                    previewData[index][field.dataField] = d.year;\r\n                  }\r\n                  if (field.dataField === 'Value') {\r\n                    previewData[index][field.dataField] = item[d.field];\r\n                  }\r\n                });\r\n                index++;\r\n              });\r\n            });\r\n\r\n            this.previewData = previewData;\r\n\r\n            // this.pivotGridDataSource = new PivotGridDataSource({\r\n            //   store: this.previewData,\r\n            //   fields: this.gridFields,\r\n            // });\r\n            if (typeof this.pivotGridOptions !== 'undefined') {\r\n              this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n              this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n              this.pivotGridDataSource = new PivotGridDataSource(\r\n                this.pivotGridOptions.pivotGridSource as any\r\n              );\r\n            }\r\n            this.fillPivot(this.pivotGridOptions, this.previewData);\r\n            // when pivot data is loaded allow with small delay save state to the database\r\n            setTimeout(() => {\r\n              this.canCallSaveState = true;\r\n            }, 300);\r\n            // console.log(this.previewData);\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataFieldName(fieldName: string) {\r\n    if (fieldName == 'ProductTypeSales') {\r\n      return 'ProductTypeSalesSHC';\r\n    }\r\n\r\n    return fieldName;\r\n  }\r\n\r\n  onOptionChanged(e: any) {}\r\n\r\n  onInitialized(e: any) {}\r\n\r\n  cellPrepared(e: any) {\r\n    // customize change % columns captions\r\n    // console.log(this.stateData?.settings.changePercentState.computingType);\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {\r\n      if (\r\n        e.cell.text &&\r\n        e.cell.text.startsWith(CalculatedFieldType.changePercent)\r\n      ) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex].toString() +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex].toString();\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n      //customize cagr columns captions\r\n      if (e.cell.text && e.cell.text.startsWith(CalculatedFieldType.cagr)) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex] +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex];\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.area === 'data') {\r\n      if (e.cell.value) {\r\n        e.cell.value.hasCd &&\r\n          e.cellElement.classList.add('pivot-grid-cell-has-cd');\r\n      }\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource &&\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n    ) {\r\n      const calculatedFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) =>\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.changePercent ||\r\n            f.calculatedFieldType === CalculatedFieldType.cagr\r\n        );\r\n      for (const calculatedField of calculatedFields) {\r\n        this.addCloseButtonToCalculatedField(\r\n          calculatedField.id,\r\n          calculatedField.calculatedFieldType\r\n        );\r\n      }\r\n    }\r\n\r\n    // change style for no data message\r\n    const noDataElement = e.component\r\n      .element()\r\n      .querySelector('.dx-pivotgrid-nodata');\r\n    if (noDataElement) {\r\n      setTimeout(() => {\r\n        if (this.pivotGridNoDataMessage) {\r\n          noDataElement.classList.add('noDataMessage');\r\n        } else {\r\n          noDataElement.classList.remove('noDataMessage');\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    if (this.pivotGrid && this.stateData && this.stateData.state) {\r\n      // Allow next rows if you want to enable disabling pivot during waiting for component response\r\n      //this.pivot.disabled = true;\r\n      // not allow to user change state too fast, pivot component needs some time to save emit state\r\n      //setTimeout(() => { this.pivot.disabled = false; }, 1000)\r\n    }\r\n  }\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    // this.pivot.disabled = true;\r\n    this.customizeContextMenu(e);\r\n\r\n    //if (e.area == \"row\" || e.area == \"column\") {\r\n    //    let id = e.columnIndex + \"\" + e.rowIndex;\r\n    //    let tooltip = $(\"<span></span>\").append($(\"<span id='\" + id + \"'></span>\").html(\"\")).appendTo(e.cellElement);\r\n    //    let field = $(\"#\" + id).closest('td');\r\n    //    field.attr('title', e.cell.text);\r\n    //}\r\n  }\r\n\r\n  customizeContextMenu(e: any): void {\r\n    this.updateDefaultContextMenuTextsAndIcons(e);\r\n    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Delete Calculated Field',\r\n        icon: 'fa fa-trash-alt',\r\n        onItemClick: () => {\r\n          const fieldToDelete = e.field as PivotGridField;\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (fieldToDelete.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n          this.deleteCalculatedField(e.field.id);\r\n        },\r\n      });\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Edit Calculated Field',\r\n        icon: 'fa fa-pencil-alt',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (e.field.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.isPercentOfTotalPopup = true;\r\n                this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n                  undefined || '';\r\n                this.pivotSummaryDisplayModesSubtotals[0].id =\r\n                  this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                    ? 'percentOfColumnTotal'\r\n                    : 'percentOfRowTotal';\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.isPercentOfChangePopup = true;\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.isCagrPopup = true;\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let openMenuItems = [];\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencySelection) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-money',\r\n        text: 'Change Currency',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencySelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencyConversion) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-exchange-alt',\r\n        text: 'Constant',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencyConversionSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfVolume) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-fill-drip',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('massUnitSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfMass) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-balance-scale',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('volumeUnitSelector');\r\n        },\r\n      });\r\n    }\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Reset to Default',\r\n      icon: 'fas fa-sync-alt',\r\n      onItemClick: () => {\r\n        this.deleteCustomState();\r\n      },\r\n    });\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Adjust Parameters',\r\n      icon: 'fa fa-sliders-h',\r\n      items: openMenuItems,\r\n    });\r\n\r\n    if (\r\n      e.field &&\r\n      e.field.area === 'data' &&\r\n      this.enabledInContextMenu(e.field)\r\n    ) {\r\n      let calculatedFieldsItems: any[] = [];\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfTotal) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.percentOfTotal,\r\n          onItemClick: () => {\r\n            this.isPercentOfTotalPopup = true;\r\n            this.pivotSummaryDisplayModesSubtotals[0].id =\r\n              this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n                ? 'percentOfColumnTotal'\r\n                : 'percentOfRowTotal';\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.percentOfTotalState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.percentOfTotalState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfChange) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.changePercent,\r\n          onItemClick: () => {\r\n            this.isPercentOfChangePopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.changePercentState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.changePercentState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isCagr) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.cagr,\r\n          onItemClick: () => {\r\n            this.isCagrPopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.cagrState.dataField = e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.cagrState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Add Calculated Field',\r\n        icon: 'fa fa-calculator',\r\n        items: calculatedFieldsItems,\r\n      });\r\n    }\r\n    // show only case if exist two or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter((f) =>\r\n        (<any>Object).values(PivotGridDataFieldType).includes(f.dataFieldType)\r\n      ).length >= 2\r\n    ) {\r\n      const dataFieldsHeaders =\r\n        this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n          ? 'Rows'\r\n          : 'Columns';\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Show Data Field Headers in ' + dataFieldsHeaders,\r\n        icon: 'fa fa-table',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            this.stateData.settings.dataFieldArea =\r\n              this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                ? DataFieldArea.row\r\n                : DataFieldArea.column;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteCalculatedField(fieldId: number) {\r\n    this.pivotGridOptions?.pivotGridSource.fields.splice(\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n        .map((m) => m.id)\r\n        .indexOf(fieldId),\r\n      1\r\n    );\r\n    this.firstAvailableId--;\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.readPivotDataFromApi();\r\n    } else {\r\n      if (typeof this.pivotGridOptions !== 'undefined') {\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDefaultContextMenuTextsAndIcons(e: any) {\r\n    let rowName = undefined;\r\n    let rowCaption;\r\n    if (e.cell?.path) {\r\n      if (e.cell && e.area === 'row') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.rowFields[path].dataField;\r\n        rowCaption = e.rowFields[path].caption;\r\n      } else if (e.cell && e.area === 'column') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.columnFields[path].dataField;\r\n        rowCaption = e.columnFields[path].caption;\r\n      }\r\n      const expandAll = e.items.find((f: any) => f.text.includes('Expand All'));\r\n      if (expandAll) {\r\n        expandAll.icon = 'fas fa-plus';\r\n        expandAll.text = 'Expand' + ' ' + rowCaption;\r\n      }\r\n      const collapseAll = e.items.find((f: any) =>\r\n        f.text.includes('Collapse All')\r\n      );\r\n      if (collapseAll) {\r\n        collapseAll.icon = 'fas fa-minus';\r\n        collapseAll.text = 'Collapse' + ' ' + rowCaption;\r\n      }\r\n    }\r\n    const fieldChooser = e.items.find((f: any) =>\r\n      f.text.includes('Show Field Chooser')\r\n    );\r\n    if (fieldChooser) {\r\n      fieldChooser.text = 'FieldChooser Text';\r\n    }\r\n    const exportToExcel = e.items.find((f: any) =>\r\n      f.text.includes('Export to')\r\n    );\r\n    if (exportToExcel) {\r\n      exportToExcel.text = 'Export to excel';\r\n    }\r\n    const sorts = e.items.filter((f: any) => f.text.includes('Sort'));\r\n    if (sorts) {\r\n      for (let sort of sorts) {\r\n        sort.icon = 'fas fa-sort';\r\n      }\r\n    }\r\n  }\r\n\r\n  enabledInContextMenu(field: any): boolean {\r\n    if (field.dataFieldType === PivotGridDataFieldType.AvgPrice) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addCloseButtonToCalculatedField(fieldId: number, datafieldType: string) {\r\n    const calculatedFieldObj = $(\r\n      \".dx-area-field-content:contains('\" + datafieldType + \"')\"\r\n    ).append(\r\n      \"<i id='\" +\r\n        Common.removeAllSpaces(datafieldType) +\r\n        \"' class='closeButton fas fa-times-circle'></i>\"\r\n    );\r\n\r\n    calculatedFieldObj\r\n      .parent()\r\n      .parent()\r\n      .css('padding-right', '0')\r\n      .css('margin-right', '0 !important');\r\n\r\n    calculatedFieldObj\r\n      .children()\r\n      .off()\r\n      .on('click', () => {\r\n        if (typeof this.stateData !== 'undefined') {\r\n          switch (datafieldType) {\r\n            case CalculatedFieldType.percentOfTotal:\r\n            case CalculatedFieldType.percentOfGrandTotal:\r\n              this.stateData.settings.percentOfTotalState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.changePercent:\r\n              this.stateData.settings.changePercentState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.cagr:\r\n              this.stateData.settings.cagrState.isSet = false;\r\n              break;\r\n          }\r\n        }\r\n        this.deleteCalculatedField(fieldId);\r\n      });\r\n  }\r\n\r\n  currencySelectionChanged(currency: SEDataEntry) {\r\n    this.currencyDropdownSelected = currency;\r\n    // this.stateData.settings.currency = currency;\r\n    this.readPivotDataFromApi();\r\n    // // on currency change update % of total caption if exists\r\n    // const percentOfTotalField =\r\n    //   this.pivotGridOptions.pivotGridSource.fields.find(\r\n    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal\r\n    //   );\r\n    // if (percentOfTotalField) {\r\n    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();\r\n    // }\r\n  }\r\n\r\n  currencyConversionSelectionChanged(\r\n    currencyConversionType: CurrencyConversionTypeEnum\r\n  ) {\r\n    this.currencyConversionTypeSelected = currencyConversionType;\r\n    // this.stateData.settings.currencyConversionType = currencyConversionType;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  massUnitSelectionChanged(unitOfMass: SEDataEntry) {\r\n    this.unitOfMassDropdownSelected = unitOfMass;\r\n    // this.stateData.settings.unitOfMass = unitOfMass;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  getUserSettings() {\r\n    const userSettings = {\r\n      currency: {\r\n        Id: this.selectedCurrency.Id,\r\n        Code: this.selectedCurrency.CurrencyCode,\r\n        Name: this.selectedCurrency.CurrencyName,\r\n      },\r\n      currencyConversionType: 1,\r\n      unitOfMass: { Id: 103, Name: 'Thousand Lbs' },\r\n      unitOfMeasure: { Id: 101, Name: 'Metric Tonnes' },\r\n      unitOfVolume: { Id: 7, Name: 'Quart (US)' },\r\n      selectedYear: {\r\n        PeriodKey: this.currentYear,\r\n        Name: this.currentYear.toString(),\r\n      },\r\n      percentOfTotalState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        basedOn: 'Subtotals',\r\n        summaryDisplayMode: 'percentOfColumnTotal',\r\n      },\r\n      changePercentState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'Previous (Shown) Year',\r\n      },\r\n      cagrState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'First (Shown) Year',\r\n      },\r\n      dataFieldArea: 'column',\r\n      userChartSetting: {\r\n        dataFieldsDisplayMode: 'singleAxis',\r\n        chartType: 'Column',\r\n      },\r\n      isReducedDataSource: false,\r\n      rememberLatestState: true,\r\n    };\r\n\r\n    return userSettings;\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.getUserSettings();\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    const menuSettings = this.pivotGridOptions?.settings?.menuSettings;\r\n    const pivotFields = this.pivotGridDataSource.fields();\r\n    const userSettings = this.getUserSettings();\r\n    let finalData;\r\n    if (this.previewData[0].hasOwnProperty('Year')) {\r\n      finalData = this.previewData.sort((a, b) => a.Year - b.Year);\r\n    } else {\r\n      finalData = this.previewData;\r\n    }\r\n    this.studyService\r\n      .exportToExcel(\r\n        finalData,\r\n        pivotFields,\r\n        userSettings,\r\n        title,\r\n        menuSettings,\r\n        0\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          let fileName = 'PivotTest';\r\n          if (title.length > 3) {\r\n            fileName = title.split(' ').join('');\r\n            fileName = fileName.split('-').join('_');\r\n          }\r\n          var file = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n          var fileURL = URL.createObjectURL(file);\r\n          let a = document.createElement('a');\r\n          document.body.appendChild(a);\r\n          a.style.display = 'none';\r\n          a.href = fileURL;\r\n          a.target = '_blank';\r\n          a.download = `${fileName}.xlsx`;\r\n          a.click();\r\n          a.remove();\r\n          this.studyService.changeExcelLoading(false);\r\n        },\r\n        (error) => {\r\n          this.studyService.changeExcelLoading(false);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  exportToCvs() {\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    this.studyService.exportToCsv(this.previewData, fileName);\r\n  }\r\n\r\n  exportToShanptshot() {\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet('Main sheet');\r\n    exportPivotGrid({\r\n      component: this.pivotGrid?.instance,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        const excelCell = options;\r\n        excelCell.excelCell.font = { name: 'Calibri', size: 11 };\r\n        excelCell.excelCell.alignment = { horizontal: 'left', vertical: 'top' };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer: BlobPart) {\r\n        saveAs(\r\n          new Blob([buffer], { type: 'application/octet-stream' }),\r\n          fileName + '.xlsx'\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  fillPivot(pivotGridOptions: PivotGridOptions, pivotData: any) {\r\n    this.saveStateEnabled = false;\r\n    const selectedYear = this.stateData\r\n      ? this.stateData.settings.selectedYear\r\n      : this.currentYear;\r\n\r\n    if (pivotGridOptions && this.stateData?.settings) {\r\n      // If is visible like default, add % of total to pivot\r\n      if (this.stateData.settings.percentOfTotalState.isSet) {\r\n        this.addPercentOfTotalsToPivot(true);\r\n      }\r\n      // If is visible like default, add change % to pivot\r\n      if (this.stateData.settings.changePercentState.isSet) {\r\n        this.addPrecentOfChangeToPivot(true);\r\n      }\r\n      // If is visible like default, add CAGR to pivot\r\n      if (this.stateData.settings.cagrState.isSet) {\r\n        this.addCAGRToPivot(true);\r\n      }\r\n\r\n      const pivotGridSource = new PivotGridSource();\r\n\r\n      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;\r\n      pivotGridSource.store = pivotData;\r\n      // make copy of datasource without reference to old object\r\n      let sourceCopy = lodash.cloneDeep(pivotGridSource);\r\n      // if administrator set default sorting to true do not use any special sorting\r\n      if (!pivotGridOptions.settings.useDefaultSorting) {\r\n        // if some special sorting is applied\r\n        if (\r\n          pivotGridOptions.settings.specialSorting &&\r\n          pivotGridOptions.settings.specialSorting.length\r\n        ) {\r\n          for (let specialSorting of pivotGridOptions.settings.specialSorting) {\r\n            if (specialSorting.fieldName) {\r\n              let orderAray: any[] = [];\r\n              if (pivotData) {\r\n                let rowData = 0;\r\n                for (let row of pivotData) {\r\n                  // if (row.Year == selectedYear.PeriodKey) {\r\n                  // in case value datafield is not exists, must exists unit\r\n                  rowData = row.Value === undefined ? row.Unit : row.Value;\r\n                  if (\r\n                    orderAray.some(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    )\r\n                  ) {\r\n                    orderAray.find(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    ).valueSum += rowData;\r\n                  } else {\r\n                    orderAray.push({\r\n                      field: row[specialSorting.fieldName],\r\n                      valueSum: rowData,\r\n                    });\r\n                  }\r\n                  // }\r\n                }\r\n                orderAray = orderAray\r\n                  .sort((a, b) => b.valueSum - a.valueSum)\r\n                  .map((m) => m.field);\r\n                orderAray.forEach((item: string, index: number) => {\r\n                  if (item.startsWith(specialSorting.beginningWith)) {\r\n                    orderAray.push(orderAray.splice(index, 1)[0]);\r\n                  }\r\n                });\r\n                const sortingField = sourceCopy.fields.find(\r\n                  (f) => f.dataField === specialSorting.fieldName\r\n                );\r\n                if (sortingField) {\r\n                  sortingField.sortOrder = 'asc';\r\n                  sortingField.sortingMethod = (b: any, a: any) => {\r\n                    // if (!this.isHeaderFilterLoading) {\r\n                    //   for (const item of orderAray) {\r\n                    //     if (a.value === item) {\r\n                    //       return 1;\r\n                    //     }\r\n                    //     if (b.value === item) {\r\n                    //       return -1;\r\n                    //     }\r\n                    //   }\r\n                    // }\r\n                    return b.value.localeCompare(a.value);\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this.applySortingRolesByYear();\r\n        }\r\n      }\r\n      if (this.pivotGridDataSource) {\r\n        this.pivotGridDataSource.dispose();\r\n      }\r\n\r\n      // check if source contains dataType property and set visibility to false\r\n      if (\r\n        pivotGridSource.store &&\r\n        pivotGridSource.store.length &&\r\n        pivotGridSource.store[0].DataType\r\n      ) {\r\n        let dataType = sourceCopy.fields.filter(\r\n          (d) => d.dataField === 'DataType'\r\n        );\r\n        dataType[0].visible = false;\r\n      }\r\n\r\n      // check all datafields if contains an exception in calculating\r\n      const allDatafields = sourceCopy.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      );\r\n\r\n      for (let field of allDatafields) {\r\n        let newField = this.returnSpecialSumamryField(field);\r\n        if (newField) {\r\n          sourceCopy.fields.push(newField);\r\n          field.visible = false;\r\n        }\r\n      }\r\n\r\n      // remove unused properties\r\n      for (let field of sourceCopy.fields) {\r\n        // remove group properties when group is empty\r\n        if (field.groupName == '') {\r\n          // delete field.groupName;\r\n          // delete field.groupIndex;\r\n        }\r\n        // in case fileld is grouped field parse index to int\r\n        else if (field.groupName && field.groupName.length > 0) {\r\n          let groupIndex: number = field.groupIndex\r\n            ? parseInt(field.groupIndex.toString())\r\n            : 0;\r\n          field.groupIndex = groupIndex;\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof this.pivotGridOptions !== 'undefined' &&\r\n        this.pivotGridOptions.settings.groupedFields\r\n      ) {\r\n        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {\r\n          let field = {\r\n            groupName: groupedField.groupName,\r\n            area: groupedField.area,\r\n          };\r\n          sourceCopy.fields.push(field as PivotGridField);\r\n        }\r\n      }\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(sourceCopy as any);\r\n\r\n      // this solves alphabetical filtering in filters\r\n      setTimeout(() => {\r\n        const source = this.pivotGrid?.instance.getDataSource();\r\n        const getFieldValues = (source as any).getFieldValues;\r\n        this.isHeaderFilterLoading = false;\r\n        let that = this;\r\n        (source as any).getFieldValues = function () {\r\n          that.isHeaderFilterLoading = true;\r\n          return getFieldValues.apply(this, arguments).always(function () {\r\n            that.isHeaderFilterLoading = false;\r\n          });\r\n        };\r\n      }, 1);\r\n\r\n      CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);\r\n\r\n      if (\r\n        pivotGridOptions.settings &&\r\n        (pivotGridOptions.settings.menuSettings.isChart ||\r\n          pivotGridOptions.settings.charts.isVisible)\r\n      ) {\r\n        // this.initChart();\r\n      }\r\n    }\r\n    //cutomize texts in pivot\r\n    // this.updateDefaultPivotTexts();\r\n    // apply special filtering\r\n    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {\r\n    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);\r\n    //}\r\n\r\n    setTimeout(() => {\r\n      this.saveStateEnabled = true;\r\n    }, 1);\r\n  }\r\n\r\n  returnSpecialSumamryField(fieldOriginal: PivotGridField) {\r\n    if (fieldOriginal.summaryType === 'range') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption || '';\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.dataField = fieldOriginal.dataField || '';\r\n      fieldNew.calculateCustomSummary = (e: any) =>\r\n        this.calculateSummaryValueRange(e, fieldOriginal);\r\n      fieldNew.customizeText = (e: any) => this.customizeRangeText(e);\r\n      fieldNew.isCalculated = true;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.range;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else if (fieldOriginal.summaryType === 'sumCdOd') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption;\r\n      fieldNew.calculateCustomSummary = (options: any) =>\r\n        this.calculateSummaryValueCdOd(options, fieldOriginal);\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.isCalculated = false;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.none;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueRange(e: any, field: PivotGridField) {\r\n    const valueNearZero = Number.EPSILON;\r\n    switch (e.summaryProcess) {\r\n      case 'start':\r\n        e.totalValue = 0;\r\n        e.values = [0, 0];\r\n        break;\r\n      case 'calculate':\r\n        if (e.value != -1.7976931348623157e308) {\r\n          if (!e.values[0] || !e.values[1]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value < e.values[0]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value > e.values[1]) {\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n        }\r\n        break;\r\n      case 'finalize':\r\n        let min = e.values[0]\r\n          ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        let max = e.values[1]\r\n          ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        // if (\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find(\r\n        //     (v) => v === Number(min)\r\n        //   ) ||\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))\r\n        // ) {\r\n        //   ErrorHelper.informAdministrator(\r\n        //     this.appCommonDataService,\r\n        //     'Unhandled range value - (' +\r\n        //       min +\r\n        //       ')(' +\r\n        //       max +\r\n        //       ') ' +\r\n        //       Common.objToString(this.requestedView) +\r\n        //       'Environment: ' +\r\n        //       Common.objToString(\r\n        //         this.appEnvironmentData.getEnvironmentSettings()\r\n        //       ) +\r\n        //       ' User: ' +\r\n        //       Common.objToString(this.sharedService.getUserData())\r\n        //   );\r\n        // }\r\n        if (min === max) {\r\n          e.totalValue = min;\r\n        } else if (!min) {\r\n          e.totalValue = max;\r\n        } else {\r\n          e.totalValue = min + ' - ' + max;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  customizeRangeText(e: any) {\r\n    if (e.value === undefined) {\r\n      return SpecialValueType?.EmDash;\r\n    } else {\r\n      return e.value;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueCdOd(options: any, field: PivotGridField) {\r\n    switch (options.summaryProcess) {\r\n      case 'start':\r\n        options.totalValue = {\r\n          value: 0,\r\n          hasCd: false,\r\n          valueOf() {\r\n            return this.value;\r\n          },\r\n          toString() {\r\n            return this.value.toString();\r\n          },\r\n          indexOf() {\r\n            const stringValue = this.toString();\r\n            return stringValue.indexOf.apply(this, arguments);\r\n          },\r\n        };\r\n        break;\r\n      case 'calculate':\r\n        options.totalValue.value += options.value[field.dataField] || 0;\r\n        options.totalValue.hasCd =\r\n          options.totalValue.hasCd || options.value.DataType === 'cd';\r\n        break;\r\n      case 'finalize':\r\n        let totalValue = options.totalValue;\r\n        totalValue.value = (totalValue.value as number)\r\n          .toFixed(field.format?.precision)\r\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        options.totalValue = totalValue;\r\n        break;\r\n    }\r\n  }\r\n\r\n  applySortingRolesByYear() {\r\n    this.yearDataFieldName = 'Year';\r\n    setTimeout(() => {\r\n      const pivotGridDataSource: any = this.pivotGrid?.instance.getDataSource();\r\n      const columnFields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'column'\r\n      );\r\n      const datafields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'data'\r\n      );\r\n      const yearFieldOnFirstPositon = columnFields.filter(\r\n        (f: any) => f.areaIndex === 0 && f.dataField === this.yearDataFieldName\r\n      );\r\n\r\n      // apply this role only in case, year field is on first column position\r\n      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {\r\n        const rowFields = pivotGridDataSource._fields.filter(\r\n          (f: any) => f.area === 'row'\r\n        );\r\n        const selectedYear = this.currentYear;\r\n        // const selectedYear = this.stateData\r\n        //   ? this.stateData.settings.selectedYear.PeriodKey\r\n        //   : 2021;\r\n        if (selectedYear) {\r\n          for (const field of rowFields) {\r\n            pivotGridDataSource.field(field.dataField, {\r\n              sortBySummaryField: datafields\r\n                ? datafields.filter((f: any) => f.areaIndex === 0)[0].dataField\r\n                : undefined,\r\n              sortBySummaryPath: [selectedYear],\r\n              sortOrder: 'desc',\r\n            });\r\n          }\r\n          pivotGridDataSource.load();\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setCalculatedFieldFromTopMenu(value: any) {\r\n    const type = value.itemName;\r\n    const dataField = value.dataField;\r\n    switch (type) {\r\n      case CalculatedFieldType.percentOfTotal:\r\n        this.isPercentOfTotalPopup = true;\r\n        this.pivotSummaryDisplayModesSubtotals[0].id =\r\n          this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n            ? 'percentOfColumnTotal'\r\n            : 'percentOfRowTotal';\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.percentOfTotalState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.changePercent:\r\n        this.isPercentOfChangePopup = true;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.changePercentState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.cagr:\r\n        this.isCagrPopup = true;\r\n        // this.stateData?.settings.cagrState.dataField = dataField;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.cagrState.dataField = dataField;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // %of totals\r\n  summaryDisplayModeItems: any;\r\n  percentOfTotalBasedOn: string = 'Subtotals';\r\n  percentInDirection: string = '';\r\n  onBasedOnChange(isInit: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.basedOn =\r\n        this.percentOfTotalBasedOn;\r\n    }\r\n\r\n    this.summaryDisplayModeItems =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? this.pivotSummaryDisplayModesSubtotals\r\n        : this.pivotSummaryDisplayModesGrandTotals;\r\n    if (isInit === false && typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';\r\n    }\r\n  }\r\n\r\n  percentOfChangeComputeType: string = '';\r\n  onComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.changePercentState.computingType =\r\n        this.percentOfChangeComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.changePercentState.computingType =\r\n    //     ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  cagrComputeType: string = '';\r\n  onCagrComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.computingType = this.cagrComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  addPercentOfTotalsToPivot(iSCallFromFillPivot: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n        this.percentInDirection;\r\n    }\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotArray(iSCallFromFillPivot: boolean) {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of total exists\r\n      const percentOfTotal = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) =>\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal\r\n      );\r\n\r\n      if (percentOfTotal && this.pivotGridDataSource) {\r\n        fieldId = percentOfTotal.id;\r\n        percentOfTotal.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        percentOfTotal.caption = this.getCaptionForPercentOfTotal();\r\n        percentOfTotal.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        percentOfTotal.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridDataSource.field(percentOfTotal.id, {\r\n          summaryDisplayMode: percentOfTotal.summaryDisplayMode,\r\n          caption: percentOfTotal.caption,\r\n          calculatedFieldType: percentOfTotal.calculatedFieldType,\r\n          dataField:\r\n            this.stateData?.settings.percentOfTotalState.dataField || 'Value',\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        // CommonHelper.updatePlaceholders(\r\n        //   this.pivotGridDataSource,\r\n        //   this.stateData\r\n        // );\r\n      } else {\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions?.pivotGridSource.fields.length || 0;\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfTotal();\r\n        field.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = undefined;\r\n        field.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            1,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n\r\n        if (\r\n          !iSCallFromFillPivot &&\r\n          typeof this.pivotGridOptions !== 'undefined'\r\n        ) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfTotalPopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.percentOfTotalState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotCube(iSCallFromFillPivot: boolean) {\r\n    this.removeAllHiddenCalculatedFields();\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForPercentOfTotal();\r\n    field.dataField =\r\n      this.stateData?.settings.percentOfTotalState.dataField || '';\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = undefined;\r\n    field.summaryDisplayMode =\r\n      this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? CalculatedFieldType.percentOfTotal\r\n        : CalculatedFieldType.percentOfGrandTotal;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isPercentOfTotalPopup = false;\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  removeAllHiddenCalculatedFields() {\r\n    if (this.stateData?.state && this.pivotGridDataSource) {\r\n      this.stateData.state.fields = this.stateData.state.fields.filter(\r\n        (a: any) => a.area !== undefined\r\n      );\r\n      this.pivotGridDataSource.state(this.stateData.state);\r\n    }\r\n  }\r\n\r\n  getCaptionForPercentOfTotal(): string {\r\n    let caption = '';\r\n    //check if exist 2 or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions?.pivotGridSource.fields.filter(\r\n        (f: any) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfTotaldatafield =\r\n        this.stateData?.settings.percentOfTotalState.dataField;\r\n      let currentDatafieldCaption = '';\r\n      if (this.pivotGridOptions.settings.isCube) {\r\n        currentDatafieldCaption =\r\n          // this.pivotGridOptions.pivotGridSource.fields.find(\r\n          //   (f) => f.dataField === percentOfTotaldatafield\r\n          // ).caption;\r\n          'Cube Caption';\r\n      } else {\r\n        if (typeof this.pivotGridOptions !== 'undefined') {\r\n          const fieldCaption =\r\n            this.pivotGridOptions.pivotGridSource.fields.find(\r\n              (f: any) => f.dataFieldType === percentOfTotaldatafield\r\n            );\r\n          if (fieldCaption) {\r\n            currentDatafieldCaption = fieldCaption.caption;\r\n          }\r\n        }\r\n      }\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption\r\n          : CalculatedFieldType.percentOfGrandTotal +\r\n            ' ' +\r\n            currentDatafieldCaption;\r\n    } else {\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal\r\n          : CalculatedFieldType.percentOfGrandTotal;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addPrecentOfChangeToPivot(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of change exists\r\n      const percentOfChange =\r\n        this.pivotGridOptions?.pivotGridSource.fields.find(\r\n          (f) => f.calculatedFieldType === CalculatedFieldType.changePercent\r\n        );\r\n      if (percentOfChange && this.pivotGridDataSource) {\r\n        fieldId = percentOfChange.id;\r\n        this.pivotGridDataSource.field(percentOfChange.id, {\r\n          caption: this.getCaptionForPercentOfChange(),\r\n          dataField:\r\n            this.stateData?.settings.changePercentState.dataField || 'Value',\r\n          calculateSummaryValue: (e: any) =>\r\n            this.calculateSummaryValuePercentOfChange(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfChange();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.changePercentState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValuePercentOfChange(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.changePercent;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfChangePopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.changePercentState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSummaryValuePercentOfChange(e: any): any {\r\n    if (e.parent('column')) {\r\n      let base;\r\n      if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n      } else if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        let yearIndex = 0;\r\n        for (const index in e.parent('column').children()) {\r\n          if (\r\n            e\r\n              .parent('column')\r\n              .children()\r\n              [index].value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName)\r\n          ) {\r\n            yearIndex = parseInt(index);\r\n            break;\r\n          }\r\n        }\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const returnValue = e.value() / base.value() - 1;\r\n      return isNaN(returnValue) ||\r\n        (returnValue && returnValue.toString() === 'Infinity')\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCaptionForPercentOfChange() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfChangeDataField =\r\n        this.stateData?.settings.changePercentState.dataField;\r\n\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f: any) => f.dataFieldType === percentOfChangeDataField\r\n      );\r\n\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n\r\n      switch (percentOfChangeDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.changePercent;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.changePercent;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addCAGRToPivot(iSCallFromFillPivot: boolean): void {\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addCAGRToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addCAGRToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotArray(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case cagr exists, remove and recreate it (case for edit)\r\n      const cagr = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) => f.calculatedFieldType === CalculatedFieldType.cagr\r\n      );\r\n      if (cagr && this.pivotGridDataSource) {\r\n        fieldId = cagr.id;\r\n        this.pivotGridDataSource.field(cagr.id, {\r\n          dataField: this.stateData?.settings.cagrState.dataField || 'Value',\r\n          caption: this.getCaptionForCagr(),\r\n          calculateSummaryValue: (e: any) => this.calculateSummaryValueCagr(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForCagr();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.cagrState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValueCagr(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.cagr;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isCagrPopup = false;\r\n      if (this.stateData) this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotCube(iSCallFromFillPivot: boolean): void {\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForCagr();\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.dataField = this.stateData?.settings.cagrState.dataField || 'Value';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = (e: any) => this.calculateSummaryValueCagr(e);\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType = CalculatedFieldType.cagr;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isCagrPopup = false;\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  getCaptionForCagr() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const cagrDataField = this.stateData?.settings.cagrState.dataField;\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f) => f.dataField === cagrDataField\r\n      );\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n      switch (cagrDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.cagr;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.cagr;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  calculateSummaryValueCagr(e: any) {\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.parent('column') && shownYearsInPivot) {\r\n      let base;\r\n      let yearIndex = 0;\r\n      let prevYearIndex = 0;\r\n      for (const index in e.parent('column').children()) {\r\n        if (\r\n          e.parent('column').children()[index].value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName)\r\n        ) {\r\n          yearIndex = parseInt(index);\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n        prevYearIndex = 0;\r\n      } else if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();\r\n      const yearSpan =\r\n        shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];\r\n      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;\r\n      return isNaN(returnValue) || returnValue.toString() === 'Infinity'\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeAutoSaveStatus(statusValue: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.rememberLatestState = statusValue;\r\n    }\r\n    if (statusValue == false) {\r\n      this.alertService.info('The system will remember this state!');\r\n    } else {\r\n      this.alertService.info('The system will remember the last used state!');\r\n    }\r\n    this.canCallSaveState = true;\r\n    this.customSaveState(this.stateData?.state, true);\r\n  }\r\n}\r\n","<app-preview-top-menu\r\n  [setSelectedCurrency]=\"selectedCurrency\"\r\n  [pivotGridOptions]=\"pivotGridOptions\"\r\n  (currencySelectionChanged)=\"currencySelectionChanged($event)\"\r\n  (currencyConversionSelectionChanged)=\"\r\n    currencyConversionSelectionChanged($event)\r\n  \"\r\n  (massUnitSelectionChanged)=\"massUnitSelectionChanged($event)\"\r\n  (onExportToExcel)=\"exportToExcel()\"\r\n  (onExportToCvs)=\"exportToCvs()\"\r\n  (onExportSnapshot)=\"exportToShanptshot()\"\r\n  (calculatedFieldItemSelected)=\"setCalculatedFieldFromTopMenu($event)\"\r\n  (onChangeAutoSaveStatus)=\"onChangeAutoSaveStatus($event)\"\r\n></app-preview-top-menu>\r\n\r\n<dx-pivot-grid\r\n  id=\"pivotGrid\"\r\n  #pivotGrid\r\n  [allowSortingBySummary]=\"true\"\r\n  (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n  (onOptionChanged)=\"onOptionChanged($event)\"\r\n  (onInitialized)=\"onInitialized($event)\"\r\n  (onContentReady)=\"onContentReady($event)\"\r\n  (onCellPrepared)=\"cellPrepared($event)\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n  [allowFiltering]=\"pivotGridOptions?.settings?.allowFiltering || false\"\r\n  [allowExpandAll]=\"pivotGridOptions?.settings?.allowExpandAll || false\"\r\n  [showBorders]=\"pivotGridOptions?.settings?.showBorders || false\"\r\n  [showRowTotals]=\"pivotGridOptions?.settings?.showRowTotals || false\"\r\n  [showColumnTotals]=\"pivotGridOptions?.settings?.showColumnTotals || false\"\r\n  [showTotalsPrior]=\"pivotGridOptions?.settings?.showTotalsPrior || ''\"\r\n  [dataFieldArea]=\"stateData?.settings?.dataFieldArea || ''\"\r\n  [showColumnGrandTotals]=\"\r\n    pivotGridOptions?.settings?.showColumnGrandTotals || false\r\n  \"\r\n  [showRowGrandTotals]=\"pivotGridOptions?.settings?.showRowGrandTotals || false\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n  <dxo-state-storing\r\n    [enabled]=\"saveStateEnabled\"\r\n    type=\"custom\"\r\n    [customSave]=\"customSaveState\"\r\n    [customLoad]=\"customLoadState\"\r\n    [savingTimeout]=\"300\"\r\n  >\r\n  </dxo-state-storing>\r\n</dx-pivot-grid>\r\n\r\n<!-- popup for % of total -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"250\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfTotalPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute '% Of Total':</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\">Based on</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"['Subtotals', 'Grand Totals']\"\r\n                [(value)]=\"percentOfTotalBasedOn\"\r\n                (onValueChanged)=\"onBasedOnChange(false)\"\r\n                (onInitialized)=\"onBasedOnChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"summaryDisplayModeItems\" class=\"dx-field\">\r\n            <div class=\"dx-field-label\">In Direction</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-select-box\r\n                [items]=\"summaryDisplayModeItems\"\r\n                displayExpr=\"name\"\r\n                valueExpr=\"id\"\r\n                [(value)]=\"percentInDirection\"\r\n              >\r\n              </dx-select-box>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                [disabled]=\"false\"\r\n                (onClick)=\"addPercentOfTotalsToPivot(false)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for % of change -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfChangePopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute change, %:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"percentOfChangeComputeType\"\r\n                (onValueChanged)=\"onComputeTypeChange(false)\"\r\n                (onInitialized)=\"onComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addPrecentOfChangeToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for CAGR -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isCagrPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute CAGR:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"cagrComputeType\"\r\n                (onValueChanged)=\"onCagrComputeTypeChange(false)\"\r\n                (onInitialized)=\"onCagrComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addCAGRToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Subject } from 'rxjs';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntryPSC } from 'src/model/dataEntryPSC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { PscBrandSales } from 'src/model/psc-brandSales.model';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { CommonService } from 'src/services/common.service';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-brand-sales',\r\n  templateUrl: './brand-sales.component.html',\r\n  styleUrls: ['./brand-sales.component.css'],\r\n})\r\nexport class BrandSalesComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: PscBrandSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    BrandSales: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: PscSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  myYears: any[] = [];\r\n  volumeYears: any[] = [];\r\n  volumeYearsShow: any[] = [];\r\n  foreCastYear1: number = 0;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  channelLists: DataEntryPSC[] = [];\r\n  companyLists: DataEntryPSC[] = [];\r\n  brandLists: DataEntryPSC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n      this.getPivotSettings();\r\n      this.getGridState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n  deleteCommentConfirmPopup: boolean = false;\r\n  deleteResetConfirmPopup: boolean = false;\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  calculatorContextMenuItems: any[] = [];\r\n  pivotStateId: number = 0;\r\n\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateData: any | undefined;\r\n  stateChange: Subject<any> = new Subject<any>();\r\n\r\n  adjustColsOthers: any = [];\r\n  adjustOtherTotal: any = {};\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private commonService: CommonService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Channel: [null, Validators.required],\r\n      Company: [null, Validators.required],\r\n      Brand: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n      ForecastYear1: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n\r\n    this.calculatorContextMenuItems = this.commonService.getCalculatorFields();\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n    this.getGridState = this.getGridState.bind(this);\r\n\r\n    this.getAllColumnsComments();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getBrandSalesData();\r\n\r\n    this.getChannelLists();\r\n    this.getCompanyLists();\r\n    this.getBrandLists();\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.studyDataRelations = this.datRelationsData.find(\r\n      (item) =>\r\n        item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n    );\r\n\r\n    if (this.studyDataRelations) {\r\n      this.studyDataViewId = this.studyDataRelations.ViewId;\r\n    }\r\n  }\r\n\r\n  getBrandSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'BrandSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyDataObj = res.Data as PscBrandSales;\r\n\r\n          this.studyMarketYearCategoryId =\r\n            this.studyDataObj.MarketYearCategoryId;\r\n\r\n          this.studyData = this.studyDataObj.BrandSales as PscSalesItem[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            this.studyDataObj.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          this.currentYear = currentYear;\r\n\r\n          this.volumeYears = [];\r\n          this.volumeYearsShow = [];\r\n          this.myYears = [];\r\n          for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n            this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            this.myYears.push({ field: `PreviousYear${j}`, year: i });\r\n            this.volumeYearsShow.push({\r\n              field: `PreviousYear${j}`,\r\n              year: i,\r\n              isEditable: !this.isStudyEditable,\r\n              cellTemplate: 'EditCellTemplate',\r\n              isVisible: true,\r\n            });\r\n            if (j !== 5) {\r\n              this.volumeYearsShow.push({\r\n                field: `Cagr${j}`,\r\n                year: `Cagr, ${i - 1}-${i}`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n              this.volumeYearsShow.push({\r\n                field: `PerChange${j}`,\r\n                year: `Change, %, ${i - 1}-${i}`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n            }\r\n            this.volumeYearsShow.push({\r\n              field: `TotalPer${j}`,\r\n              year: `% Of Total`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n          }\r\n\r\n          this.volumeYearsShow.push({\r\n            field: `CurrentYear`,\r\n            year: this.currentYear,\r\n            isEditable: !this.isStudyEditable,\r\n            cellTemplate: 'EditCellTemplate',\r\n            isVisible: true,\r\n          });\r\n\r\n          this.volumeYearsShow.push({\r\n            field: `CagrCurrentYear`,\r\n            year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n          this.volumeYearsShow.push({\r\n            field: `PerChangeCurrentYear`,\r\n            year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n          this.volumeYearsShow.push({\r\n            field: `TotalPerCurrentYear`,\r\n            year: `% Of Total`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n\r\n          // myYears = this.volumeYears;\r\n          this.myYears.push({\r\n            field: `CurrentYear`,\r\n            year: this.currentYear,\r\n          });\r\n\r\n          this.foreCastYear1 = currentYear + 5;\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            this.calculateCagrYears(item);\r\n            this.calculatePercentageOfChangeYears(item);\r\n\r\n            // const rowNoteArray: any = [];\r\n            // if (item.Notes !== null) {\r\n            //   const noteArray = item.Notes.split('|||');\r\n            //   noteArray.map((singleVal: any) => {\r\n            //     const n = singleVal.split('@@@');\r\n            //     const d = n[0].split('###');\r\n            //     rowNoteArray.push({\r\n            //       name: d[0].trim(),\r\n            //       date: new Date(d[1].trim()),\r\n            //       note: n[1].trim(),\r\n            //     });\r\n            //   });\r\n            // }\r\n\r\n            // let sortRowNoteArray: any = [];\r\n            // if (rowNoteArray.length > 0) {\r\n            //   sortRowNoteArray = rowNoteArray.sort(\r\n            //     (a: any, b: any) => b.date - a.date\r\n            //   );\r\n            // }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  // console.log(colValueArray);\r\n                  changelogObj[colValueArray[3]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            let rowComments: any[] = [];\r\n            if (this.allColsComments) {\r\n              rowComments = this.allColsComments.filter(\r\n                (single: any) => single.DraftDataRowId == item.DataRowId\r\n              );\r\n\r\n              rowComments.map(({ ColumnName }) => {\r\n                this.myYears.map((elem: any) => {\r\n                  if (elem.field == ColumnName) {\r\n                    item[`${ColumnName}_comment`] = true;\r\n                  }\r\n                });\r\n              });\r\n            }\r\n\r\n            this.currentCurrency = {\r\n              CurrencyId: item.CurrencyId,\r\n              CurrencyName: item.CurrencyName,\r\n              CurrencyCode: item.CurrencyCode,\r\n            };\r\n\r\n            if (typeof this.adjustOtherTotal[item.ChannelId] === 'undefined') {\r\n              // adjustmentOthers[item.ChannelId] = {};\r\n              this.adjustOtherTotal[item.ChannelId] = {\r\n                PreviousYear1: 0,\r\n                PreviousYear2: 0,\r\n                PreviousYear3: 0,\r\n                PreviousYear4: 0,\r\n                PreviousYear5: 0,\r\n                CurrentYear: 0,\r\n              };\r\n            }\r\n            if (item.Company == 'All other' && item) {\r\n              this.adjustColsOthers.push(item);\r\n            }\r\n\r\n            // this.studyData[i].StudyNotes =\r\n            //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            // this.studyData[i].EditNote = false;\r\n            // this.studyData[i].Notes = null;\r\n            // this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.calculateTotalPercentageForCols();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  calculateAllOtherTotal(changeData: any) {\r\n    if (changeData && this.adjustColsOthers && this.selectedRowDataChange) {\r\n      const otherColData =\r\n        typeof this.adjustColsOthers[changeData.ChannelId] !== 'undefined'\r\n          ? this.adjustColsOthers[changeData.ChannelId]\r\n          : {};\r\n      if (otherColData) {\r\n        let PreviousYear1Total = +otherColData.PreviousYear1;\r\n        let PreviousYear2Total = +otherColData.PreviousYear2;\r\n        let PreviousYear3Total = +otherColData.PreviousYear3;\r\n        let PreviousYear4Total = +otherColData.PreviousYear4;\r\n        let PreviousYear5Total = +otherColData.PreviousYear5;\r\n        let CurrentYearTotal = +otherColData.CurrentYear;\r\n\r\n        this.allowedCols.map((cols: string) => {\r\n          const otherColTotal = +otherColData[cols] || 0;\r\n          if (otherColTotal > 0) {\r\n            const oldData = +this.selectedRowDataChange[cols];\r\n            const newData = +changeData[cols];\r\n\r\n            const diff = oldData - newData;\r\n            let allOtherRow = this.studyData.find(\r\n              (item) => item.DataRowId === otherColData.DataRowId\r\n            ) as any;\r\n\r\n            if (allOtherRow) {\r\n              allOtherRow[cols] = otherColTotal + diff;\r\n              this.selectedRowDataChange[cols] = allOtherRow[cols];\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateCagrYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.Cagr1 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear2,\r\n        data.PreviousYear1,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.Cagr2 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear3,\r\n        data.PreviousYear2,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.Cagr3 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear4,\r\n        data.PreviousYear3,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.Cagr4 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear5,\r\n        data.PreviousYear4,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear1,\r\n        data.CurrentYear,\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  calculatePercentageOfChangeYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.PerChange1 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear2,\r\n        data.PreviousYear1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.PerChange2 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear3,\r\n        data.PreviousYear2\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.PerChange3 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear4,\r\n        data.PreviousYear3\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.PerChange4 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear5,\r\n        data.PreviousYear4\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear1,\r\n        data.CurrentYear\r\n      );\r\n    }\r\n  }\r\n\r\n  calculateTotalPercentageForCols() {\r\n    const PreviousYear1Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear1,\r\n      0\r\n    );\r\n    const PreviousYear2Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear2,\r\n      0\r\n    );\r\n\r\n    const PreviousYear3Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear3,\r\n      0\r\n    );\r\n    const PreviousYear4Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear4,\r\n      0\r\n    );\r\n    const PreviousYear5Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear5,\r\n      0\r\n    );\r\n\r\n    const CurrentYearTotal = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.CurrentYear,\r\n      0\r\n    );\r\n\r\n    this.studyData.map((item) => {\r\n      item.TotalPer1 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear1Total,\r\n        item.PreviousYear1\r\n      );\r\n      item.TotalPer2 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear2Total,\r\n        item.PreviousYear2\r\n      );\r\n      item.TotalPer3 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear3Total,\r\n        item.PreviousYear3\r\n      );\r\n      item.TotalPer4 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear4Total,\r\n        item.PreviousYear4\r\n      );\r\n      item.TotalPer5 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear5Total,\r\n        item.PreviousYear5\r\n      );\r\n      item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(\r\n        CurrentYearTotal,\r\n        item.CurrentYear\r\n      );\r\n    });\r\n  }\r\n\r\n  getChannelLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Channel')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.channelLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Company')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.companyLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getBrandLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Brand')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.brandLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = [\r\n      'PreviousYear1',\r\n      'PreviousYear2',\r\n      'PreviousYear3',\r\n      'PreviousYear4',\r\n      'PreviousYear5',\r\n      'CurrentYear',\r\n      'Forecast1',\r\n    ];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const allowedCols = [\r\n        'PreviousYear1',\r\n        'PreviousYear2',\r\n        'PreviousYear3',\r\n        'PreviousYear4',\r\n        'PreviousYear5',\r\n        'CurrentYear',\r\n        'Forecast1',\r\n      ];\r\n\r\n      const isFound = allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  selectedRowDataChange: any = {};\r\n  onEditingStart(e: any) {\r\n    const data = e.data;\r\n\r\n    this.selectedRowDataChange = {\r\n      CurrentYear: +data.CurrentYear,\r\n      PreviousYear1: +data.PreviousYear1,\r\n      PreviousYear2: +data.PreviousYear2,\r\n      PreviousYear3: +data.PreviousYear3,\r\n      PreviousYear4: +data.PreviousYear4,\r\n      PreviousYear5: +data.PreviousYear5,\r\n    };\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as PscSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n      // data.Forecast1 = +data.Forecast1;\r\n\r\n      this.calculateCagrYears(data);\r\n      this.calculatePercentageOfChangeYears(data);\r\n      this.calculateTotalPercentageForCols();\r\n\r\n      this.calculateAllOtherTotal(data);\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: PscSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Forecast1: +newRowData.ForecastYear1,\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      Channel: newRowData.Channel.Name,\r\n      ChannelId: newRowData.Channel.Id,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n\r\n      Company: newRowData.Company.Name,\r\n      CompanyId: newRowData.Company.Id,\r\n      Brand: newRowData.Brand.Name,\r\n      BrandId: newRowData.Brand.Id,\r\n      Forecast2: 0,\r\n      Forecast3: 0,\r\n      Forecast4: 0,\r\n      Forecast5: 0,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ChannelId == newRow.ChannelId &&\r\n        item.CompanyId == newRow.CompanyId &&\r\n        item.BrandId == newRow.BrandId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.ChannelId || 0) - (b.ChannelId || 0) ||\r\n          (a.CompanyId || 0) - (b.CompanyId || 0) ||\r\n          (a.BrandId || 0) - (b.BrandId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n    this.selectedCommentCellData = {};\r\n  }\r\n\r\n  onSaveNote(isLoad: boolean = true) {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedCommentCellData) {\r\n      return;\r\n    }\r\n\r\n    // const rowData = this.newNoteForm.value.rowData;\r\n    // const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    // const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n    //   rowIndex,\r\n    //   'EditNote'\r\n    // );\r\n\r\n    // this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    // let noteValue = rowData.data.StudyNotes;\r\n    // noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    // if (IsEditedNote) {\r\n    //   const noteArray =\r\n    //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n    //   noteArray.shift();\r\n\r\n    //   noteValue = noteArray.join(',');\r\n    // }\r\n\r\n    // const newNoteValue =\r\n    //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    // this.dataGrid?.instance.saveEditData();\r\n\r\n    const formData = {\r\n      dataItemCategoryId: this.studyAreaId,\r\n      marketYearCategoryDataId: this.marketYearCategoryId,\r\n      draftDataRowId: this.selectedCommentCellData.dataRowId,\r\n      columnName: this.selectedCommentCellData.colValue,\r\n      comment: newNote,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService.addCommentForCell(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.notePopupVisible = false;\r\n          // this.getSalesData();\r\n          if (isLoad) {\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.noteSubmit = false;\r\n            this.newNoteForm.reset();\r\n            this.newRowForm.updateValueAndValidity();\r\n            this.getCellColumnsComments(\r\n              this.selectedCommentCellData.colValue,\r\n              this.selectedCommentCellData.dataRowId\r\n            );\r\n          }\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n      // Forecast1: item.Forecast1 > 0 ? item.Forecast1 : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      brandSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.savePSCData('BrandSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getBrandSalesData();\r\n          this.loadCurrentStudy();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      brandSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffPSCData('BrandSales', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getBrandSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        const error =\r\n          typeof err.error !== 'undefined'\r\n            ? err.error\r\n            : 'Something went wrong. Please try after sometimes.';\r\n        this.alertService.danger(error);\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Channel:\r\n        this.getChannelLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Company:\r\n        this.getCompanyLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Brand:\r\n        this.getBrandLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n\r\n  onCalculatedItemClick(e: any) {\r\n    // console.log(e.itemData);\r\n    if (typeof e.itemData !== 'undefined') {\r\n      const calculatedFiled = e.itemData;\r\n      calculatedFiled.isCheck = !calculatedFiled.isCheck;\r\n      calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';\r\n      if (calculatedFiled.value === 'percentOfTotal') {\r\n        // this.calculateTotalPercentageForCols();\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `TotalPer${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n\r\n        this.dataGrid?.instance.columnOption(\r\n          `TotalPerCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else if (calculatedFiled.value === 'changePercent') {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PerChange${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `PerChangeCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `Cagr${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `CagrCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (this.studyDataViewId) {\r\n      this.stateData = data;\r\n      this.stateChange.next(this.stateData);\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.studyDataViewId,\r\n            0,\r\n            false,\r\n            JSON.stringify(this.stateData),\r\n            true\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (data) {\r\n                // this.alertService.info(\r\n                //   'The system will remember the last state!'\r\n                // );\r\n                // this.loadCurrentStudy();\r\n                // console.log(this.pivotStateId);\r\n                if (this.pivotStateId == 0) {\r\n                  this.stateData = undefined;\r\n                  this.getGridState();\r\n                }\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      this.setColsForDataGrid();\r\n      return this.stateData;\r\n    }\r\n  }\r\n\r\n  getGridState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService\r\n        .getPivotState(this.studyDataViewId, true)\r\n        .subscribe((res) => {\r\n          // in case state is not exists yet\r\n          try {\r\n            const stateRes =\r\n              typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n            stateData = JSON.parse(stateRes.StateData);\r\n\r\n            if (stateData) {\r\n              this.pivotStateId = stateRes.PivotStateId;\r\n              this.stateData = stateData;\r\n              this.dataGrid?.instance.state(this.stateData);\r\n              this.setColsForDataGrid();\r\n            }\r\n\r\n            // this.pivotStateId = stateRes.PivotStateId;\r\n          } catch {\r\n            // stateData.state.fields = this.getGridFields();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onDeleteCustomSaveState() {\r\n    this.deleteResetConfirmPopup = true;\r\n  }\r\n\r\n  deleteCustomState() {\r\n    if (this.studyDataViewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.studyDataViewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = undefined;\r\n\r\n            this.stateData = stateData;\r\n            this.calculatorContextMenuItems =\r\n              this.commonService.getCalculatorFields();\r\n            this.getBrandSalesData();\r\n            this.deleteResetConfirmPopup = false;\r\n            // this.getGridState();\r\n          }\r\n        );\r\n    } else {\r\n      this.deleteResetConfirmPopup = false;\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {}\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    if (typeof e.items === 'undefined') {\r\n      e.items = [];\r\n    }\r\n\r\n    // e.items.push({\r\n    //   beginGroup: true,\r\n    //   text: 'Reset to Default',\r\n    //   icon: 'fas fa-sync-alt',\r\n    //   onItemClick: () => {\r\n    //     this.deleteCustomState();\r\n    //   },\r\n    // });\r\n\r\n    const isValidTarget =\r\n      typeof e.target !== 'undefined' && e.target === 'content' ? true : false;\r\n    if (isValidTarget) {\r\n      const cells = e.row.cells;\r\n      const rowIndex = e.rowIndex;\r\n      const colIndex = e.columnIndex;\r\n      const currentCell =\r\n        typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;\r\n      if (typeof currentCell !== 'undefined') {\r\n        const foundValidCell = this.allowedCols.find(\r\n          (e) => e === currentCell.column.dataField\r\n        );\r\n\r\n        if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {\r\n          e.items.push({\r\n            beginGroup: true,\r\n            text: 'Comments',\r\n            icon: 'fas fa-comment',\r\n            onItemClick: () => {\r\n              // this.addNewCellComment(foundValidCell, colIndex, e.row);\r\n              this.getCellColumnsComments(\r\n                currentCell.column.dataField,\r\n                e.row.data.DataRowId\r\n              );\r\n            },\r\n          });\r\n        }\r\n\r\n        // if (\r\n        //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==\r\n        //     'undefined' &&\r\n        //   e.row.data[`${currentCell.column.dataField}_comment`]\r\n        // ) {\r\n        //   e.items.push({\r\n        //     beginGroup: true,\r\n        //     text: 'View Comments',\r\n        //     icon: 'fas fa-bars',\r\n        //     onItemClick: () => {\r\n        //       this.getCellColumnsComments(\r\n        //         currentCell.column.dataField,\r\n        //         e.row.data.DataRowId\r\n        //       );\r\n        //     },\r\n        //   });\r\n        // }\r\n      }\r\n    }\r\n  }\r\n\r\n  setColsForDataGrid() {\r\n    if (this.stateData) {\r\n      this.volumeYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.calculatorContextMenuItems = this.stateData\r\n        .calculatorContextMenuItems\r\n        ? this.stateData.calculatorContextMenuItems\r\n        : this.calculatorContextMenuItems;\r\n    }\r\n  }\r\n\r\n  selectedCommentCellData: any = {};\r\n  addNewCellComment(colValue: string, colIndex: number, row: any) {\r\n    const currentCell =\r\n      typeof row.cells[colIndex] !== 'undefined'\r\n        ? row.cells[colIndex]\r\n        : undefined;\r\n    const colCaption = currentCell.column.caption;\r\n\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: currentCell.data.DataRowId,\r\n      currentCell: currentCell,\r\n      colCaption: colCaption,\r\n    };\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  allColsComments: any[] = [];\r\n  getAllColumnsComments() {\r\n    this.studyService\r\n      .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.allColsComments = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  cellColsComments: any[] = [];\r\n  getCellColumnsComments(colValue: string, dataRowId: string) {\r\n    const currentLabel = this.myYears.find(\r\n      (item: any) => item.field == colValue\r\n    );\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: dataRowId,\r\n      currentCell: {},\r\n      colCaption: currentLabel.year,\r\n    };\r\n\r\n    this.studyService\r\n      .getCellCommentsForStudy(\r\n        this.studyAreaId,\r\n        this.marketYearCategoryId,\r\n        dataRowId,\r\n        colValue\r\n      )\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.selectedRowNotes = data.Data;\r\n          this.viewNotePopup = true;\r\n          if (this.selectedRowNotes.length == 0) {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  checkHasComment(data: any) {\r\n    if (\r\n      typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&\r\n      data.data[`${data.column.dataField}_comment`]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteCommentData: any = {};\r\n  deleteComment(data: any) {\r\n    this.deleteCommentData = data;\r\n    this.deleteCommentConfirmPopup = true;\r\n    // this.viewNotePopup = false;\r\n  }\r\n\r\n  onDeleteCommentConfirmPopupHide() {\r\n    this.deleteCommentData = {};\r\n    this.deleteCommentConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteComment() {\r\n    this.isLoadingService.add();\r\n    const colValue = this.deleteCommentData.ColumnName;\r\n    const dataRowId = this.deleteCommentData.DraftDataRowId;\r\n    this.studyService\r\n      .deleteCellComment(\r\n        this.deleteCommentData.MarketYearCategoryDataId,\r\n        dataRowId,\r\n        colValue,\r\n        this.deleteCommentData.Id\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.deleteCommentConfirmPopup = false;\r\n            this.getCellColumnsComments(colValue, dataRowId);\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteCommentConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          width=\"100%\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          width=\"100%\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n          (onContentReady)=\"onContentReady($event)\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n          (onEditingStart)=\"onEditingStart($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <dxo-scrolling columnRenderingMode=\"standard\"></dxo-scrolling>\r\n          <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-state-storing\r\n            [enabled]=\"true\"\r\n            type=\"custom\"\r\n            [customSave]=\"customSaveState\"\r\n            [customLoad]=\"customLoadState\"\r\n            [savingTimeout]=\"300\"\r\n          >\r\n          </dxo-state-storing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"refresh\"\r\n                    text=\"Reset\"\r\n                    (onClick)=\"onDeleteCustomSaveState()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-drop-down-button\r\n                    icon=\"fas fa-calculator\"\r\n                    [dropDownOptions]=\"{ width: 200 }\"\r\n                    displayExpr=\"name\"\r\n                    keyExpr=\"value\"\r\n                    [items]=\"calculatorContextMenuItems\"\r\n                    (onItemClick)=\"onCalculatedItemClick($event)\"\r\n                  ></dx-drop-down-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            [width]=\"180\"\r\n            [fixed]=\"true\"\r\n            dataField=\"Channel\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"180\"\r\n            [fixed]=\"true\"\r\n            dataField=\"Company\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"180\"\r\n            [fixed]=\"true\"\r\n            dataField=\"Brand\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"volumeYear.isEditable\"\r\n            [allowFiltering]=\"false\"\r\n            alignment=\"center\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [visible]=\"volumeYear.isVisible\"\r\n            [cellTemplate]=\"volumeYear.cellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYearsShow\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"currentYear\"\r\n            dataField=\"CurrentYear\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column> -->\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"foreCastYear1\"\r\n            dataField=\"Forecast1\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column> -->\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"200\"\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column> -->\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <span *ngIf=\"checkHasComment(data)\" class=\"has-comment\"></span>\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'cargCellTemplate'\">\r\n            <span>{{\r\n              data.value || data.value == 0 ? data.value.toFixed(1) + \"%\" : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <!-- <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div> -->\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-brand-sales-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYears]=\"volumeYears\"\r\n          [foreCastYear]=\"foreCastYear1\"\r\n          [studyData]=\"studyData\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-brand-sales-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Channel</label>\r\n              <ng-select\r\n                [items]=\"channelLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Channel\"\r\n                placeholder=\"Select Channel\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Channel)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <ng-select\r\n                [items]=\"companyLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Company\"\r\n                placeholder=\"Select Company\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Company)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Brand</label>\r\n              <ng-select\r\n                [items]=\"brandLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Brand\"\r\n                placeholder=\"Select Brand\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Brand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"CurrentYear\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ foreCastYear1 }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"ForecastYear1\"\r\n              />\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"selectedCommentCellData\"\r\n  [width]=\"300\"\r\n  [height]=\"270\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Comment\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <label class=\"mt-0\">\r\n            Add Comment for {{ selectedCommentCellData.colCaption }}\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"2\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Comment\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [height]=\"500\"\r\n  [showTitle]=\"true\"\r\n  title=\"View Comments for {{ selectedCommentCellData.colCaption }}\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0 h-100 comment-container\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"CreatedBy\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"CreatedOn\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"Comment\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n          caption=\"\"\r\n          cellTemplate=\"deleteCellTemplate\"\r\n          class=\"text-center\"\r\n          [width]=\"30\"\r\n        ></dxi-column>\r\n        <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n          <dx-button\r\n            icon=\"trash\"\r\n            stylingMode=\"text\"\r\n            (onClick)=\"deleteComment(d.data)\"\r\n            type=\"danger\"\r\n          ></dx-button>\r\n        </div>\r\n      </dx-data-grid>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control\"\r\n                placeholder=\"Enter your comment\"\r\n                formControlName=\"note\"\r\n                rows=\"2\"\r\n                maxlength=\"1000\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': noteSubmit && n['note'].errors\r\n                }\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group text-center\">\r\n              <dx-button\r\n                text=\"Save Comment\"\r\n                type=\"default\"\r\n                [disabled]=\"newNoteForm.invalid\"\r\n                (onClick)=\"onSaveNote(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteCommentConfirmPopup\"\r\n  (onHidden)=\"onDeleteCommentConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this comment?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteComment()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteCommentConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"400\"\r\n  [height]=\"200\"\r\n  [showTitle]=\"false\"\r\n  title=\"Reset Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteResetConfirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">\r\n        Reset to Default will take you to last saved Data. Your unsaved data\r\n        will be removed.\r\n      </p>\r\n      <p class=\"mb-1\">Are you sure you want to continue?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"deleteCustomState()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteResetConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource, {\r\n  Field,\r\n} from 'devextreme/ui/pivot_grid/data_source';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { ComboBox } from 'src/model/combo.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Workbook } from 'exceljs';\r\nimport * as lodash from 'lodash';\r\nimport { saveAs } from 'file-saver';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataFieldArea } from 'src/model/enums/dataFieldArea.enum';\r\nimport { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport {\r\n  UserSettings,\r\n  UserStateAndSetttings,\r\n} from 'src/model/userStateAndSetttings.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialValueType } from 'src/model/enums/specialValueType.enum';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport { CommonHelper } from 'src/guard/commonHelper';\r\nimport { Subject } from 'rxjs';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { ComputingType } from 'src/model/enums/computingType.enum';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-european-country-sales-preview',\r\n  templateUrl: './european-country-sales-preview.component.html',\r\n  styleUrls: ['./european-country-sales-preview.component.css'],\r\n})\r\nexport class EuropeanCountrySalesPreviewComponent implements OnInit {\r\n  @Input() studyData: PscSalesItem[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() foreCastYear: number = 0;\r\n  @Input() previousYears: any[] = [];\r\n\r\n  // pivotGridDataSource: PivotGridDataSource;\r\n  // gridFields: Field[] = [];\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };\r\n  @Input() set setSelectedCurrency(data: any) {\r\n    if (data) {\r\n      this.selectedCurrency = {\r\n        Id: data.CurrencyId,\r\n        IsActive: true,\r\n        Name: data.CurrencyName,\r\n        CurrencyCode: data.CurrencyCode,\r\n        CurrencyName: data.CurrencyName,\r\n      };\r\n\r\n      this.currencyDropdownSelected = this.selectedCurrency;\r\n    }\r\n  }\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  volumeYears: any[] = [];\r\n  @Input() set setVolumeYears(data: any[]) {\r\n    if (data) {\r\n      this.volumeYears = data;\r\n    }\r\n  }\r\n\r\n  viewId: number = 0;\r\n  @Input() set setViewId(data: number) {\r\n    if (data) {\r\n      this.viewId = data;\r\n      this.getPivotSettings();\r\n      this.getPivotState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: SEDataEntry | undefined;\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  stateData: UserStateAndSetttings | undefined;\r\n\r\n  computingType = ComputingType;\r\n\r\n  eventsCustomAction: Subject<string> = new Subject<string>();\r\n  pivotGridNoDataMessage = '';\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  firstAvailableId = 0;\r\n\r\n  currencyDropdownSelected: any;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n  canCallSaveState = false;\r\n  adminSetNewState = false;\r\n\r\n  pivotSummaryDisplayModesSubtotals: ComboBox[] = [\r\n    { id: undefined, name: 'Same as the Data Fields' },\r\n    { id: 'percentOfColumnTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowTotal', name: 'Always Rows' },\r\n  ];\r\n\r\n  pivotSummaryDisplayModesGrandTotals: ComboBox[] = [\r\n    { id: 'percentOfColumnGrandTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowGrandTotal', name: 'Always Rows' },\r\n    { id: 'percentOfGrandTotal', name: 'Table (Absolute) Grand Total' },\r\n  ];\r\n\r\n  shownYears: any = undefined;\r\n  invisibleFields: PivotGridField[] = [];\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateChange: Subject<UserStateAndSetttings> =\r\n    new Subject<UserStateAndSetttings>();\r\n\r\n  shownYearsPrev: any = undefined;\r\n  isAdmin = false;\r\n  pivotStateId: number = 0;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n    // this.stateData = new UserStateAndSetttings();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.sharedService.getPivotSettings(this.viewId).subscribe((res) => {\r\n      this.pivotGridOptions = res.Data;\r\n      if (this.pivotGridOptions) {\r\n        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPivotState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService.getPivotState(this.viewId).subscribe((res) => {\r\n        // in case state is not exists yet\r\n        try {\r\n          const stateRes =\r\n            typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n          stateData = Common.realMerge(\r\n            new UserStateAndSetttings(),\r\n            JSON.parse(stateRes.StateData)\r\n          );\r\n          this.pivotStateId = stateRes.PivotStateId;\r\n        } catch {\r\n          stateData = new UserStateAndSetttings();\r\n          // stateData.state.fields = this.getGridFields();\r\n        }\r\n\r\n        this.directDatasourceRenderPivot(stateData);\r\n      });\r\n    } else {\r\n      this.directDatasourceRenderPivot(this.stateData);\r\n    }\r\n  }\r\n\r\n  async directDatasourceRenderPivot(stateData: UserStateAndSetttings) {\r\n    if (this.pivotGridOptions.settings.isCube) {\r\n      // let token = await this.getAzureAnalysisToken();\r\n      // let cubesStore = CubeStoreHelper.setCubeStore(\r\n      //   this.pivotGridOptions.settings.cubeSettings.catalog,\r\n      //   this.pivotGridOptions.settings.cubeSettings.cube,\r\n      //   token,\r\n      //   this.devEndpoint\r\n      // );\r\n      // this.pivotGridOptions.pivotGridSource.store = cubesStore;\r\n      // this.pivotGridDataSource = new PivotGridDataSource(\r\n      //   this.pivotGridOptions.pivotGridSource as any\r\n      // );\r\n      // setTimeout(() => {\r\n      //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);\r\n      // }, 5000);\r\n      // this.saveStateEnabled = true;\r\n      // if (stateData.settings) {\r\n      //   if (!stateData.settings.currency) {\r\n      //     stateData.settings.currency =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n      //   }\r\n      //   if (!stateData.settings.currencyConversionType) {\r\n      //     stateData.settings.currencyConversionType =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n      //   }\r\n      //   if (!stateData.settings.selectedYear) {\r\n      //     stateData.settings.selectedYear.PeriodKey = 2021;\r\n      //   }\r\n      // }\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.stateData = stateData;\r\n      // this.fillPivotCube();\r\n      // setTimeout(() => {\r\n      //   this.canCallSaveState = true;\r\n      // }, 300);\r\n    } else {\r\n      if (stateData.settings) {\r\n        if (!stateData.settings.currency) {\r\n          stateData.settings.currency =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n        }\r\n        if (!stateData.settings.currencyConversionType) {\r\n          stateData.settings.currencyConversionType =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n        }\r\n        if (!stateData.settings.selectedYear?.PeriodKey) {\r\n          // stateData.settings.selectedYear = await this.getLatestAccessibleYear(\r\n          //   this.sharedService.getUserData().userId,\r\n          //   this.requestedView.databaseId,\r\n          //   this.requestedView.viewId\r\n          // );\r\n          stateData.settings.selectedYear = this.currentYear;\r\n        }\r\n        // if (!stateData.settings.unitOfVolume) {\r\n        //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(\r\n        //     this.requestedView.databaseId\r\n        //   );\r\n        // }\r\n        if (!stateData.settings.unitOfMass) {\r\n          // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(\r\n          //   this.requestedView.databaseId\r\n          // );\r\n          stateData.settings.unitOfMass = { Id: 105, Name: 'Thousand Tonnes' };\r\n        }\r\n      }\r\n\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      this.stateData = stateData;\r\n      if (this.previewData && this.previewData.length) {\r\n        //get all invisible fields\r\n        this.invisibleFields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => f.visible === false\r\n          );\r\n        //filter invisible fields\r\n        this.pivotGridOptions.pivotGridSource.fields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => !f.visible || !f.isCalculated\r\n          );\r\n        //get count of visible fields for calculated fields ids\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions.pivotGridSource.fields.length;\r\n        // remove all invisible data from the datasource\r\n        if (this.invisibleFields && this.invisibleFields.length > 0) {\r\n          for (const invisibleField of this.invisibleFields) {\r\n            this.previewData.forEach((obj) => {\r\n              delete obj[invisibleField.dataField];\r\n            });\r\n          }\r\n        }\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      } else {\r\n        this.readPivotDataFromApi();\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    this.canCallSaveState = true;\r\n\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (\r\n      this.viewId &&\r\n      this.canCallSaveState &&\r\n      this.pivotGridOptions &&\r\n      this.stateData\r\n    ) {\r\n      this.stateData.state = data;\r\n      this.stateChange.next(this.stateData);\r\n      // find all shown years and reload pivot grid on change\r\n      const yearField = this.stateData.state.fields.filter(\r\n        (f: any) => f.dataField === this.yearDataFieldName\r\n      );\r\n      const hasCagrOrChange =\r\n        this.stateData.settings.cagrState.isSet ||\r\n        this.stateData.settings.changePercentState.isSet;\r\n      if (yearField && hasCagrOrChange) {\r\n        const pivotGridInstance: any = this.pivotGrid?.instance;\r\n        const pivotFridDataSource = pivotGridInstance.getDataSource();\r\n        const areaIndex: number = yearField[0].areaIndex;\r\n        const uniqArrByText: any = lodash.uniqBy(\r\n          pivotGridInstance._dataController._columnsInfo[areaIndex],\r\n          'text'\r\n        );\r\n        this.shownYears = uniqArrByText.map((t: any) => parseInt(t.text));\r\n        // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists\r\n        if (yearField[0].sortOrder === 'desc') {\r\n          pivotFridDataSource.field(this.yearDataFieldName, {\r\n            sortOrder: 'asc',\r\n          });\r\n          pivotFridDataSource.load();\r\n        }\r\n        if (!lodash.isEqual(this.shownYears, this.shownYearsPrev)) {\r\n          this.shownYearsPrev = this.shownYears;\r\n          pivotFridDataSource.load();\r\n        }\r\n      }\r\n\r\n      // in case user is NOT admin and has disable automatic saving state or remember latest state\r\n      else if (!isChangeAutoSaveStatus) {\r\n        if (this.stateData.settings.rememberLatestState == undefined) {\r\n          this.stateData.settings.rememberLatestState =\r\n            this.pivotGridOptions.canSaveUserState;\r\n        }\r\n        if (this.stateData.settings.rememberLatestState == false) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.viewId,\r\n            0,\r\n            this.isAdmin,\r\n            JSON.stringify(this.stateData)\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (\r\n                data &&\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions &&\r\n                this.isAdmin\r\n              ) {\r\n                this.alertService.info(\r\n                  'The system will remember the last state!'\r\n                );\r\n                // after save state, save also settings\r\n                this.saveSettings(this.viewId, this.pivotGridOptions);\r\n                // set can save default state to false\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      return this.stateData.state;\r\n    }\r\n  }\r\n\r\n  deleteCustomState() {\r\n    this.adminSetNewState = false;\r\n    if (this.viewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.viewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = new UserStateAndSetttings();\r\n\r\n            this.directDatasourceRenderPivot(stateData);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveSettings(\r\n    currentlySelectedViewId: number,\r\n    optionsDataSource: PivotGridOptions\r\n  ): void {\r\n    let saveResult = false;\r\n    const optionsDataSourceTemp = { ...optionsDataSource };\r\n    optionsDataSourceTemp.pivotGridSource.fields =\r\n      optionsDataSourceTemp.pivotGridSource.fields.filter(\r\n        (f) => !f.isCalculated\r\n      );\r\n    // set store to empty, system will read fresh data from backend next time\r\n    optionsDataSourceTemp.pivotGridSource.store = [];\r\n  }\r\n\r\n  getPreviewData(studyData: PscSalesItem[]) {\r\n    const previewData: {\r\n      Market: string;\r\n      Company: string;\r\n      Brand: string;\r\n      Year: number;\r\n      Value: number;\r\n    }[] = [];\r\n\r\n    studyData.map((item: any) => {\r\n      this.previousYears.map((year: any) => {\r\n        previewData.push({\r\n          Market: item.Market,\r\n          Company: item.Company,\r\n          Brand: item.Brand,\r\n          Year: year.year,\r\n          Value: item[year.field],\r\n        });\r\n      });\r\n\r\n      previewData.push({\r\n        Market: item.Market,\r\n        Company: item.Company,\r\n        Brand: item.Brand,\r\n        Year: this.currentYear,\r\n        Value: item.CurrentYear,\r\n      });\r\n\r\n      // previewData.push({\r\n      //   Market: item.Market,\r\n      //   Company: item.Company,\r\n      //   Brand: item.Brand,\r\n      //   Year: this.foreCastYear,\r\n      //   Value: item.Forecast1,\r\n      // });\r\n    });\r\n    // console.log(previewData);\r\n    // this.pivotGridDataSource = new PivotGridDataSource({\r\n    //   store: previewData,\r\n    //   fields: this.getGridFields(),\r\n    // });\r\n\r\n    this.previewData = previewData;\r\n\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'Market',\r\n        area: 'row',\r\n        caption: 'Market',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'Company',\r\n        area: 'row',\r\n        caption: 'Company',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'Brand',\r\n        area: 'row',\r\n        caption: 'Brand',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 3,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n\r\n  readPivotDataFromApi() {\r\n    this.isLoadingService.add();\r\n    this.yearDataFieldName = 'Year';\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'EuropeanCountriesSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId,\r\n        typeof this.currencyDropdownSelected !== 'undefined'\r\n          ? this.currencyDropdownSelected.Id\r\n          : 0,\r\n        typeof this.unitOfMassDropdownSelected !== 'undefined'\r\n          ? this.unitOfMassDropdownSelected.Id\r\n          : 0,\r\n        typeof this.currencyConversionTypeSelected !== 'undefined'\r\n          ? this.currencyConversionTypeSelected\r\n          : 0\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyDataObj = res.Data;\r\n\r\n            const studyData = studyDataObj['EuropeanCountriesSales'];\r\n\r\n            const previewData: any[] = [];\r\n            let index = 0;\r\n            studyData.map((item: any, i: number) => {\r\n              this.volumeYears.map((d: any) => {\r\n                this.gridFields.map((field: any) => {\r\n                  if (typeof previewData[index] === 'undefined') {\r\n                    previewData[index] = {};\r\n                  }\r\n                  previewData[index][field.dataField] = item[field.dataField];\r\n                  if (field.dataField === 'Year') {\r\n                    previewData[index][field.dataField] = d.year;\r\n                  }\r\n                  if (field.dataField === 'Value') {\r\n                    previewData[index][field.dataField] = item[d.field];\r\n                  }\r\n                });\r\n                index++;\r\n              });\r\n            });\r\n\r\n            this.previewData = previewData;\r\n\r\n            // this.pivotGridDataSource = new PivotGridDataSource({\r\n            //   store: this.previewData,\r\n            //   fields: this.gridFields,\r\n            // });\r\n            if (typeof this.pivotGridOptions !== 'undefined') {\r\n              this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n              this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n              this.pivotGridDataSource = new PivotGridDataSource(\r\n                this.pivotGridOptions.pivotGridSource as any\r\n              );\r\n            }\r\n\r\n            this.fillPivot(this.pivotGridOptions, this.previewData);\r\n            // when pivot data is loaded allow with small delay save state to the database\r\n            setTimeout(() => {\r\n              this.canCallSaveState = true;\r\n            }, 300);\r\n\r\n            // console.log(this.previewData);\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataFieldName(fieldName: string) {\r\n    if (fieldName == 'ProductTypeSales') {\r\n      return 'ProductTypeSalesSHC';\r\n    }\r\n\r\n    return fieldName;\r\n  }\r\n\r\n  onOptionChanged(e: any) {}\r\n\r\n  onInitialized(e: any) {}\r\n\r\n  cellPrepared(e: any) {\r\n    // customize change % columns captions\r\n    // console.log(this.stateData?.settings.changePercentState.computingType);\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {\r\n      if (\r\n        e.cell.text &&\r\n        e.cell.text.startsWith(CalculatedFieldType.changePercent)\r\n      ) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex].toString() +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex].toString();\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n      //customize cagr columns captions\r\n      if (e.cell.text && e.cell.text.startsWith(CalculatedFieldType.cagr)) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex] +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex];\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.area === 'data') {\r\n      if (e.cell.value) {\r\n        e.cell.value.hasCd &&\r\n          e.cellElement.classList.add('pivot-grid-cell-has-cd');\r\n      }\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource &&\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n    ) {\r\n      const calculatedFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) =>\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.changePercent ||\r\n            f.calculatedFieldType === CalculatedFieldType.cagr\r\n        );\r\n      for (const calculatedField of calculatedFields) {\r\n        this.addCloseButtonToCalculatedField(\r\n          calculatedField.id,\r\n          calculatedField.calculatedFieldType\r\n        );\r\n      }\r\n    }\r\n\r\n    // change style for no data message\r\n    const noDataElement = e.component\r\n      .element()\r\n      .querySelector('.dx-pivotgrid-nodata');\r\n    if (noDataElement) {\r\n      setTimeout(() => {\r\n        if (this.pivotGridNoDataMessage) {\r\n          noDataElement.classList.add('noDataMessage');\r\n        } else {\r\n          noDataElement.classList.remove('noDataMessage');\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    if (this.pivotGrid && this.stateData && this.stateData.state) {\r\n      // Allow next rows if you want to enable disabling pivot during waiting for component response\r\n      //this.pivot.disabled = true;\r\n      // not allow to user change state too fast, pivot component needs some time to save emit state\r\n      //setTimeout(() => { this.pivot.disabled = false; }, 1000)\r\n    }\r\n  }\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    // this.pivot.disabled = true;\r\n    this.customizeContextMenu(e);\r\n\r\n    //if (e.area == \"row\" || e.area == \"column\") {\r\n    //    let id = e.columnIndex + \"\" + e.rowIndex;\r\n    //    let tooltip = $(\"<span></span>\").append($(\"<span id='\" + id + \"'></span>\").html(\"\")).appendTo(e.cellElement);\r\n    //    let field = $(\"#\" + id).closest('td');\r\n    //    field.attr('title', e.cell.text);\r\n    //}\r\n  }\r\n\r\n  customizeContextMenu(e: any): void {\r\n    this.updateDefaultContextMenuTextsAndIcons(e);\r\n    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Delete Calculated Field',\r\n        icon: 'fa fa-trash-alt',\r\n        onItemClick: () => {\r\n          const fieldToDelete = e.field as PivotGridField;\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (fieldToDelete.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n          this.deleteCalculatedField(e.field.id);\r\n        },\r\n      });\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Edit Calculated Field',\r\n        icon: 'fa fa-pencil-alt',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (e.field.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.isPercentOfTotalPopup = true;\r\n                this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n                  undefined || '';\r\n                this.pivotSummaryDisplayModesSubtotals[0].id =\r\n                  this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                    ? 'percentOfColumnTotal'\r\n                    : 'percentOfRowTotal';\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.isPercentOfChangePopup = true;\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.isCagrPopup = true;\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let openMenuItems = [];\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencySelection) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-money',\r\n        text: 'Change Currency',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencySelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencyConversion) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-exchange-alt',\r\n        text: 'Constant',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencyConversionSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfVolume) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-fill-drip',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('massUnitSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfMass) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-balance-scale',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('volumeUnitSelector');\r\n        },\r\n      });\r\n    }\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Reset to Default',\r\n      icon: 'fas fa-sync-alt',\r\n      onItemClick: () => {\r\n        this.deleteCustomState();\r\n      },\r\n    });\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Adjust Parameters',\r\n      icon: 'fa fa-sliders-h',\r\n      items: openMenuItems,\r\n    });\r\n\r\n    if (\r\n      e.field &&\r\n      e.field.area === 'data' &&\r\n      this.enabledInContextMenu(e.field)\r\n    ) {\r\n      let calculatedFieldsItems: any[] = [];\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfTotal) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.percentOfTotal,\r\n          onItemClick: () => {\r\n            this.isPercentOfTotalPopup = true;\r\n            this.pivotSummaryDisplayModesSubtotals[0].id =\r\n              this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n                ? 'percentOfColumnTotal'\r\n                : 'percentOfRowTotal';\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.percentOfTotalState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.percentOfTotalState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfChange) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.changePercent,\r\n          onItemClick: () => {\r\n            this.isPercentOfChangePopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.changePercentState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.changePercentState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isCagr) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.cagr,\r\n          onItemClick: () => {\r\n            this.isCagrPopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.cagrState.dataField = e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.cagrState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Add Calculated Field',\r\n        icon: 'fa fa-calculator',\r\n        items: calculatedFieldsItems,\r\n      });\r\n    }\r\n    // show only case if exist two or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter((f) =>\r\n        (<any>Object).values(PivotGridDataFieldType).includes(f.dataFieldType)\r\n      ).length >= 2\r\n    ) {\r\n      const dataFieldsHeaders =\r\n        this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n          ? 'Rows'\r\n          : 'Columns';\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Show Data Field Headers in ' + dataFieldsHeaders,\r\n        icon: 'fa fa-table',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            this.stateData.settings.dataFieldArea =\r\n              this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                ? DataFieldArea.row\r\n                : DataFieldArea.column;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteCalculatedField(fieldId: number) {\r\n    this.pivotGridOptions?.pivotGridSource.fields.splice(\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n        .map((m) => m.id)\r\n        .indexOf(fieldId),\r\n      1\r\n    );\r\n    this.firstAvailableId--;\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.readPivotDataFromApi();\r\n    } else {\r\n      if (typeof this.pivotGridOptions !== 'undefined') {\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDefaultContextMenuTextsAndIcons(e: any) {\r\n    let rowName = undefined;\r\n    let rowCaption;\r\n    if (e.cell?.path) {\r\n      if (e.cell && e.area === 'row') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.rowFields[path].dataField;\r\n        rowCaption = e.rowFields[path].caption;\r\n      } else if (e.cell && e.area === 'column') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.columnFields[path].dataField;\r\n        rowCaption = e.columnFields[path].caption;\r\n      }\r\n      const expandAll = e.items.find((f: any) => f.text.includes('Expand All'));\r\n      if (expandAll) {\r\n        expandAll.icon = 'fas fa-plus';\r\n        expandAll.text = 'Expand' + ' ' + rowCaption;\r\n      }\r\n      const collapseAll = e.items.find((f: any) =>\r\n        f.text.includes('Collapse All')\r\n      );\r\n      if (collapseAll) {\r\n        collapseAll.icon = 'fas fa-minus';\r\n        collapseAll.text = 'Collapse' + ' ' + rowCaption;\r\n      }\r\n    }\r\n    const fieldChooser = e.items.find((f: any) =>\r\n      f.text.includes('Show Field Chooser')\r\n    );\r\n    if (fieldChooser) {\r\n      fieldChooser.text = 'FieldChooser Text';\r\n    }\r\n    const exportToExcel = e.items.find((f: any) =>\r\n      f.text.includes('Export to')\r\n    );\r\n    if (exportToExcel) {\r\n      exportToExcel.text = 'Export to excel';\r\n    }\r\n    const sorts = e.items.filter((f: any) => f.text.includes('Sort'));\r\n    if (sorts) {\r\n      for (let sort of sorts) {\r\n        sort.icon = 'fas fa-sort';\r\n      }\r\n    }\r\n  }\r\n\r\n  enabledInContextMenu(field: any): boolean {\r\n    if (field.dataFieldType === PivotGridDataFieldType.AvgPrice) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addCloseButtonToCalculatedField(fieldId: number, datafieldType: string) {\r\n    const calculatedFieldObj = $(\r\n      \".dx-area-field-content:contains('\" + datafieldType + \"')\"\r\n    ).append(\r\n      \"<i id='\" +\r\n        Common.removeAllSpaces(datafieldType) +\r\n        \"' class='closeButton fas fa-times-circle'></i>\"\r\n    );\r\n\r\n    calculatedFieldObj\r\n      .parent()\r\n      .parent()\r\n      .css('padding-right', '0')\r\n      .css('margin-right', '0 !important');\r\n\r\n    calculatedFieldObj\r\n      .children()\r\n      .off()\r\n      .on('click', () => {\r\n        if (typeof this.stateData !== 'undefined') {\r\n          switch (datafieldType) {\r\n            case CalculatedFieldType.percentOfTotal:\r\n            case CalculatedFieldType.percentOfGrandTotal:\r\n              this.stateData.settings.percentOfTotalState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.changePercent:\r\n              this.stateData.settings.changePercentState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.cagr:\r\n              this.stateData.settings.cagrState.isSet = false;\r\n              break;\r\n          }\r\n        }\r\n        this.deleteCalculatedField(fieldId);\r\n      });\r\n  }\r\n\r\n  currencySelectionChanged(currency: SEDataEntry) {\r\n    this.currencyDropdownSelected = currency;\r\n    // this.stateData.settings.currency = currency;\r\n    this.readPivotDataFromApi();\r\n    // // on currency change update % of total caption if exists\r\n    // const percentOfTotalField =\r\n    //   this.pivotGridOptions.pivotGridSource.fields.find(\r\n    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal\r\n    //   );\r\n    // if (percentOfTotalField) {\r\n    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();\r\n    // }\r\n  }\r\n\r\n  currencyConversionSelectionChanged(\r\n    currencyConversionType: CurrencyConversionTypeEnum\r\n  ) {\r\n    this.currencyConversionTypeSelected = currencyConversionType;\r\n    // this.stateData.settings.currencyConversionType = currencyConversionType;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  massUnitSelectionChanged(unitOfMass: SEDataEntry) {\r\n    this.unitOfMassDropdownSelected = unitOfMass;\r\n    // this.stateData.settings.unitOfMass = unitOfMass;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  getUserSettings() {\r\n    const userSettings = {\r\n      currency: {\r\n        Id: this.selectedCurrency.Id,\r\n        Code: this.selectedCurrency.CurrencyCode,\r\n        Name: this.selectedCurrency.CurrencyName,\r\n      },\r\n      currencyConversionType: 1,\r\n      unitOfMass: { Id: 103, Name: 'Thousand Lbs' },\r\n      unitOfMeasure: { Id: 101, Name: 'Metric Tonnes' },\r\n      unitOfVolume: { Id: 7, Name: 'Quart (US)' },\r\n      selectedYear: {\r\n        PeriodKey: this.currentYear,\r\n        Name: this.currentYear.toString(),\r\n      },\r\n      percentOfTotalState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        basedOn: 'Subtotals',\r\n        summaryDisplayMode: 'percentOfColumnTotal',\r\n      },\r\n      changePercentState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'Previous (Shown) Year',\r\n      },\r\n      cagrState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'First (Shown) Year',\r\n      },\r\n      dataFieldArea: 'column',\r\n      userChartSetting: {\r\n        dataFieldsDisplayMode: 'singleAxis',\r\n        chartType: 'Column',\r\n      },\r\n      isReducedDataSource: false,\r\n      rememberLatestState: true,\r\n    };\r\n\r\n    return userSettings;\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.getUserSettings();\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    const menuSettings = this.pivotGridOptions?.settings?.menuSettings;\r\n    const pivotFields = this.pivotGridDataSource.fields();\r\n    const userSettings = this.getUserSettings();\r\n    let finalData;\r\n    if (this.previewData[0].hasOwnProperty('Year')) {\r\n      finalData = this.previewData.sort((a, b) => a.Year - b.Year);\r\n    } else {\r\n      finalData = this.previewData;\r\n    }\r\n    this.studyService\r\n      .exportToExcel(\r\n        finalData,\r\n        pivotFields,\r\n        userSettings,\r\n        title,\r\n        menuSettings,\r\n        0\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          let fileName = 'PivotTest';\r\n          if (title.length > 3) {\r\n            fileName = title.split(' ').join('');\r\n            fileName = fileName.split('-').join('_');\r\n          }\r\n          var file = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n          var fileURL = URL.createObjectURL(file);\r\n          let a = document.createElement('a');\r\n          document.body.appendChild(a);\r\n          a.style.display = 'none';\r\n          a.href = fileURL;\r\n          a.target = '_blank';\r\n          a.download = `${fileName}.xlsx`;\r\n          a.click();\r\n          a.remove();\r\n          this.studyService.changeExcelLoading(false);\r\n        },\r\n        (error) => {\r\n          this.studyService.changeExcelLoading(false);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  exportToCvs() {\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    this.studyService.exportToCsv(this.previewData, fileName);\r\n  }\r\n\r\n  exportToShanptshot() {\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet('Main sheet');\r\n    exportPivotGrid({\r\n      component: this.pivotGrid?.instance,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        const excelCell = options;\r\n        excelCell.excelCell.font = { name: 'Calibri', size: 11 };\r\n        excelCell.excelCell.alignment = { horizontal: 'left', vertical: 'top' };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer: BlobPart) {\r\n        saveAs(\r\n          new Blob([buffer], { type: 'application/octet-stream' }),\r\n          fileName + '.xlsx'\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  fillPivot(pivotGridOptions: PivotGridOptions, pivotData: any) {\r\n    this.saveStateEnabled = false;\r\n    const selectedYear = this.stateData\r\n      ? this.stateData.settings.selectedYear\r\n      : this.currentYear;\r\n\r\n    if (pivotGridOptions && this.stateData?.settings) {\r\n      // If is visible like default, add % of total to pivot\r\n      if (this.stateData.settings.percentOfTotalState.isSet) {\r\n        this.addPercentOfTotalsToPivot(true);\r\n      }\r\n      // If is visible like default, add change % to pivot\r\n      if (this.stateData.settings.changePercentState.isSet) {\r\n        this.addPrecentOfChangeToPivot(true);\r\n      }\r\n      // If is visible like default, add CAGR to pivot\r\n      if (this.stateData.settings.cagrState.isSet) {\r\n        this.addCAGRToPivot(true);\r\n      }\r\n\r\n      const pivotGridSource = new PivotGridSource();\r\n\r\n      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;\r\n      pivotGridSource.store = pivotData;\r\n      // make copy of datasource without reference to old object\r\n      let sourceCopy = lodash.cloneDeep(pivotGridSource);\r\n      // if administrator set default sorting to true do not use any special sorting\r\n      if (!pivotGridOptions.settings.useDefaultSorting) {\r\n        // if some special sorting is applied\r\n        if (\r\n          pivotGridOptions.settings.specialSorting &&\r\n          pivotGridOptions.settings.specialSorting.length\r\n        ) {\r\n          for (let specialSorting of pivotGridOptions.settings.specialSorting) {\r\n            if (specialSorting.fieldName) {\r\n              let orderAray: any[] = [];\r\n              if (pivotData) {\r\n                let rowData = 0;\r\n                for (let row of pivotData) {\r\n                  // if (row.Year == selectedYear.PeriodKey) {\r\n                  // in case value datafield is not exists, must exists unit\r\n                  rowData = row.Value === undefined ? row.Unit : row.Value;\r\n                  if (\r\n                    orderAray.some(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    )\r\n                  ) {\r\n                    orderAray.find(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    ).valueSum += rowData;\r\n                  } else {\r\n                    orderAray.push({\r\n                      field: row[specialSorting.fieldName],\r\n                      valueSum: rowData,\r\n                    });\r\n                  }\r\n                  // }\r\n                }\r\n                orderAray = orderAray\r\n                  .sort((a, b) => b.valueSum - a.valueSum)\r\n                  .map((m) => m.field);\r\n                orderAray.forEach((item: string, index: number) => {\r\n                  if (item.startsWith(specialSorting.beginningWith)) {\r\n                    orderAray.push(orderAray.splice(index, 1)[0]);\r\n                  }\r\n                });\r\n                const sortingField = sourceCopy.fields.find(\r\n                  (f) => f.dataField === specialSorting.fieldName\r\n                );\r\n                if (sortingField) {\r\n                  sortingField.sortOrder = 'asc';\r\n                  sortingField.sortingMethod = (b: any, a: any) => {\r\n                    // if (!this.isHeaderFilterLoading) {\r\n                    //   for (const item of orderAray) {\r\n                    //     if (a.value === item) {\r\n                    //       return 1;\r\n                    //     }\r\n                    //     if (b.value === item) {\r\n                    //       return -1;\r\n                    //     }\r\n                    //   }\r\n                    // }\r\n                    return b.value.localeCompare(a.value);\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this.applySortingRolesByYear();\r\n        }\r\n      }\r\n      if (this.pivotGridDataSource) {\r\n        this.pivotGridDataSource.dispose();\r\n      }\r\n\r\n      // check if source contains dataType property and set visibility to false\r\n      if (\r\n        pivotGridSource.store &&\r\n        pivotGridSource.store.length &&\r\n        pivotGridSource.store[0].DataType\r\n      ) {\r\n        let dataType = sourceCopy.fields.filter(\r\n          (d) => d.dataField === 'DataType'\r\n        );\r\n        dataType[0].visible = false;\r\n      }\r\n\r\n      // check all datafields if contains an exception in calculating\r\n      const allDatafields = sourceCopy.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      );\r\n\r\n      for (let field of allDatafields) {\r\n        let newField = this.returnSpecialSumamryField(field);\r\n        if (newField) {\r\n          sourceCopy.fields.push(newField);\r\n          field.visible = false;\r\n        }\r\n      }\r\n\r\n      // remove unused properties\r\n      for (let field of sourceCopy.fields) {\r\n        // remove group properties when group is empty\r\n        if (field.groupName == '') {\r\n          // delete field.groupName;\r\n          // delete field.groupIndex;\r\n        }\r\n        // in case fileld is grouped field parse index to int\r\n        else if (field.groupName && field.groupName.length > 0) {\r\n          let groupIndex: number = field.groupIndex\r\n            ? parseInt(field.groupIndex.toString())\r\n            : 0;\r\n          field.groupIndex = groupIndex;\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof this.pivotGridOptions !== 'undefined' &&\r\n        this.pivotGridOptions.settings.groupedFields\r\n      ) {\r\n        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {\r\n          let field = {\r\n            groupName: groupedField.groupName,\r\n            area: groupedField.area,\r\n          };\r\n          sourceCopy.fields.push(field as PivotGridField);\r\n        }\r\n      }\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(sourceCopy as any);\r\n\r\n      // this solves alphabetical filtering in filters\r\n      setTimeout(() => {\r\n        const source = this.pivotGrid?.instance.getDataSource();\r\n        const getFieldValues = (source as any).getFieldValues;\r\n        this.isHeaderFilterLoading = false;\r\n        let that = this;\r\n        (source as any).getFieldValues = function () {\r\n          that.isHeaderFilterLoading = true;\r\n          return getFieldValues.apply(this, arguments).always(function () {\r\n            that.isHeaderFilterLoading = false;\r\n          });\r\n        };\r\n      }, 1);\r\n\r\n      CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);\r\n\r\n      if (\r\n        pivotGridOptions.settings &&\r\n        (pivotGridOptions.settings.menuSettings.isChart ||\r\n          pivotGridOptions.settings.charts.isVisible)\r\n      ) {\r\n        // this.initChart();\r\n      }\r\n    }\r\n    //cutomize texts in pivot\r\n    // this.updateDefaultPivotTexts();\r\n    // apply special filtering\r\n    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {\r\n    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);\r\n    //}\r\n\r\n    setTimeout(() => {\r\n      this.saveStateEnabled = true;\r\n    }, 1);\r\n  }\r\n\r\n  returnSpecialSumamryField(fieldOriginal: PivotGridField) {\r\n    if (fieldOriginal.summaryType === 'range') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption || '';\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.dataField = fieldOriginal.dataField || '';\r\n      fieldNew.calculateCustomSummary = (e: any) =>\r\n        this.calculateSummaryValueRange(e, fieldOriginal);\r\n      fieldNew.customizeText = (e: any) => this.customizeRangeText(e);\r\n      fieldNew.isCalculated = true;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.range;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else if (fieldOriginal.summaryType === 'sumCdOd') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption;\r\n      fieldNew.calculateCustomSummary = (options: any) =>\r\n        this.calculateSummaryValueCdOd(options, fieldOriginal);\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.isCalculated = false;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.none;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueRange(e: any, field: PivotGridField) {\r\n    const valueNearZero = Number.EPSILON;\r\n    switch (e.summaryProcess) {\r\n      case 'start':\r\n        e.totalValue = 0;\r\n        e.values = [0, 0];\r\n        break;\r\n      case 'calculate':\r\n        if (e.value != -1.7976931348623157e308) {\r\n          if (!e.values[0] || !e.values[1]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value < e.values[0]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value > e.values[1]) {\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n        }\r\n        break;\r\n      case 'finalize':\r\n        let min = e.values[0]\r\n          ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        let max = e.values[1]\r\n          ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        // if (\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find(\r\n        //     (v) => v === Number(min)\r\n        //   ) ||\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))\r\n        // ) {\r\n        //   ErrorHelper.informAdministrator(\r\n        //     this.appCommonDataService,\r\n        //     'Unhandled range value - (' +\r\n        //       min +\r\n        //       ')(' +\r\n        //       max +\r\n        //       ') ' +\r\n        //       Common.objToString(this.requestedView) +\r\n        //       'Environment: ' +\r\n        //       Common.objToString(\r\n        //         this.appEnvironmentData.getEnvironmentSettings()\r\n        //       ) +\r\n        //       ' User: ' +\r\n        //       Common.objToString(this.sharedService.getUserData())\r\n        //   );\r\n        // }\r\n        if (min === max) {\r\n          e.totalValue = min;\r\n        } else if (!min) {\r\n          e.totalValue = max;\r\n        } else {\r\n          e.totalValue = min + ' - ' + max;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  customizeRangeText(e: any) {\r\n    if (e.value === undefined) {\r\n      return SpecialValueType?.EmDash;\r\n    } else {\r\n      return e.value;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueCdOd(options: any, field: PivotGridField) {\r\n    switch (options.summaryProcess) {\r\n      case 'start':\r\n        options.totalValue = {\r\n          value: 0,\r\n          hasCd: false,\r\n          valueOf() {\r\n            return this.value;\r\n          },\r\n          toString() {\r\n            return this.value.toString();\r\n          },\r\n          indexOf() {\r\n            const stringValue = this.toString();\r\n            return stringValue.indexOf.apply(this, arguments);\r\n          },\r\n        };\r\n        break;\r\n      case 'calculate':\r\n        options.totalValue.value += options.value[field.dataField] || 0;\r\n        options.totalValue.hasCd =\r\n          options.totalValue.hasCd || options.value.DataType === 'cd';\r\n        break;\r\n      case 'finalize':\r\n        let totalValue = options.totalValue;\r\n        totalValue.value = (totalValue.value as number)\r\n          .toFixed(field.format?.precision)\r\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        options.totalValue = totalValue;\r\n        break;\r\n    }\r\n  }\r\n\r\n  applySortingRolesByYear() {\r\n    this.yearDataFieldName = 'Year';\r\n    setTimeout(() => {\r\n      const pivotGridDataSource: any = this.pivotGrid?.instance.getDataSource();\r\n      const columnFields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'column'\r\n      );\r\n      const datafields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'data'\r\n      );\r\n      const yearFieldOnFirstPositon = columnFields.filter(\r\n        (f: any) => f.areaIndex === 0 && f.dataField === this.yearDataFieldName\r\n      );\r\n\r\n      // apply this role only in case, year field is on first column position\r\n      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {\r\n        const rowFields = pivotGridDataSource._fields.filter(\r\n          (f: any) => f.area === 'row'\r\n        );\r\n        const selectedYear = this.currentYear;\r\n        // const selectedYear = this.stateData\r\n        //   ? this.stateData.settings.selectedYear.PeriodKey\r\n        //   : 2021;\r\n        if (selectedYear) {\r\n          for (const field of rowFields) {\r\n            pivotGridDataSource.field(field.dataField, {\r\n              sortBySummaryField: datafields\r\n                ? datafields.filter((f: any) => f.areaIndex === 0)[0].dataField\r\n                : undefined,\r\n              sortBySummaryPath: [selectedYear],\r\n              sortOrder: 'desc',\r\n            });\r\n          }\r\n          pivotGridDataSource.load();\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setCalculatedFieldFromTopMenu(value: any) {\r\n    const type = value.itemName;\r\n    const dataField = value.dataField;\r\n    switch (type) {\r\n      case CalculatedFieldType.percentOfTotal:\r\n        this.isPercentOfTotalPopup = true;\r\n        this.pivotSummaryDisplayModesSubtotals[0].id =\r\n          this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n            ? 'percentOfColumnTotal'\r\n            : 'percentOfRowTotal';\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.percentOfTotalState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.changePercent:\r\n        this.isPercentOfChangePopup = true;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.changePercentState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.cagr:\r\n        this.isCagrPopup = true;\r\n        // this.stateData?.settings.cagrState.dataField = dataField;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.cagrState.dataField = dataField;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // %of totals\r\n  summaryDisplayModeItems: any;\r\n  percentOfTotalBasedOn: string = 'Subtotals';\r\n  percentInDirection: string = '';\r\n  onBasedOnChange(isInit: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.basedOn =\r\n        this.percentOfTotalBasedOn;\r\n    }\r\n\r\n    this.summaryDisplayModeItems =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? this.pivotSummaryDisplayModesSubtotals\r\n        : this.pivotSummaryDisplayModesGrandTotals;\r\n    if (isInit === false && typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';\r\n    }\r\n  }\r\n\r\n  percentOfChangeComputeType: string = '';\r\n  onComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.changePercentState.computingType =\r\n        this.percentOfChangeComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.changePercentState.computingType =\r\n    //     ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  cagrComputeType: string = '';\r\n  onCagrComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.computingType = this.cagrComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  addPercentOfTotalsToPivot(iSCallFromFillPivot: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n        this.percentInDirection;\r\n    }\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotArray(iSCallFromFillPivot: boolean) {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of total exists\r\n      const percentOfTotal = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) =>\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal\r\n      );\r\n\r\n      if (percentOfTotal && this.pivotGridDataSource) {\r\n        fieldId = percentOfTotal.id;\r\n        percentOfTotal.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        percentOfTotal.caption = this.getCaptionForPercentOfTotal();\r\n        percentOfTotal.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        percentOfTotal.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridDataSource.field(percentOfTotal.id, {\r\n          summaryDisplayMode: percentOfTotal.summaryDisplayMode,\r\n          caption: percentOfTotal.caption,\r\n          calculatedFieldType: percentOfTotal.calculatedFieldType,\r\n          dataField:\r\n            this.stateData?.settings.percentOfTotalState.dataField || 'Value',\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        // CommonHelper.updatePlaceholders(\r\n        //   this.pivotGridDataSource,\r\n        //   this.stateData\r\n        // );\r\n      } else {\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions?.pivotGridSource.fields.length || 0;\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfTotal();\r\n        field.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = undefined;\r\n        field.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            1,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n\r\n        if (\r\n          !iSCallFromFillPivot &&\r\n          typeof this.pivotGridOptions !== 'undefined'\r\n        ) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfTotalPopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.percentOfTotalState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotCube(iSCallFromFillPivot: boolean) {\r\n    this.removeAllHiddenCalculatedFields();\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForPercentOfTotal();\r\n    field.dataField =\r\n      this.stateData?.settings.percentOfTotalState.dataField || '';\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = undefined;\r\n    field.summaryDisplayMode =\r\n      this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? CalculatedFieldType.percentOfTotal\r\n        : CalculatedFieldType.percentOfGrandTotal;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isPercentOfTotalPopup = false;\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  removeAllHiddenCalculatedFields() {\r\n    if (this.stateData?.state && this.pivotGridDataSource) {\r\n      this.stateData.state.fields = this.stateData.state.fields.filter(\r\n        (a: any) => a.area !== undefined\r\n      );\r\n      this.pivotGridDataSource.state(this.stateData.state);\r\n    }\r\n  }\r\n\r\n  getCaptionForPercentOfTotal(): string {\r\n    let caption = '';\r\n    //check if exist 2 or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions?.pivotGridSource.fields.filter(\r\n        (f: any) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfTotaldatafield =\r\n        this.stateData?.settings.percentOfTotalState.dataField;\r\n      let currentDatafieldCaption = '';\r\n      if (this.pivotGridOptions.settings.isCube) {\r\n        currentDatafieldCaption =\r\n          // this.pivotGridOptions.pivotGridSource.fields.find(\r\n          //   (f) => f.dataField === percentOfTotaldatafield\r\n          // ).caption;\r\n          'Cube Caption';\r\n      } else {\r\n        if (typeof this.pivotGridOptions !== 'undefined') {\r\n          const fieldCaption =\r\n            this.pivotGridOptions.pivotGridSource.fields.find(\r\n              (f: any) => f.dataFieldType === percentOfTotaldatafield\r\n            );\r\n          if (fieldCaption) {\r\n            currentDatafieldCaption = fieldCaption.caption;\r\n          }\r\n        }\r\n      }\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption\r\n          : CalculatedFieldType.percentOfGrandTotal +\r\n            ' ' +\r\n            currentDatafieldCaption;\r\n    } else {\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal\r\n          : CalculatedFieldType.percentOfGrandTotal;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addPrecentOfChangeToPivot(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of change exists\r\n      const percentOfChange =\r\n        this.pivotGridOptions?.pivotGridSource.fields.find(\r\n          (f) => f.calculatedFieldType === CalculatedFieldType.changePercent\r\n        );\r\n      if (percentOfChange && this.pivotGridDataSource) {\r\n        fieldId = percentOfChange.id;\r\n        this.pivotGridDataSource.field(percentOfChange.id, {\r\n          caption: this.getCaptionForPercentOfChange(),\r\n          dataField:\r\n            this.stateData?.settings.changePercentState.dataField || 'Value',\r\n          calculateSummaryValue: (e: any) =>\r\n            this.calculateSummaryValuePercentOfChange(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfChange();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.changePercentState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValuePercentOfChange(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.changePercent;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfChangePopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.changePercentState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSummaryValuePercentOfChange(e: any): any {\r\n    if (e.parent('column')) {\r\n      let base;\r\n      if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n      } else if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        let yearIndex = 0;\r\n        for (const index in e.parent('column').children()) {\r\n          if (\r\n            e\r\n              .parent('column')\r\n              .children()\r\n              [index].value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName)\r\n          ) {\r\n            yearIndex = parseInt(index);\r\n            break;\r\n          }\r\n        }\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const returnValue = e.value() / base.value() - 1;\r\n      return isNaN(returnValue) ||\r\n        (returnValue && returnValue.toString() === 'Infinity')\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCaptionForPercentOfChange() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfChangeDataField =\r\n        this.stateData?.settings.changePercentState.dataField;\r\n\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f: any) => f.dataFieldType === percentOfChangeDataField\r\n      );\r\n\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n\r\n      switch (percentOfChangeDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.changePercent;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.changePercent;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addCAGRToPivot(iSCallFromFillPivot: boolean): void {\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addCAGRToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addCAGRToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotArray(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case cagr exists, remove and recreate it (case for edit)\r\n      const cagr = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) => f.calculatedFieldType === CalculatedFieldType.cagr\r\n      );\r\n      if (cagr && this.pivotGridDataSource) {\r\n        fieldId = cagr.id;\r\n        this.pivotGridDataSource.field(cagr.id, {\r\n          dataField: this.stateData?.settings.cagrState.dataField || 'Value',\r\n          caption: this.getCaptionForCagr(),\r\n          calculateSummaryValue: (e: any) => this.calculateSummaryValueCagr(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForCagr();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.cagrState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValueCagr(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.cagr;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isCagrPopup = false;\r\n      if (this.stateData) this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotCube(iSCallFromFillPivot: boolean): void {\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForCagr();\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.dataField = this.stateData?.settings.cagrState.dataField || 'Value';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = (e: any) => this.calculateSummaryValueCagr(e);\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType = CalculatedFieldType.cagr;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isCagrPopup = false;\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  getCaptionForCagr() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const cagrDataField = this.stateData?.settings.cagrState.dataField;\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f) => f.dataField === cagrDataField\r\n      );\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n      switch (cagrDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.cagr;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.cagr;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  calculateSummaryValueCagr(e: any) {\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.parent('column') && shownYearsInPivot) {\r\n      let base;\r\n      let yearIndex = 0;\r\n      let prevYearIndex = 0;\r\n      for (const index in e.parent('column').children()) {\r\n        if (\r\n          e.parent('column').children()[index].value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName)\r\n        ) {\r\n          yearIndex = parseInt(index);\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n        prevYearIndex = 0;\r\n      } else if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();\r\n      const yearSpan =\r\n        shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];\r\n      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;\r\n      return isNaN(returnValue) || returnValue.toString() === 'Infinity'\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeAutoSaveStatus(statusValue: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.rememberLatestState = statusValue;\r\n    }\r\n    if (statusValue == false) {\r\n      this.alertService.info('The system will remember this state!');\r\n    } else {\r\n      this.alertService.info('The system will remember the last used state!');\r\n    }\r\n    this.canCallSaveState = true;\r\n    this.customSaveState(this.stateData?.state, true);\r\n  }\r\n}\r\n","<app-preview-top-menu\r\n  [setSelectedCurrency]=\"selectedCurrency\"\r\n  [pivotGridOptions]=\"pivotGridOptions\"\r\n  (currencySelectionChanged)=\"currencySelectionChanged($event)\"\r\n  (currencyConversionSelectionChanged)=\"\r\n    currencyConversionSelectionChanged($event)\r\n  \"\r\n  (massUnitSelectionChanged)=\"massUnitSelectionChanged($event)\"\r\n  (onExportToExcel)=\"exportToExcel()\"\r\n  (onExportToCvs)=\"exportToCvs()\"\r\n  (onExportSnapshot)=\"exportToShanptshot()\"\r\n  (calculatedFieldItemSelected)=\"setCalculatedFieldFromTopMenu($event)\"\r\n  (onChangeAutoSaveStatus)=\"onChangeAutoSaveStatus($event)\"\r\n></app-preview-top-menu>\r\n<dx-pivot-grid\r\n  id=\"pivotGrid\"\r\n  #pivotGrid\r\n  [allowSortingBySummary]=\"true\"\r\n  (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n  (onOptionChanged)=\"onOptionChanged($event)\"\r\n  (onInitialized)=\"onInitialized($event)\"\r\n  (onContentReady)=\"onContentReady($event)\"\r\n  (onCellPrepared)=\"cellPrepared($event)\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n  [allowFiltering]=\"pivotGridOptions?.settings?.allowFiltering || false\"\r\n  [allowExpandAll]=\"pivotGridOptions?.settings?.allowExpandAll || false\"\r\n  [showBorders]=\"pivotGridOptions?.settings?.showBorders || false\"\r\n  [showColumnGrandTotals]=\"\r\n    pivotGridOptions?.settings?.showColumnGrandTotals || false\r\n  \"\r\n  [showRowGrandTotals]=\"pivotGridOptions?.settings?.showRowGrandTotals || false\"\r\n  [showRowTotals]=\"pivotGridOptions?.settings?.showRowTotals || false\"\r\n  [showColumnTotals]=\"pivotGridOptions?.settings?.showColumnTotals || false\"\r\n  [showTotalsPrior]=\"pivotGridOptions?.settings?.showTotalsPrior || ''\"\r\n  [dataFieldArea]=\"stateData?.settings?.dataFieldArea || ''\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n  <dxo-state-storing\r\n    [enabled]=\"saveStateEnabled\"\r\n    type=\"custom\"\r\n    [customSave]=\"customSaveState\"\r\n    [customLoad]=\"customLoadState\"\r\n    [savingTimeout]=\"300\"\r\n  >\r\n  </dxo-state-storing>\r\n</dx-pivot-grid>\r\n\r\n<!-- popup for % of total -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"250\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfTotalPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute '% Of Total':</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\">Based on</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"['Subtotals', 'Grand Totals']\"\r\n                [(value)]=\"percentOfTotalBasedOn\"\r\n                (onValueChanged)=\"onBasedOnChange(false)\"\r\n                (onInitialized)=\"onBasedOnChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"summaryDisplayModeItems\" class=\"dx-field\">\r\n            <div class=\"dx-field-label\">In Direction</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-select-box\r\n                [items]=\"summaryDisplayModeItems\"\r\n                displayExpr=\"name\"\r\n                valueExpr=\"id\"\r\n                [(value)]=\"percentInDirection\"\r\n              >\r\n              </dx-select-box>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                [disabled]=\"false\"\r\n                (onClick)=\"addPercentOfTotalsToPivot(false)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for % of change -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfChangePopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute change, %:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"percentOfChangeComputeType\"\r\n                (onValueChanged)=\"onComputeTypeChange(false)\"\r\n                (onInitialized)=\"onComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addPrecentOfChangeToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for CAGR -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isCagrPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute CAGR:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"cagrComputeType\"\r\n                (onValueChanged)=\"onCagrComputeTypeChange(false)\"\r\n                (onInitialized)=\"onCagrComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addCAGRToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Subject } from 'rxjs';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Country } from 'src/model/country.model';\r\nimport { DataEntryPSC } from 'src/model/dataEntryPSC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { PscEuropeanCountrySales } from 'src/model/psc-europeanCountrySales.model';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { CommonService } from 'src/services/common.service';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-european-country-sales',\r\n  templateUrl: './european-country-sales.component.html',\r\n  styleUrls: ['./european-country-sales.component.css'],\r\n})\r\nexport class EuropeanCountrySalesComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: PscEuropeanCountrySales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    EuropeanCountriesSales: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: PscSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  myYears: any[] = [];\r\n  volumeYears: any[] = [];\r\n  volumeYearsShow: any[] = [];\r\n  foreCastYear1: number = 0;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  companyLists: DataEntryPSC[] = [];\r\n  europeanCountryLists: Country[] = [];\r\n  brandLists: DataEntryPSC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n      this.getPivotSettings();\r\n      this.getGridState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n  deleteCommentConfirmPopup: boolean = false;\r\n  deleteResetConfirmPopup: boolean = false;\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n    'Forecast1',\r\n  ];\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  calculatorContextMenuItems: any[] = [];\r\n  pivotStateId: number = 0;\r\n\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateData: any | undefined;\r\n  stateChange: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private commonService: CommonService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Market: [null, Validators.required],\r\n      Company: [null, Validators.required],\r\n      Brand: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n      ForecastYear1: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n\r\n    this.calculatorContextMenuItems = this.commonService.getCalculatorFields();\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n    this.getGridState = this.getGridState.bind(this);\r\n\r\n    this.getAllColumnsComments();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getEuropeanCountryLists();\r\n    this.getCompanyLists();\r\n    this.getBrandLists();\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.studyDataRelations = this.datRelationsData.find(\r\n      (item) =>\r\n        item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n    );\r\n\r\n    if (this.studyDataRelations) {\r\n      this.studyDataViewId = this.studyDataRelations.ViewId;\r\n    }\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'EuropeanCountriesSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyDataObj = res.Data as PscEuropeanCountrySales;\r\n\r\n          this.studyMarketYearCategoryId =\r\n            this.studyDataObj.MarketYearCategoryId;\r\n\r\n          this.studyData = this.studyDataObj\r\n            .EuropeanCountriesSales as PscSalesItem[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            this.studyDataObj.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          this.currentYear = currentYear;\r\n\r\n          this.volumeYears = [];\r\n          this.volumeYearsShow = [];\r\n          this.myYears = [];\r\n          for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n            this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            this.myYears.push({ field: `PreviousYear${j}`, year: i });\r\n\r\n            this.volumeYearsShow.push({\r\n              field: `PreviousYear${j}`,\r\n              year: i,\r\n              isEditable: !this.isStudyEditable,\r\n              cellTemplate: 'EditCellTemplate',\r\n              isVisible: true,\r\n            });\r\n            if (j !== 5) {\r\n              this.volumeYearsShow.push({\r\n                field: `Cagr${j}`,\r\n                year: `Cagr, ${i - 1}-${i}`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n              this.volumeYearsShow.push({\r\n                field: `PerChange${j}`,\r\n                year: `Change, %, ${i - 1}-${i}`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n            }\r\n            this.volumeYearsShow.push({\r\n              field: `TotalPer${j}`,\r\n              year: `% Of Total`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n          }\r\n\r\n          this.volumeYearsShow.push({\r\n            field: `CurrentYear`,\r\n            year: this.currentYear,\r\n            isEditable: !this.isStudyEditable,\r\n            cellTemplate: 'EditCellTemplate',\r\n            isVisible: true,\r\n          });\r\n\r\n          this.volumeYearsShow.push({\r\n            field: `CagrCurrentYear`,\r\n            year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n          this.volumeYearsShow.push({\r\n            field: `PerChangeCurrentYear`,\r\n            year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n          this.volumeYearsShow.push({\r\n            field: `TotalPerCurrentYear`,\r\n            year: `% Of Total`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n\r\n          // myYears = this.volumeYears;\r\n          this.myYears.push({\r\n            field: `CurrentYear`,\r\n            year: this.currentYear,\r\n          });\r\n\r\n          this.foreCastYear1 = currentYear + 5;\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            this.calculateCagrYears(item);\r\n            this.calculatePercentageOfChangeYears(item);\r\n\r\n            // const rowNoteArray: any = [];\r\n            // if (item.Notes !== null) {\r\n            //   const noteArray = item.Notes.split('|||');\r\n            //   noteArray.map((singleVal: any) => {\r\n            //     const n = singleVal.split('@@@');\r\n            //     const d = n[0].split('###');\r\n            //     rowNoteArray.push({\r\n            //       name: d[0].trim(),\r\n            //       date: new Date(d[1].trim()),\r\n            //       note: n[1].trim(),\r\n            //     });\r\n            //   });\r\n            // }\r\n\r\n            // let sortRowNoteArray: any = [];\r\n            // if (rowNoteArray.length > 0) {\r\n            //   sortRowNoteArray = rowNoteArray.sort(\r\n            //     (a: any, b: any) => b.date - a.date\r\n            //   );\r\n            // }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  // console.log(colValueArray);\r\n                  changelogObj[colValueArray[3]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            let rowComments: any[] = [];\r\n            if (this.allColsComments) {\r\n              rowComments = this.allColsComments.filter(\r\n                (single: any) => single.DraftDataRowId == item.DataRowId\r\n              );\r\n\r\n              rowComments.map(({ ColumnName }) => {\r\n                this.myYears.map((elem: any) => {\r\n                  if (elem.field == ColumnName) {\r\n                    item[`${ColumnName}_comment`] = true;\r\n                  }\r\n                });\r\n              });\r\n            }\r\n\r\n            this.currentCurrency = {\r\n              CurrencyId: item.CurrencyId,\r\n              CurrencyName: item.CurrencyName,\r\n              CurrencyCode: item.CurrencyCode,\r\n            };\r\n\r\n            // this.studyData[i].StudyNotes =\r\n            //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            // this.studyData[i].EditNote = false;\r\n            // this.studyData[i].Notes = null;\r\n            // this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.calculateTotalPercentageForCols();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  calculateCagrYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.Cagr1 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear2,\r\n        data.PreviousYear1,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.Cagr2 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear3,\r\n        data.PreviousYear2,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.Cagr3 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear4,\r\n        data.PreviousYear3,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.Cagr4 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear5,\r\n        data.PreviousYear4,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear1,\r\n        data.CurrentYear,\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  calculatePercentageOfChangeYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.PerChange1 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear2,\r\n        data.PreviousYear1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.PerChange2 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear3,\r\n        data.PreviousYear2\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.PerChange3 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear4,\r\n        data.PreviousYear3\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.PerChange4 = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear5,\r\n        data.PreviousYear4\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear1,\r\n        data.CurrentYear\r\n      );\r\n    }\r\n  }\r\n\r\n  calculateTotalPercentageForCols() {\r\n    const PreviousYear1Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear1,\r\n      0\r\n    );\r\n    const PreviousYear2Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear2,\r\n      0\r\n    );\r\n\r\n    const PreviousYear3Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear3,\r\n      0\r\n    );\r\n    const PreviousYear4Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear4,\r\n      0\r\n    );\r\n    const PreviousYear5Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear5,\r\n      0\r\n    );\r\n\r\n    const CurrentYearTotal = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.CurrentYear,\r\n      0\r\n    );\r\n\r\n    this.studyData.map((item) => {\r\n      item.TotalPer1 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear1Total,\r\n        item.PreviousYear1\r\n      );\r\n      item.TotalPer2 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear2Total,\r\n        item.PreviousYear2\r\n      );\r\n      item.TotalPer3 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear3Total,\r\n        item.PreviousYear3\r\n      );\r\n      item.TotalPer4 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear4Total,\r\n        item.PreviousYear4\r\n      );\r\n      item.TotalPer5 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear5Total,\r\n        item.PreviousYear5\r\n      );\r\n      item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(\r\n        CurrentYearTotal,\r\n        item.CurrentYear\r\n      );\r\n    });\r\n  }\r\n\r\n  getEuropeanCountryLists() {\r\n    this.sharedService\r\n      .getEuropeanCountryLists()\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.europeanCountryLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Company')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.companyLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getBrandLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Brand')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.brandLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = this.allowedCols;\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = this.allowedCols;\r\n\r\n    const isFound = allowedCols.some((item) => item === event.column.dataField);\r\n    if (event.rowType === 'data' && isFound) {\r\n      this.TooltipTarget = event.cellElement;\r\n      if (event.eventType === 'mouseover') {\r\n        if (event.data.ChangeLogObj.length > 0) {\r\n          const cellValue =\r\n            typeof event.data.ChangeLogObj[event.column.caption] !== 'undefined'\r\n              ? event.data.ChangeLogObj[event.column.caption]\r\n              : null;\r\n          if (cellValue !== null) {\r\n            const oldValue = !isNaN(cellValue.oldValue)\r\n              ? +cellValue.oldValue\r\n              : 0;\r\n            const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n            this.TooltipText = html;\r\n            this.isTooltipVisible = true;\r\n          }\r\n        }\r\n        // console.log(this.ToolTipText);\r\n      }\r\n\r\n      if (event.eventType === 'mouseout') {\r\n        // console.log(this.ToolTipText);\r\n        // this.ToolTipText = 'Blah Bl;ah Blah';\r\n        this.isTooltipVisible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as PscSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n      data.Forecast1 = +data.Forecast1;\r\n\r\n      this.calculateCagrYears(data);\r\n      this.calculatePercentageOfChangeYears(data);\r\n      this.calculateTotalPercentageForCols();\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: PscSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Forecast1: +newRowData.ForecastYear1,\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n\r\n      Company: newRowData.Company.Name,\r\n      CompanyId: newRowData.Company.Id,\r\n      Brand: newRowData.Brand.Name,\r\n      BrandId: newRowData.Brand.Id,\r\n\r\n      Market: newRowData.Market.ShortName,\r\n      MarketId: newRowData.Market.Id,\r\n      Forecast2: 0,\r\n      Forecast3: 0,\r\n      Forecast4: 0,\r\n      Forecast5: 0,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.CompanyId == newRow.CompanyId &&\r\n        item.BrandId == newRow.BrandId &&\r\n        item.MarketId == newRow.MarketId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.CompanyId || 0) - (b.CompanyId || 0) ||\r\n          (a.BrandId || 0) - (b.BrandId || 0) ||\r\n          (a.MarketId || 0) - (b.MarketId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n    this.selectedCommentCellData = {};\r\n  }\r\n\r\n  onSaveNote(isLoad: boolean = true) {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedCommentCellData) {\r\n      return;\r\n    }\r\n\r\n    // const rowData = this.newNoteForm.value.rowData;\r\n    // const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    // const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n    //   rowIndex,\r\n    //   'EditNote'\r\n    // );\r\n\r\n    // this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    // let noteValue = rowData.data.StudyNotes;\r\n    // noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    // if (IsEditedNote) {\r\n    //   const noteArray =\r\n    //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n    //   noteArray.shift();\r\n\r\n    //   noteValue = noteArray.join(',');\r\n    // }\r\n\r\n    // const newNoteValue =\r\n    //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    // this.dataGrid?.instance.saveEditData();\r\n\r\n    const formData = {\r\n      dataItemCategoryId: this.studyAreaId,\r\n      marketYearCategoryDataId: this.marketYearCategoryId,\r\n      draftDataRowId: this.selectedCommentCellData.dataRowId,\r\n      columnName: this.selectedCommentCellData.colValue,\r\n      comment: newNote,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService.addCommentForCell(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.notePopupVisible = false;\r\n          // this.getSalesData();\r\n          if (isLoad) {\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.noteSubmit = false;\r\n            this.newNoteForm.reset();\r\n            this.newRowForm.updateValueAndValidity();\r\n            this.getCellColumnsComments(\r\n              this.selectedCommentCellData.colValue,\r\n              this.selectedCommentCellData.dataRowId\r\n            );\r\n          }\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n      // Forecast1: item.Forecast1 > 0 ? item.Forecast1 : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      europeanCountriesSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .savePSCData('EuropeanCountriesSales', studyDataInfo)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            // this.dataGrid?.instance.refresh();\r\n            this.isLoadingService.remove();\r\n            // this.getSalesData();\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n            this.isLoadingService.remove();\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try after sometimes.'\r\n          );\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      europeanCountriesSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .signOffPSCData('EuropeanCountriesSales', formData)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            // this.dataGrid?.instance.refresh();\r\n            this.isLoadingService.remove();\r\n            this.getSalesData();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n            this.isLoadingService.remove();\r\n          }\r\n        },\r\n        (err) => {\r\n          const error =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try after sometimes.';\r\n          this.alertService.danger(error);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Company:\r\n        this.getCompanyLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Brand:\r\n        this.getBrandLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n\r\n  onCalculatedItemClick(e: any) {\r\n    // console.log(e.itemData);\r\n    if (typeof e.itemData !== 'undefined') {\r\n      const calculatedFiled = e.itemData;\r\n      calculatedFiled.isCheck = !calculatedFiled.isCheck;\r\n      calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';\r\n      if (calculatedFiled.value === 'percentOfTotal') {\r\n        // this.calculateTotalPercentageForCols();\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `TotalPer${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n\r\n        this.dataGrid?.instance.columnOption(\r\n          `TotalPerCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else if (calculatedFiled.value === 'changePercent') {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PerChange${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `PerChangeCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `Cagr${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `CagrCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (this.studyDataViewId) {\r\n      this.stateData = data;\r\n      this.stateChange.next(this.stateData);\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.studyDataViewId,\r\n            0,\r\n            false,\r\n            JSON.stringify(this.stateData),\r\n            true\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (data) {\r\n                // this.alertService.info(\r\n                //   'The system will remember the last state!'\r\n                // );\r\n                // this.loadCurrentStudy();\r\n                if (this.pivotStateId == 0) {\r\n                  this.stateData = undefined;\r\n                  this.getGridState();\r\n                }\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      this.setColsForDataGrid();\r\n      return this.stateData;\r\n    }\r\n  }\r\n\r\n  getGridState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService\r\n        .getPivotState(this.studyDataViewId, true)\r\n        .subscribe((res) => {\r\n          // in case state is not exists yet\r\n          try {\r\n            const stateRes =\r\n              typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n            stateData = JSON.parse(stateRes.StateData);\r\n\r\n            if (stateData) {\r\n              this.pivotStateId = stateRes.PivotStateId;\r\n              this.stateData = stateData;\r\n              this.dataGrid?.instance.state(this.stateData);\r\n              this.setColsForDataGrid();\r\n            }\r\n\r\n            // this.pivotStateId = stateRes.PivotStateId;\r\n          } catch {\r\n            // stateData.state.fields = this.getGridFields();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onDeleteCustomSaveState() {\r\n    this.deleteResetConfirmPopup = true;\r\n  }\r\n\r\n  deleteCustomState() {\r\n    if (this.studyDataViewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.studyDataViewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = undefined;\r\n\r\n            this.stateData = stateData;\r\n            this.calculatorContextMenuItems =\r\n              this.commonService.getCalculatorFields();\r\n            this.getSalesData();\r\n            this.deleteResetConfirmPopup = false;\r\n            // this.getGridState();\r\n          }\r\n        );\r\n    } else {\r\n      this.deleteResetConfirmPopup = false;\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {}\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    if (typeof e.items === 'undefined') {\r\n      e.items = [];\r\n    }\r\n\r\n    // e.items.push({\r\n    //   beginGroup: true,\r\n    //   text: 'Reset to Default',\r\n    //   icon: 'fas fa-sync-alt',\r\n    //   onItemClick: () => {\r\n    //     this.deleteCustomState();\r\n    //   },\r\n    // });\r\n\r\n    const isValidTarget =\r\n      typeof e.target !== 'undefined' && e.target === 'content' ? true : false;\r\n    if (isValidTarget) {\r\n      const cells = e.row.cells;\r\n      const rowIndex = e.rowIndex;\r\n      const colIndex = e.columnIndex;\r\n      const currentCell =\r\n        typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;\r\n      if (typeof currentCell !== 'undefined') {\r\n        const foundValidCell = this.allowedCols.find(\r\n          (e) => e === currentCell.column.dataField\r\n        );\r\n\r\n        if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {\r\n          e.items.push({\r\n            beginGroup: true,\r\n            text: 'Comments',\r\n            icon: 'fas fa-comment',\r\n            onItemClick: () => {\r\n              // this.addNewCellComment(foundValidCell, colIndex, e.row);\r\n              this.getCellColumnsComments(\r\n                currentCell.column.dataField,\r\n                e.row.data.DataRowId\r\n              );\r\n            },\r\n          });\r\n        }\r\n\r\n        // if (\r\n        //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==\r\n        //     'undefined' &&\r\n        //   e.row.data[`${currentCell.column.dataField}_comment`]\r\n        // ) {\r\n        //   e.items.push({\r\n        //     beginGroup: true,\r\n        //     text: 'View Comments',\r\n        //     icon: 'fas fa-bars',\r\n        //     onItemClick: () => {\r\n        //       this.getCellColumnsComments(\r\n        //         currentCell.column.dataField,\r\n        //         e.row.data.DataRowId\r\n        //       );\r\n        //     },\r\n        //   });\r\n        // }\r\n      }\r\n    }\r\n  }\r\n\r\n  setColsForDataGrid() {\r\n    if (this.stateData) {\r\n      this.volumeYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.calculatorContextMenuItems = this.stateData\r\n        .calculatorContextMenuItems\r\n        ? this.stateData.calculatorContextMenuItems\r\n        : this.calculatorContextMenuItems;\r\n    }\r\n  }\r\n\r\n  selectedCommentCellData: any = {};\r\n  addNewCellComment(colValue: string, colIndex: number, row: any) {\r\n    const currentCell =\r\n      typeof row.cells[colIndex] !== 'undefined'\r\n        ? row.cells[colIndex]\r\n        : undefined;\r\n    const colCaption = currentCell.column.caption;\r\n\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: currentCell.data.DataRowId,\r\n      currentCell: currentCell,\r\n      colCaption: colCaption,\r\n    };\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  allColsComments: any[] = [];\r\n  getAllColumnsComments() {\r\n    this.studyService\r\n      .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.allColsComments = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  cellColsComments: any[] = [];\r\n  getCellColumnsComments(colValue: string, dataRowId: string) {\r\n    const currentLabel = this.myYears.find(\r\n      (item: any) => item.field == colValue\r\n    );\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: dataRowId,\r\n      currentCell: {},\r\n      colCaption: currentLabel.year,\r\n    };\r\n\r\n    this.studyService\r\n      .getCellCommentsForStudy(\r\n        this.studyAreaId,\r\n        this.marketYearCategoryId,\r\n        dataRowId,\r\n        colValue\r\n      )\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.selectedRowNotes = data.Data;\r\n          this.viewNotePopup = true;\r\n          if (this.selectedRowNotes.length == 0) {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  checkHasComment(data: any) {\r\n    if (\r\n      typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&\r\n      data.data[`${data.column.dataField}_comment`]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteCommentData: any = {};\r\n  deleteComment(data: any) {\r\n    this.deleteCommentData = data;\r\n    this.deleteCommentConfirmPopup = true;\r\n    // this.viewNotePopup = false;\r\n  }\r\n\r\n  onDeleteCommentConfirmPopupHide() {\r\n    this.deleteCommentData = {};\r\n    this.deleteCommentConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteComment() {\r\n    this.isLoadingService.add();\r\n    const colValue = this.deleteCommentData.ColumnName;\r\n    const dataRowId = this.deleteCommentData.DraftDataRowId;\r\n    this.studyService\r\n      .deleteCellComment(\r\n        this.deleteCommentData.MarketYearCategoryDataId,\r\n        dataRowId,\r\n        colValue,\r\n        this.deleteCommentData.Id\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.deleteCommentConfirmPopup = false;\r\n            this.getCellColumnsComments(colValue, dataRowId);\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteCommentConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          width=\"100%\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          width=\"100%\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n          (onContentReady)=\"onContentReady($event)\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <dxo-scrolling columnRenderingMode=\"standard\"></dxo-scrolling>\r\n          <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\r\n\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-state-storing\r\n            [enabled]=\"true\"\r\n            type=\"custom\"\r\n            [customSave]=\"customSaveState\"\r\n            [customLoad]=\"customLoadState\"\r\n            [savingTimeout]=\"300\"\r\n          >\r\n          </dxo-state-storing>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"refresh\"\r\n                    text=\"Reset\"\r\n                    (onClick)=\"onDeleteCustomSaveState()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-drop-down-button\r\n                    icon=\"fas fa-calculator\"\r\n                    [dropDownOptions]=\"{ width: 200 }\"\r\n                    displayExpr=\"name\"\r\n                    keyExpr=\"value\"\r\n                    [items]=\"calculatorContextMenuItems\"\r\n                    (onItemClick)=\"onCalculatedItemClick($event)\"\r\n                  ></dx-drop-down-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            [width]=\"180\"\r\n            [fixed]=\"true\"\r\n            dataField=\"Market\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"180\"\r\n            [fixed]=\"true\"\r\n            dataField=\"Company\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"180\"\r\n            [fixed]=\"true\"\r\n            dataField=\"Brand\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"volumeYear.isEditable\"\r\n            [allowFiltering]=\"false\"\r\n            alignment=\"center\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [visible]=\"volumeYear.isVisible\"\r\n            [cellTemplate]=\"volumeYear.cellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYearsShow\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"100\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"currentYear\"\r\n            dataField=\"CurrentYear\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column> -->\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"foreCastYear1\"\r\n            dataField=\"Forecast1\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column> -->\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"200\"\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column> -->\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <span *ngIf=\"checkHasComment(data)\" class=\"has-comment\"></span>\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'cargCellTemplate'\">\r\n            <span>{{\r\n              data.value || data.value == 0 ? data.value.toFixed(1) + \"%\" : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <!-- <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div> -->\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-european-country-sales-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYears]=\"volumeYears\"\r\n          [foreCastYear]=\"foreCastYear1\"\r\n          [studyData]=\"studyData\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-european-country-sales-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Market</label>\r\n              <ng-select\r\n                [items]=\"europeanCountryLists\"\r\n                bindLabel=\"ShortName\"\r\n                formControlName=\"Market\"\r\n                placeholder=\"Select Market\"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <ng-select\r\n                [items]=\"companyLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Company\"\r\n                placeholder=\"Select Company\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Company)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Brand</label>\r\n              <ng-select\r\n                [items]=\"brandLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Brand\"\r\n                placeholder=\"Select Brand\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Brand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"CurrentYear\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ foreCastYear1 }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"ForecastYear1\"\r\n              />\r\n            </div>\r\n          </div> -->\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"selectedCommentCellData\"\r\n  [width]=\"300\"\r\n  [height]=\"270\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Comment\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <label class=\"mt-0\">\r\n            Add Comment for {{ selectedCommentCellData.colCaption }}\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"2\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Comment\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [height]=\"500\"\r\n  [showTitle]=\"true\"\r\n  title=\"View Comments for {{ selectedCommentCellData.colCaption }}\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0 h-100 comment-container\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"CreatedBy\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"CreatedOn\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"Comment\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n          caption=\"\"\r\n          cellTemplate=\"deleteCellTemplate\"\r\n          class=\"text-center\"\r\n          [width]=\"30\"\r\n        ></dxi-column>\r\n        <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n          <dx-button\r\n            icon=\"trash\"\r\n            stylingMode=\"text\"\r\n            (onClick)=\"deleteComment(d.data)\"\r\n            type=\"danger\"\r\n          ></dx-button>\r\n        </div>\r\n      </dx-data-grid>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control\"\r\n                placeholder=\"Enter your comment\"\r\n                formControlName=\"note\"\r\n                rows=\"2\"\r\n                maxlength=\"1000\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': noteSubmit && n['note'].errors\r\n                }\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group text-center\">\r\n              <dx-button\r\n                text=\"Save Comment\"\r\n                type=\"default\"\r\n                [disabled]=\"newNoteForm.invalid\"\r\n                (onClick)=\"onSaveNote(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteCommentConfirmPopup\"\r\n  (onHidden)=\"onDeleteCommentConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this comment?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteComment()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteCommentConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"400\"\r\n  [height]=\"200\"\r\n  [showTitle]=\"false\"\r\n  title=\"Reset Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteResetConfirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">\r\n        Reset to Default will take you to last saved Data. Your unsaved data\r\n        will be removed.\r\n      </p>\r\n      <p class=\"mb-1\">Are you sure you want to continue?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"deleteCustomState()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteResetConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource, {\r\n  Field,\r\n} from 'devextreme/ui/pivot_grid/data_source';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { ComboBox } from 'src/model/combo.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Workbook } from 'exceljs';\r\nimport * as lodash from 'lodash';\r\nimport { saveAs } from 'file-saver';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataFieldArea } from 'src/model/enums/dataFieldArea.enum';\r\nimport { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport {\r\n  UserSettings,\r\n  UserStateAndSetttings,\r\n} from 'src/model/userStateAndSetttings.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialValueType } from 'src/model/enums/specialValueType.enum';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport { CommonHelper } from 'src/guard/commonHelper';\r\nimport { Subject } from 'rxjs';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { ComputingType } from 'src/model/enums/computingType.enum';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-product-type-sale-preview',\r\n  templateUrl: './product-type-sale-preview.component.html',\r\n  styleUrls: ['./product-type-sale-preview.component.css'],\r\n})\r\nexport class ProductTypeSalePreviewComponent implements OnInit {\r\n  @Input() studyData: PscSalesItem[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() foreCastYears: any[] = [];\r\n  @Input() previousYears: any[] = [];\r\n\r\n  // pivotGridDataSource: PivotGridDataSource;\r\n  // gridFields: Field[] = [];\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };\r\n  @Input() set setSelectedCurrency(data: any) {\r\n    if (data) {\r\n      this.selectedCurrency = {\r\n        Id: data.CurrencyId,\r\n        IsActive: true,\r\n        Name: data.CurrencyName,\r\n        CurrencyCode: data.CurrencyCode,\r\n        CurrencyName: data.CurrencyName,\r\n      };\r\n\r\n      this.currencyDropdownSelected = this.selectedCurrency;\r\n    }\r\n  }\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  volumeYears: any[] = [];\r\n  @Input() set setVolumeYears(data: any[]) {\r\n    if (data) {\r\n      this.volumeYears = data;\r\n    }\r\n  }\r\n\r\n  viewId: number = 0;\r\n  @Input() set setViewId(data: number) {\r\n    if (data) {\r\n      this.viewId = data;\r\n      this.getPivotSettings();\r\n      this.getPivotState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: SEDataEntry | undefined;\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  stateData: UserStateAndSetttings | undefined;\r\n\r\n  computingType = ComputingType;\r\n\r\n  eventsCustomAction: Subject<string> = new Subject<string>();\r\n  pivotGridNoDataMessage = '';\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  firstAvailableId = 0;\r\n\r\n  currencyDropdownSelected: any;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n  canCallSaveState = false;\r\n  adminSetNewState = false;\r\n\r\n  pivotSummaryDisplayModesSubtotals: ComboBox[] = [\r\n    { id: undefined, name: 'Same as the Data Fields' },\r\n    { id: 'percentOfColumnTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowTotal', name: 'Always Rows' },\r\n  ];\r\n\r\n  pivotSummaryDisplayModesGrandTotals: ComboBox[] = [\r\n    { id: 'percentOfColumnGrandTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowGrandTotal', name: 'Always Rows' },\r\n    { id: 'percentOfGrandTotal', name: 'Table (Absolute) Grand Total' },\r\n  ];\r\n\r\n  shownYears: any = undefined;\r\n  invisibleFields: PivotGridField[] = [];\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateChange: Subject<UserStateAndSetttings> =\r\n    new Subject<UserStateAndSetttings>();\r\n\r\n  shownYearsPrev: any = undefined;\r\n  isAdmin = false;\r\n  pivotStateId: number = 0;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n    // this.stateData = new UserStateAndSetttings();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.sharedService.getPivotSettings(this.viewId).subscribe((res) => {\r\n      this.pivotGridOptions = res.Data;\r\n      if (this.pivotGridOptions) {\r\n        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPivotState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService.getPivotState(this.viewId).subscribe((res) => {\r\n        // in case state is not exists yet\r\n        try {\r\n          const stateRes =\r\n            typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n          stateData = Common.realMerge(\r\n            new UserStateAndSetttings(),\r\n            JSON.parse(stateRes.StateData)\r\n          );\r\n          this.pivotStateId = stateRes.PivotStateId;\r\n        } catch {\r\n          stateData = new UserStateAndSetttings();\r\n          // stateData.state.fields = this.getGridFields();\r\n        }\r\n\r\n        this.directDatasourceRenderPivot(stateData);\r\n      });\r\n    } else {\r\n      this.directDatasourceRenderPivot(this.stateData);\r\n    }\r\n  }\r\n\r\n  async directDatasourceRenderPivot(stateData: UserStateAndSetttings) {\r\n    if (this.pivotGridOptions.settings.isCube) {\r\n      // let token = await this.getAzureAnalysisToken();\r\n      // let cubesStore = CubeStoreHelper.setCubeStore(\r\n      //   this.pivotGridOptions.settings.cubeSettings.catalog,\r\n      //   this.pivotGridOptions.settings.cubeSettings.cube,\r\n      //   token,\r\n      //   this.devEndpoint\r\n      // );\r\n      // this.pivotGridOptions.pivotGridSource.store = cubesStore;\r\n      // this.pivotGridDataSource = new PivotGridDataSource(\r\n      //   this.pivotGridOptions.pivotGridSource as any\r\n      // );\r\n      // setTimeout(() => {\r\n      //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);\r\n      // }, 5000);\r\n      // this.saveStateEnabled = true;\r\n      // if (stateData.settings) {\r\n      //   if (!stateData.settings.currency) {\r\n      //     stateData.settings.currency =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n      //   }\r\n      //   if (!stateData.settings.currencyConversionType) {\r\n      //     stateData.settings.currencyConversionType =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n      //   }\r\n      //   if (!stateData.settings.selectedYear) {\r\n      //     stateData.settings.selectedYear.PeriodKey = 2021;\r\n      //   }\r\n      // }\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.stateData = stateData;\r\n      // this.fillPivotCube();\r\n      // setTimeout(() => {\r\n      //   this.canCallSaveState = true;\r\n      // }, 300);\r\n    } else {\r\n      if (stateData.settings) {\r\n        if (!stateData.settings.currency) {\r\n          stateData.settings.currency =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n        }\r\n        if (!stateData.settings.currencyConversionType) {\r\n          stateData.settings.currencyConversionType =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n        }\r\n        if (!stateData.settings.selectedYear?.PeriodKey) {\r\n          // stateData.settings.selectedYear = await this.getLatestAccessibleYear(\r\n          //   this.sharedService.getUserData().userId,\r\n          //   this.requestedView.databaseId,\r\n          //   this.requestedView.viewId\r\n          // );\r\n          stateData.settings.selectedYear = this.currentYear;\r\n        }\r\n        // if (!stateData.settings.unitOfVolume) {\r\n        //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(\r\n        //     this.requestedView.databaseId\r\n        //   );\r\n        // }\r\n        if (!stateData.settings.unitOfMass) {\r\n          // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(\r\n          //   this.requestedView.databaseId\r\n          // );\r\n          stateData.settings.unitOfMass = { Id: 105, Name: 'Thousand Tonnes' };\r\n        }\r\n      }\r\n\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      this.stateData = stateData;\r\n      if (this.previewData && this.previewData.length) {\r\n        //get all invisible fields\r\n        this.invisibleFields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => f.visible === false\r\n          );\r\n        //filter invisible fields\r\n        this.pivotGridOptions.pivotGridSource.fields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => !f.visible || !f.isCalculated\r\n          );\r\n        //get count of visible fields for calculated fields ids\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions.pivotGridSource.fields.length;\r\n        // remove all invisible data from the datasource\r\n        if (this.invisibleFields && this.invisibleFields.length > 0) {\r\n          for (const invisibleField of this.invisibleFields) {\r\n            this.previewData.forEach((obj) => {\r\n              delete obj[invisibleField.dataField];\r\n            });\r\n          }\r\n        }\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      } else {\r\n        this.readPivotDataFromApi();\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    this.canCallSaveState = true;\r\n\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (\r\n      this.viewId &&\r\n      this.canCallSaveState &&\r\n      this.pivotGridOptions &&\r\n      this.stateData\r\n    ) {\r\n      this.stateData.state = data;\r\n      this.stateChange.next(this.stateData);\r\n      // find all shown years and reload pivot grid on change\r\n      const yearField = this.stateData.state.fields.filter(\r\n        (f: any) => f.dataField === this.yearDataFieldName\r\n      );\r\n      const hasCagrOrChange =\r\n        this.stateData.settings.cagrState.isSet ||\r\n        this.stateData.settings.changePercentState.isSet;\r\n      if (yearField && hasCagrOrChange) {\r\n        const pivotGridInstance: any = this.pivotGrid?.instance;\r\n        const pivotFridDataSource = pivotGridInstance.getDataSource();\r\n        const areaIndex: number = yearField[0].areaIndex;\r\n        const uniqArrByText: any = lodash.uniqBy(\r\n          pivotGridInstance._dataController._columnsInfo[areaIndex],\r\n          'text'\r\n        );\r\n        this.shownYears = uniqArrByText.map((t: any) => parseInt(t.text));\r\n        // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists\r\n        if (yearField[0].sortOrder === 'desc') {\r\n          pivotFridDataSource.field(this.yearDataFieldName, {\r\n            sortOrder: 'asc',\r\n          });\r\n          pivotFridDataSource.load();\r\n        }\r\n        if (!lodash.isEqual(this.shownYears, this.shownYearsPrev)) {\r\n          this.shownYearsPrev = this.shownYears;\r\n          pivotFridDataSource.load();\r\n        }\r\n      }\r\n\r\n      // in case user is NOT admin and has disable automatic saving state or remember latest state\r\n      else if (!isChangeAutoSaveStatus) {\r\n        if (this.stateData.settings.rememberLatestState == undefined) {\r\n          this.stateData.settings.rememberLatestState =\r\n            this.pivotGridOptions.canSaveUserState;\r\n        }\r\n        if (this.stateData.settings.rememberLatestState == false) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.viewId,\r\n            0,\r\n            this.isAdmin,\r\n            JSON.stringify(this.stateData)\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (\r\n                data &&\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions &&\r\n                this.isAdmin\r\n              ) {\r\n                this.alertService.info(\r\n                  'The system will remember the last state!'\r\n                );\r\n                // after save state, save also settings\r\n                this.saveSettings(this.viewId, this.pivotGridOptions);\r\n                // set can save default state to false\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      return this.stateData.state;\r\n    }\r\n  }\r\n\r\n  deleteCustomState() {\r\n    this.adminSetNewState = false;\r\n    if (this.viewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.viewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = new UserStateAndSetttings();\r\n\r\n            this.directDatasourceRenderPivot(stateData);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveSettings(\r\n    currentlySelectedViewId: number,\r\n    optionsDataSource: PivotGridOptions\r\n  ): void {\r\n    let saveResult = false;\r\n    const optionsDataSourceTemp = { ...optionsDataSource };\r\n    optionsDataSourceTemp.pivotGridSource.fields =\r\n      optionsDataSourceTemp.pivotGridSource.fields.filter(\r\n        (f) => !f.isCalculated\r\n      );\r\n    // set store to empty, system will read fresh data from backend next time\r\n    optionsDataSourceTemp.pivotGridSource.store = [];\r\n  }\r\n\r\n  getPreviewData(studyData: PscSalesItem[]) {\r\n    const previewData: {\r\n      Channel: string;\r\n      ProductType: string;\r\n      Year: number;\r\n      Value: number;\r\n    }[] = [];\r\n\r\n    this.shownYears = this.currentYear;\r\n    studyData.map((item: any) => {\r\n      this.previousYears.map((year: any) => {\r\n        previewData.push({\r\n          Channel: item.Channel,\r\n          ProductType: item.ProductType,\r\n          Year: year.year,\r\n          Value: item[year.field],\r\n        });\r\n      });\r\n\r\n      previewData.push({\r\n        Channel: item.Channel,\r\n        ProductType: item.ProductType,\r\n        Year: this.currentYear,\r\n        Value: item.CurrentYear,\r\n      });\r\n\r\n      this.foreCastYears.map((year: any) => {\r\n        previewData.push({\r\n          Channel: item.Channel,\r\n          ProductType: item.ProductType,\r\n          Year: year.year,\r\n          Value: item[year.field],\r\n        });\r\n      });\r\n\r\n      // previewData.push({\r\n      //   Channel: item.Channel,\r\n      //   ProductType: item.ProductType,\r\n      //   Year: this.foreCastYear,\r\n      //   Value: item.Forecast1,\r\n      // });\r\n    });\r\n    // console.log(previewData);\r\n    this.previewData = previewData;\r\n    // this.pivotGridDataSource = new PivotGridDataSource({\r\n    //   store: previewData,\r\n    //   fields: this.getGridFields(),\r\n    // });\r\n\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'Channel',\r\n        area: 'row',\r\n        caption: 'Channel',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'row',\r\n        caption: 'ProductType',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 2,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 3,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n\r\n  readPivotDataFromApi() {\r\n    this.isLoadingService.add();\r\n    this.yearDataFieldName = 'Year';\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'ProductTypeSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId,\r\n        typeof this.currencyDropdownSelected !== 'undefined'\r\n          ? this.currencyDropdownSelected.Id\r\n          : 0,\r\n        typeof this.unitOfMassDropdownSelected !== 'undefined'\r\n          ? this.unitOfMassDropdownSelected.Id\r\n          : 0,\r\n        typeof this.currencyConversionTypeSelected !== 'undefined'\r\n          ? this.currencyConversionTypeSelected\r\n          : 0\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyDataObj = res.Data;\r\n\r\n            const studyData = studyDataObj['ProductTypeSales'];\r\n\r\n            const previewData: any[] = [];\r\n            let index = 0;\r\n            studyData.map((item: any, i: number) => {\r\n              this.volumeYears.map((d: any) => {\r\n                this.gridFields.map((field: any) => {\r\n                  if (typeof previewData[index] === 'undefined') {\r\n                    previewData[index] = {};\r\n                  }\r\n                  previewData[index][field.dataField] = item[field.dataField];\r\n                  if (field.dataField === 'Year') {\r\n                    previewData[index][field.dataField] = d.year;\r\n                  }\r\n                  if (field.dataField === 'Value') {\r\n                    previewData[index][field.dataField] = item[d.field];\r\n                  }\r\n                });\r\n                index++;\r\n              });\r\n            });\r\n\r\n            this.previewData = previewData;\r\n\r\n            // this.pivotGridDataSource = new PivotGridDataSource({\r\n            //   store: this.previewData,\r\n            //   fields: this.gridFields,\r\n            // });\r\n            if (typeof this.pivotGridOptions !== 'undefined') {\r\n              this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n              this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n              this.pivotGridDataSource = new PivotGridDataSource(\r\n                this.pivotGridOptions.pivotGridSource as any\r\n              );\r\n            }\r\n            this.fillPivot(this.pivotGridOptions, this.previewData);\r\n            // when pivot data is loaded allow with small delay save state to the database\r\n            setTimeout(() => {\r\n              this.canCallSaveState = true;\r\n            }, 300);\r\n            // console.log(this.previewData);\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataFieldName(fieldName: string) {\r\n    if (fieldName == 'ProductTypeSales') {\r\n      return 'ProductTypeSalesSHC';\r\n    }\r\n\r\n    return fieldName;\r\n  }\r\n\r\n  onOptionChanged(e: any) {}\r\n\r\n  onInitialized(e: any) {}\r\n\r\n  cellPrepared(e: any) {\r\n    // customize change % columns captions\r\n    // console.log(this.stateData?.settings.changePercentState.computingType);\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {\r\n      if (\r\n        e.cell.text &&\r\n        e.cell.text.startsWith(CalculatedFieldType.changePercent)\r\n      ) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex].toString() +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex].toString();\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n      //customize cagr columns captions\r\n      if (e.cell.text && e.cell.text.startsWith(CalculatedFieldType.cagr)) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex] +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex];\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.area === 'data') {\r\n      if (e.cell.value) {\r\n        e.cell.value.hasCd &&\r\n          e.cellElement.classList.add('pivot-grid-cell-has-cd');\r\n      }\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource &&\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n    ) {\r\n      const calculatedFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) =>\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.changePercent ||\r\n            f.calculatedFieldType === CalculatedFieldType.cagr\r\n        );\r\n      for (const calculatedField of calculatedFields) {\r\n        this.addCloseButtonToCalculatedField(\r\n          calculatedField.id,\r\n          calculatedField.calculatedFieldType\r\n        );\r\n      }\r\n    }\r\n\r\n    // change style for no data message\r\n    const noDataElement = e.component\r\n      .element()\r\n      .querySelector('.dx-pivotgrid-nodata');\r\n    if (noDataElement) {\r\n      setTimeout(() => {\r\n        if (this.pivotGridNoDataMessage) {\r\n          noDataElement.classList.add('noDataMessage');\r\n        } else {\r\n          noDataElement.classList.remove('noDataMessage');\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    if (this.pivotGrid && this.stateData && this.stateData.state) {\r\n      // Allow next rows if you want to enable disabling pivot during waiting for component response\r\n      //this.pivot.disabled = true;\r\n      // not allow to user change state too fast, pivot component needs some time to save emit state\r\n      //setTimeout(() => { this.pivot.disabled = false; }, 1000)\r\n    }\r\n  }\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    // this.pivot.disabled = true;\r\n    this.customizeContextMenu(e);\r\n\r\n    //if (e.area == \"row\" || e.area == \"column\") {\r\n    //    let id = e.columnIndex + \"\" + e.rowIndex;\r\n    //    let tooltip = $(\"<span></span>\").append($(\"<span id='\" + id + \"'></span>\").html(\"\")).appendTo(e.cellElement);\r\n    //    let field = $(\"#\" + id).closest('td');\r\n    //    field.attr('title', e.cell.text);\r\n    //}\r\n  }\r\n\r\n  customizeContextMenu(e: any): void {\r\n    this.updateDefaultContextMenuTextsAndIcons(e);\r\n    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Delete Calculated Field',\r\n        icon: 'fa fa-trash-alt',\r\n        onItemClick: () => {\r\n          const fieldToDelete = e.field as PivotGridField;\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (fieldToDelete.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n          this.deleteCalculatedField(e.field.id);\r\n        },\r\n      });\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Edit Calculated Field',\r\n        icon: 'fa fa-pencil-alt',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (e.field.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.isPercentOfTotalPopup = true;\r\n                this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n                  undefined || '';\r\n                this.pivotSummaryDisplayModesSubtotals[0].id =\r\n                  this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                    ? 'percentOfColumnTotal'\r\n                    : 'percentOfRowTotal';\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.isPercentOfChangePopup = true;\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.isCagrPopup = true;\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let openMenuItems = [];\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencySelection) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-money',\r\n        text: 'Change Currency',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencySelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencyConversion) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-exchange-alt',\r\n        text: 'Constant',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencyConversionSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfVolume) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-fill-drip',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('massUnitSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfMass) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-balance-scale',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('volumeUnitSelector');\r\n        },\r\n      });\r\n    }\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Reset to Default',\r\n      icon: 'fas fa-sync-alt',\r\n      onItemClick: () => {\r\n        this.deleteCustomState();\r\n      },\r\n    });\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Adjust Parameters',\r\n      icon: 'fa fa-sliders-h',\r\n      items: openMenuItems,\r\n    });\r\n\r\n    if (\r\n      e.field &&\r\n      e.field.area === 'data' &&\r\n      this.enabledInContextMenu(e.field)\r\n    ) {\r\n      let calculatedFieldsItems: any[] = [];\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfTotal) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.percentOfTotal,\r\n          onItemClick: () => {\r\n            this.isPercentOfTotalPopup = true;\r\n            this.pivotSummaryDisplayModesSubtotals[0].id =\r\n              this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n                ? 'percentOfColumnTotal'\r\n                : 'percentOfRowTotal';\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.percentOfTotalState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.percentOfTotalState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfChange) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.changePercent,\r\n          onItemClick: () => {\r\n            this.isPercentOfChangePopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.changePercentState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.changePercentState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isCagr) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.cagr,\r\n          onItemClick: () => {\r\n            this.isCagrPopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.cagrState.dataField = e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.cagrState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Add Calculated Field',\r\n        icon: 'fa fa-calculator',\r\n        items: calculatedFieldsItems,\r\n      });\r\n    }\r\n    // show only case if exist two or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter((f) =>\r\n        (<any>Object).values(PivotGridDataFieldType).includes(f.dataFieldType)\r\n      ).length >= 2\r\n    ) {\r\n      const dataFieldsHeaders =\r\n        this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n          ? 'Rows'\r\n          : 'Columns';\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Show Data Field Headers in ' + dataFieldsHeaders,\r\n        icon: 'fa fa-table',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            this.stateData.settings.dataFieldArea =\r\n              this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                ? DataFieldArea.row\r\n                : DataFieldArea.column;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteCalculatedField(fieldId: number) {\r\n    this.pivotGridOptions?.pivotGridSource.fields.splice(\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n        .map((m) => m.id)\r\n        .indexOf(fieldId),\r\n      1\r\n    );\r\n    this.firstAvailableId--;\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.readPivotDataFromApi();\r\n    } else {\r\n      if (typeof this.pivotGridOptions !== 'undefined') {\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDefaultContextMenuTextsAndIcons(e: any) {\r\n    let rowName = undefined;\r\n    let rowCaption;\r\n    if (e.cell?.path) {\r\n      if (e.cell && e.area === 'row') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.rowFields[path].dataField;\r\n        rowCaption = e.rowFields[path].caption;\r\n      } else if (e.cell && e.area === 'column') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.columnFields[path].dataField;\r\n        rowCaption = e.columnFields[path].caption;\r\n      }\r\n      const expandAll = e.items.find((f: any) => f.text.includes('Expand All'));\r\n      if (expandAll) {\r\n        expandAll.icon = 'fas fa-plus';\r\n        expandAll.text = 'Expand' + ' ' + rowCaption;\r\n      }\r\n      const collapseAll = e.items.find((f: any) =>\r\n        f.text.includes('Collapse All')\r\n      );\r\n      if (collapseAll) {\r\n        collapseAll.icon = 'fas fa-minus';\r\n        collapseAll.text = 'Collapse' + ' ' + rowCaption;\r\n      }\r\n    }\r\n    const fieldChooser = e.items.find((f: any) =>\r\n      f.text.includes('Show Field Chooser')\r\n    );\r\n    if (fieldChooser) {\r\n      fieldChooser.text = 'FieldChooser Text';\r\n    }\r\n    const exportToExcel = e.items.find((f: any) =>\r\n      f.text.includes('Export to')\r\n    );\r\n    if (exportToExcel) {\r\n      exportToExcel.text = 'Export to excel';\r\n    }\r\n    const sorts = e.items.filter((f: any) => f.text.includes('Sort'));\r\n    if (sorts) {\r\n      for (let sort of sorts) {\r\n        sort.icon = 'fas fa-sort';\r\n      }\r\n    }\r\n  }\r\n\r\n  enabledInContextMenu(field: any): boolean {\r\n    if (field.dataFieldType === PivotGridDataFieldType.AvgPrice) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addCloseButtonToCalculatedField(fieldId: number, datafieldType: string) {\r\n    const calculatedFieldObj = $(\r\n      \".dx-area-field-content:contains('\" + datafieldType + \"')\"\r\n    ).append(\r\n      \"<i id='\" +\r\n        Common.removeAllSpaces(datafieldType) +\r\n        \"' class='closeButton fas fa-times-circle'></i>\"\r\n    );\r\n\r\n    calculatedFieldObj\r\n      .parent()\r\n      .parent()\r\n      .css('padding-right', '0')\r\n      .css('margin-right', '0 !important');\r\n\r\n    calculatedFieldObj\r\n      .children()\r\n      .off()\r\n      .on('click', () => {\r\n        if (typeof this.stateData !== 'undefined') {\r\n          switch (datafieldType) {\r\n            case CalculatedFieldType.percentOfTotal:\r\n            case CalculatedFieldType.percentOfGrandTotal:\r\n              this.stateData.settings.percentOfTotalState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.changePercent:\r\n              this.stateData.settings.changePercentState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.cagr:\r\n              this.stateData.settings.cagrState.isSet = false;\r\n              break;\r\n          }\r\n        }\r\n        this.deleteCalculatedField(fieldId);\r\n      });\r\n  }\r\n\r\n  currencySelectionChanged(currency: SEDataEntry) {\r\n    this.currencyDropdownSelected = currency;\r\n    // this.stateData.settings.currency = currency;\r\n    this.readPivotDataFromApi();\r\n    // // on currency change update % of total caption if exists\r\n    // const percentOfTotalField =\r\n    //   this.pivotGridOptions.pivotGridSource.fields.find(\r\n    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal\r\n    //   );\r\n    // if (percentOfTotalField) {\r\n    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();\r\n    // }\r\n  }\r\n\r\n  currencyConversionSelectionChanged(\r\n    currencyConversionType: CurrencyConversionTypeEnum\r\n  ) {\r\n    this.currencyConversionTypeSelected = currencyConversionType;\r\n    // this.stateData.settings.currencyConversionType = currencyConversionType;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  massUnitSelectionChanged(unitOfMass: SEDataEntry) {\r\n    this.unitOfMassDropdownSelected = unitOfMass;\r\n    // this.stateData.settings.unitOfMass = unitOfMass;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  getUserSettings() {\r\n    const userSettings = {\r\n      currency: {\r\n        Id: this.selectedCurrency.Id,\r\n        Code: this.selectedCurrency.CurrencyCode,\r\n        Name: this.selectedCurrency.CurrencyName,\r\n      },\r\n      currencyConversionType: 1,\r\n      unitOfMass: { Id: 103, Name: 'Thousand Lbs' },\r\n      unitOfMeasure: { Id: 101, Name: 'Metric Tonnes' },\r\n      unitOfVolume: { Id: 7, Name: 'Quart (US)' },\r\n      selectedYear: {\r\n        PeriodKey: this.currentYear,\r\n        Name: this.currentYear.toString(),\r\n      },\r\n      percentOfTotalState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        basedOn: 'Subtotals',\r\n        summaryDisplayMode: 'percentOfColumnTotal',\r\n      },\r\n      changePercentState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'Previous (Shown) Year',\r\n      },\r\n      cagrState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'First (Shown) Year',\r\n      },\r\n      dataFieldArea: 'column',\r\n      userChartSetting: {\r\n        dataFieldsDisplayMode: 'singleAxis',\r\n        chartType: 'Column',\r\n      },\r\n      isReducedDataSource: false,\r\n      rememberLatestState: true,\r\n    };\r\n\r\n    return userSettings;\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.getUserSettings();\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    const menuSettings = this.pivotGridOptions?.settings?.menuSettings;\r\n    const pivotFields = this.pivotGridDataSource.fields();\r\n    const userSettings = this.getUserSettings();\r\n    let finalData;\r\n    if (this.previewData[0].hasOwnProperty('Year')) {\r\n      finalData = this.previewData.sort((a, b) => a.Year - b.Year);\r\n    } else {\r\n      finalData = this.previewData;\r\n    }\r\n    this.studyService\r\n      .exportToExcel(\r\n        finalData,\r\n        pivotFields,\r\n        userSettings,\r\n        title,\r\n        menuSettings,\r\n        0\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          let fileName = 'PivotTest';\r\n          if (title.length > 3) {\r\n            fileName = title.split(' ').join('');\r\n            fileName = fileName.split('-').join('_');\r\n          }\r\n          var file = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n          var fileURL = URL.createObjectURL(file);\r\n          let a = document.createElement('a');\r\n          document.body.appendChild(a);\r\n          a.style.display = 'none';\r\n          a.href = fileURL;\r\n          a.target = '_blank';\r\n          a.download = `${fileName}.xlsx`;\r\n          a.click();\r\n          a.remove();\r\n          this.studyService.changeExcelLoading(false);\r\n        },\r\n        (error) => {\r\n          this.studyService.changeExcelLoading(false);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  exportToCvs() {\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    this.studyService.exportToCsv(this.previewData, fileName);\r\n  }\r\n\r\n  exportToShanptshot() {\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet('Main sheet');\r\n    exportPivotGrid({\r\n      component: this.pivotGrid?.instance,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        const excelCell = options;\r\n        excelCell.excelCell.font = { name: 'Calibri', size: 11 };\r\n        excelCell.excelCell.alignment = { horizontal: 'left', vertical: 'top' };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer: BlobPart) {\r\n        saveAs(\r\n          new Blob([buffer], { type: 'application/octet-stream' }),\r\n          fileName + '.xlsx'\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  fillPivot(pivotGridOptions: PivotGridOptions, pivotData: any) {\r\n    this.saveStateEnabled = false;\r\n    const selectedYear = this.stateData\r\n      ? this.stateData.settings.selectedYear\r\n      : this.currentYear;\r\n\r\n    if (pivotGridOptions && this.stateData?.settings) {\r\n      // If is visible like default, add % of total to pivot\r\n      if (this.stateData.settings.percentOfTotalState.isSet) {\r\n        this.addPercentOfTotalsToPivot(true);\r\n      }\r\n      // If is visible like default, add change % to pivot\r\n      if (this.stateData.settings.changePercentState.isSet) {\r\n        this.addPrecentOfChangeToPivot(true);\r\n      }\r\n      // If is visible like default, add CAGR to pivot\r\n      if (this.stateData.settings.cagrState.isSet) {\r\n        this.addCAGRToPivot(true);\r\n      }\r\n\r\n      const pivotGridSource = new PivotGridSource();\r\n\r\n      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;\r\n      pivotGridSource.store = pivotData;\r\n      // make copy of datasource without reference to old object\r\n      let sourceCopy = lodash.cloneDeep(pivotGridSource);\r\n      // if administrator set default sorting to true do not use any special sorting\r\n      if (!pivotGridOptions.settings.useDefaultSorting) {\r\n        // if some special sorting is applied\r\n        if (\r\n          pivotGridOptions.settings.specialSorting &&\r\n          pivotGridOptions.settings.specialSorting.length\r\n        ) {\r\n          for (let specialSorting of pivotGridOptions.settings.specialSorting) {\r\n            if (specialSorting.fieldName) {\r\n              let orderAray: any[] = [];\r\n              if (pivotData) {\r\n                let rowData = 0;\r\n                for (let row of pivotData) {\r\n                  // if (row.Year == selectedYear.PeriodKey) {\r\n                  // in case value datafield is not exists, must exists unit\r\n                  rowData = row.Value === undefined ? row.Unit : row.Value;\r\n                  if (\r\n                    orderAray.some(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    )\r\n                  ) {\r\n                    orderAray.find(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    ).valueSum += rowData;\r\n                  } else {\r\n                    orderAray.push({\r\n                      field: row[specialSorting.fieldName],\r\n                      valueSum: rowData,\r\n                    });\r\n                  }\r\n                  // }\r\n                }\r\n                orderAray = orderAray\r\n                  .sort((a, b) => b.valueSum - a.valueSum)\r\n                  .map((m) => m.field);\r\n                orderAray.forEach((item: string, index: number) => {\r\n                  if (item.startsWith(specialSorting.beginningWith)) {\r\n                    orderAray.push(orderAray.splice(index, 1)[0]);\r\n                  }\r\n                });\r\n                const sortingField = sourceCopy.fields.find(\r\n                  (f) => f.dataField === specialSorting.fieldName\r\n                );\r\n                if (sortingField) {\r\n                  sortingField.sortOrder = 'asc';\r\n                  sortingField.sortingMethod = (b: any, a: any) => {\r\n                    // if (!this.isHeaderFilterLoading) {\r\n                    //   for (const item of orderAray) {\r\n                    //     if (a.value === item) {\r\n                    //       return 1;\r\n                    //     }\r\n                    //     if (b.value === item) {\r\n                    //       return -1;\r\n                    //     }\r\n                    //   }\r\n                    // }\r\n                    return b.value.localeCompare(a.value);\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this.applySortingRolesByYear();\r\n        }\r\n      }\r\n      if (this.pivotGridDataSource) {\r\n        this.pivotGridDataSource.dispose();\r\n      }\r\n\r\n      // check if source contains dataType property and set visibility to false\r\n      if (\r\n        pivotGridSource.store &&\r\n        pivotGridSource.store.length &&\r\n        pivotGridSource.store[0].DataType\r\n      ) {\r\n        let dataType = sourceCopy.fields.filter(\r\n          (d) => d.dataField === 'DataType'\r\n        );\r\n        dataType[0].visible = false;\r\n      }\r\n\r\n      // check all datafields if contains an exception in calculating\r\n      const allDatafields = sourceCopy.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      );\r\n\r\n      for (let field of allDatafields) {\r\n        let newField = this.returnSpecialSumamryField(field);\r\n        if (newField) {\r\n          sourceCopy.fields.push(newField);\r\n          field.visible = false;\r\n        }\r\n      }\r\n\r\n      // remove unused properties\r\n      for (let field of sourceCopy.fields) {\r\n        // remove group properties when group is empty\r\n        if (field.groupName == '') {\r\n          // delete field.groupName;\r\n          // delete field.groupIndex;\r\n        }\r\n        // in case fileld is grouped field parse index to int\r\n        else if (field.groupName && field.groupName.length > 0) {\r\n          let groupIndex: number = field.groupIndex\r\n            ? parseInt(field.groupIndex.toString())\r\n            : 0;\r\n          field.groupIndex = groupIndex;\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof this.pivotGridOptions !== 'undefined' &&\r\n        this.pivotGridOptions.settings.groupedFields\r\n      ) {\r\n        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {\r\n          let field = {\r\n            groupName: groupedField.groupName,\r\n            area: groupedField.area,\r\n          };\r\n          sourceCopy.fields.push(field as PivotGridField);\r\n        }\r\n      }\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(sourceCopy as any);\r\n\r\n      // this solves alphabetical filtering in filters\r\n      setTimeout(() => {\r\n        const source = this.pivotGrid?.instance.getDataSource();\r\n        const getFieldValues = (source as any).getFieldValues;\r\n        this.isHeaderFilterLoading = false;\r\n        let that = this;\r\n        (source as any).getFieldValues = function () {\r\n          that.isHeaderFilterLoading = true;\r\n          return getFieldValues.apply(this, arguments).always(function () {\r\n            that.isHeaderFilterLoading = false;\r\n          });\r\n        };\r\n      }, 1);\r\n\r\n      CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);\r\n\r\n      if (\r\n        pivotGridOptions.settings &&\r\n        (pivotGridOptions.settings.menuSettings.isChart ||\r\n          pivotGridOptions.settings.charts.isVisible)\r\n      ) {\r\n        // this.initChart();\r\n      }\r\n    }\r\n    //cutomize texts in pivot\r\n    // this.updateDefaultPivotTexts();\r\n    // apply special filtering\r\n    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {\r\n    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);\r\n    //}\r\n\r\n    setTimeout(() => {\r\n      this.saveStateEnabled = true;\r\n    }, 1);\r\n  }\r\n\r\n  returnSpecialSumamryField(fieldOriginal: PivotGridField) {\r\n    if (fieldOriginal.summaryType === 'range') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption || '';\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.dataField = fieldOriginal.dataField || '';\r\n      fieldNew.calculateCustomSummary = (e: any) =>\r\n        this.calculateSummaryValueRange(e, fieldOriginal);\r\n      fieldNew.customizeText = (e: any) => this.customizeRangeText(e);\r\n      fieldNew.isCalculated = true;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.range;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else if (fieldOriginal.summaryType === 'sumCdOd') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption;\r\n      fieldNew.calculateCustomSummary = (options: any) =>\r\n        this.calculateSummaryValueCdOd(options, fieldOriginal);\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.isCalculated = false;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.none;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueRange(e: any, field: PivotGridField) {\r\n    const valueNearZero = Number.EPSILON;\r\n    switch (e.summaryProcess) {\r\n      case 'start':\r\n        e.totalValue = 0;\r\n        e.values = [0, 0];\r\n        break;\r\n      case 'calculate':\r\n        if (e.value != -1.7976931348623157e308) {\r\n          if (!e.values[0] || !e.values[1]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value < e.values[0]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value > e.values[1]) {\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n        }\r\n        break;\r\n      case 'finalize':\r\n        let min = e.values[0]\r\n          ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        let max = e.values[1]\r\n          ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        // if (\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find(\r\n        //     (v) => v === Number(min)\r\n        //   ) ||\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))\r\n        // ) {\r\n        //   ErrorHelper.informAdministrator(\r\n        //     this.appCommonDataService,\r\n        //     'Unhandled range value - (' +\r\n        //       min +\r\n        //       ')(' +\r\n        //       max +\r\n        //       ') ' +\r\n        //       Common.objToString(this.requestedView) +\r\n        //       'Environment: ' +\r\n        //       Common.objToString(\r\n        //         this.appEnvironmentData.getEnvironmentSettings()\r\n        //       ) +\r\n        //       ' User: ' +\r\n        //       Common.objToString(this.sharedService.getUserData())\r\n        //   );\r\n        // }\r\n        if (min === max) {\r\n          e.totalValue = min;\r\n        } else if (!min) {\r\n          e.totalValue = max;\r\n        } else {\r\n          e.totalValue = min + ' - ' + max;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  customizeRangeText(e: any) {\r\n    if (e.value === undefined) {\r\n      return SpecialValueType?.EmDash;\r\n    } else {\r\n      return e.value;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueCdOd(options: any, field: PivotGridField) {\r\n    switch (options.summaryProcess) {\r\n      case 'start':\r\n        options.totalValue = {\r\n          value: 0,\r\n          hasCd: false,\r\n          valueOf() {\r\n            return this.value;\r\n          },\r\n          toString() {\r\n            return this.value.toString();\r\n          },\r\n          indexOf() {\r\n            const stringValue = this.toString();\r\n            return stringValue.indexOf.apply(this, arguments);\r\n          },\r\n        };\r\n        break;\r\n      case 'calculate':\r\n        options.totalValue.value += options.value[field.dataField] || 0;\r\n        options.totalValue.hasCd =\r\n          options.totalValue.hasCd || options.value.DataType === 'cd';\r\n        break;\r\n      case 'finalize':\r\n        let totalValue = options.totalValue;\r\n        totalValue.value = (totalValue.value as number)\r\n          .toFixed(field.format?.precision)\r\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        options.totalValue = totalValue;\r\n        break;\r\n    }\r\n  }\r\n\r\n  applySortingRolesByYear() {\r\n    this.yearDataFieldName = 'Year';\r\n    setTimeout(() => {\r\n      const pivotGridDataSource: any = this.pivotGrid?.instance.getDataSource();\r\n      const columnFields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'column'\r\n      );\r\n      const datafields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'data'\r\n      );\r\n      const yearFieldOnFirstPositon = columnFields.filter(\r\n        (f: any) => f.areaIndex === 0 && f.dataField === this.yearDataFieldName\r\n      );\r\n\r\n      // apply this role only in case, year field is on first column position\r\n      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {\r\n        const rowFields = pivotGridDataSource._fields.filter(\r\n          (f: any) => f.area === 'row'\r\n        );\r\n        const selectedYear = this.currentYear;\r\n        // const selectedYear = this.stateData\r\n        //   ? this.stateData.settings.selectedYear.PeriodKey\r\n        //   : 2021;\r\n        if (selectedYear) {\r\n          for (const field of rowFields) {\r\n            pivotGridDataSource.field(field.dataField, {\r\n              sortBySummaryField: datafields\r\n                ? datafields.filter((f: any) => f.areaIndex === 0)[0].dataField\r\n                : undefined,\r\n              sortBySummaryPath: [selectedYear],\r\n              sortOrder: 'desc',\r\n            });\r\n          }\r\n          pivotGridDataSource.load();\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setCalculatedFieldFromTopMenu(value: any) {\r\n    const type = value.itemName;\r\n    const dataField = value.dataField;\r\n    switch (type) {\r\n      case CalculatedFieldType.percentOfTotal:\r\n        this.isPercentOfTotalPopup = true;\r\n        this.pivotSummaryDisplayModesSubtotals[0].id =\r\n          this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n            ? 'percentOfColumnTotal'\r\n            : 'percentOfRowTotal';\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.percentOfTotalState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.changePercent:\r\n        this.isPercentOfChangePopup = true;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.changePercentState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.cagr:\r\n        this.isCagrPopup = true;\r\n        // this.stateData?.settings.cagrState.dataField = dataField;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.cagrState.dataField = dataField;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // %of totals\r\n  summaryDisplayModeItems: any;\r\n  percentOfTotalBasedOn: string = 'Subtotals';\r\n  percentInDirection: string = '';\r\n  onBasedOnChange(isInit: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.basedOn =\r\n        this.percentOfTotalBasedOn;\r\n    }\r\n\r\n    this.summaryDisplayModeItems =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? this.pivotSummaryDisplayModesSubtotals\r\n        : this.pivotSummaryDisplayModesGrandTotals;\r\n    if (isInit === false && typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';\r\n    }\r\n  }\r\n\r\n  percentOfChangeComputeType: string = '';\r\n  onComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.changePercentState.computingType =\r\n        this.percentOfChangeComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.changePercentState.computingType =\r\n    //     ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  cagrComputeType: string = '';\r\n  onCagrComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.computingType = this.cagrComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  addPercentOfTotalsToPivot(iSCallFromFillPivot: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n        this.percentInDirection;\r\n    }\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotArray(iSCallFromFillPivot: boolean) {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of total exists\r\n      const percentOfTotal = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) =>\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal\r\n      );\r\n\r\n      if (percentOfTotal && this.pivotGridDataSource) {\r\n        fieldId = percentOfTotal.id;\r\n        percentOfTotal.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        percentOfTotal.caption = this.getCaptionForPercentOfTotal();\r\n        percentOfTotal.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        percentOfTotal.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridDataSource.field(percentOfTotal.id, {\r\n          summaryDisplayMode: percentOfTotal.summaryDisplayMode,\r\n          caption: percentOfTotal.caption,\r\n          calculatedFieldType: percentOfTotal.calculatedFieldType,\r\n          dataField:\r\n            this.stateData?.settings.percentOfTotalState.dataField || 'Value',\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        // CommonHelper.updatePlaceholders(\r\n        //   this.pivotGridDataSource,\r\n        //   this.stateData\r\n        // );\r\n      } else {\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions?.pivotGridSource.fields.length || 0;\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfTotal();\r\n        field.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = undefined;\r\n        field.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            1,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n\r\n        if (\r\n          !iSCallFromFillPivot &&\r\n          typeof this.pivotGridOptions !== 'undefined'\r\n        ) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfTotalPopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.percentOfTotalState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotCube(iSCallFromFillPivot: boolean) {\r\n    this.removeAllHiddenCalculatedFields();\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForPercentOfTotal();\r\n    field.dataField =\r\n      this.stateData?.settings.percentOfTotalState.dataField || '';\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = undefined;\r\n    field.summaryDisplayMode =\r\n      this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? CalculatedFieldType.percentOfTotal\r\n        : CalculatedFieldType.percentOfGrandTotal;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isPercentOfTotalPopup = false;\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  removeAllHiddenCalculatedFields() {\r\n    if (this.stateData?.state && this.pivotGridDataSource) {\r\n      this.stateData.state.fields = this.stateData.state.fields.filter(\r\n        (a: any) => a.area !== undefined\r\n      );\r\n      this.pivotGridDataSource.state(this.stateData.state);\r\n    }\r\n  }\r\n\r\n  getCaptionForPercentOfTotal(): string {\r\n    let caption = '';\r\n    //check if exist 2 or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions?.pivotGridSource.fields.filter(\r\n        (f: any) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfTotaldatafield =\r\n        this.stateData?.settings.percentOfTotalState.dataField;\r\n      let currentDatafieldCaption = '';\r\n      if (this.pivotGridOptions.settings.isCube) {\r\n        currentDatafieldCaption =\r\n          // this.pivotGridOptions.pivotGridSource.fields.find(\r\n          //   (f) => f.dataField === percentOfTotaldatafield\r\n          // ).caption;\r\n          'Cube Caption';\r\n      } else {\r\n        if (typeof this.pivotGridOptions !== 'undefined') {\r\n          const fieldCaption =\r\n            this.pivotGridOptions.pivotGridSource.fields.find(\r\n              (f: any) => f.dataFieldType === percentOfTotaldatafield\r\n            );\r\n          if (fieldCaption) {\r\n            currentDatafieldCaption = fieldCaption.caption;\r\n          }\r\n        }\r\n      }\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption\r\n          : CalculatedFieldType.percentOfGrandTotal +\r\n            ' ' +\r\n            currentDatafieldCaption;\r\n    } else {\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal\r\n          : CalculatedFieldType.percentOfGrandTotal;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addPrecentOfChangeToPivot(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of change exists\r\n      const percentOfChange =\r\n        this.pivotGridOptions?.pivotGridSource.fields.find(\r\n          (f) => f.calculatedFieldType === CalculatedFieldType.changePercent\r\n        );\r\n      if (percentOfChange && this.pivotGridDataSource) {\r\n        fieldId = percentOfChange.id;\r\n        this.pivotGridDataSource.field(percentOfChange.id, {\r\n          caption: this.getCaptionForPercentOfChange(),\r\n          dataField:\r\n            this.stateData?.settings.changePercentState.dataField || 'Value',\r\n          calculateSummaryValue: (e: any) =>\r\n            this.calculateSummaryValuePercentOfChange(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfChange();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.changePercentState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValuePercentOfChange(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.changePercent;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfChangePopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.changePercentState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSummaryValuePercentOfChange(e: any): any {\r\n    if (e.parent('column')) {\r\n      let base;\r\n      if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n      } else if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        let yearIndex = 0;\r\n        for (const index in e.parent('column').children()) {\r\n          if (\r\n            e\r\n              .parent('column')\r\n              .children()\r\n              [index].value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName)\r\n          ) {\r\n            yearIndex = parseInt(index);\r\n            break;\r\n          }\r\n        }\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const returnValue = e.value() / base.value() - 1;\r\n      return isNaN(returnValue) ||\r\n        (returnValue && returnValue.toString() === 'Infinity')\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCaptionForPercentOfChange() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfChangeDataField =\r\n        this.stateData?.settings.changePercentState.dataField;\r\n\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f: any) => f.dataFieldType === percentOfChangeDataField\r\n      );\r\n\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n\r\n      switch (percentOfChangeDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.changePercent;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.changePercent;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addCAGRToPivot(iSCallFromFillPivot: boolean): void {\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addCAGRToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addCAGRToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotArray(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case cagr exists, remove and recreate it (case for edit)\r\n      const cagr = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) => f.calculatedFieldType === CalculatedFieldType.cagr\r\n      );\r\n      if (cagr && this.pivotGridDataSource) {\r\n        fieldId = cagr.id;\r\n        this.pivotGridDataSource.field(cagr.id, {\r\n          dataField: this.stateData?.settings.cagrState.dataField || 'Value',\r\n          caption: this.getCaptionForCagr(),\r\n          calculateSummaryValue: (e: any) => this.calculateSummaryValueCagr(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForCagr();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.cagrState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValueCagr(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.cagr;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isCagrPopup = false;\r\n      if (this.stateData) this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotCube(iSCallFromFillPivot: boolean): void {\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForCagr();\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.dataField = this.stateData?.settings.cagrState.dataField || 'Value';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = (e: any) => this.calculateSummaryValueCagr(e);\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType = CalculatedFieldType.cagr;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isCagrPopup = false;\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  getCaptionForCagr() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const cagrDataField = this.stateData?.settings.cagrState.dataField;\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f) => f.dataField === cagrDataField\r\n      );\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n      switch (cagrDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.cagr;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.cagr;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  calculateSummaryValueCagr(e: any) {\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.parent('column') && shownYearsInPivot) {\r\n      let base;\r\n      let yearIndex = 0;\r\n      let prevYearIndex = 0;\r\n      for (const index in e.parent('column').children()) {\r\n        if (\r\n          e.parent('column').children()[index].value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName)\r\n        ) {\r\n          yearIndex = parseInt(index);\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n        prevYearIndex = 0;\r\n      } else if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();\r\n      const yearSpan =\r\n        shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];\r\n      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;\r\n      return isNaN(returnValue) || returnValue.toString() === 'Infinity'\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeAutoSaveStatus(statusValue: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.rememberLatestState = statusValue;\r\n    }\r\n    if (statusValue == false) {\r\n      this.alertService.info('The system will remember this state!');\r\n    } else {\r\n      this.alertService.info('The system will remember the last used state!');\r\n    }\r\n    this.canCallSaveState = true;\r\n    this.customSaveState(this.stateData?.state, true);\r\n  }\r\n}\r\n","<app-preview-top-menu\r\n  [setSelectedCurrency]=\"selectedCurrency\"\r\n  [pivotGridOptions]=\"pivotGridOptions\"\r\n  (currencySelectionChanged)=\"currencySelectionChanged($event)\"\r\n  (currencyConversionSelectionChanged)=\"\r\n    currencyConversionSelectionChanged($event)\r\n  \"\r\n  (massUnitSelectionChanged)=\"massUnitSelectionChanged($event)\"\r\n  (onExportToExcel)=\"exportToExcel()\"\r\n  (onExportToCvs)=\"exportToCvs()\"\r\n  (onExportSnapshot)=\"exportToShanptshot()\"\r\n  (calculatedFieldItemSelected)=\"setCalculatedFieldFromTopMenu($event)\"\r\n  (onChangeAutoSaveStatus)=\"onChangeAutoSaveStatus($event)\"\r\n></app-preview-top-menu>\r\n<dx-pivot-grid\r\n  id=\"pivotGrid\"\r\n  #pivotGrid\r\n  [allowSortingBySummary]=\"true\"\r\n  (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n  (onOptionChanged)=\"onOptionChanged($event)\"\r\n  (onInitialized)=\"onInitialized($event)\"\r\n  (onContentReady)=\"onContentReady($event)\"\r\n  (onCellPrepared)=\"cellPrepared($event)\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n  [allowFiltering]=\"pivotGridOptions?.settings?.allowFiltering || false\"\r\n  [allowExpandAll]=\"pivotGridOptions?.settings?.allowExpandAll || false\"\r\n  [showBorders]=\"pivotGridOptions?.settings?.showBorders || false\"\r\n  [showColumnGrandTotals]=\"\r\n    pivotGridOptions?.settings?.showColumnGrandTotals || false\r\n  \"\r\n  [showRowGrandTotals]=\"pivotGridOptions?.settings?.showRowGrandTotals || false\"\r\n  [showRowTotals]=\"pivotGridOptions?.settings?.showRowTotals || false\"\r\n  [showColumnTotals]=\"pivotGridOptions?.settings?.showColumnTotals || false\"\r\n  [showTotalsPrior]=\"pivotGridOptions?.settings?.showTotalsPrior || ''\"\r\n  [dataFieldArea]=\"stateData?.settings?.dataFieldArea || ''\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n  <dxo-state-storing\r\n    [enabled]=\"saveStateEnabled\"\r\n    type=\"custom\"\r\n    [customSave]=\"customSaveState\"\r\n    [customLoad]=\"customLoadState\"\r\n    [savingTimeout]=\"300\"\r\n  >\r\n  </dxo-state-storing>\r\n</dx-pivot-grid>\r\n\r\n<!-- popup for % of total -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"250\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfTotalPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute '% Of Total':</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\">Based on</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"['Subtotals', 'Grand Totals']\"\r\n                [(value)]=\"percentOfTotalBasedOn\"\r\n                (onValueChanged)=\"onBasedOnChange(false)\"\r\n                (onInitialized)=\"onBasedOnChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"summaryDisplayModeItems\" class=\"dx-field\">\r\n            <div class=\"dx-field-label\">In Direction</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-select-box\r\n                [items]=\"summaryDisplayModeItems\"\r\n                displayExpr=\"name\"\r\n                valueExpr=\"id\"\r\n                [(value)]=\"percentInDirection\"\r\n              >\r\n              </dx-select-box>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                [disabled]=\"false\"\r\n                (onClick)=\"addPercentOfTotalsToPivot(false)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for % of change -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfChangePopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute change, %:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"percentOfChangeComputeType\"\r\n                (onValueChanged)=\"onComputeTypeChange(false)\"\r\n                (onInitialized)=\"onComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addPrecentOfChangeToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for CAGR -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isCagrPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute CAGR:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"cagrComputeType\"\r\n                (onValueChanged)=\"onCagrComputeTypeChange(false)\"\r\n                (onInitialized)=\"onCagrComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addCAGRToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Subject } from 'rxjs';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntryPSC } from 'src/model/dataEntryPSC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { PscProductTypeSales } from 'src/model/psc-productTypeSales.model';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { CommonService } from 'src/services/common.service';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-product-type-sales',\r\n  templateUrl: './product-type-sales.component.html',\r\n  styleUrls: ['./product-type-sales.component.css'],\r\n})\r\nexport class ProductTypeSalesComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: PscProductTypeSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSales: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: PscSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  myYears: any[] = [];\r\n  volumeYears: any[] = [];\r\n  volumeYearsShow: any[] = [];\r\n  currentYearsShow: any[] = [];\r\n  forecastYears: any[] = [];\r\n  forecastYearsShow: any[] = [];\r\n  foreCastYear1: number = 0;\r\n  cagr: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  channelLists: DataEntryPSC[] = [];\r\n  productTypeLists: DataEntryPSC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setDataRelationsData(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n      this.getPivotSettings();\r\n      this.getGridState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n  deleteCommentConfirmPopup: boolean = false;\r\n  deleteResetConfirmPopup: boolean = false;\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n    'Forecast1',\r\n    'Forecast2',\r\n    'Forecast3',\r\n    'Forecast4',\r\n    'Forecast5',\r\n  ];\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  calculatorContextMenuItems: any[] = [];\r\n  pivotStateId: number = 0;\r\n\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateData: any | undefined;\r\n  stateChange: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private commonService: CommonService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Channel: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n      Forecast1: [null],\r\n      Forecast2: [null],\r\n      Forecast3: [null],\r\n      Forecast4: [null],\r\n      Forecast5: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n\r\n    this.calculatorContextMenuItems = this.commonService.getCalculatorFields();\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n    this.getGridState = this.getGridState.bind(this);\r\n\r\n    this.getAllColumnsComments();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getProductTypeSalesData();\r\n\r\n    this.getChannelLists();\r\n    this.getProductTypeLists();\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.studyDataRelations = this.datRelationsData.find(\r\n      (item) =>\r\n        item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n    );\r\n\r\n    if (this.studyDataRelations) {\r\n      this.studyDataViewId = this.studyDataRelations.ViewId;\r\n    }\r\n  }\r\n\r\n  getProductTypeSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getPscPTData(this.marketYearCategoryId, this.studyProjectMarketYearId)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as PscProductTypeSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .ProductTypeSales as PscSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            this.volumeYearsShow = [];\r\n            this.myYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n              this.myYears.push({ field: `PreviousYear${j}`, year: i });\r\n\r\n              this.volumeYearsShow.push({\r\n                field: `PreviousYear${j}`,\r\n                year: i,\r\n                isEditable: !this.isStudyEditable,\r\n                cellTemplate: 'EditCellTemplate',\r\n                isVisible: true,\r\n              });\r\n              if (j !== 5) {\r\n                this.volumeYearsShow.push({\r\n                  field: `PreviousYearCagr${j}`,\r\n                  year: `Cagr, ${i - 1}-${i}`,\r\n                  isEditable: false,\r\n                  cellTemplate: 'cargCellTemplate',\r\n                  isVisible: false,\r\n                });\r\n                this.volumeYearsShow.push({\r\n                  field: `PreviousYearPerChange${j}`,\r\n                  year: `Change, %, ${i - 1}-${i}`,\r\n                  isEditable: false,\r\n                  cellTemplate: 'cargCellTemplate',\r\n                  isVisible: false,\r\n                });\r\n              }\r\n              this.volumeYearsShow.push({\r\n                field: `PreviousYearTotalPer${j}`,\r\n                year: `% Of Total`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n            }\r\n\r\n            // myYears = this.volumeYears;\r\n            this.myYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            this.currentYearsShow = [];\r\n            this.currentYearsShow.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n              isEditable: !this.isStudyEditable,\r\n              cellTemplate: 'EditCellTemplate',\r\n              isVisible: true,\r\n            });\r\n            this.currentYearsShow.push({\r\n              field: `CagrCurrentYear`,\r\n              year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            this.currentYearsShow.push({\r\n              field: `PerChangeCurrentYear`,\r\n              year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            this.currentYearsShow.push({\r\n              field: `TotalPerCurrentYear`,\r\n              year: `% Of Total`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n\r\n            this.forecastYears = [];\r\n            this.forecastYearsShow = [];\r\n            this.cagr = [];\r\n\r\n            const forecastYear = this.currentYear + 5;\r\n            this.forecastYears.push({\r\n              field: `Forecast5`,\r\n              year: forecastYear,\r\n            });\r\n\r\n            this.forecastYearsShow.push({\r\n              field: `Forecast5`,\r\n              year: forecastYear,\r\n              isEditable: !this.isStudyEditable,\r\n              cellTemplate: 'EditCellTemplate',\r\n              isVisible: true,\r\n            });\r\n            this.forecastYearsShow.push({\r\n              field: `Cagr1`,\r\n              year: `Cagr, ${this.currentYear}-${forecastYear}`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            this.forecastYearsShow.push({\r\n              field: `TotalPer1`,\r\n              year: `% Of Total`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            this.forecastYearsShow.push({\r\n              field: `PerChange1`,\r\n              year: `Change, %, ${this.currentYear}-${forecastYear}`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n\r\n            this.myYears.push({ field: `Forecast5`, year: forecastYear });\r\n\r\n            // myYears.push(...this.forecastYears);\r\n\r\n            // for (\r\n            //   let i = currentYear + 1, j = 1;\r\n            //   i < currentYear + 6;\r\n            //   i++, j++\r\n            // ) {\r\n            //   // this.forecastYears.push({ field: `Forecast${j}`, year: i });\r\n            //   // this.cagr.push({ field: `Cagr${j}`, year: `${i - 1}-${i}` });\r\n            //   this.forecastYears.push({\r\n            //     field: `Forecast${j}`,\r\n            //     year: i,\r\n            //   });\r\n            //   this.forecastYearsShow.push({\r\n            //     field: `Forecast${j}`,\r\n            //     year: i,\r\n            //     isEditable: !this.isStudyEditable,\r\n            //     cellTemplate: 'EditCellTemplate',\r\n            //     isVisible: true,\r\n            //   });\r\n            //   this.forecastYearsShow.push({\r\n            //     field: `Cagr${j}`,\r\n            //     year: `Cagr, ${i - 1}-${i}`,\r\n            //     isEditable: false,\r\n            //     cellTemplate: 'cargCellTemplate',\r\n            //     isVisible: false,\r\n            //   });\r\n            //   this.forecastYearsShow.push({\r\n            //     field: `TotalPer${j}`,\r\n            //     year: `% Of Total`,\r\n            //     isEditable: false,\r\n            //     cellTemplate: 'cargCellTemplate',\r\n            //     isVisible: false,\r\n            //   });\r\n            //   this.forecastYearsShow.push({\r\n            //     field: `PerChange${j}`,\r\n            //     year: `Change, %, ${i - 1}-${i}`,\r\n            //     isEditable: false,\r\n            //     cellTemplate: 'cargCellTemplate',\r\n            //     isVisible: false,\r\n            //   });\r\n            // }\r\n\r\n            // this.studyData.map((item: any, i) => {\r\n            //   this.studyData[i].Cagr1 =\r\n            //     this.commonService.calculateCAGRPercentage(\r\n            //       item.CurrentYear,\r\n            //       item.Forecast1,\r\n            //       item.Forecast1 - item.CurrentYear\r\n            //     );\r\n            //   this.studyData[i].Cagr2 =\r\n            //     this.commonService.calculateCAGRPercentage(\r\n            //       item.Forecast1,\r\n            //       item.Forecast2,\r\n            //       item.Forecast2 - item.Forecast1\r\n            //     );\r\n            //   this.studyData[i].Cagr3 =\r\n            //     this.commonService.calculateCAGRPercentage(\r\n            //       item.Forecast2,\r\n            //       item.Forecast3,\r\n            //       item.Forecast3 - item.Forecast2\r\n            //     );\r\n            //   this.studyData[i].Cagr4 =\r\n            //     this.commonService.calculateCAGRPercentage(\r\n            //       item.Forecast3,\r\n            //       item.Forecast4,\r\n            //       item.Forecast4 - item.Forecast3\r\n            //     );\r\n            //   this.studyData[i].Cagr5 =\r\n            //     this.commonService.calculateCAGRPercentage(\r\n            //       item.Forecast4,\r\n            //       item.Forecast5,\r\n            //       item.Forecast5 - item.Forecast4\r\n            //     );\r\n\r\n            //   this.calculatePercentageChangeForForecastYears(this.studyData[i]);\r\n            // });\r\n\r\n            this.calculateTotalPercentageForCols();\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              this.calculateCargForForecastYears(item);\r\n              this.calculatePercentageChangeForForecastYears(item);\r\n\r\n              // const rowNoteArray: any = [];\r\n              // if (item.Notes !== null) {\r\n              //   const noteArray = item.Notes.split('|||');\r\n              //   noteArray.map((singleVal: any) => {\r\n              //     const n = singleVal.split('@@@');\r\n              //     const d = n[0].split('###');\r\n              //     rowNoteArray.push({\r\n              //       name: d[0].trim(),\r\n              //       date: new Date(d[1].trim()),\r\n              //       note: n[1].trim(),\r\n              //     });\r\n              //   });\r\n              // }\r\n\r\n              // let sortRowNoteArray: any = [];\r\n              // if (rowNoteArray.length > 0) {\r\n              //   sortRowNoteArray = rowNoteArray.sort(\r\n              //     (a: any, b: any) => b.date - a.date\r\n              //   );\r\n              // }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              let rowComments: any[] = [];\r\n              if (this.allColsComments) {\r\n                rowComments = this.allColsComments.filter(\r\n                  (single: any) => single.DraftDataRowId == item.DataRowId\r\n                );\r\n\r\n                rowComments.map(({ ColumnName }) => {\r\n                  this.myYears.map((elem: any) => {\r\n                    if (elem.field == ColumnName) {\r\n                      item[`${ColumnName}_comment`] = true;\r\n                    }\r\n                  });\r\n                });\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              // this.studyData[i].StudyNotes =\r\n              //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              // this.studyData[i].EditNote = false;\r\n              // this.studyData[i].Notes = null;\r\n              // this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try after sometimes.'\r\n          );\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as PscSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n      data.Forecast1 = +data.Forecast1;\r\n      data.Forecast2 = +data.Forecast2;\r\n      data.Forecast3 = +data.Forecast3;\r\n      data.Forecast4 = +data.Forecast4;\r\n      data.Forecast5 = +data.Forecast5;\r\n\r\n      this.calculateCargForForecastYears(data);\r\n      this.calculateTotalPercentageForCols();\r\n      this.calculatePercentageChangeForForecastYears(data);\r\n    }\r\n  }\r\n\r\n  calculateCargForForecastYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.PreviousYearCagr1 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear2,\r\n        data.PreviousYear1,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.PreviousYearCagr2 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear3,\r\n        data.PreviousYear2,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.PreviousYearCagr3 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear4,\r\n        data.PreviousYear3,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.PreviousYearCagr4 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear5,\r\n        data.PreviousYear4,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear1,\r\n        data.CurrentYear,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.Forecast5 > 0) {\r\n      data.Cagr1 = this.commonService.calculateCAGRPercentage(\r\n        data.CurrentYear,\r\n        data.Forecast5,\r\n        5\r\n      );\r\n    }\r\n\r\n    // if (data.Forecast1 > 0 && data.Forecast2 > 0) {\r\n    //   data.Cagr2 = this.commonService.calculateCAGRPercentage(\r\n    //     data.Forecast1,\r\n    //     data.Forecast2,\r\n    //     1\r\n    //   );\r\n    // }\r\n\r\n    // if (data.Forecast2 > 0 && data.Forecast3 > 0) {\r\n    //   data.Cagr3 = this.commonService.calculateCAGRPercentage(\r\n    //     data.Forecast2,\r\n    //     data.Forecast3,\r\n    //     1\r\n    //   );\r\n    // }\r\n\r\n    // if (data.Forecast3 > 0 && data.Forecast4 > 0) {\r\n    //   data.Cagr4 = this.commonService.calculateCAGRPercentage(\r\n    //     data.Forecast3,\r\n    //     data.Forecast4,\r\n    //     1\r\n    //   );\r\n    // }\r\n\r\n    // if (data.Forecast4 > 0 && data.Forecast5 > 0) {\r\n    //   data.Cagr5 = this.commonService.calculateCAGRPercentage(\r\n    //     data.Forecast4,\r\n    //     data.Forecast5,\r\n    //     1\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  calculateTotalPercentageForCols() {\r\n    const PreviousYear1Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear1,\r\n      0\r\n    );\r\n    const PreviousYear2Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear2,\r\n      0\r\n    );\r\n\r\n    const PreviousYear3Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear3,\r\n      0\r\n    );\r\n    const PreviousYear4Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear4,\r\n      0\r\n    );\r\n    const PreviousYear5Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear5,\r\n      0\r\n    );\r\n\r\n    const CurrentYearTotal = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.CurrentYear,\r\n      0\r\n    );\r\n\r\n    // const foreCastYear1Total = this.studyData.reduce(\r\n    //   (sum: number, currentItem: any) => sum + currentItem.Forecast1,\r\n    //   0\r\n    // );\r\n    // const foreCastYear2Total = this.studyData.reduce(\r\n    //   (sum: number, currentItem: any) => sum + currentItem.Forecast2,\r\n    //   0\r\n    // );\r\n\r\n    // const foreCastYear3Total = this.studyData.reduce(\r\n    //   (sum: number, currentItem: any) => sum + currentItem.Forecast3,\r\n    //   0\r\n    // );\r\n    // const foreCastYear4Total = this.studyData.reduce(\r\n    //   (sum: number, currentItem: any) => sum + currentItem.Forecast4,\r\n    //   0\r\n    // );\r\n    const foreCastYear5Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.Forecast5,\r\n      0\r\n    );\r\n\r\n    this.studyData.map((item) => {\r\n      item.PreviousYearTotalPer1 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear1Total,\r\n        item.PreviousYear1\r\n      );\r\n      item.PreviousYearTotalPer2 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear2Total,\r\n        item.PreviousYear2\r\n      );\r\n      item.PreviousYearTotalPer3 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear3Total,\r\n        item.PreviousYear3\r\n      );\r\n      item.PreviousYearTotalPer4 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear4Total,\r\n        item.PreviousYear4\r\n      );\r\n      item.PreviousYearTotalPer5 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear5Total,\r\n        item.PreviousYear5\r\n      );\r\n      item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(\r\n        CurrentYearTotal,\r\n        item.CurrentYear\r\n      );\r\n\r\n      // item.TotalPer1 = this.commonService.calculateTotalPercentage(\r\n      //   foreCastYear1Total,\r\n      //   item.Forecast1\r\n      // );\r\n      // item.TotalPer2 = this.commonService.calculateTotalPercentage(\r\n      //   foreCastYear2Total,\r\n      //   item.Forecast2\r\n      // );\r\n      // item.TotalPer3 = this.commonService.calculateTotalPercentage(\r\n      //   foreCastYear3Total,\r\n      //   item.Forecast3\r\n      // );\r\n      // item.TotalPer4 = this.commonService.calculateTotalPercentage(\r\n      //   foreCastYear4Total,\r\n      //   item.Forecast4\r\n      // );\r\n      item.TotalPer5 = this.commonService.calculateTotalPercentage(\r\n        foreCastYear5Total,\r\n        item.Forecast5\r\n      );\r\n    });\r\n  }\r\n\r\n  calculatePercentageChangeForForecastYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.PreviousYearPerChange1 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear2,\r\n          data.PreviousYear1\r\n        );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.PreviousYearPerChange2 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear3,\r\n          data.PreviousYear2\r\n        );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.PreviousYearPerChange3 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear4,\r\n          data.PreviousYear3\r\n        );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.PreviousYearPerChange4 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear5,\r\n          data.PreviousYear4\r\n        );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear1,\r\n        data.CurrentYear\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.Forecast5 > 0) {\r\n      data.PerChange1 = this.commonService.calculatePercentageChange(\r\n        data.CurrentYear,\r\n        data.Forecast5\r\n      );\r\n    }\r\n\r\n    // if (data.Forecast1 > 0 && data.Forecast2 > 0) {\r\n    //   data.PerChange2 = this.commonService.calculatePercentageChange(\r\n    //     data.Forecast1,\r\n    //     data.Forecast2\r\n    //   );\r\n    // }\r\n\r\n    // if (data.Forecast2 > 0 && data.Forecast3 > 0) {\r\n    //   data.PerChange3 = this.commonService.calculatePercentageChange(\r\n    //     data.Forecast2,\r\n    //     data.Forecast3\r\n    //   );\r\n    // }\r\n\r\n    // if (data.Forecast3 > 0 && data.Forecast4 > 0) {\r\n    //   data.PerChange4 = this.commonService.calculatePercentageChange(\r\n    //     data.Forecast3,\r\n    //     data.Forecast4\r\n    //   );\r\n    // }\r\n\r\n    // if (data.Forecast4 > 0 && data.Forecast5 > 0) {\r\n    //   data.PerChange5 = this.commonService.calculatePercentageChange(\r\n    //     data.Forecast4,\r\n    //     data.Forecast5\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  getChannelLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Channel')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.channelLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getProductTypeLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('ProductType')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.productTypeLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: PscSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Forecast1: +newRowData.Forecast1,\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      Channel: newRowData.Channel.Name,\r\n      ChannelId: newRowData.Channel.Id,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      ProductType: newRowData.ProductType.Name,\r\n      ProductTypeId: newRowData.ProductType.Id,\r\n      Forecast2: +newRowData.Forecast2,\r\n      Forecast3: +newRowData.Forecast3,\r\n      Forecast4: +newRowData.Forecast4,\r\n      Forecast5: +newRowData.Forecast5,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ChannelId == newRow.ChannelId &&\r\n        item.ProductTypeId == newRow.ProductTypeId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.ChannelId || 0) - (b.ChannelId || 0) ||\r\n          (a.ProductTypeId || 0) - (b.ProductTypeId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n    this.selectedCommentCellData = {};\r\n  }\r\n\r\n  onSaveNote(isLoad: boolean = true) {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedCommentCellData) {\r\n      return;\r\n    }\r\n\r\n    // const rowData = this.newNoteForm.value.rowData;\r\n    // const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    // const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n    //   rowIndex,\r\n    //   'EditNote'\r\n    // );\r\n\r\n    // this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    // let noteValue = rowData.data.StudyNotes;\r\n    // noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    // if (IsEditedNote) {\r\n    //   const noteArray =\r\n    //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n    //   noteArray.shift();\r\n\r\n    //   noteValue = noteArray.join(',');\r\n    // }\r\n\r\n    // const newNoteValue =\r\n    //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    // this.dataGrid?.instance.saveEditData();\r\n\r\n    const formData = {\r\n      dataItemCategoryId: this.studyAreaId,\r\n      marketYearCategoryDataId: this.marketYearCategoryId,\r\n      draftDataRowId: this.selectedCommentCellData.dataRowId,\r\n      columnName: this.selectedCommentCellData.colValue,\r\n      comment: newNote,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService.addCommentForCell(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.notePopupVisible = false;\r\n          // this.getSalesData();\r\n          if (isLoad) {\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.noteSubmit = false;\r\n            this.newNoteForm.reset();\r\n            this.newRowForm.updateValueAndValidity();\r\n            this.getCellColumnsComments(\r\n              this.selectedCommentCellData.colValue,\r\n              this.selectedCommentCellData.dataRowId\r\n            );\r\n          }\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n      Forecast1: item.Forecast1 > 0 ? item.Forecast1 : 0,\r\n      Forecast2: item.Forecast2 > 0 ? item.Forecast2 : 0,\r\n      Forecast3: item.Forecast3 > 0 ? item.Forecast3 : 0,\r\n      Forecast4: item.Forecast4 > 0 ? item.Forecast4 : 0,\r\n      Forecast5: item.Forecast5 > 0 ? item.Forecast5 : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      productTypeSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.savePSCData('ProductTypeSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getProductTypeSalesData();\r\n          this.loadCurrentStudy();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      productTypeSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .signOffPSCData('ProductTypeSales', formData)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getProductTypeSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Channel:\r\n        this.getChannelLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.ProductType:\r\n        this.getProductTypeLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n\r\n  onCalculatedItemClick(e: any) {\r\n    // console.log(e.itemData);\r\n    if (typeof e.itemData !== 'undefined') {\r\n      const calculatedFiled = e.itemData;\r\n      calculatedFiled.isCheck = !calculatedFiled.isCheck;\r\n      calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';\r\n      if (calculatedFiled.value === 'percentOfTotal') {\r\n        this.calculateTotalPercentageForCols();\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PreviousYearTotalPer${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n          // this.dataGrid?.instance.columnOption(\r\n          //   `TotalPer${i}`,\r\n          //   'visible',\r\n          //   calculatedFiled.isCheck\r\n          // );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `TotalPer1`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n        this.dataGrid?.instance.columnOption(\r\n          `TotalPerCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else if (calculatedFiled.value === 'changePercent') {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PreviousYearPerChange${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n          // this.dataGrid?.instance.columnOption(\r\n          //   `PerChange${i}`,\r\n          //   'visible',\r\n          //   calculatedFiled.isCheck\r\n          // );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `PerChange1`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n        this.dataGrid?.instance.columnOption(\r\n          `PerChangeCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PreviousYearCagr${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n          // this.dataGrid?.instance.columnOption(\r\n          //   `Cagr${i}`,\r\n          //   'visible',\r\n          //   calculatedFiled.isCheck\r\n          // );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `Cagr1`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n        this.dataGrid?.instance.columnOption(\r\n          `CagrCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (this.studyDataViewId) {\r\n      this.stateData = data;\r\n      this.stateChange.next(this.stateData);\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.studyDataViewId,\r\n            0,\r\n            false,\r\n            JSON.stringify(this.stateData),\r\n            true\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (data) {\r\n                // this.alertService.info(\r\n                //   'The system will remember the last state!'\r\n                // );\r\n                // this.loadCurrentStudy();\r\n                if (!this.pivotStateId) {\r\n                  this.getGridState();\r\n                }\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      this.setColsForDataGrid();\r\n      return this.stateData;\r\n    }\r\n  }\r\n\r\n  getGridState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService\r\n        .getPivotState(this.studyDataViewId, true)\r\n        .subscribe((res) => {\r\n          // in case state is not exists yet\r\n          try {\r\n            const stateRes =\r\n              typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n            stateData = JSON.parse(stateRes.StateData);\r\n\r\n            if (stateData) {\r\n              this.pivotStateId = stateRes.PivotStateId;\r\n              this.stateData = stateData;\r\n              this.dataGrid?.instance.state(this.stateData);\r\n              this.setColsForDataGrid();\r\n            }\r\n\r\n            // this.pivotStateId = stateRes.PivotStateId;\r\n          } catch {\r\n            // stateData.state.fields = this.getGridFields();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onDeleteCustomSaveState() {\r\n    this.deleteResetConfirmPopup = true;\r\n  }\r\n\r\n  deleteCustomState() {\r\n    if (this.studyDataViewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.studyDataViewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = undefined;\r\n\r\n            this.stateData = stateData;\r\n            this.calculatorContextMenuItems =\r\n              this.commonService.getCalculatorFields();\r\n            this.getProductTypeSalesData();\r\n            this.deleteResetConfirmPopup = false;\r\n            // this.getGridState();\r\n          }\r\n        );\r\n    } else {\r\n      this.deleteResetConfirmPopup = false;\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {}\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    if (typeof e.items === 'undefined') {\r\n      e.items = [];\r\n    }\r\n\r\n    // e.items.push({\r\n    //   beginGroup: true,\r\n    //   text: 'Reset to Default',\r\n    //   icon: 'fas fa-sync-alt',\r\n    //   onItemClick: () => {\r\n    //     this.deleteCustomState();\r\n    //   },\r\n    // });\r\n\r\n    const isValidTarget =\r\n      typeof e.target !== 'undefined' && e.target === 'content' ? true : false;\r\n    if (isValidTarget) {\r\n      const cells = e.row.cells;\r\n      const rowIndex = e.rowIndex;\r\n      const colIndex = e.columnIndex;\r\n      const currentCell =\r\n        typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;\r\n      if (typeof currentCell !== 'undefined') {\r\n        const foundValidCell = this.allowedCols.find(\r\n          (e) => e === currentCell.column.dataField\r\n        );\r\n\r\n        if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {\r\n          e.items.push({\r\n            beginGroup: true,\r\n            text: 'Comments',\r\n            icon: 'fas fa-comment',\r\n            onItemClick: () => {\r\n              // this.addNewCellComment(foundValidCell, colIndex, e.row);\r\n              this.getCellColumnsComments(\r\n                currentCell.column.dataField,\r\n                e.row.data.DataRowId\r\n              );\r\n            },\r\n          });\r\n        }\r\n\r\n        // if (\r\n        //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==\r\n        //     'undefined' &&\r\n        //   e.row.data[`${currentCell.column.dataField}_comment`]\r\n        // ) {\r\n        //   e.items.push({\r\n        //     beginGroup: true,\r\n        //     text: 'View Comments',\r\n        //     icon: 'fas fa-bars',\r\n        //     onItemClick: () => {\r\n        //       this.getCellColumnsComments(\r\n        //         currentCell.column.dataField,\r\n        //         e.row.data.DataRowId\r\n        //       );\r\n        //     },\r\n        //   });\r\n        // }\r\n      }\r\n    }\r\n  }\r\n\r\n  setColsForDataGrid() {\r\n    if (this.stateData) {\r\n      this.currentYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.volumeYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.forecastYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.calculatorContextMenuItems = this.stateData\r\n        .calculatorContextMenuItems\r\n        ? this.stateData.calculatorContextMenuItems\r\n        : this.calculatorContextMenuItems;\r\n    }\r\n  }\r\n\r\n  selectedCommentCellData: any = {};\r\n  addNewCellComment(colValue: string, colIndex: number, row: any) {\r\n    const currentCell =\r\n      typeof row.cells[colIndex] !== 'undefined'\r\n        ? row.cells[colIndex]\r\n        : undefined;\r\n    const colCaption = currentCell.column.caption;\r\n\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: currentCell.data.DataRowId,\r\n      currentCell: currentCell,\r\n      colCaption: colCaption,\r\n    };\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  allColsComments: any[] = [];\r\n  getAllColumnsComments() {\r\n    this.studyService\r\n      .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.allColsComments = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  cellColsComments: any[] = [];\r\n  getCellColumnsComments(colValue: string, dataRowId: string) {\r\n    const currentLabel = this.myYears.find(\r\n      (item: any) => item.field == colValue\r\n    );\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: dataRowId,\r\n      currentCell: {},\r\n      colCaption: currentLabel.year,\r\n    };\r\n\r\n    this.studyService\r\n      .getCellCommentsForStudy(\r\n        this.studyAreaId,\r\n        this.marketYearCategoryId,\r\n        dataRowId,\r\n        colValue\r\n      )\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.selectedRowNotes = data.Data;\r\n          this.viewNotePopup = true;\r\n          if (this.selectedRowNotes.length == 0) {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  checkHasComment(data: any) {\r\n    if (\r\n      typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&\r\n      data.data[`${data.column.dataField}_comment`]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteCommentData: any = {};\r\n  deleteComment(data: any) {\r\n    this.deleteCommentData = data;\r\n    this.deleteCommentConfirmPopup = true;\r\n    // this.viewNotePopup = false;\r\n  }\r\n\r\n  onDeleteCommentConfirmPopupHide() {\r\n    this.deleteCommentData = {};\r\n    this.deleteCommentConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteComment() {\r\n    this.isLoadingService.add();\r\n    const colValue = this.deleteCommentData.ColumnName;\r\n    const dataRowId = this.deleteCommentData.DraftDataRowId;\r\n    this.studyService\r\n      .deleteCellComment(\r\n        this.deleteCommentData.MarketYearCategoryDataId,\r\n        dataRowId,\r\n        colValue,\r\n        this.deleteCommentData.Id\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.deleteCommentConfirmPopup = false;\r\n            this.getCellColumnsComments(colValue, dataRowId);\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteCommentConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          width=\"100%\"\r\n          [allowColumnResizing]=\"true\"\r\n          [allowColumnReordering]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n          (onContentReady)=\"onContentReady($event)\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <!-- <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping> -->\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\r\n\r\n          <dxo-scrolling columnRenderingMode=\"standard\"></dxo-scrolling>\r\n          <!-- <dxo-column-chooser [enabled]=\"true\"></dxo-column-chooser> -->\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-state-storing\r\n            [enabled]=\"true\"\r\n            type=\"custom\"\r\n            [customSave]=\"customSaveState\"\r\n            [customLoad]=\"customLoadState\"\r\n            [savingTimeout]=\"300\"\r\n          >\r\n          </dxo-state-storing>\r\n\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-drop-down-button\r\n                    icon=\"fas fa-calculator\"\r\n                    [dropDownOptions]=\"{ width: 200 }\"\r\n                    displayExpr=\"name\"\r\n                    keyExpr=\"value\"\r\n                    [items]=\"calculatorContextMenuItems\"\r\n                    (onItemClick)=\"onCalculatedItemClick($event)\"\r\n                  ></dx-drop-down-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"Channel\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n            [width]=\"230\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductType\"\r\n            [allowEditing]=\"false\"\r\n            [fixed]=\"true\"\r\n            [width]=\"230\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"volumeYears\"\r\n            alignment=\"center\"\r\n            caption=\"Previous Years\"\r\n          >\r\n            <!-- <dxi-column\r\n              [width]=\"100\"\r\n              [dataField]=\"volumeYear.field\"\r\n              [caption]=\"volumeYear.year\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              alignment=\"center\"\r\n              *ngFor=\"let volumeYear of volumeYears\"\r\n            >\r\n            </dxi-column> -->\r\n            <dxi-column\r\n              [width]=\"120\"\r\n              [dataField]=\"volumeYear.field\"\r\n              [caption]=\"volumeYear.year\"\r\n              [allowEditing]=\"volumeYear.isEditable\"\r\n              [allowFiltering]=\"false\"\r\n              alignment=\"center\"\r\n              [visible]=\"volumeYear.isVisible\"\r\n              [cellTemplate]=\"volumeYear.cellTemplate\"\r\n              *ngFor=\"let volumeYear of volumeYearsShow\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"currentYear\"\r\n            dataField=\"CurrentYear\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            [allowFiltering]=\"false\"\r\n            alignment=\"center\"\r\n          >\r\n          </dxi-column> -->\r\n          <dxi-column\r\n            [width]=\"120\"\r\n            [dataField]=\"currentYearShow.field\"\r\n            [caption]=\"currentYearShow.year\"\r\n            [allowEditing]=\"currentYearShow.isEditable\"\r\n            [allowFiltering]=\"false\"\r\n            alignment=\"center\"\r\n            [visible]=\"currentYearShow.isVisible\"\r\n            [cellTemplate]=\"currentYearShow.cellTemplate\"\r\n            *ngFor=\"let currentYearShow of currentYearsShow\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <!-- <dxi-column\r\n            *ngIf=\"forecastYears\"\r\n            alignment=\"center\"\r\n            caption=\"Forecast Years\"\r\n          > -->\r\n          <!-- <dxi-column\r\n              [width]=\"100\"\r\n              [allowFiltering]=\"false\"\r\n              [caption]=\"forecastYear.year\"\r\n              [dataField]=\"forecastYear.field\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              alignment=\"center\"\r\n              *ngFor=\"let forecastYear of forecastYears\"\r\n            > -->\r\n          <ng-container *ngIf=\"forecastYearsShow\">\r\n            <dxi-column\r\n              [width]=\"120\"\r\n              [dataField]=\"forecastYear.field\"\r\n              [caption]=\"forecastYear.year\"\r\n              [allowEditing]=\"forecastYear.isEditable\"\r\n              [allowFiltering]=\"false\"\r\n              alignment=\"center\"\r\n              [visible]=\"forecastYear.isVisible\"\r\n              [cellTemplate]=\"forecastYear.cellTemplate\"\r\n              *ngFor=\"let forecastYear of forecastYearsShow\"\r\n            >\r\n            </dxi-column>\r\n          </ng-container>\r\n          <!-- </dxi-column> -->\r\n          <!-- <dxi-column caption=\"CAGR, %\">\r\n        <dxi-column\r\n        [width]=\"90\"\r\n        [allowFiltering]=\"false\"\r\n        [caption]=\"cag.field\"\r\n        [dataField]=\"cag.field\"\r\n        [allowEditing]=\"!isStudyEditable\"\r\n        [allowFiltering]=\"false\"\r\n        cellTemplate=\"EditCellTemplate\"\r\n        *ngFor=\"let cag of cagr\"\r\n      >\r\n      </dxi-column>\r\n       </dxi-column> -->\r\n\r\n          <!-- <dxi-column *ngIf=\"cagr\" caption=\"CAGR, %\" alignment=\"center\">\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              [dataField]=\"cagrYear.field\"\r\n              [caption]=\"cagrYear.year\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n              alignment=\"center\"\r\n              *ngFor=\"let cagrYear of cagr\"\r\n            >\r\n            </dxi-column> -->\r\n          <!-- <dxi-column\r\n          [width]=\"90\"\r\n          caption=\"Cagr1\"\r\n          dataField=\"Cagr1\"\r\n          [allowEditing]=\"false\"\r\n          [allowFiltering]=\"false\"\r\n        ></dxi-column>\r\n        <dxi-column\r\n          [width]=\"90\"\r\n          caption=\"Cagr2\"\r\n          dataField=\"Cagr2\"\r\n          [allowEditing]=\"false\"\r\n          [allowFiltering]=\"false\"\r\n        ></dxi-column>\r\n        <dxi-column\r\n          [width]=\"90\"\r\n          caption=\"Cagr3\"\r\n          dataField=\"Cagr3\"\r\n          [allowEditing]=\"false\"\r\n          [allowFiltering]=\"false\"\r\n        ></dxi-column>\r\n        <dxi-column\r\n          [width]=\"90\"\r\n          caption=\"Cagr4\"\r\n          dataField=\"Cagr4\"\r\n          [allowEditing]=\"false\"\r\n          [allowFiltering]=\"false\"\r\n        ></dxi-column>\r\n        <dxi-column\r\n          [width]=\"90\"\r\n          caption=\"Cagr5\"\r\n          dataField=\"Cagr5\"\r\n          [allowEditing]=\"false\"\r\n          [allowFiltering]=\"false\"\r\n        ></dxi-column> -->\r\n          <!-- </dxi-column> -->\r\n\r\n          <dxi-column\r\n            [width]=\"150\"\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <span *ngIf=\"checkHasComment(data)\" class=\"has-comment\"></span>\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'cargCellTemplate'\">\r\n            <span>{{\r\n              data.value || data.value == 0 ? data.value.toFixed(1) + \"%\" : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-product-type-sale-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYears]=\"volumeYears\"\r\n          [foreCastYears]=\"forecastYears\"\r\n          [studyData]=\"studyData\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-product-type-sale-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Channel</label>\r\n              <ng-select\r\n                [items]=\"channelLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Channel\"\r\n                placeholder=\"Select Channel\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Channel)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Type</label>\r\n              <ng-select\r\n                [items]=\"productTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductType\"\r\n                placeholder=\"Select Product Type\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"CurrentYear\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div *ngFor=\"let forecast of forecastYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ forecast.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"forecast.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"selectedCommentCellData\"\r\n  [width]=\"300\"\r\n  [height]=\"270\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Comment\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <label class=\"mt-0\">\r\n            Add Comment for {{ selectedCommentCellData.colCaption }}\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"2\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Comment\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [height]=\"500\"\r\n  [showTitle]=\"true\"\r\n  title=\"View Comments for {{ selectedCommentCellData.colCaption }}\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0 h-100 comment-container\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"CreatedBy\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"CreatedOn\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"Comment\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n          caption=\"\"\r\n          cellTemplate=\"deleteCellTemplate\"\r\n          class=\"text-center\"\r\n          [width]=\"30\"\r\n        ></dxi-column>\r\n        <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n          <dx-button\r\n            icon=\"trash\"\r\n            stylingMode=\"text\"\r\n            (onClick)=\"deleteComment(d.data)\"\r\n            type=\"danger\"\r\n          ></dx-button>\r\n        </div>\r\n      </dx-data-grid>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control\"\r\n                placeholder=\"Enter your comment\"\r\n                formControlName=\"note\"\r\n                rows=\"2\"\r\n                maxlength=\"1000\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': noteSubmit && n['note'].errors\r\n                }\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group text-center\">\r\n              <dx-button\r\n                text=\"Save Comment\"\r\n                type=\"default\"\r\n                [disabled]=\"newNoteForm.invalid\"\r\n                (onClick)=\"onSaveNote(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteCommentConfirmPopup\"\r\n  (onHidden)=\"onDeleteCommentConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this comment?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteComment()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteCommentConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"400\"\r\n  [height]=\"200\"\r\n  [showTitle]=\"false\"\r\n  title=\"Reset Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteResetConfirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">\r\n        Reset to Default will take you to last saved Data. Your unsaved data\r\n        will be removed.\r\n      </p>\r\n      <p class=\"mb-1\">Are you sure you want to continue?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"deleteCustomState()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteResetConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource, {\r\n  Field,\r\n} from 'devextreme/ui/pivot_grid/data_source';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { ComboBox } from 'src/model/combo.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Workbook } from 'exceljs';\r\nimport * as lodash from 'lodash';\r\nimport { saveAs } from 'file-saver';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataFieldArea } from 'src/model/enums/dataFieldArea.enum';\r\nimport { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport {\r\n  UserSettings,\r\n  UserStateAndSetttings,\r\n} from 'src/model/userStateAndSetttings.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialValueType } from 'src/model/enums/specialValueType.enum';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport { CommonHelper } from 'src/guard/commonHelper';\r\nimport { Subject } from 'rxjs';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { ComputingType } from 'src/model/enums/computingType.enum';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-segment-sales-preview',\r\n  templateUrl: './segment-sales-preview.component.html',\r\n  styleUrls: ['./segment-sales-preview.component.css'],\r\n})\r\nexport class SegmentSalesPreviewComponent implements OnInit {\r\n  @Input() studyData: PscSalesItem[] = [];\r\n  @Input() currentYear: number = 0;\r\n  @Input() foreCastYears: any[] = [];\r\n  @Input() previousYears: any[] = [];\r\n\r\n  // pivotGridDataSource: PivotGridDataSource;\r\n  // gridFields: Field[] = [];\r\n\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };\r\n  @Input() set setSelectedCurrency(data: any) {\r\n    if (data) {\r\n      this.selectedCurrency = {\r\n        Id: data.CurrencyId,\r\n        IsActive: true,\r\n        Name: data.CurrencyName,\r\n        CurrencyCode: data.CurrencyCode,\r\n        CurrencyName: data.CurrencyName,\r\n      };\r\n\r\n      this.currencyDropdownSelected = this.selectedCurrency;\r\n    }\r\n  }\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  volumeYears: any[] = [];\r\n  @Input() set setVolumeYears(data: any[]) {\r\n    if (data) {\r\n      this.volumeYears = data;\r\n    }\r\n  }\r\n\r\n  viewId: number = 0;\r\n  @Input() set setViewId(data: number) {\r\n    if (data) {\r\n      this.viewId = data;\r\n      this.getPivotSettings();\r\n      this.getPivotState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: SEDataEntry | undefined;\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  stateData: UserStateAndSetttings | undefined;\r\n\r\n  computingType = ComputingType;\r\n\r\n  eventsCustomAction: Subject<string> = new Subject<string>();\r\n  pivotGridNoDataMessage = '';\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  firstAvailableId = 0;\r\n\r\n  currencyDropdownSelected: any;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n  canCallSaveState = false;\r\n  adminSetNewState = false;\r\n\r\n  pivotSummaryDisplayModesSubtotals: ComboBox[] = [\r\n    { id: undefined, name: 'Same as the Data Fields' },\r\n    { id: 'percentOfColumnTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowTotal', name: 'Always Rows' },\r\n  ];\r\n\r\n  pivotSummaryDisplayModesGrandTotals: ComboBox[] = [\r\n    { id: 'percentOfColumnGrandTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowGrandTotal', name: 'Always Rows' },\r\n    { id: 'percentOfGrandTotal', name: 'Table (Absolute) Grand Total' },\r\n  ];\r\n\r\n  shownYears: any = undefined;\r\n  invisibleFields: PivotGridField[] = [];\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateChange: Subject<UserStateAndSetttings> =\r\n    new Subject<UserStateAndSetttings>();\r\n\r\n  shownYearsPrev: any = undefined;\r\n  isAdmin = false;\r\n  pivotStateId: number = 0;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n    // this.stateData = new UserStateAndSetttings();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.getPreviewData(this.studyData);\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.sharedService.getPivotSettings(this.viewId).subscribe((res) => {\r\n      this.pivotGridOptions = res.Data;\r\n      if (this.pivotGridOptions) {\r\n        this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPivotState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService.getPivotState(this.viewId).subscribe((res) => {\r\n        // in case state is not exists yet\r\n        try {\r\n          const stateRes =\r\n            typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n          stateData = Common.realMerge(\r\n            new UserStateAndSetttings(),\r\n            JSON.parse(stateRes.StateData)\r\n          );\r\n          this.pivotStateId = stateRes.PivotStateId;\r\n        } catch {\r\n          stateData = new UserStateAndSetttings();\r\n          // stateData.state.fields = this.getGridFields();\r\n        }\r\n\r\n        this.directDatasourceRenderPivot(stateData);\r\n      });\r\n    } else {\r\n      this.directDatasourceRenderPivot(this.stateData);\r\n    }\r\n  }\r\n\r\n  async directDatasourceRenderPivot(stateData: UserStateAndSetttings) {\r\n    if (this.pivotGridOptions.settings.isCube) {\r\n      // let token = await this.getAzureAnalysisToken();\r\n      // let cubesStore = CubeStoreHelper.setCubeStore(\r\n      //   this.pivotGridOptions.settings.cubeSettings.catalog,\r\n      //   this.pivotGridOptions.settings.cubeSettings.cube,\r\n      //   token,\r\n      //   this.devEndpoint\r\n      // );\r\n      // this.pivotGridOptions.pivotGridSource.store = cubesStore;\r\n      // this.pivotGridDataSource = new PivotGridDataSource(\r\n      //   this.pivotGridOptions.pivotGridSource as any\r\n      // );\r\n      // setTimeout(() => {\r\n      //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);\r\n      // }, 5000);\r\n      // this.saveStateEnabled = true;\r\n      // if (stateData.settings) {\r\n      //   if (!stateData.settings.currency) {\r\n      //     stateData.settings.currency =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n      //   }\r\n      //   if (!stateData.settings.currencyConversionType) {\r\n      //     stateData.settings.currencyConversionType =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n      //   }\r\n      //   if (!stateData.settings.selectedYear) {\r\n      //     stateData.settings.selectedYear.PeriodKey = 2021;\r\n      //   }\r\n      // }\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.stateData = stateData;\r\n      // this.fillPivotCube();\r\n      // setTimeout(() => {\r\n      //   this.canCallSaveState = true;\r\n      // }, 300);\r\n    } else {\r\n      if (stateData.settings) {\r\n        if (!stateData.settings.currency) {\r\n          stateData.settings.currency =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n        }\r\n        if (!stateData.settings.currencyConversionType) {\r\n          stateData.settings.currencyConversionType =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n        }\r\n        if (!stateData.settings.selectedYear?.PeriodKey) {\r\n          // stateData.settings.selectedYear = await this.getLatestAccessibleYear(\r\n          //   this.sharedService.getUserData().userId,\r\n          //   this.requestedView.databaseId,\r\n          //   this.requestedView.viewId\r\n          // );\r\n          stateData.settings.selectedYear = this.currentYear;\r\n        }\r\n        // if (!stateData.settings.unitOfVolume) {\r\n        //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(\r\n        //     this.requestedView.databaseId\r\n        //   );\r\n        // }\r\n        if (!stateData.settings.unitOfMass) {\r\n          // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(\r\n          //   this.requestedView.databaseId\r\n          // );\r\n          stateData.settings.unitOfMass = { Id: 105, Name: 'Thousand Tonnes' };\r\n        }\r\n      }\r\n\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      this.stateData = stateData;\r\n      if (this.previewData && this.previewData.length) {\r\n        //get all invisible fields\r\n        this.invisibleFields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => f.visible === false\r\n          );\r\n        //filter invisible fields\r\n        this.pivotGridOptions.pivotGridSource.fields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => !f.visible || !f.isCalculated\r\n          );\r\n        //get count of visible fields for calculated fields ids\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions.pivotGridSource.fields.length;\r\n        // remove all invisible data from the datasource\r\n        if (this.invisibleFields && this.invisibleFields.length > 0) {\r\n          for (const invisibleField of this.invisibleFields) {\r\n            this.previewData.forEach((obj) => {\r\n              delete obj[invisibleField.dataField];\r\n            });\r\n          }\r\n        }\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      } else {\r\n        this.readPivotDataFromApi();\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    this.canCallSaveState = true;\r\n\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (\r\n      this.viewId &&\r\n      this.canCallSaveState &&\r\n      this.pivotGridOptions &&\r\n      this.stateData\r\n    ) {\r\n      this.stateData.state = data;\r\n      this.stateChange.next(this.stateData);\r\n      // find all shown years and reload pivot grid on change\r\n      const yearField = this.stateData.state.fields.filter(\r\n        (f: any) => f.dataField === this.yearDataFieldName\r\n      );\r\n      const hasCagrOrChange =\r\n        this.stateData.settings.cagrState.isSet ||\r\n        this.stateData.settings.changePercentState.isSet;\r\n      if (yearField && hasCagrOrChange) {\r\n        const pivotGridInstance: any = this.pivotGrid?.instance;\r\n        const pivotFridDataSource = pivotGridInstance.getDataSource();\r\n        const areaIndex: number = yearField[0].areaIndex;\r\n        const uniqArrByText: any = lodash.uniqBy(\r\n          pivotGridInstance._dataController._columnsInfo[areaIndex],\r\n          'text'\r\n        );\r\n        this.shownYears = uniqArrByText.map((t: any) => parseInt(t.text));\r\n        // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists\r\n        if (yearField[0].sortOrder === 'desc') {\r\n          pivotFridDataSource.field(this.yearDataFieldName, {\r\n            sortOrder: 'asc',\r\n          });\r\n          pivotFridDataSource.load();\r\n        }\r\n        if (!lodash.isEqual(this.shownYears, this.shownYearsPrev)) {\r\n          this.shownYearsPrev = this.shownYears;\r\n          pivotFridDataSource.load();\r\n        }\r\n      }\r\n\r\n      // in case user is NOT admin and has disable automatic saving state or remember latest state\r\n      else if (!isChangeAutoSaveStatus) {\r\n        if (this.stateData.settings.rememberLatestState == undefined) {\r\n          this.stateData.settings.rememberLatestState =\r\n            this.pivotGridOptions.canSaveUserState;\r\n        }\r\n        if (this.stateData.settings.rememberLatestState == false) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.viewId,\r\n            0,\r\n            this.isAdmin,\r\n            JSON.stringify(this.stateData)\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (\r\n                data &&\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions &&\r\n                this.isAdmin\r\n              ) {\r\n                this.alertService.info(\r\n                  'The system will remember the last state!'\r\n                );\r\n                // after save state, save also settings\r\n                this.saveSettings(this.viewId, this.pivotGridOptions);\r\n                // set can save default state to false\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      return this.stateData.state;\r\n    }\r\n  }\r\n\r\n  deleteCustomState() {\r\n    this.adminSetNewState = false;\r\n    if (this.viewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.viewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = new UserStateAndSetttings();\r\n\r\n            this.directDatasourceRenderPivot(stateData);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveSettings(\r\n    currentlySelectedViewId: number,\r\n    optionsDataSource: PivotGridOptions\r\n  ): void {\r\n    let saveResult = false;\r\n    const optionsDataSourceTemp = { ...optionsDataSource };\r\n    optionsDataSourceTemp.pivotGridSource.fields =\r\n      optionsDataSourceTemp.pivotGridSource.fields.filter(\r\n        (f) => !f.isCalculated\r\n      );\r\n    // set store to empty, system will read fresh data from backend next time\r\n    optionsDataSourceTemp.pivotGridSource.store = [];\r\n  }\r\n\r\n  getPreviewData(studyData: PscSalesItem[]) {\r\n    const previewData: {\r\n      Segment: string;\r\n      Channel: string;\r\n      Year: number;\r\n      Value: number;\r\n    }[] = [];\r\n\r\n    studyData.map((item: any) => {\r\n      this.previousYears.map((year: any) => {\r\n        previewData.push({\r\n          Segment: item.Segment,\r\n          Channel: item.Channel,\r\n          Year: year.year,\r\n          Value: item[year.field],\r\n        });\r\n      });\r\n\r\n      previewData.push({\r\n        Segment: item.Segment,\r\n        Channel: item.Channel,\r\n        Year: this.currentYear,\r\n        Value: item.CurrentYear,\r\n      });\r\n\r\n      this.foreCastYears.map((year: any) => {\r\n        previewData.push({\r\n          Segment: item.Segment,\r\n          Channel: item.Channel,\r\n          Year: year.year,\r\n          Value: item[year.field],\r\n        });\r\n      });\r\n\r\n      // previewData.push({\r\n      //   Segment: item.Segment,\r\n      //   Channel: item.Channel,\r\n      //   Year: this.foreCastYear,\r\n      //   Value: item.Forecast1,\r\n      // });\r\n    });\r\n    // console.log(previewData);\r\n    // this.pivotGridDataSource = new PivotGridDataSource({\r\n    //   store: previewData,\r\n    //   fields: this.getGridFields(),\r\n    // });\r\n\r\n    this.previewData = previewData;\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.getGridFields();\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  getGridFields() {\r\n    return (this.gridFields = [\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'Channel',\r\n        area: 'row',\r\n        caption: 'Channel',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 2,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 3,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[]);\r\n  }\r\n\r\n  readPivotDataFromApi() {\r\n    this.isLoadingService.add();\r\n    this.yearDataFieldName = 'Year';\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'SegmentSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId,\r\n        typeof this.currencyDropdownSelected !== 'undefined'\r\n          ? this.currencyDropdownSelected.Id\r\n          : 0,\r\n        typeof this.unitOfMassDropdownSelected !== 'undefined'\r\n          ? this.unitOfMassDropdownSelected.Id\r\n          : 0,\r\n        typeof this.currencyConversionTypeSelected !== 'undefined'\r\n          ? this.currencyConversionTypeSelected\r\n          : 0\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyDataObj = res.Data;\r\n\r\n            const studyData = studyDataObj['SegmentSales'];\r\n\r\n            const previewData: any[] = [];\r\n            let index = 0;\r\n            studyData.map((item: any, i: number) => {\r\n              this.volumeYears.map((d: any) => {\r\n                this.gridFields.map((field: any) => {\r\n                  if (typeof previewData[index] === 'undefined') {\r\n                    previewData[index] = {};\r\n                  }\r\n                  previewData[index][field.dataField] = item[field.dataField];\r\n                  if (field.dataField === 'Year') {\r\n                    previewData[index][field.dataField] = d.year;\r\n                  }\r\n                  if (field.dataField === 'Value') {\r\n                    previewData[index][field.dataField] = item[d.field];\r\n                  }\r\n                });\r\n                index++;\r\n              });\r\n            });\r\n\r\n            this.previewData = previewData;\r\n\r\n            // this.pivotGridDataSource = new PivotGridDataSource({\r\n            //   store: this.previewData,\r\n            //   fields: this.gridFields,\r\n            // });\r\n            if (typeof this.pivotGridOptions !== 'undefined') {\r\n              this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n              this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n              this.pivotGridDataSource = new PivotGridDataSource(\r\n                this.pivotGridOptions.pivotGridSource as any\r\n              );\r\n            }\r\n\r\n            this.fillPivot(this.pivotGridOptions, this.previewData);\r\n            // when pivot data is loaded allow with small delay save state to the database\r\n            setTimeout(() => {\r\n              this.canCallSaveState = true;\r\n            }, 300);\r\n\r\n            // console.log(this.previewData);\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataFieldName(fieldName: string) {\r\n    if (fieldName == 'ProductTypeSales') {\r\n      return 'ProductTypeSalesSHC';\r\n    }\r\n\r\n    return fieldName;\r\n  }\r\n\r\n  onOptionChanged(e: any) {}\r\n\r\n  onInitialized(e: any) {}\r\n\r\n  cellPrepared(e: any) {\r\n    // customize change % columns captions\r\n    // console.log(this.stateData?.settings.changePercentState.computingType);\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {\r\n      if (\r\n        e.cell.text &&\r\n        e.cell.text.startsWith(CalculatedFieldType.changePercent)\r\n      ) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex].toString() +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex].toString();\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n      //customize cagr columns captions\r\n      if (e.cell.text && e.cell.text.startsWith(CalculatedFieldType.cagr)) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex] +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex];\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.area === 'data') {\r\n      if (e.cell.value) {\r\n        e.cell.value.hasCd &&\r\n          e.cellElement.classList.add('pivot-grid-cell-has-cd');\r\n      }\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource &&\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n    ) {\r\n      const calculatedFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) =>\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.changePercent ||\r\n            f.calculatedFieldType === CalculatedFieldType.cagr\r\n        );\r\n      for (const calculatedField of calculatedFields) {\r\n        this.addCloseButtonToCalculatedField(\r\n          calculatedField.id,\r\n          calculatedField.calculatedFieldType\r\n        );\r\n      }\r\n    }\r\n\r\n    // change style for no data message\r\n    const noDataElement = e.component\r\n      .element()\r\n      .querySelector('.dx-pivotgrid-nodata');\r\n    if (noDataElement) {\r\n      setTimeout(() => {\r\n        if (this.pivotGridNoDataMessage) {\r\n          noDataElement.classList.add('noDataMessage');\r\n        } else {\r\n          noDataElement.classList.remove('noDataMessage');\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    if (this.pivotGrid && this.stateData && this.stateData.state) {\r\n      // Allow next rows if you want to enable disabling pivot during waiting for component response\r\n      //this.pivot.disabled = true;\r\n      // not allow to user change state too fast, pivot component needs some time to save emit state\r\n      //setTimeout(() => { this.pivot.disabled = false; }, 1000)\r\n    }\r\n  }\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    // this.pivot.disabled = true;\r\n    this.customizeContextMenu(e);\r\n\r\n    //if (e.area == \"row\" || e.area == \"column\") {\r\n    //    let id = e.columnIndex + \"\" + e.rowIndex;\r\n    //    let tooltip = $(\"<span></span>\").append($(\"<span id='\" + id + \"'></span>\").html(\"\")).appendTo(e.cellElement);\r\n    //    let field = $(\"#\" + id).closest('td');\r\n    //    field.attr('title', e.cell.text);\r\n    //}\r\n  }\r\n\r\n  customizeContextMenu(e: any): void {\r\n    this.updateDefaultContextMenuTextsAndIcons(e);\r\n    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Delete Calculated Field',\r\n        icon: 'fa fa-trash-alt',\r\n        onItemClick: () => {\r\n          const fieldToDelete = e.field as PivotGridField;\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (fieldToDelete.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n          this.deleteCalculatedField(e.field.id);\r\n        },\r\n      });\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Edit Calculated Field',\r\n        icon: 'fa fa-pencil-alt',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (e.field.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.isPercentOfTotalPopup = true;\r\n                this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n                  undefined || '';\r\n                this.pivotSummaryDisplayModesSubtotals[0].id =\r\n                  this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                    ? 'percentOfColumnTotal'\r\n                    : 'percentOfRowTotal';\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.isPercentOfChangePopup = true;\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.isCagrPopup = true;\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let openMenuItems = [];\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencySelection) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-money',\r\n        text: 'Change Currency',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencySelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencyConversion) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-exchange-alt',\r\n        text: 'Constant',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencyConversionSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfVolume) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-fill-drip',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('massUnitSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfMass) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-balance-scale',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('volumeUnitSelector');\r\n        },\r\n      });\r\n    }\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Reset to Default',\r\n      icon: 'fas fa-sync-alt',\r\n      onItemClick: () => {\r\n        this.deleteCustomState();\r\n      },\r\n    });\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Adjust Parameters',\r\n      icon: 'fa fa-sliders-h',\r\n      items: openMenuItems,\r\n    });\r\n\r\n    if (\r\n      e.field &&\r\n      e.field.area === 'data' &&\r\n      this.enabledInContextMenu(e.field)\r\n    ) {\r\n      let calculatedFieldsItems: any[] = [];\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfTotal) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.percentOfTotal,\r\n          onItemClick: () => {\r\n            this.isPercentOfTotalPopup = true;\r\n            this.pivotSummaryDisplayModesSubtotals[0].id =\r\n              this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n                ? 'percentOfColumnTotal'\r\n                : 'percentOfRowTotal';\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.percentOfTotalState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.percentOfTotalState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfChange) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.changePercent,\r\n          onItemClick: () => {\r\n            this.isPercentOfChangePopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.changePercentState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.changePercentState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isCagr) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.cagr,\r\n          onItemClick: () => {\r\n            this.isCagrPopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.cagrState.dataField = e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.cagrState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Add Calculated Field',\r\n        icon: 'fa fa-calculator',\r\n        items: calculatedFieldsItems,\r\n      });\r\n    }\r\n    // show only case if exist two or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter((f) =>\r\n        (<any>Object).values(PivotGridDataFieldType).includes(f.dataFieldType)\r\n      ).length >= 2\r\n    ) {\r\n      const dataFieldsHeaders =\r\n        this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n          ? 'Rows'\r\n          : 'Columns';\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Show Data Field Headers in ' + dataFieldsHeaders,\r\n        icon: 'fa fa-table',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            this.stateData.settings.dataFieldArea =\r\n              this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                ? DataFieldArea.row\r\n                : DataFieldArea.column;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteCalculatedField(fieldId: number) {\r\n    this.pivotGridOptions?.pivotGridSource.fields.splice(\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n        .map((m) => m.id)\r\n        .indexOf(fieldId),\r\n      1\r\n    );\r\n    this.firstAvailableId--;\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.readPivotDataFromApi();\r\n    } else {\r\n      if (typeof this.pivotGridOptions !== 'undefined') {\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDefaultContextMenuTextsAndIcons(e: any) {\r\n    let rowName = undefined;\r\n    let rowCaption;\r\n    if (e.cell?.path) {\r\n      if (e.cell && e.area === 'row') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.rowFields[path].dataField;\r\n        rowCaption = e.rowFields[path].caption;\r\n      } else if (e.cell && e.area === 'column') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.columnFields[path].dataField;\r\n        rowCaption = e.columnFields[path].caption;\r\n      }\r\n      const expandAll = e.items.find((f: any) => f.text.includes('Expand All'));\r\n      if (expandAll) {\r\n        expandAll.icon = 'fas fa-plus';\r\n        expandAll.text = 'Expand' + ' ' + rowCaption;\r\n      }\r\n      const collapseAll = e.items.find((f: any) =>\r\n        f.text.includes('Collapse All')\r\n      );\r\n      if (collapseAll) {\r\n        collapseAll.icon = 'fas fa-minus';\r\n        collapseAll.text = 'Collapse' + ' ' + rowCaption;\r\n      }\r\n    }\r\n    const fieldChooser = e.items.find((f: any) =>\r\n      f.text.includes('Show Field Chooser')\r\n    );\r\n    if (fieldChooser) {\r\n      fieldChooser.text = 'FieldChooser Text';\r\n    }\r\n    const exportToExcel = e.items.find((f: any) =>\r\n      f.text.includes('Export to')\r\n    );\r\n    if (exportToExcel) {\r\n      exportToExcel.text = 'Export to excel';\r\n    }\r\n    const sorts = e.items.filter((f: any) => f.text.includes('Sort'));\r\n    if (sorts) {\r\n      for (let sort of sorts) {\r\n        sort.icon = 'fas fa-sort';\r\n      }\r\n    }\r\n  }\r\n\r\n  enabledInContextMenu(field: any): boolean {\r\n    if (field.dataFieldType === PivotGridDataFieldType.AvgPrice) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addCloseButtonToCalculatedField(fieldId: number, datafieldType: string) {\r\n    const calculatedFieldObj = $(\r\n      \".dx-area-field-content:contains('\" + datafieldType + \"')\"\r\n    ).append(\r\n      \"<i id='\" +\r\n        Common.removeAllSpaces(datafieldType) +\r\n        \"' class='closeButton fas fa-times-circle'></i>\"\r\n    );\r\n\r\n    calculatedFieldObj\r\n      .parent()\r\n      .parent()\r\n      .css('padding-right', '0')\r\n      .css('margin-right', '0 !important');\r\n\r\n    calculatedFieldObj\r\n      .children()\r\n      .off()\r\n      .on('click', () => {\r\n        if (typeof this.stateData !== 'undefined') {\r\n          switch (datafieldType) {\r\n            case CalculatedFieldType.percentOfTotal:\r\n            case CalculatedFieldType.percentOfGrandTotal:\r\n              this.stateData.settings.percentOfTotalState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.changePercent:\r\n              this.stateData.settings.changePercentState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.cagr:\r\n              this.stateData.settings.cagrState.isSet = false;\r\n              break;\r\n          }\r\n        }\r\n        this.deleteCalculatedField(fieldId);\r\n      });\r\n  }\r\n\r\n  currencySelectionChanged(currency: SEDataEntry) {\r\n    this.currencyDropdownSelected = currency;\r\n    // this.stateData.settings.currency = currency;\r\n    this.readPivotDataFromApi();\r\n    // // on currency change update % of total caption if exists\r\n    // const percentOfTotalField =\r\n    //   this.pivotGridOptions.pivotGridSource.fields.find(\r\n    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal\r\n    //   );\r\n    // if (percentOfTotalField) {\r\n    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();\r\n    // }\r\n  }\r\n\r\n  currencyConversionSelectionChanged(\r\n    currencyConversionType: CurrencyConversionTypeEnum\r\n  ) {\r\n    this.currencyConversionTypeSelected = currencyConversionType;\r\n    // this.stateData.settings.currencyConversionType = currencyConversionType;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  massUnitSelectionChanged(unitOfMass: SEDataEntry) {\r\n    this.unitOfMassDropdownSelected = unitOfMass;\r\n    // this.stateData.settings.unitOfMass = unitOfMass;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  getUserSettings() {\r\n    const userSettings = {\r\n      currency: {\r\n        Id: this.selectedCurrency.Id,\r\n        Code: this.selectedCurrency.CurrencyCode,\r\n        Name: this.selectedCurrency.CurrencyName,\r\n      },\r\n      currencyConversionType: 1,\r\n      unitOfMass: { Id: 103, Name: 'Thousand Lbs' },\r\n      unitOfMeasure: { Id: 101, Name: 'Metric Tonnes' },\r\n      unitOfVolume: { Id: 7, Name: 'Quart (US)' },\r\n      selectedYear: {\r\n        PeriodKey: this.currentYear,\r\n        Name: this.currentYear.toString(),\r\n      },\r\n      percentOfTotalState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        basedOn: 'Subtotals',\r\n        summaryDisplayMode: 'percentOfColumnTotal',\r\n      },\r\n      changePercentState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'Previous (Shown) Year',\r\n      },\r\n      cagrState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'First (Shown) Year',\r\n      },\r\n      dataFieldArea: 'column',\r\n      userChartSetting: {\r\n        dataFieldsDisplayMode: 'singleAxis',\r\n        chartType: 'Column',\r\n      },\r\n      isReducedDataSource: false,\r\n      rememberLatestState: true,\r\n    };\r\n\r\n    return userSettings;\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.getUserSettings();\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    const menuSettings = this.pivotGridOptions?.settings?.menuSettings;\r\n    const pivotFields = this.pivotGridDataSource.fields();\r\n    const userSettings = this.getUserSettings();\r\n    let finalData;\r\n    if (this.previewData[0].hasOwnProperty('Year')) {\r\n      finalData = this.previewData.sort((a, b) => a.Year - b.Year);\r\n    } else {\r\n      finalData = this.previewData;\r\n    }\r\n    this.studyService\r\n      .exportToExcel(\r\n        finalData,\r\n        pivotFields,\r\n        userSettings,\r\n        title,\r\n        menuSettings,\r\n        0\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          let fileName = 'PivotTest';\r\n          if (title.length > 3) {\r\n            fileName = title.split(' ').join('');\r\n            fileName = fileName.split('-').join('_');\r\n          }\r\n          var file = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n          var fileURL = URL.createObjectURL(file);\r\n          let a = document.createElement('a');\r\n          document.body.appendChild(a);\r\n          a.style.display = 'none';\r\n          a.href = fileURL;\r\n          a.target = '_blank';\r\n          a.download = `${fileName}.xlsx`;\r\n          a.click();\r\n          a.remove();\r\n          this.studyService.changeExcelLoading(false);\r\n        },\r\n        (error) => {\r\n          this.studyService.changeExcelLoading(false);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  exportToCvs() {\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    this.studyService.exportToCsv(this.previewData, fileName);\r\n  }\r\n\r\n  exportToShanptshot() {\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet('Main sheet');\r\n    exportPivotGrid({\r\n      component: this.pivotGrid?.instance,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        const excelCell = options;\r\n        excelCell.excelCell.font = { name: 'Calibri', size: 11 };\r\n        excelCell.excelCell.alignment = { horizontal: 'left', vertical: 'top' };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer: BlobPart) {\r\n        saveAs(\r\n          new Blob([buffer], { type: 'application/octet-stream' }),\r\n          fileName + '.xlsx'\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  fillPivot(pivotGridOptions: PivotGridOptions, pivotData: any) {\r\n    this.saveStateEnabled = false;\r\n    const selectedYear = this.stateData\r\n      ? this.stateData.settings.selectedYear\r\n      : this.currentYear;\r\n\r\n    if (pivotGridOptions && this.stateData?.settings) {\r\n      // If is visible like default, add % of total to pivot\r\n      if (this.stateData.settings.percentOfTotalState.isSet) {\r\n        this.addPercentOfTotalsToPivot(true);\r\n      }\r\n      // If is visible like default, add change % to pivot\r\n      if (this.stateData.settings.changePercentState.isSet) {\r\n        this.addPrecentOfChangeToPivot(true);\r\n      }\r\n      // If is visible like default, add CAGR to pivot\r\n      if (this.stateData.settings.cagrState.isSet) {\r\n        this.addCAGRToPivot(true);\r\n      }\r\n\r\n      const pivotGridSource = new PivotGridSource();\r\n\r\n      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;\r\n      pivotGridSource.store = pivotData;\r\n      // make copy of datasource without reference to old object\r\n      let sourceCopy = lodash.cloneDeep(pivotGridSource);\r\n      // if administrator set default sorting to true do not use any special sorting\r\n      if (!pivotGridOptions.settings.useDefaultSorting) {\r\n        // if some special sorting is applied\r\n        if (\r\n          pivotGridOptions.settings.specialSorting &&\r\n          pivotGridOptions.settings.specialSorting.length\r\n        ) {\r\n          for (let specialSorting of pivotGridOptions.settings.specialSorting) {\r\n            if (specialSorting.fieldName) {\r\n              let orderAray: any[] = [];\r\n              if (pivotData) {\r\n                let rowData = 0;\r\n                for (let row of pivotData) {\r\n                  // if (row.Year == selectedYear.PeriodKey) {\r\n                  // in case value datafield is not exists, must exists unit\r\n                  rowData = row.Value === undefined ? row.Unit : row.Value;\r\n                  if (\r\n                    orderAray.some(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    )\r\n                  ) {\r\n                    orderAray.find(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    ).valueSum += rowData;\r\n                  } else {\r\n                    orderAray.push({\r\n                      field: row[specialSorting.fieldName],\r\n                      valueSum: rowData,\r\n                    });\r\n                  }\r\n                  // }\r\n                }\r\n                orderAray = orderAray\r\n                  .sort((a, b) => b.valueSum - a.valueSum)\r\n                  .map((m) => m.field);\r\n                orderAray.forEach((item: string, index: number) => {\r\n                  if (item.startsWith(specialSorting.beginningWith)) {\r\n                    orderAray.push(orderAray.splice(index, 1)[0]);\r\n                  }\r\n                });\r\n                const sortingField = sourceCopy.fields.find(\r\n                  (f) => f.dataField === specialSorting.fieldName\r\n                );\r\n                if (sortingField) {\r\n                  sortingField.sortOrder = 'asc';\r\n                  sortingField.sortingMethod = (b: any, a: any) => {\r\n                    // if (!this.isHeaderFilterLoading) {\r\n                    //   for (const item of orderAray) {\r\n                    //     if (a.value === item) {\r\n                    //       return 1;\r\n                    //     }\r\n                    //     if (b.value === item) {\r\n                    //       return -1;\r\n                    //     }\r\n                    //   }\r\n                    // }\r\n                    return b.value.localeCompare(a.value);\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this.applySortingRolesByYear();\r\n        }\r\n      }\r\n      if (this.pivotGridDataSource) {\r\n        this.pivotGridDataSource.dispose();\r\n      }\r\n\r\n      // check if source contains dataType property and set visibility to false\r\n      if (\r\n        pivotGridSource.store &&\r\n        pivotGridSource.store.length &&\r\n        pivotGridSource.store[0].DataType\r\n      ) {\r\n        let dataType = sourceCopy.fields.filter(\r\n          (d) => d.dataField === 'DataType'\r\n        );\r\n        dataType[0].visible = false;\r\n      }\r\n\r\n      // check all datafields if contains an exception in calculating\r\n      const allDatafields = sourceCopy.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      );\r\n\r\n      for (let field of allDatafields) {\r\n        let newField = this.returnSpecialSumamryField(field);\r\n        if (newField) {\r\n          sourceCopy.fields.push(newField);\r\n          field.visible = false;\r\n        }\r\n      }\r\n\r\n      // remove unused properties\r\n      for (let field of sourceCopy.fields) {\r\n        // remove group properties when group is empty\r\n        if (field.groupName == '') {\r\n          // delete field.groupName;\r\n          // delete field.groupIndex;\r\n        }\r\n        // in case fileld is grouped field parse index to int\r\n        else if (field.groupName && field.groupName.length > 0) {\r\n          let groupIndex: number = field.groupIndex\r\n            ? parseInt(field.groupIndex.toString())\r\n            : 0;\r\n          field.groupIndex = groupIndex;\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof this.pivotGridOptions !== 'undefined' &&\r\n        this.pivotGridOptions.settings.groupedFields\r\n      ) {\r\n        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {\r\n          let field = {\r\n            groupName: groupedField.groupName,\r\n            area: groupedField.area,\r\n          };\r\n          sourceCopy.fields.push(field as PivotGridField);\r\n        }\r\n      }\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(sourceCopy as any);\r\n\r\n      // this solves alphabetical filtering in filters\r\n      setTimeout(() => {\r\n        const source = this.pivotGrid?.instance.getDataSource();\r\n        const getFieldValues = (source as any).getFieldValues;\r\n        this.isHeaderFilterLoading = false;\r\n        let that = this;\r\n        (source as any).getFieldValues = function () {\r\n          that.isHeaderFilterLoading = true;\r\n          return getFieldValues.apply(this, arguments).always(function () {\r\n            that.isHeaderFilterLoading = false;\r\n          });\r\n        };\r\n      }, 1);\r\n\r\n      CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);\r\n\r\n      if (\r\n        pivotGridOptions.settings &&\r\n        (pivotGridOptions.settings.menuSettings.isChart ||\r\n          pivotGridOptions.settings.charts.isVisible)\r\n      ) {\r\n        // this.initChart();\r\n      }\r\n    }\r\n    //cutomize texts in pivot\r\n    // this.updateDefaultPivotTexts();\r\n    // apply special filtering\r\n    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {\r\n    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);\r\n    //}\r\n\r\n    setTimeout(() => {\r\n      this.saveStateEnabled = true;\r\n    }, 1);\r\n  }\r\n\r\n  returnSpecialSumamryField(fieldOriginal: PivotGridField) {\r\n    if (fieldOriginal.summaryType === 'range') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption || '';\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.dataField = fieldOriginal.dataField || '';\r\n      fieldNew.calculateCustomSummary = (e: any) =>\r\n        this.calculateSummaryValueRange(e, fieldOriginal);\r\n      fieldNew.customizeText = (e: any) => this.customizeRangeText(e);\r\n      fieldNew.isCalculated = true;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.range;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else if (fieldOriginal.summaryType === 'sumCdOd') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption;\r\n      fieldNew.calculateCustomSummary = (options: any) =>\r\n        this.calculateSummaryValueCdOd(options, fieldOriginal);\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.isCalculated = false;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.none;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueRange(e: any, field: PivotGridField) {\r\n    const valueNearZero = Number.EPSILON;\r\n    switch (e.summaryProcess) {\r\n      case 'start':\r\n        e.totalValue = 0;\r\n        e.values = [0, 0];\r\n        break;\r\n      case 'calculate':\r\n        if (e.value != -1.7976931348623157e308) {\r\n          if (!e.values[0] || !e.values[1]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value < e.values[0]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value > e.values[1]) {\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n        }\r\n        break;\r\n      case 'finalize':\r\n        let min = e.values[0]\r\n          ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        let max = e.values[1]\r\n          ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        // if (\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find(\r\n        //     (v) => v === Number(min)\r\n        //   ) ||\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))\r\n        // ) {\r\n        //   ErrorHelper.informAdministrator(\r\n        //     this.appCommonDataService,\r\n        //     'Unhandled range value - (' +\r\n        //       min +\r\n        //       ')(' +\r\n        //       max +\r\n        //       ') ' +\r\n        //       Common.objToString(this.requestedView) +\r\n        //       'Environment: ' +\r\n        //       Common.objToString(\r\n        //         this.appEnvironmentData.getEnvironmentSettings()\r\n        //       ) +\r\n        //       ' User: ' +\r\n        //       Common.objToString(this.sharedService.getUserData())\r\n        //   );\r\n        // }\r\n        if (min === max) {\r\n          e.totalValue = min;\r\n        } else if (!min) {\r\n          e.totalValue = max;\r\n        } else {\r\n          e.totalValue = min + ' - ' + max;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  customizeRangeText(e: any) {\r\n    if (e.value === undefined) {\r\n      return SpecialValueType?.EmDash;\r\n    } else {\r\n      return e.value;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueCdOd(options: any, field: PivotGridField) {\r\n    switch (options.summaryProcess) {\r\n      case 'start':\r\n        options.totalValue = {\r\n          value: 0,\r\n          hasCd: false,\r\n          valueOf() {\r\n            return this.value;\r\n          },\r\n          toString() {\r\n            return this.value.toString();\r\n          },\r\n          indexOf() {\r\n            const stringValue = this.toString();\r\n            return stringValue.indexOf.apply(this, arguments);\r\n          },\r\n        };\r\n        break;\r\n      case 'calculate':\r\n        options.totalValue.value += options.value[field.dataField] || 0;\r\n        options.totalValue.hasCd =\r\n          options.totalValue.hasCd || options.value.DataType === 'cd';\r\n        break;\r\n      case 'finalize':\r\n        let totalValue = options.totalValue;\r\n        totalValue.value = (totalValue.value as number)\r\n          .toFixed(field.format?.precision)\r\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        options.totalValue = totalValue;\r\n        break;\r\n    }\r\n  }\r\n\r\n  applySortingRolesByYear() {\r\n    this.yearDataFieldName = 'Year';\r\n    setTimeout(() => {\r\n      const pivotGridDataSource: any = this.pivotGrid?.instance.getDataSource();\r\n      const columnFields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'column'\r\n      );\r\n      const datafields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'data'\r\n      );\r\n      const yearFieldOnFirstPositon = columnFields.filter(\r\n        (f: any) => f.areaIndex === 0 && f.dataField === this.yearDataFieldName\r\n      );\r\n\r\n      // apply this role only in case, year field is on first column position\r\n      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {\r\n        const rowFields = pivotGridDataSource._fields.filter(\r\n          (f: any) => f.area === 'row'\r\n        );\r\n        const selectedYear = this.currentYear;\r\n        // const selectedYear = this.stateData\r\n        //   ? this.stateData.settings.selectedYear.PeriodKey\r\n        //   : 2021;\r\n        if (selectedYear) {\r\n          for (const field of rowFields) {\r\n            pivotGridDataSource.field(field.dataField, {\r\n              sortBySummaryField: datafields\r\n                ? datafields.filter((f: any) => f.areaIndex === 0)[0].dataField\r\n                : undefined,\r\n              sortBySummaryPath: [selectedYear],\r\n              sortOrder: 'desc',\r\n            });\r\n          }\r\n          pivotGridDataSource.load();\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setCalculatedFieldFromTopMenu(value: any) {\r\n    const type = value.itemName;\r\n    const dataField = value.dataField;\r\n    switch (type) {\r\n      case CalculatedFieldType.percentOfTotal:\r\n        this.isPercentOfTotalPopup = true;\r\n        this.pivotSummaryDisplayModesSubtotals[0].id =\r\n          this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n            ? 'percentOfColumnTotal'\r\n            : 'percentOfRowTotal';\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.percentOfTotalState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.changePercent:\r\n        this.isPercentOfChangePopup = true;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.changePercentState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.cagr:\r\n        this.isCagrPopup = true;\r\n        // this.stateData?.settings.cagrState.dataField = dataField;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.cagrState.dataField = dataField;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // %of totals\r\n  summaryDisplayModeItems: any;\r\n  percentOfTotalBasedOn: string = 'Subtotals';\r\n  percentInDirection: string = '';\r\n  onBasedOnChange(isInit: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.basedOn =\r\n        this.percentOfTotalBasedOn;\r\n    }\r\n\r\n    this.summaryDisplayModeItems =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? this.pivotSummaryDisplayModesSubtotals\r\n        : this.pivotSummaryDisplayModesGrandTotals;\r\n    if (isInit === false && typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';\r\n    }\r\n  }\r\n\r\n  percentOfChangeComputeType: string = '';\r\n  onComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.changePercentState.computingType =\r\n        this.percentOfChangeComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.changePercentState.computingType =\r\n    //     ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  cagrComputeType: string = '';\r\n  onCagrComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.computingType = this.cagrComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  addPercentOfTotalsToPivot(iSCallFromFillPivot: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n        this.percentInDirection;\r\n    }\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotArray(iSCallFromFillPivot: boolean) {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of total exists\r\n      const percentOfTotal = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) =>\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal\r\n      );\r\n\r\n      if (percentOfTotal && this.pivotGridDataSource) {\r\n        fieldId = percentOfTotal.id;\r\n        percentOfTotal.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        percentOfTotal.caption = this.getCaptionForPercentOfTotal();\r\n        percentOfTotal.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        percentOfTotal.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridDataSource.field(percentOfTotal.id, {\r\n          summaryDisplayMode: percentOfTotal.summaryDisplayMode,\r\n          caption: percentOfTotal.caption,\r\n          calculatedFieldType: percentOfTotal.calculatedFieldType,\r\n          dataField:\r\n            this.stateData?.settings.percentOfTotalState.dataField || 'Value',\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        // CommonHelper.updatePlaceholders(\r\n        //   this.pivotGridDataSource,\r\n        //   this.stateData\r\n        // );\r\n      } else {\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions?.pivotGridSource.fields.length || 0;\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfTotal();\r\n        field.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = undefined;\r\n        field.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            1,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n\r\n        if (\r\n          !iSCallFromFillPivot &&\r\n          typeof this.pivotGridOptions !== 'undefined'\r\n        ) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfTotalPopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.percentOfTotalState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotCube(iSCallFromFillPivot: boolean) {\r\n    this.removeAllHiddenCalculatedFields();\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForPercentOfTotal();\r\n    field.dataField =\r\n      this.stateData?.settings.percentOfTotalState.dataField || '';\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = undefined;\r\n    field.summaryDisplayMode =\r\n      this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? CalculatedFieldType.percentOfTotal\r\n        : CalculatedFieldType.percentOfGrandTotal;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isPercentOfTotalPopup = false;\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  removeAllHiddenCalculatedFields() {\r\n    if (this.stateData?.state && this.pivotGridDataSource) {\r\n      this.stateData.state.fields = this.stateData.state.fields.filter(\r\n        (a: any) => a.area !== undefined\r\n      );\r\n      this.pivotGridDataSource.state(this.stateData.state);\r\n    }\r\n  }\r\n\r\n  getCaptionForPercentOfTotal(): string {\r\n    let caption = '';\r\n    //check if exist 2 or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions?.pivotGridSource.fields.filter(\r\n        (f: any) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfTotaldatafield =\r\n        this.stateData?.settings.percentOfTotalState.dataField;\r\n      let currentDatafieldCaption = '';\r\n      if (this.pivotGridOptions.settings.isCube) {\r\n        currentDatafieldCaption =\r\n          // this.pivotGridOptions.pivotGridSource.fields.find(\r\n          //   (f) => f.dataField === percentOfTotaldatafield\r\n          // ).caption;\r\n          'Cube Caption';\r\n      } else {\r\n        if (typeof this.pivotGridOptions !== 'undefined') {\r\n          const fieldCaption =\r\n            this.pivotGridOptions.pivotGridSource.fields.find(\r\n              (f: any) => f.dataFieldType === percentOfTotaldatafield\r\n            );\r\n          if (fieldCaption) {\r\n            currentDatafieldCaption = fieldCaption.caption;\r\n          }\r\n        }\r\n      }\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption\r\n          : CalculatedFieldType.percentOfGrandTotal +\r\n            ' ' +\r\n            currentDatafieldCaption;\r\n    } else {\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal\r\n          : CalculatedFieldType.percentOfGrandTotal;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addPrecentOfChangeToPivot(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of change exists\r\n      const percentOfChange =\r\n        this.pivotGridOptions?.pivotGridSource.fields.find(\r\n          (f) => f.calculatedFieldType === CalculatedFieldType.changePercent\r\n        );\r\n      if (percentOfChange && this.pivotGridDataSource) {\r\n        fieldId = percentOfChange.id;\r\n        this.pivotGridDataSource.field(percentOfChange.id, {\r\n          caption: this.getCaptionForPercentOfChange(),\r\n          dataField:\r\n            this.stateData?.settings.changePercentState.dataField || 'Value',\r\n          calculateSummaryValue: (e: any) =>\r\n            this.calculateSummaryValuePercentOfChange(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfChange();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.changePercentState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValuePercentOfChange(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.changePercent;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfChangePopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.changePercentState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSummaryValuePercentOfChange(e: any): any {\r\n    if (e.parent('column')) {\r\n      let base;\r\n      if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n      } else if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        let yearIndex = 0;\r\n        for (const index in e.parent('column').children()) {\r\n          if (\r\n            e\r\n              .parent('column')\r\n              .children()\r\n              [index].value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName)\r\n          ) {\r\n            yearIndex = parseInt(index);\r\n            break;\r\n          }\r\n        }\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const returnValue = e.value() / base.value() - 1;\r\n      return isNaN(returnValue) ||\r\n        (returnValue && returnValue.toString() === 'Infinity')\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCaptionForPercentOfChange() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfChangeDataField =\r\n        this.stateData?.settings.changePercentState.dataField;\r\n\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f: any) => f.dataFieldType === percentOfChangeDataField\r\n      );\r\n\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n\r\n      switch (percentOfChangeDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.changePercent;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.changePercent;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addCAGRToPivot(iSCallFromFillPivot: boolean): void {\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addCAGRToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addCAGRToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotArray(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case cagr exists, remove and recreate it (case for edit)\r\n      const cagr = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) => f.calculatedFieldType === CalculatedFieldType.cagr\r\n      );\r\n      if (cagr && this.pivotGridDataSource) {\r\n        fieldId = cagr.id;\r\n        this.pivotGridDataSource.field(cagr.id, {\r\n          dataField: this.stateData?.settings.cagrState.dataField || 'Value',\r\n          caption: this.getCaptionForCagr(),\r\n          calculateSummaryValue: (e: any) => this.calculateSummaryValueCagr(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForCagr();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.cagrState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValueCagr(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.cagr;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isCagrPopup = false;\r\n      if (this.stateData) this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotCube(iSCallFromFillPivot: boolean): void {\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForCagr();\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.dataField = this.stateData?.settings.cagrState.dataField || 'Value';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = (e: any) => this.calculateSummaryValueCagr(e);\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType = CalculatedFieldType.cagr;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isCagrPopup = false;\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  getCaptionForCagr() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const cagrDataField = this.stateData?.settings.cagrState.dataField;\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f) => f.dataField === cagrDataField\r\n      );\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n      switch (cagrDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.cagr;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.cagr;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  calculateSummaryValueCagr(e: any) {\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.parent('column') && shownYearsInPivot) {\r\n      let base;\r\n      let yearIndex = 0;\r\n      let prevYearIndex = 0;\r\n      for (const index in e.parent('column').children()) {\r\n        if (\r\n          e.parent('column').children()[index].value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName)\r\n        ) {\r\n          yearIndex = parseInt(index);\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n        prevYearIndex = 0;\r\n      } else if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();\r\n      const yearSpan =\r\n        shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];\r\n      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;\r\n      return isNaN(returnValue) || returnValue.toString() === 'Infinity'\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeAutoSaveStatus(statusValue: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.rememberLatestState = statusValue;\r\n    }\r\n    if (statusValue == false) {\r\n      this.alertService.info('The system will remember this state!');\r\n    } else {\r\n      this.alertService.info('The system will remember the last used state!');\r\n    }\r\n    this.canCallSaveState = true;\r\n    this.customSaveState(this.stateData?.state, true);\r\n  }\r\n}\r\n","<app-preview-top-menu\r\n  [setSelectedCurrency]=\"selectedCurrency\"\r\n  [pivotGridOptions]=\"pivotGridOptions\"\r\n  (currencySelectionChanged)=\"currencySelectionChanged($event)\"\r\n  (currencyConversionSelectionChanged)=\"\r\n    currencyConversionSelectionChanged($event)\r\n  \"\r\n  (massUnitSelectionChanged)=\"massUnitSelectionChanged($event)\"\r\n  (onExportToExcel)=\"exportToExcel()\"\r\n  (onExportToCvs)=\"exportToCvs()\"\r\n  (onExportSnapshot)=\"exportToShanptshot()\"\r\n  (calculatedFieldItemSelected)=\"setCalculatedFieldFromTopMenu($event)\"\r\n  (onChangeAutoSaveStatus)=\"onChangeAutoSaveStatus($event)\"\r\n></app-preview-top-menu>\r\n<dx-pivot-grid\r\n  id=\"pivotGrid\"\r\n  #pivotGrid\r\n  [allowSortingBySummary]=\"true\"\r\n  (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n  (onOptionChanged)=\"onOptionChanged($event)\"\r\n  (onInitialized)=\"onInitialized($event)\"\r\n  (onContentReady)=\"onContentReady($event)\"\r\n  (onCellPrepared)=\"cellPrepared($event)\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n  [allowFiltering]=\"pivotGridOptions?.settings?.allowFiltering || false\"\r\n  [allowExpandAll]=\"pivotGridOptions?.settings?.allowExpandAll || false\"\r\n  [showBorders]=\"pivotGridOptions?.settings?.showBorders || false\"\r\n  [showColumnGrandTotals]=\"\r\n    pivotGridOptions?.settings?.showColumnGrandTotals || false\r\n  \"\r\n  [showRowGrandTotals]=\"pivotGridOptions?.settings?.showRowGrandTotals || false\"\r\n  [showRowTotals]=\"pivotGridOptions?.settings?.showRowTotals || false\"\r\n  [showColumnTotals]=\"pivotGridOptions?.settings?.showColumnTotals || false\"\r\n  [showTotalsPrior]=\"pivotGridOptions?.settings?.showTotalsPrior || ''\"\r\n  [dataFieldArea]=\"stateData?.settings?.dataFieldArea || ''\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n  <dxo-state-storing\r\n    [enabled]=\"saveStateEnabled\"\r\n    type=\"custom\"\r\n    [customSave]=\"customSaveState\"\r\n    [customLoad]=\"customLoadState\"\r\n    [savingTimeout]=\"300\"\r\n  >\r\n  </dxo-state-storing>\r\n</dx-pivot-grid>\r\n\r\n<!-- popup for % of total -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"250\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfTotalPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute '% Of Total':</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\">Based on</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"['Subtotals', 'Grand Totals']\"\r\n                [(value)]=\"percentOfTotalBasedOn\"\r\n                (onValueChanged)=\"onBasedOnChange(false)\"\r\n                (onInitialized)=\"onBasedOnChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"summaryDisplayModeItems\" class=\"dx-field\">\r\n            <div class=\"dx-field-label\">In Direction</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-select-box\r\n                [items]=\"summaryDisplayModeItems\"\r\n                displayExpr=\"name\"\r\n                valueExpr=\"id\"\r\n                [(value)]=\"percentInDirection\"\r\n              >\r\n              </dx-select-box>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                [disabled]=\"false\"\r\n                (onClick)=\"addPercentOfTotalsToPivot(false)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for % of change -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfChangePopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute change, %:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"percentOfChangeComputeType\"\r\n                (onValueChanged)=\"onComputeTypeChange(false)\"\r\n                (onInitialized)=\"onComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addPrecentOfChangeToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for CAGR -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isCagrPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute CAGR:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"cagrComputeType\"\r\n                (onValueChanged)=\"onCagrComputeTypeChange(false)\"\r\n                (onInitialized)=\"onCagrComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addCAGRToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Column } from 'devextreme/ui/data_grid';\r\nimport { Subject } from 'rxjs';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntryPSC } from 'src/model/dataEntryPSC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { PscSegmentSales } from 'src/model/psc-segmentSales.model';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { CommonService } from 'src/services/common.service';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\n\r\n@Component({\r\n  selector: 'app-segment-sales',\r\n  templateUrl: './segment-sales.component.html',\r\n  styleUrls: ['./segment-sales.component.css'],\r\n})\r\nexport class SegmentSalesComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n  cagr: any[] = [];\r\n  studyDataObj: PscSegmentSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    SegmentSales: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: PscSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  myYears: any[] = [];\r\n  volumeYears: any[] = [];\r\n  volumeYearsShow: any[] = [];\r\n  currentYearsShow: any[] = [];\r\n  forecastYears: any[] = [];\r\n  forecastYearsShow: any[] = [];\r\n  foreCastYear1: number = 0;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  channelLists: DataEntryPSC[] = [];\r\n  segmentLists: DataEntryPSC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n      this.getPivotSettings();\r\n      this.getGridState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n  deleteCommentConfirmPopup: boolean = false;\r\n  deleteResetConfirmPopup: boolean = false;\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n    'Forecast1',\r\n    'Forecast2',\r\n    'Forecast3',\r\n    'Forecast4',\r\n    'Forecast5',\r\n  ];\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  calculatorContextMenuItems: any[] = [];\r\n  pivotStateId: number = 0;\r\n\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateData: any | undefined;\r\n  stateChange: Subject<any> = new Subject<any>();\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private commonService: CommonService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Channel: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n      Forecast1: [null],\r\n      Forecast2: [null],\r\n      Forecast3: [null],\r\n      Forecast4: [null],\r\n      Forecast5: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n\r\n    this.calculatorContextMenuItems = this.commonService.getCalculatorFields();\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n    this.getGridState = this.getGridState.bind(this);\r\n\r\n    this.getAllColumnsComments();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getChannelLists();\r\n    this.getSegmentLists();\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.studyDataRelations = this.datRelationsData.find(\r\n      (item) =>\r\n        item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n    );\r\n\r\n    if (this.studyDataRelations) {\r\n      this.studyDataViewId = this.studyDataRelations.ViewId;\r\n    }\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getPscStudyData(\r\n        'SegmentSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.studyDataObj = res.Data as PscSegmentSales;\r\n\r\n          this.studyMarketYearCategoryId =\r\n            this.studyDataObj.MarketYearCategoryId;\r\n\r\n          this.studyData = this.studyDataObj.SegmentSales as PscSalesItem[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            this.studyDataObj.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          this.currentYear = currentYear;\r\n          // console.log('State Data: ', this.stateData);\r\n          this.volumeYears = [];\r\n          this.volumeYearsShow = [];\r\n          this.myYears = [];\r\n          for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n            this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            this.myYears.push({ field: `PreviousYear${j}`, year: i });\r\n\r\n            this.volumeYearsShow.push({\r\n              field: `PreviousYear${j}`,\r\n              year: i,\r\n              isEditable: !this.isStudyEditable,\r\n              cellTemplate: 'EditCellTemplate',\r\n              isVisible: true,\r\n            });\r\n            if (j !== 5) {\r\n              this.volumeYearsShow.push({\r\n                field: `PreviousYearCagr${j}`,\r\n                year: `Cagr, ${i - 1}-${i}`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n              this.volumeYearsShow.push({\r\n                field: `PreviousYearPerChange${j}`,\r\n                year: `Change, %, ${i - 1}-${i}`,\r\n                isEditable: false,\r\n                cellTemplate: 'cargCellTemplate',\r\n                isVisible: false,\r\n              });\r\n            }\r\n            this.volumeYearsShow.push({\r\n              field: `PreviousYearTotalPer${j}`,\r\n              year: `% Of Total`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n          }\r\n\r\n          // myYears = this.volumeYears;\r\n          this.myYears.push({\r\n            field: `CurrentYear`,\r\n            year: this.currentYear,\r\n          });\r\n\r\n          this.currentYearsShow = [];\r\n          this.currentYearsShow.push({\r\n            field: `CurrentYear`,\r\n            year: this.currentYear,\r\n            isEditable: !this.isStudyEditable,\r\n            cellTemplate: 'EditCellTemplate',\r\n            isVisible: true,\r\n          });\r\n          this.currentYearsShow.push({\r\n            field: `CagrCurrentYear`,\r\n            year: `Cagr, ${this.currentYear - 1}-${this.currentYear}`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n          this.currentYearsShow.push({\r\n            field: `PerChangeCurrentYear`,\r\n            year: `Change, %, ${this.currentYear - 1}-${this.currentYear}`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n          this.currentYearsShow.push({\r\n            field: `TotalPerCurrentYear`,\r\n            year: `% Of Total`,\r\n            isEditable: false,\r\n            cellTemplate: 'cargCellTemplate',\r\n            isVisible: false,\r\n          });\r\n\r\n          this.forecastYears = [];\r\n          this.forecastYearsShow = [];\r\n          this.cagr = [];\r\n          for (let i = currentYear + 1, j = 1; i < currentYear + 6; i++, j++) {\r\n            this.forecastYears.push({\r\n              field: `Forecast${j}`,\r\n              year: i,\r\n            });\r\n            this.myYears.push({ field: `Forecast${j}`, year: i });\r\n            this.forecastYearsShow.push({\r\n              field: `Forecast${j}`,\r\n              year: i,\r\n              isEditable: !this.isStudyEditable,\r\n              cellTemplate: 'EditCellTemplate',\r\n              isVisible: true,\r\n            });\r\n            this.forecastYearsShow.push({\r\n              field: `Cagr${j}`,\r\n              year: `Cagr, ${i - 1}-${i}`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            this.forecastYearsShow.push({\r\n              field: `TotalPer${j}`,\r\n              year: `% Of Total`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            this.forecastYearsShow.push({\r\n              field: `PerChange${j}`,\r\n              year: `Change, %, ${i - 1}-${i}`,\r\n              isEditable: false,\r\n              cellTemplate: 'cargCellTemplate',\r\n              isVisible: false,\r\n            });\r\n            // this.cagr.push({ field: `Cagr${j}`, year: `${i - 1}-${i}` });\r\n          }\r\n          // myYears.push(...this.forecastYears);\r\n          // this.studyData.map((item: any, i) => {\r\n          //   this.studyData[i].Cagr1 =\r\n          //     this.commonService.calculateCAGRPercentage(\r\n          //       item.CurrentYear,\r\n          //       item.Forecast1,\r\n          //       item.Forecast1 - item.CurrentYear\r\n          //     );\r\n          //   this.studyData[i].Cagr2 =\r\n          //     this.commonService.calculateCAGRPercentage(\r\n          //       item.Forecast1,\r\n          //       item.Forecast2,\r\n          //       item.Forecast2 - item.Forecast1\r\n          //     );\r\n          //   this.studyData[i].Cagr3 =\r\n          //     this.commonService.calculateCAGRPercentage(\r\n          //       item.Forecast2,\r\n          //       item.Forecast3,\r\n          //       item.Forecast3 - item.Forecast2\r\n          //     );\r\n          //   this.studyData[i].Cagr4 =\r\n          //     this.commonService.calculateCAGRPercentage(\r\n          //       item.Forecast3,\r\n          //       item.Forecast4,\r\n          //       item.Forecast4 - item.Forecast3\r\n          //     );\r\n          //   this.studyData[i].Cagr5 =\r\n          //     this.commonService.calculateCAGRPercentage(\r\n          //       item.Forecast4,\r\n          //       item.Forecast5,\r\n          //       item.Forecast5 - item.Forecast4\r\n          //     );\r\n\r\n          //   this.calculatePercentageChangeForForecastYears(this.studyData[i]);\r\n\r\n          //   // this.studyData[i].PerChange1 = this.calculatePercentageChange(\r\n          //   //   item.CurrentYear,\r\n          //   //   item.Forecast1\r\n          //   // );\r\n          //   // this.studyData[i].PerChange2 = this.calculateCAGRPercentage(\r\n          //   //   item.Forecast1,\r\n          //   //   item.Forecast2,\r\n          //   //   item.Forecast2 - item.Forecast1\r\n          //   // );\r\n          //   // this.studyData[i].PerChange3 = this.calculateCAGRPercentage(\r\n          //   //   item.Forecast2,\r\n          //   //   item.Forecast3,\r\n          //   //   item.Forecast3 - item.Forecast2\r\n          //   // );\r\n          //   // this.studyData[i].PerChange4 = this.calculateCAGRPercentage(\r\n          //   //   item.Forecast3,\r\n          //   //   item.Forecast4,\r\n          //   //   item.Forecast4 - item.Forecast3\r\n          //   // );\r\n          //   // this.studyData[i].PerChange5 = this.calculateCAGRPercentage(\r\n          //   //   item.Forecast4,\r\n          //   //   item.Forecast5,\r\n          //   //   item.Forecast5 - item.Forecast4\r\n          //   // );\r\n          // });\r\n\r\n          this.calculateTotalPercentageForCols();\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            this.calculateCargForForecastYears(item);\r\n            this.calculatePercentageChangeForForecastYears(item);\r\n\r\n            // const rowNoteArray: any = [];\r\n            // if (item.Notes !== null) {\r\n            //   const noteArray = item.Notes.split('|||');\r\n            //   noteArray.map((singleVal: any) => {\r\n            //     const n = singleVal.split('@@@');\r\n            //     const d = n[0].split('###');\r\n            //     rowNoteArray.push({\r\n            //       name: d[0].trim(),\r\n            //       date: new Date(d[1].trim()),\r\n            //       note: n[1].trim(),\r\n            //     });\r\n            //   });\r\n            // }\r\n\r\n            // let sortRowNoteArray: any = [];\r\n            // if (rowNoteArray.length > 0) {\r\n            //   sortRowNoteArray = rowNoteArray.sort(\r\n            //     (a: any, b: any) => b.date - a.date\r\n            //   );\r\n            // }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  // console.log(colValueArray);\r\n                  changelogObj[colValueArray[3]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            let rowComments: any[] = [];\r\n            if (this.allColsComments) {\r\n              rowComments = this.allColsComments.filter(\r\n                (single: any) => single.DraftDataRowId == item.DataRowId\r\n              );\r\n\r\n              rowComments.map(({ ColumnName }) => {\r\n                this.myYears.map((elem: any) => {\r\n                  if (elem.field == ColumnName) {\r\n                    item[`${ColumnName}_comment`] = true;\r\n                  }\r\n                });\r\n              });\r\n            }\r\n\r\n            this.currentCurrency = {\r\n              CurrencyId: item.CurrencyId,\r\n              CurrencyName: item.CurrencyName,\r\n              CurrencyCode: item.CurrencyCode,\r\n            };\r\n\r\n            // this.studyData[i].StudyNotes =\r\n            //   rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            // this.studyData[i].EditNote = false;\r\n            // this.studyData[i].Notes = null;\r\n            // this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  getChannelLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Channel')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.channelLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getSegmentLists() {\r\n    this.sharedService\r\n      .getPSCDataEntryData('Segment')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.segmentLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as PscSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n      data.Forecast1 = +data.Forecast1;\r\n      data.Forecast2 = +data.Forecast2;\r\n      data.Forecast3 = +data.Forecast3;\r\n      data.Forecast4 = +data.Forecast4;\r\n      data.Forecast5 = +data.Forecast5;\r\n\r\n      this.calculateCargForForecastYears(data);\r\n      this.calculateTotalPercentageForCols();\r\n      this.calculatePercentageChangeForForecastYears(data);\r\n    }\r\n  }\r\n\r\n  calculateCargForForecastYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.PreviousYearCagr1 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear2,\r\n        data.PreviousYear1,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.PreviousYearCagr2 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear3,\r\n        data.PreviousYear2,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.PreviousYearCagr3 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear4,\r\n        data.PreviousYear3,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.PreviousYearCagr4 = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear5,\r\n        data.PreviousYear4,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.CagrCurrentYear = this.commonService.calculateCAGRPercentage(\r\n        data.PreviousYear1,\r\n        data.CurrentYear,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.Forecast1 > 0) {\r\n      data.Cagr1 = this.commonService.calculateCAGRPercentage(\r\n        data.CurrentYear,\r\n        data.Forecast1,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.Forecast1 > 0 && data.Forecast2 > 0) {\r\n      data.Cagr2 = this.commonService.calculateCAGRPercentage(\r\n        data.Forecast1,\r\n        data.Forecast2,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.Forecast2 > 0 && data.Forecast3 > 0) {\r\n      data.Cagr3 = this.commonService.calculateCAGRPercentage(\r\n        data.Forecast2,\r\n        data.Forecast3,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.Forecast3 > 0 && data.Forecast4 > 0) {\r\n      data.Cagr4 = this.commonService.calculateCAGRPercentage(\r\n        data.Forecast3,\r\n        data.Forecast4,\r\n        1\r\n      );\r\n    }\r\n\r\n    if (data.Forecast4 > 0 && data.Forecast5 > 0) {\r\n      data.Cagr5 = this.commonService.calculateCAGRPercentage(\r\n        data.Forecast4,\r\n        data.Forecast5,\r\n        1\r\n      );\r\n    }\r\n  }\r\n\r\n  calculateTotalPercentageForCols() {\r\n    const PreviousYear1Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear1,\r\n      0\r\n    );\r\n    const PreviousYear2Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear2,\r\n      0\r\n    );\r\n\r\n    const PreviousYear3Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear3,\r\n      0\r\n    );\r\n    const PreviousYear4Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear4,\r\n      0\r\n    );\r\n    const PreviousYear5Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.PreviousYear5,\r\n      0\r\n    );\r\n\r\n    const CurrentYearTotal = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.CurrentYear,\r\n      0\r\n    );\r\n\r\n    const foreCastYear1Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.Forecast1,\r\n      0\r\n    );\r\n    const foreCastYear2Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.Forecast2,\r\n      0\r\n    );\r\n\r\n    const foreCastYear3Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.Forecast3,\r\n      0\r\n    );\r\n    const foreCastYear4Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.Forecast4,\r\n      0\r\n    );\r\n    const foreCastYear5Total = this.studyData.reduce(\r\n      (sum: number, currentItem: any) => sum + currentItem.Forecast5,\r\n      0\r\n    );\r\n\r\n    this.studyData.map((item) => {\r\n      item.PreviousYearTotalPer1 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear1Total,\r\n        item.PreviousYear1\r\n      );\r\n      item.PreviousYearTotalPer2 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear2Total,\r\n        item.PreviousYear2\r\n      );\r\n      item.PreviousYearTotalPer3 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear3Total,\r\n        item.PreviousYear3\r\n      );\r\n      item.PreviousYearTotalPer4 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear4Total,\r\n        item.PreviousYear4\r\n      );\r\n      item.PreviousYearTotalPer5 = this.commonService.calculateTotalPercentage(\r\n        PreviousYear5Total,\r\n        item.PreviousYear5\r\n      );\r\n      item.TotalPerCurrentYear = this.commonService.calculateTotalPercentage(\r\n        CurrentYearTotal,\r\n        item.CurrentYear\r\n      );\r\n\r\n      item.TotalPer1 = this.commonService.calculateTotalPercentage(\r\n        foreCastYear1Total,\r\n        item.Forecast1\r\n      );\r\n      item.TotalPer2 = this.commonService.calculateTotalPercentage(\r\n        foreCastYear2Total,\r\n        item.Forecast2\r\n      );\r\n      item.TotalPer3 = this.commonService.calculateTotalPercentage(\r\n        foreCastYear3Total,\r\n        item.Forecast3\r\n      );\r\n      item.TotalPer4 = this.commonService.calculateTotalPercentage(\r\n        foreCastYear4Total,\r\n        item.Forecast4\r\n      );\r\n      item.TotalPer5 = this.commonService.calculateTotalPercentage(\r\n        foreCastYear5Total,\r\n        item.Forecast5\r\n      );\r\n    });\r\n  }\r\n\r\n  calculatePercentageChangeForForecastYears(data: PscSalesItem) {\r\n    if (data.PreviousYear2 > 0 && data.PreviousYear1 > 0) {\r\n      data.PreviousYearPerChange1 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear2,\r\n          data.PreviousYear1\r\n        );\r\n    }\r\n\r\n    if (data.PreviousYear3 > 0 && data.PreviousYear2 > 0) {\r\n      data.PreviousYearPerChange2 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear3,\r\n          data.PreviousYear2\r\n        );\r\n    }\r\n\r\n    if (data.PreviousYear4 > 0 && data.PreviousYear3 > 0) {\r\n      data.PreviousYearPerChange3 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear4,\r\n          data.PreviousYear3\r\n        );\r\n    }\r\n\r\n    if (data.PreviousYear5 > 0 && data.PreviousYear4 > 0) {\r\n      data.PreviousYearPerChange4 =\r\n        this.commonService.calculatePercentageChange(\r\n          data.PreviousYear5,\r\n          data.PreviousYear4\r\n        );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.PreviousYear1 > 0) {\r\n      data.PerChangeCurrentYear = this.commonService.calculatePercentageChange(\r\n        data.PreviousYear1,\r\n        data.CurrentYear\r\n      );\r\n    }\r\n\r\n    if (data.CurrentYear > 0 && data.Forecast1 > 0) {\r\n      data.PerChange1 = this.commonService.calculatePercentageChange(\r\n        data.CurrentYear,\r\n        data.Forecast1\r\n      );\r\n    }\r\n\r\n    if (data.Forecast1 > 0 && data.Forecast2 > 0) {\r\n      data.PerChange2 = this.commonService.calculatePercentageChange(\r\n        data.Forecast1,\r\n        data.Forecast2\r\n      );\r\n    }\r\n\r\n    if (data.Forecast2 > 0 && data.Forecast3 > 0) {\r\n      data.PerChange3 = this.commonService.calculatePercentageChange(\r\n        data.Forecast2,\r\n        data.Forecast3\r\n      );\r\n    }\r\n\r\n    if (data.Forecast3 > 0 && data.Forecast4 > 0) {\r\n      data.PerChange4 = this.commonService.calculatePercentageChange(\r\n        data.Forecast3,\r\n        data.Forecast4\r\n      );\r\n    }\r\n\r\n    if (data.Forecast4 > 0 && data.Forecast5 > 0) {\r\n      data.PerChange5 = this.commonService.calculatePercentageChange(\r\n        data.Forecast4,\r\n        data.Forecast5\r\n      );\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: PscSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Forecast1: +newRowData.ForecastYear1,\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      Channel: newRowData.Channel.Name,\r\n      ChannelId: newRowData.Channel.Id,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      Forecast2: +newRowData.Forecast2,\r\n      Forecast3: +newRowData.Forecast3,\r\n      Forecast4: +newRowData.Forecast4,\r\n      Forecast5: +newRowData.Forecast5,\r\n\r\n      Segment: newRowData.Segment.Name,\r\n      SegmentId: newRowData.Segment.Id,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ChannelId == newRow.ChannelId && item.SegmentId == newRow.SegmentId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.ChannelId || 0) - (b.ChannelId || 0) ||\r\n          (a.SegmentId || 0) - (b.SegmentId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n    this.selectedCommentCellData = {};\r\n  }\r\n\r\n  onSaveNote(isLoad: boolean = true) {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedCommentCellData) {\r\n      return;\r\n    }\r\n\r\n    // const rowData = this.newNoteForm.value.rowData;\r\n    // const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    // const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n    //   rowIndex,\r\n    //   'EditNote'\r\n    // );\r\n\r\n    // this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    // let noteValue = rowData.data.StudyNotes;\r\n    // noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    // if (IsEditedNote) {\r\n    //   const noteArray =\r\n    //     noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n    //   noteArray.shift();\r\n\r\n    //   noteValue = noteArray.join(',');\r\n    // }\r\n\r\n    // const newNoteValue =\r\n    //   noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    // this.dataGrid?.instance.saveEditData();\r\n    // this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    // this.dataGrid?.instance.saveEditData();\r\n\r\n    const formData = {\r\n      dataItemCategoryId: this.studyAreaId,\r\n      marketYearCategoryDataId: this.marketYearCategoryId,\r\n      draftDataRowId: this.selectedCommentCellData.dataRowId,\r\n      columnName: this.selectedCommentCellData.colValue,\r\n      comment: newNote,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService.addCommentForCell(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.notePopupVisible = false;\r\n          // this.getSalesData();\r\n          if (isLoad) {\r\n            this.loadCurrentStudy();\r\n          } else {\r\n            this.noteSubmit = false;\r\n            this.newNoteForm.reset();\r\n            this.newRowForm.updateValueAndValidity();\r\n            this.getCellColumnsComments(\r\n              this.selectedCommentCellData.colValue,\r\n              this.selectedCommentCellData.dataRowId\r\n            );\r\n          }\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n      Forecast1: item.Forecast1 > 0 ? item.Forecast1 : 0,\r\n      Forecast2: item.Forecast2 > 0 ? item.Forecast2 : 0,\r\n      Forecast3: item.Forecast3 > 0 ? item.Forecast3 : 0,\r\n      Forecast4: item.Forecast4 > 0 ? item.Forecast4 : 0,\r\n      Forecast5: item.Forecast5 > 0 ? item.Forecast5 : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      segmentSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.savePSCData('SegmentSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.loadCurrentStudy();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      segmentSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffPSCData('SegmentSales', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        const error =\r\n          typeof err.error !== 'undefined'\r\n            ? err.error\r\n            : 'Something went wrong. Please try after sometimes.';\r\n        this.alertService.danger(error);\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Channel:\r\n        this.getChannelLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegmentLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    // console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.getSalesData();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n\r\n  onCalculatedItemClick(e: any) {\r\n    // console.log(e.itemData);\r\n    if (typeof e.itemData !== 'undefined') {\r\n      const calculatedFiled = e.itemData;\r\n      calculatedFiled.isCheck = !calculatedFiled.isCheck;\r\n      calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';\r\n      if (calculatedFiled.value === 'percentOfTotal') {\r\n        this.calculateTotalPercentageForCols();\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PreviousYearTotalPer${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n          this.dataGrid?.instance.columnOption(\r\n            `TotalPer${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `TotalPerCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else if (calculatedFiled.value === 'changePercent') {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PreviousYearPerChange${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n\r\n          this.dataGrid?.instance.columnOption(\r\n            `PerChange${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `PerChangeCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      } else {\r\n        for (let i = 1; i <= 5; i++) {\r\n          this.dataGrid?.instance.columnOption(\r\n            `PreviousYearCagr${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n          this.dataGrid?.instance.columnOption(\r\n            `Cagr${i}`,\r\n            'visible',\r\n            calculatedFiled.isCheck\r\n          );\r\n        }\r\n        this.dataGrid?.instance.columnOption(\r\n          `CagrCurrentYear`,\r\n          'visible',\r\n          calculatedFiled.isCheck\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    data['calculatorContextMenuItems'] = this.calculatorContextMenuItems;\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (this.studyDataViewId) {\r\n      this.stateData = data;\r\n      this.stateChange.next(this.stateData);\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.studyDataViewId,\r\n            0,\r\n            false,\r\n            JSON.stringify(this.stateData),\r\n            true\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (data) {\r\n                // this.alertService.info(\r\n                //   'The system will remember the last state!'\r\n                // );\r\n                // this.loadCurrentStudy();\r\n                if (this.pivotStateId == 0) {\r\n                  this.stateData = undefined;\r\n                  this.getGridState();\r\n                }\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      this.setColsForDataGrid();\r\n      return this.stateData;\r\n    }\r\n  }\r\n\r\n  getGridState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService\r\n        .getPivotState(this.studyDataViewId, true)\r\n        .subscribe((res) => {\r\n          // in case state is not exists yet\r\n          try {\r\n            const stateRes =\r\n              typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n            stateData = JSON.parse(stateRes.StateData);\r\n\r\n            if (stateData) {\r\n              this.pivotStateId = stateRes.PivotStateId;\r\n              this.stateData = stateData;\r\n              this.dataGrid?.instance.state(this.stateData);\r\n              this.setColsForDataGrid();\r\n            }\r\n\r\n            // this.pivotStateId = stateRes.PivotStateId;\r\n          } catch {\r\n            // stateData.state.fields = this.getGridFields();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  onDeleteCustomSaveState() {\r\n    this.deleteResetConfirmPopup = true;\r\n  }\r\n\r\n  deleteCustomState() {\r\n    if (this.studyDataViewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.studyDataViewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = undefined;\r\n\r\n            this.stateData = stateData;\r\n            this.calculatorContextMenuItems =\r\n              this.commonService.getCalculatorFields();\r\n            this.getSalesData();\r\n            this.deleteResetConfirmPopup = false;\r\n            // this.getGridState();\r\n          }\r\n        );\r\n    } else {\r\n      this.deleteResetConfirmPopup = false;\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {}\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    if (typeof e.items === 'undefined') {\r\n      e.items = [];\r\n    }\r\n\r\n    // e.items.push({\r\n    //   beginGroup: true,\r\n    //   text: 'Reset to Default',\r\n    //   icon: 'fas fa-sync-alt',\r\n    //   onItemClick: () => {\r\n    //     this.deleteCustomState();\r\n    //   },\r\n    // });\r\n\r\n    const isValidTarget =\r\n      typeof e.target !== 'undefined' && e.target === 'content' ? true : false;\r\n    if (isValidTarget) {\r\n      const cells = e.row.cells;\r\n      const rowIndex = e.rowIndex;\r\n      const colIndex = e.columnIndex;\r\n      const currentCell =\r\n        typeof cells[colIndex] !== 'undefined' ? cells[colIndex] : undefined;\r\n      if (typeof currentCell !== 'undefined') {\r\n        const foundValidCell = this.allowedCols.find(\r\n          (e) => e === currentCell.column.dataField\r\n        );\r\n\r\n        if (typeof foundValidCell !== 'undefined' && !this.isStudyEditable) {\r\n          e.items.push({\r\n            beginGroup: true,\r\n            text: 'Comments',\r\n            icon: 'fas fa-comment',\r\n            onItemClick: () => {\r\n              // this.addNewCellComment(foundValidCell, colIndex, e.row);\r\n              this.getCellColumnsComments(\r\n                currentCell.column.dataField,\r\n                e.row.data.DataRowId\r\n              );\r\n            },\r\n          });\r\n        }\r\n\r\n        // if (\r\n        //   typeof e.row.data[`${currentCell.column.dataField}_comment`] !==\r\n        //     'undefined' &&\r\n        //   e.row.data[`${currentCell.column.dataField}_comment`]\r\n        // ) {\r\n        //   e.items.push({\r\n        //     beginGroup: true,\r\n        //     text: 'View Comments',\r\n        //     icon: 'fas fa-bars',\r\n        //     onItemClick: () => {\r\n        //       this.getCellColumnsComments(\r\n        //         currentCell.column.dataField,\r\n        //         e.row.data.DataRowId\r\n        //       );\r\n        //     },\r\n        //   });\r\n        // }\r\n      }\r\n    }\r\n  }\r\n\r\n  setColsForDataGrid() {\r\n    if (this.stateData) {\r\n      this.currentYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.volumeYearsShow.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.forecastYears.map((item: any) => {\r\n        const data = this.stateData.columns.find(\r\n          (d: any) => d.dataField == item.field\r\n        );\r\n        if (data) {\r\n          item.isVisible = data.visible;\r\n        }\r\n      });\r\n\r\n      this.calculatorContextMenuItems = this.stateData\r\n        .calculatorContextMenuItems\r\n        ? this.stateData.calculatorContextMenuItems\r\n        : this.calculatorContextMenuItems;\r\n    }\r\n  }\r\n\r\n  selectedCommentCellData: any = {};\r\n  addNewCellComment(colValue: string, colIndex: number, row: any) {\r\n    const currentCell =\r\n      typeof row.cells[colIndex] !== 'undefined'\r\n        ? row.cells[colIndex]\r\n        : undefined;\r\n    const colCaption = currentCell.column.caption;\r\n\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: currentCell.data.DataRowId,\r\n      currentCell: currentCell,\r\n      colCaption: colCaption,\r\n    };\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  allColsComments: any[] = [];\r\n  getAllColumnsComments() {\r\n    this.studyService\r\n      .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.allColsComments = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  cellColsComments: any[] = [];\r\n  getCellColumnsComments(colValue: string, dataRowId: string) {\r\n    const currentLabel = this.myYears.find(\r\n      (item: any) => item.field == colValue\r\n    );\r\n    this.selectedCommentCellData = {\r\n      colValue: colValue,\r\n      dataRowId: dataRowId,\r\n      currentCell: {},\r\n      colCaption: currentLabel.year,\r\n    };\r\n\r\n    this.studyService\r\n      .getCellCommentsForStudy(\r\n        this.studyAreaId,\r\n        this.marketYearCategoryId,\r\n        dataRowId,\r\n        colValue\r\n      )\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.selectedRowNotes = data.Data;\r\n          this.viewNotePopup = true;\r\n          if (this.selectedRowNotes.length == 0) {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = false;\r\n              }\r\n            });\r\n          } else {\r\n            this.studyData.map((item: any) => {\r\n              if (item.DataRowId == dataRowId) {\r\n                item[`${colValue}_comment`] = true;\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  checkHasComment(data: any) {\r\n    if (\r\n      typeof data.data[`${data.column.dataField}_comment`] !== 'undefined' &&\r\n      data.data[`${data.column.dataField}_comment`]\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  deleteCommentData: any = {};\r\n  deleteComment(data: any) {\r\n    this.deleteCommentData = data;\r\n    this.deleteCommentConfirmPopup = true;\r\n    // this.viewNotePopup = false;\r\n  }\r\n\r\n  onDeleteCommentConfirmPopupHide() {\r\n    this.deleteCommentData = {};\r\n    this.deleteCommentConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteComment() {\r\n    this.isLoadingService.add();\r\n    const colValue = this.deleteCommentData.ColumnName;\r\n    const dataRowId = this.deleteCommentData.DraftDataRowId;\r\n    this.studyService\r\n      .deleteCellComment(\r\n        this.deleteCommentData.MarketYearCategoryDataId,\r\n        dataRowId,\r\n        colValue,\r\n        this.deleteCommentData.Id\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.deleteCommentConfirmPopup = false;\r\n            this.getCellColumnsComments(colValue, dataRowId);\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteCommentConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          #dataGrid\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          width=\"100%\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n          (onContentReady)=\"onContentReady($event)\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <dxo-load-panel [enabled]=\"true\"></dxo-load-panel>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n\r\n          <dxo-scrolling columnRenderingMode=\"standard\"></dxo-scrolling>\r\n          <!-- <dxo-column-chooser [enabled]=\"true\"></dxo-column-chooser> -->\r\n          <dxo-state-storing\r\n            [enabled]=\"true\"\r\n            type=\"custom\"\r\n            [customSave]=\"customSaveState\"\r\n            [customLoad]=\"customLoadState\"\r\n            [savingTimeout]=\"300\"\r\n          >\r\n          </dxo-state-storing>\r\n\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"refresh\"\r\n                    text=\"Reset\"\r\n                    (onClick)=\"onDeleteCustomSaveState()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-drop-down-button\r\n                    icon=\"fas fa-calculator\"\r\n                    [dropDownOptions]=\"{ width: 200 }\"\r\n                    displayExpr=\"name\"\r\n                    keyExpr=\"value\"\r\n                    [items]=\"calculatorContextMenuItems\"\r\n                    (onItemClick)=\"onCalculatedItemClick($event)\"\r\n                  ></dx-drop-down-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"Segment\"\r\n            [fixed]=\"true\"\r\n            [width]=\"230\"\r\n            [allowEditing]=\"false\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"Channel\"\r\n            [fixed]=\"true\"\r\n            [width]=\"230\"\r\n            [allowEditing]=\"false\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"volumeYearsShow\"\r\n            alignment=\"center\"\r\n            caption=\"Previous Years\"\r\n          >\r\n            <!-- <dxi-column\r\n              [width]=\"100\"\r\n              [dataField]=\"volumeYear.field\"\r\n              [caption]=\"volumeYear.year\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n              cellTemplate=\"EditCellTemplate\"\r\n              alignment=\"center\"\r\n              *ngFor=\"let volumeYear of volumeYears\"\r\n            >\r\n            </dxi-column> -->\r\n            <dxi-column\r\n              [width]=\"120\"\r\n              [dataField]=\"volumeYear.field\"\r\n              [caption]=\"volumeYear.year\"\r\n              [allowEditing]=\"volumeYear.isEditable\"\r\n              [allowFiltering]=\"false\"\r\n              alignment=\"center\"\r\n              [visible]=\"volumeYear.isVisible\"\r\n              [cellTemplate]=\"volumeYear.cellTemplate\"\r\n              *ngFor=\"let volumeYear of volumeYearsShow\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n\r\n          <!-- <dxi-column\r\n            [width]=\"100\"\r\n            [caption]=\"currentYear\"\r\n            dataField=\"CurrentYear\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            alignment=\"center\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column> -->\r\n\r\n          <dxi-column\r\n            [width]=\"120\"\r\n            [dataField]=\"currentYearShow.field\"\r\n            [caption]=\"currentYearShow.year\"\r\n            [allowEditing]=\"currentYearShow.isEditable\"\r\n            [allowFiltering]=\"false\"\r\n            alignment=\"center\"\r\n            [visible]=\"currentYearShow.isVisible\"\r\n            [cellTemplate]=\"currentYearShow.cellTemplate\"\r\n            *ngFor=\"let currentYearShow of currentYearsShow\"\r\n          >\r\n          </dxi-column>\r\n          <dxi-column\r\n            *ngIf=\"forecastYears\"\r\n            alignment=\"center\"\r\n            caption=\"Forecast Years\"\r\n          >\r\n            <dxi-column\r\n              [width]=\"120\"\r\n              [dataField]=\"forecastYear.field\"\r\n              [caption]=\"forecastYear.year\"\r\n              [allowEditing]=\"forecastYear.isEditable\"\r\n              [allowFiltering]=\"false\"\r\n              alignment=\"center\"\r\n              [visible]=\"forecastYear.isVisible\"\r\n              [cellTemplate]=\"forecastYear.cellTemplate\"\r\n              *ngFor=\"let forecastYear of forecastYearsShow\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n\r\n          <!-- <dxi-column *ngIf=\"cagr\" caption=\"CAGR, %\" alignment=\"center\">\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              [dataField]=\"cagrYear.field\"\r\n              [caption]=\"cagrYear.year\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n              alignment=\"center\"\r\n              *ngFor=\"let cagrYear of cagr\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column> -->\r\n\r\n          <!-- <dxi-column\r\n            caption=\"Notes\"\r\n            [width]=\"230\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column> -->\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <!-- {{ data.column.dataField | json }} -->\r\n            <span *ngIf=\"checkHasComment(data)\" class=\"has-comment\"></span>\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'cargCellTemplate'\">\r\n            <span>{{\r\n              data.value || data.value == 0 ? data.value.toFixed(1) + \"%\" : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <!-- <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div> -->\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-segment-sales-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYears]=\"volumeYears\"\r\n          [foreCastYears]=\"forecastYears\"\r\n          [studyData]=\"studyData\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-segment-sales-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Channel</label>\r\n              <ng-select\r\n                [items]=\"channelLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Channel\"\r\n                placeholder=\"Select Channel\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Channel)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"segmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ currentYear }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"CurrentYear\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div *ngFor=\"let forecast of forecastYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ forecast.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"forecast.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"selectedCommentCellData\"\r\n  [width]=\"300\"\r\n  [height]=\"270\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Comment\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <label class=\"mt-0\">\r\n            Add Comment for {{ selectedCommentCellData.colCaption }}\r\n          </label>\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"2\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Comment\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [height]=\"500\"\r\n  [showTitle]=\"true\"\r\n  title=\"View Comments for {{ selectedCommentCellData.colCaption }}\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0 h-100 comment-container\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"CreatedBy\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"CreatedOn\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"Comment\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n          caption=\"\"\r\n          cellTemplate=\"deleteCellTemplate\"\r\n          class=\"text-center\"\r\n          [width]=\"30\"\r\n        ></dxi-column>\r\n        <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n          <dx-button\r\n            icon=\"trash\"\r\n            stylingMode=\"text\"\r\n            (onClick)=\"deleteComment(d.data)\"\r\n            type=\"danger\"\r\n          ></dx-button>\r\n        </div>\r\n      </dx-data-grid>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control\"\r\n                placeholder=\"Enter your comment\"\r\n                formControlName=\"note\"\r\n                rows=\"2\"\r\n                maxlength=\"1000\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': noteSubmit && n['note'].errors\r\n                }\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group text-center\">\r\n              <dx-button\r\n                text=\"Save Comment\"\r\n                type=\"default\"\r\n                [disabled]=\"newNoteForm.invalid\"\r\n                (onClick)=\"onSaveNote(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteCommentConfirmPopup\"\r\n  (onHidden)=\"onDeleteCommentConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this comment?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteComment()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteCommentConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"400\"\r\n  [height]=\"200\"\r\n  [showTitle]=\"false\"\r\n  title=\"Reset Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteResetConfirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">\r\n        Reset to Default will take you to last saved Data. Your unsaved data\r\n        will be removed.\r\n      </p>\r\n      <p class=\"mb-1\">Are you sure you want to continue?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"deleteCustomState()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteResetConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport {\r\n  ServiceCategoryConsumption,\r\n  ServiceCategoryConsumptionItem,\r\n} from 'src/model/serviceCategoryConsumption.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-service-category-consumption',\r\n  templateUrl: './service-category-consumption.component.html',\r\n  styleUrls: ['./service-category-consumption.component.css'],\r\n})\r\nexport class ServiceCategoryConsumptionComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyData: ServiceCategoryConsumptionItem[] = [];\r\n\r\n  currentYear: number = 0;\r\n  previousYear1: number = 0;\r\n  yearReduce: number = 1;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n\r\n  isManage: boolean = false;\r\n  userDetail: UserDetail;\r\n  isStudyEditable: boolean = false;\r\n\r\n  studyTitle: string = '';\r\n  studyPageTitle: string = '';\r\n\r\n  disabledSignOffButton: boolean = false;\r\n\r\n  engineOilSourceTypeCurrentYearTotal: any = {};\r\n  engineOilSourceTypePreviousYearTotal: any = {};\r\n\r\n  productCategories: DataEntry[] = [];\r\n  sourceTypes: DataEntry[] = [];\r\n  engineTypes: DataEntry[] = [];\r\n  engineOilTypes: DataEntry[] = [];\r\n  serviceCategory: DataEntry[] = [];\r\n\r\n  allEngineOilTypes: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n    this.previousYear1 = this.currentYear - 1;\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ProductCategory: [null, Validators.required],\r\n      SourceType: [null, Validators.required],\r\n      EngineType: [null, Validators.required],\r\n      EngineOilType: [null, Validators.required],\r\n      ServiceCategory: [null, Validators.required],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n    this.getDataRelations();\r\n    this.getAllEngineOilType();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getProductCategory();\r\n    this.getEngineType();\r\n    this.getSourceType();\r\n    // this.getSCCData();\r\n  }\r\n\r\n  getProductCategory() {\r\n    this.sharedService.getProductCategories().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.productCategories = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getSourceType() {\r\n    this.sharedService\r\n      .getDataEntryData('SourceType')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.sourceTypes = res.Data as DataEntry[];\r\n          this.getSCCData();\r\n        }\r\n      });\r\n  }\r\n\r\n  getEngineType() {\r\n    this.sharedService\r\n      .getDataEntryData('EngineType')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.engineTypes = res.Data as DataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getAllEngineOilType() {\r\n    this.sharedService.getAllEngineOilType().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.allEngineOilTypes = res.Data;\r\n      }\r\n    });\r\n  }\r\n\r\n  getEngineOilType() {\r\n    const productCategoryId =\r\n      this.newRowForm.value.ProductCategory !== null &&\r\n      typeof this.newRowForm.value.ProductCategory.Id !== 'undefined'\r\n        ? this.newRowForm.value.ProductCategory.Id\r\n        : 0;\r\n\r\n    if (productCategoryId > 0) {\r\n      this.sharedService\r\n        .getDataEntryData('EngineOilType', [\r\n          { key: 'ProductCategoryId', value: productCategoryId },\r\n        ])\r\n        .subscribe((res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.engineOilTypes = res.Data as DataEntry[];\r\n          }\r\n        });\r\n    } else {\r\n      this.engineOilTypes = [];\r\n      this.newRowForm.get('EngineOilType')?.setValue(null);\r\n    }\r\n  }\r\n\r\n  getServiceCategory() {\r\n    const SourceTypeId =\r\n      this.newRowForm.value.SourceType !== null &&\r\n      typeof this.newRowForm.value.SourceType.Id !== 'undefined'\r\n        ? this.newRowForm.value.SourceType.Id\r\n        : 0;\r\n\r\n    const EngineTypeId =\r\n      this.newRowForm.value.EngineType !== null &&\r\n      typeof this.newRowForm.value.EngineType.Id !== 'undefined'\r\n        ? this.newRowForm.value.EngineType.Id\r\n        : 0;\r\n\r\n    if (SourceTypeId > 0 && EngineTypeId > 0) {\r\n      this.sharedService\r\n        .getDataEntryData('ServiceCategory', [\r\n          { key: 'SourceTypeId', value: SourceTypeId },\r\n          { key: 'EngineTypeId', value: EngineTypeId },\r\n        ])\r\n        .subscribe((res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.serviceCategory = res.Data as DataEntry[];\r\n          }\r\n        });\r\n    } else {\r\n      this.serviceCategory = [];\r\n      this.newRowForm.get('ServiceCategory')?.setValue(null);\r\n    }\r\n  }\r\n\r\n  getSCCData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getSCCData(this.marketYearCategoryId, this.studyProjectMarketYearId)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyData = res.Data as ServiceCategoryConsumption;\r\n\r\n            this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n            this.studyData = [];\r\n            this.studyData =\r\n              studyData.ServiceCategoryConsumptionItems as ServiceCategoryConsumptionItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              studyData.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            currentYear = currentYear - this.yearReduce;\r\n\r\n            this.currentYear = currentYear;\r\n            this.previousYear1 = currentYear - 1;\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            // console.log(this.allEngineOilTypes);\r\n            this.allEngineOilTypes.map((item) => {\r\n              this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName] =\r\n                [];\r\n              this.engineOilSourceTypePreviousYearTotal[\r\n                item.EngineOilTypeName\r\n              ] = [];\r\n              this.sourceTypes.map((sourceType: DataEntry) => {\r\n                if (\r\n                  typeof this.engineOilSourceTypeCurrentYearTotal[\r\n                    item.EngineOilTypeName\r\n                  ][sourceType.Name] === 'undefined'\r\n                ) {\r\n                  this.engineOilSourceTypeCurrentYearTotal[\r\n                    item.EngineOilTypeName\r\n                  ][sourceType.Name] = [];\r\n                }\r\n\r\n                if (\r\n                  typeof this.engineOilSourceTypePreviousYearTotal[\r\n                    item.EngineOilTypeName\r\n                  ][sourceType.Name] === 'undefined'\r\n                ) {\r\n                  this.engineOilSourceTypePreviousYearTotal[\r\n                    item.EngineOilTypeName\r\n                  ][sourceType.Name] = [];\r\n                }\r\n\r\n                const { totalCurrentYear, totalPreviousYear1 } = this.studyData\r\n                  .filter(\r\n                    (data) =>\r\n                      data.EngineOilTypeId === item.EngineOilTypeId &&\r\n                      data.SourceTypeId === sourceType.Id\r\n                  )\r\n                  .reduce(\r\n                    (\r\n                      { totalCurrentYear, totalPreviousYear1 },\r\n                      currentYear\r\n                    ) => ({\r\n                      totalCurrentYear:\r\n                        totalCurrentYear + currentYear.CurrentYear,\r\n                      totalPreviousYear1:\r\n                        totalPreviousYear1 + currentYear.PreviousYear1,\r\n                    }),\r\n                    { totalCurrentYear: 0, totalPreviousYear1: 0 }\r\n                  );\r\n\r\n                this.engineOilSourceTypeCurrentYearTotal[\r\n                  item.EngineOilTypeName\r\n                ][sourceType.Name] = totalCurrentYear;\r\n\r\n                this.engineOilSourceTypePreviousYearTotal[\r\n                  item.EngineOilTypeName\r\n                ][sourceType.Name] = totalPreviousYear1;\r\n              });\r\n            });\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let prevPer: number = 0;\r\n              if (item.PreviousYear1 != '' && item.PreviousYear1 > 0) {\r\n                prevPer = this.calculatePerVolume(\r\n                  item.PreviousYear1,\r\n                  this.engineOilSourceTypePreviousYearTotal[\r\n                    item.EngineOilTypeName\r\n                  ][item.SourceTypeCode]\r\n                );\r\n              }\r\n\r\n              let currPer: number = 0;\r\n              if (item.CurrentYear != '' && item.CurrentYear > 0) {\r\n                currPer = this.calculatePerVolume(\r\n                  item.CurrentYear,\r\n                  this.engineOilSourceTypeCurrentYearTotal[\r\n                    item.EngineOilTypeName\r\n                  ][item.SourceTypeCode]\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].CurrentYearPer = currPer;\r\n              this.studyData[i].OldCurrentYear = item.CurrentYear;\r\n              this.studyData[i].PreviousYear1Per = prevPer;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n            this.isLoadingService.remove();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isLoadingService.remove();\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try again or contact administrator.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  calculatePerVolume(colValue: number, totalColValue: number) {\r\n    return parseFloat(((colValue * 100) / totalColValue).toFixed(1));\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const engineTypeName = newRowData.EngineOilType.Name;\r\n    const sourceTypeCode = newRowData.SourceType.Name;\r\n\r\n    const newRow: ServiceCategoryConsumptionItem = {\r\n      CurrentYear: newRowData.CurrentYear,\r\n      OldCurrentYear: newRowData.CurrentYear,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: 0,\r\n      PreviousYear1Per: 0,\r\n      CurrentYearPer: 0,\r\n      EngineOilTypeDescription: newRowData.EngineOilType.Description,\r\n      EngineOilTypeId: newRowData.EngineOilType.Id,\r\n      EngineOilTypeName: newRowData.EngineOilType.Name,\r\n      EngineTypeDescription: newRowData.EngineType.Description,\r\n      EngineTypeId: newRowData.EngineType.Id,\r\n      EngineTypeName: engineTypeName,\r\n      ProductcategoryId: newRowData.ProductCategory.Id,\r\n      ProductcategoryName: newRowData.ProductCategory.Name,\r\n      ServiceCategoryCode: newRowData.ServiceCategory.Name,\r\n      ServiceCategoryDescription: newRowData.ServiceCategory.Description,\r\n      ServiceCategoryId: newRowData.ServiceCategory.Id,\r\n      SourceTypeCode: sourceTypeCode,\r\n      SourceTypeId: newRowData.SourceType.Id,\r\n      SourceTypeName: newRowData.SourceType.Description,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.EngineOilTypeId == newRow.EngineOilTypeId &&\r\n        item.SourceTypeId == newRow.SourceTypeId &&\r\n        item.ServiceCategoryId == newRow.ServiceCategoryId\r\n    );\r\n\r\n    if (!isFound) {\r\n      this.engineOilSourceTypeCurrentYearTotal[engineTypeName][sourceTypeCode] =\r\n        this.engineOilSourceTypeCurrentYearTotal[engineTypeName][\r\n          sourceTypeCode\r\n        ] + parseFloat(newRowData.CurrentYear);\r\n\r\n      this.studyData.push(newRow);\r\n\r\n      this.studyData\r\n        .filter((item: any, index) => {\r\n          item.index = index;\r\n          return (\r\n            item.EngineOilTypeId == newRow.EngineOilTypeId &&\r\n            item.SourceTypeId == newRow.SourceTypeId\r\n          );\r\n        })\r\n        .map((item: any, i) => {\r\n          let currPer: number = 0;\r\n          if (item.CurrentYear != '' && item.CurrentYear > 0) {\r\n            currPer = this.calculatePerVolume(\r\n              item.CurrentYear,\r\n              this.engineOilSourceTypeCurrentYearTotal[item.EngineOilTypeName][\r\n                item.SourceTypeCode\r\n              ]\r\n            );\r\n          }\r\n\r\n          this.studyData[item.index].CurrentYearPer = parseFloat(\r\n            currPer.toFixed(1)\r\n          );\r\n        });\r\n\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          a.EngineOilTypeId - b.EngineOilTypeId ||\r\n          a.SourceTypeId - b.SourceTypeId\r\n      );\r\n\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      serviceCategoryConsumptionItems: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveSCCData(studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffSCCData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSCCData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      serviceCategoryConsumptionItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSCCData(formData).subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.alertService.success(res.Data);\r\n        // this.dataGrid?.instance.refresh();\r\n        this.getSCCData();\r\n        this.isLoadingService.remove();\r\n      } else {\r\n        this.alertService.danger(res.Data);\r\n        this.isLoadingService.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ServiceCategoryConsumptionItem;\r\n      // console.log(e);\r\n      const currentYear: number = +data.CurrentYear;\r\n      const oldCurrentYEar: number = +data.OldCurrentYear;\r\n      // console.log(currentYear, oldCurrentYEar);\r\n      const engineOilTypeName =\r\n        data.EngineOilTypeName !== null ? data.EngineOilTypeName : '';\r\n      const sourceTypeCode =\r\n        data.SourceTypeCode !== null ? data.SourceTypeCode : '';\r\n      this.engineOilSourceTypeCurrentYearTotal[engineOilTypeName][\r\n        sourceTypeCode\r\n      ] =\r\n        this.engineOilSourceTypeCurrentYearTotal[engineOilTypeName][\r\n          sourceTypeCode\r\n        ] -\r\n        oldCurrentYEar +\r\n        currentYear;\r\n\r\n      // this.totalCurrentYearTotal = this.totalCurrentYearTotal - oldCurrentYEar;\r\n\r\n      // this.totalCurrentYearTotal = this.totalCurrentYearTotal + currentYear;\r\n\r\n      data.OldCurrentYear = currentYear;\r\n\r\n      this.studyData\r\n        .filter((item: any, index) => {\r\n          item.index = index;\r\n          return (\r\n            item.EngineOilTypeId == data.EngineOilTypeId &&\r\n            item.SourceTypeId == data.SourceTypeId\r\n          );\r\n        })\r\n        .map((item: any, i) => {\r\n          // console.log(item);\r\n          if (item.CurrentYear > 0) {\r\n            const currPer = this.calculatePerVolume(\r\n              item.CurrentYear,\r\n              this.engineOilSourceTypeCurrentYearTotal[engineOilTypeName][\r\n                sourceTypeCode\r\n              ]\r\n            );\r\n\r\n            this.studyData[item.index].CurrentYearPer = parseFloat(\r\n              currPer.toFixed(1)\r\n            );\r\n          }\r\n        });\r\n\r\n      // console.log(this.studyData);\r\n    }\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data && e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ProductCategory:\r\n        this.getProductCategory();\r\n        break;\r\n\r\n      case DataRelationsEnum.SourceType:\r\n        this.getSourceType();\r\n        break;\r\n\r\n      case DataRelationsEnum.EngineType:\r\n        this.getEngineType();\r\n        break;\r\n\r\n      case DataRelationsEnum.EngineOilType:\r\n        this.getEngineOilType();\r\n        break;\r\n\r\n      case DataRelationsEnum.ServiceCategory:\r\n        this.getServiceCategory();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <!-- <dxi-item location=\"before\">\r\n              <div *dxTemplate class=\"pl-3\">\r\n                <dx-button text=\"Preview\"></dx-button>\r\n              </div>\r\n            </dxi-item> -->\r\n\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            caption=\"Product Category\"\r\n            dataField=\"ProductcategoryName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Engine Oil Type\"\r\n            dataField=\"EngineOilTypeName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"ServiceCategoryCode\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"SourceTypeCode\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Engine Type\"\r\n            dataField=\"EngineTypeName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column caption=\"Lubricant Demand (in KTonnes)\">\r\n            <dxi-column\r\n              [width]=\"60\"\r\n              dataField=\"PreviousYear1\"\r\n              [caption]=\"previousYear1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              dataField=\"PreviousYear1Per\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"60\"\r\n              dataField=\"CurrentYear\"\r\n              [caption]=\"currentYear\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              dataField=\"CurrentYearPer\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'perCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-service-category-consumption-preview\r\n          [studyData]=\"studyData\"\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear1\"\r\n        ></app-service-category-consumption-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [width]=\"300\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"form-group\">\r\n          <label>Product Category</label>\r\n          <ng-select\r\n            [items]=\"productCategories\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"ProductCategory\"\r\n            placeholder=\"Select Product Category\"\r\n            (change)=\"getEngineOilType()\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.ProductCategory)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Source Type</label>\r\n          <ng-select\r\n            [items]=\"sourceTypes\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"SourceType\"\r\n            placeholder=\"Select Source Type\"\r\n            (change)=\"getServiceCategory()\"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Engine Type</label>\r\n          <ng-select\r\n            [items]=\"engineTypes\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"EngineType\"\r\n            placeholder=\"Select Engine Type\"\r\n            (change)=\"getServiceCategory()\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.EngineType)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Engine Oil Type</label>\r\n          <ng-select\r\n            [items]=\"engineOilTypes\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"EngineOilType\"\r\n            placeholder=\"Select Engine Oil Type\"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Service Category</label>\r\n          <ng-select\r\n            [items]=\"serviceCategory\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"ServiceCategory\"\r\n            placeholder=\"Select Service Category\"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Volume Year - {{ currentYear }}</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"CurrentYear\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (click)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-shc',\r\n  templateUrl: './shc.component.html',\r\n  styleUrls: ['./shc.component.css'],\r\n})\r\nexport class SHCComponent implements OnInit {\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","<app-pts\r\n  *ngIf=\"studyAreaId == 28\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-pts>\r\n<app-pcs\r\n  *ngIf=\"studyAreaId == 29\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-pcs>\r\n<app-ir\r\n  *ngIf=\"studyAreaId == 30\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-ir>\r\n<app-cbs\r\n  *ngIf=\"studyAreaId == 31\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-cbs>\r\n<app-fs\r\n  *ngIf=\"studyAreaId == 32\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-fs>\r\n<app-os\r\n  *ngIf=\"studyAreaId == 33\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-os>\r\n<app-sc\r\n  *ngIf=\"studyAreaId == 34\"\r\n  [setSelectedCurrency]=\"datRelationsData\"\r\n></app-sc>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { ShcSalesItem } from 'src/model/shcSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-cbs',\r\n  templateUrl: './cbs.component.html',\r\n  styleUrls: ['./cbs.component.css'],\r\n})\r\nexport class CbsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ShcSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  ProductCategoryLists: DataEntrySHC[] = [];\r\n  CompanyLists: DataEntrySHC[] = [];\r\n  MasterBrandLists: DataEntrySHC[] = [];\r\n  BrandLists: DataEntrySHC[] = [];\r\n  SegmentLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  studyTypeValue = 'CompanyBrandSales';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private router: Router\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ProductCategory: [null, Validators.required],\r\n      Company: [null, Validators.required],\r\n      MasterBrand: [null, Validators.required],\r\n      Brand: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PCS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getProductCategoryLists();\r\n    this.getCompanyLists();\r\n    this.getMasterBrandLists();\r\n    this.getBrandLists();\r\n    this.getSegmentLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        'CompanyBrandSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .CompanyBrandSales as ShcSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  ProductCategory: item.ProductCategory,\r\n                  Company: item.Company,\r\n                  MasterBrand: item.MasterBrand,\r\n                  Brand: item.Brand,\r\n                  Segment: item.Segment,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getProductCategoryLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('ProductCategorySHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.ProductCategoryLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('CompanySHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.CompanyLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getMasterBrandLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('MasterBrandSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.MasterBrandLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getBrandLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('BrandSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.BrandLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getSegmentLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('SegmentSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.SegmentLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ProductCategory',\r\n        area: 'row',\r\n        caption: 'Product Category',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'Company',\r\n        area: 'row',\r\n        caption: 'Company',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'MasterBrand',\r\n        area: 'row',\r\n        caption: 'Master Brand',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'Brand',\r\n        area: 'row',\r\n        caption: 'Brand',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n        id: 4,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 5,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) =>\r\n          typeof event.column.dataField !== 'undefined' &&\r\n          item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ShcSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: ShcSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      ProductCategory: newRowData.ProductCategory.Name,\r\n      ProductCategoryId: newRowData.ProductCategory.Id,\r\n      Company: newRowData.Company.Name,\r\n      CompanyId: newRowData.Company.Id,\r\n      MasterBrand: newRowData.MasterBrand.Name,\r\n      MasterBrandId: newRowData.MasterBrand.Id,\r\n      Brand: newRowData.Brand.Name,\r\n      BrandId: newRowData.Brand.Id,\r\n      Segment: newRowData.Segment.Name,\r\n      SegmentId: newRowData.Segment.Id,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ProductCategoryId == newRow.ProductCategoryId &&\r\n        item.CompanyId == newRow.CompanyId &&\r\n        item.MasterBrandId == newRow.MasterBrandId &&\r\n        item.BrandId == newRow.BrandId &&\r\n        item.SegmentId == newRow.SegmentId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0) ||\r\n          (a.CompanyId || 0) - (b.CompanyId || 0) ||\r\n          (a.MasterBrandId || 0) - (b.MasterBrandId || 0) ||\r\n          (a.BrandId || 0) - (b.BrandId || 0) ||\r\n          (a.SegmentId || 0) - (b.SegmentId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      companyBrandSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData('CompanyBrandSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      companyBrandSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData('CompanyBrandSales', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ProductCategory:\r\n        this.getProductCategoryLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Company:\r\n        this.getCompanyLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.MasterBrand:\r\n        this.getMasterBrandLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Brand:\r\n        this.getBrandLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegmentLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductCategory\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column dataField=\"Company\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column\r\n            dataField=\"MasterBrand\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column dataField=\"Brand\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column dataField=\"Segment\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [allowFiltering]=\"false\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_CB_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Product Category</label>\r\n              <ng-select\r\n                [items]=\"ProductCategoryLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductCategory\"\r\n                placeholder=\"Select Product Category\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductCategory\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <ng-select\r\n                [items]=\"CompanyLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Company\"\r\n                placeholder=\"Select Company\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Company)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Master Brand</label>\r\n              <ng-select\r\n                [items]=\"MasterBrandLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"MasterBrand\"\r\n                placeholder=\"Select Master Brand\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.MasterBrand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Brand</label>\r\n              <ng-select\r\n                [items]=\"BrandLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Brand\"\r\n                placeholder=\"Select Brand\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Brand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"SegmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { shcForecastSalesItem } from 'src/model/shcForecastSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-fs',\r\n  templateUrl: './fs.component.html',\r\n  styleUrls: ['./fs.component.css'],\r\n})\r\nexport class FsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: shcForecastSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  ProductCategoryLists: DataEntrySHC[] = [];\r\n  SegmentLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = [\r\n    'ForecastYear5',\r\n    'ForecastYear4',\r\n    'ForecastYear3',\r\n    'ForecastYear2',\r\n    'ForecastYear1',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  studyTypeValue = 'ForecastSales';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ProductCategory: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      ForecastYear1: [null],\r\n      ForecastYear2: [null],\r\n      ForecastYear3: [null],\r\n      ForecastYear4: [null],\r\n      ForecastYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getSegmentLists();\r\n    this.getProductCategoryLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        'ForecastSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .ForecastSales as shcForecastSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            for (\r\n              let i = currentYear + 1, j = 1;\r\n              i <= currentYear + 5;\r\n              i++, j++\r\n            ) {\r\n              this.volumeYears.push({ field: `ForecastYear${j}`, year: i });\r\n            }\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  ProductCategory: item.ProductCategory,\r\n                  Segment: item.Segment,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ProductCategory',\r\n        area: 'row',\r\n        caption: 'Product Category',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getSegmentLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('SegmentSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.SegmentLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getProductCategoryLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('ProductCategorySHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.ProductCategoryLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as shcForecastSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.ForecastYear1 = +data.ForecastYear1;\r\n      data.ForecastYear2 = +data.ForecastYear2;\r\n      data.ForecastYear3 = +data.ForecastYear3;\r\n      data.ForecastYear4 = +data.ForecastYear4;\r\n      data.ForecastYear5 = +data.ForecastYear5;\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: shcForecastSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      ForecastYear1: +newRowData.ForecastYear1,\r\n      ForecastYear2: +newRowData.ForecastYear2,\r\n      ForecastYear3: +newRowData.ForecastYear3,\r\n      ForecastYear4: +newRowData.ForecastYear4,\r\n      ForecastYear5: +newRowData.ForecastYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      SegmentId: newRowData.Segment.Id,\r\n      Segment: newRowData.Segment.Name,\r\n      ProductCategoryId: newRowData.ProductCategory.Id,\r\n      ProductCategory: newRowData.ProductCategory.Name,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.SegmentId == newRow.SegmentId &&\r\n        item.ProductCategoryId == newRow.ProductCategoryId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.SegmentId || 0) - (b.SegmentId || 0) ||\r\n          (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      ForecastYear1: item.ForecastYear1 > 0 ? item.ForecastYear1 : 0,\r\n      ForecastYear2: item.ForecastYear2 > 0 ? item.ForecastYear2 : 0,\r\n      ForecastYear3: item.ForecastYear3 > 0 ? item.ForecastYear3 : 0,\r\n      ForecastYear4: item.ForecastYear4 > 0 ? item.ForecastYear4 : 0,\r\n      ForecastYear5: item.ForecastYear5 > 0 ? item.ForecastYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      forecastSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData('ForecastSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      forecastSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData('ForecastSales', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ProductCategory:\r\n        this.getProductCategoryLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegmentLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductCategory\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column dataField=\"Segment\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [allowFiltering]=\"false\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_FC_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Category</label>\r\n              <ng-select\r\n                [items]=\"ProductCategoryLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductCategory\"\r\n                placeholder=\"Select Product Category\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductCategory\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"SegmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { ShcSalesItem } from 'src/model/shcSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-ir',\r\n  templateUrl: './ir.component.html',\r\n  styleUrls: ['./ir.component.css'],\r\n})\r\nexport class IrComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ShcSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  ServiceLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  studyTypeValue = 'IndustryRevenues';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private router: Router\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Service: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PCS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getServiceLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        'IndustryRevenues',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .IndustryRevenues as ShcSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  Service: item.Service,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'Service',\r\n        area: 'row',\r\n        caption: 'Service',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 1,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 2,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  getServiceLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('ServiceSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.ServiceLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) =>\r\n          typeof event.column.dataField !== 'undefined' &&\r\n          item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ShcSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: ShcSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      Service: newRowData.Service.Name,\r\n      ServiceId: newRowData.Service.Id,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) => item.ServiceId == newRow.ServiceId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort((a, b) => (a.ServiceId || 0) - (b.ServiceId || 0));\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      industryRevenues: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData('IndustryRevenues', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      industryRevenues: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData('IndustryRevenues', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Service:\r\n        this.getServiceLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column dataField=\"Service\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [allowFiltering]=\"false\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n            [allowFiltering]=\"false\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_IR_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Service</label>\r\n              <ng-select\r\n                [items]=\"ServiceLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Service\"\r\n                placeholder=\"Select Service\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Service)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { ShcSalesItem } from 'src/model/shcSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-os',\r\n  templateUrl: './os.component.html',\r\n  styleUrls: ['./os.component.css'],\r\n})\r\nexport class OsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ShcSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  CompanyLists: DataEntrySHC[] = [];\r\n  MasterBrandLists: DataEntrySHC[] = [];\r\n  SegmentLists: DataEntrySHC[] = [];\r\n  OutletLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  studyTypeValue = 'OutletSales';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Company: [null, Validators.required],\r\n      MasterBrand: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      Outlet: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getCompanyLists();\r\n    this.getMasterBrandLists();\r\n    this.getSegmentLists();\r\n    this.getOutletLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        'OutletSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj.OutletSales as ShcSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  Company: item.Company,\r\n                  MasterBrand: item.MasterBrand,\r\n                  Segment: item.Segment,\r\n                  Outlet: item.Outlet,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'Company',\r\n        area: 'row',\r\n        caption: 'Company',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'MasterBrand',\r\n        area: 'row',\r\n        caption: 'Master Brand',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'Outlet',\r\n        area: 'row',\r\n        caption: 'Outlet',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 5,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getSegmentLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('SegmentSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.SegmentLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getCompanyLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('CompanySHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.CompanyLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getMasterBrandLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('MasterBrandSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.MasterBrandLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getOutletLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('OutletSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.OutletLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ShcSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: ShcSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      SegmentId: newRowData.Segment.Id,\r\n      Segment: newRowData.Segment.Name,\r\n      OutletId: newRowData.Outlet.Id,\r\n      Outlet: newRowData.Outlet.Name,\r\n      CompanyId: newRowData.Company.Id,\r\n      Company: newRowData.Company.Name,\r\n      MasterBrandId: newRowData.MasterBrand.Id,\r\n      MasterBrand: newRowData.MasterBrand.Name,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.SegmentId == newRow.SegmentId &&\r\n        item.OutletId == newRow.OutletId &&\r\n        item.CompanyId == newRow.CompanyId &&\r\n        item.MasterBrandId == newRow.MasterBrandId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.SegmentId || 0) - (b.SegmentId || 0) ||\r\n          (a.OutletId || 0) - (b.OutletId || 0) ||\r\n          (a.CompanyId || 0) - (b.CompanyId || 0) ||\r\n          (a.MasterBrandId || 0) - (b.MasterBrandId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      outletSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData('OutletSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      outletSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData('OutletSales', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Company:\r\n        this.getCompanyLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.MasterBrand:\r\n        this.getMasterBrandLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegmentLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Outlet:\r\n        this.getOutletLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column dataField=\"Company\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"MasterBrand\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column dataField=\"Segment\" [allowEditing]=\"false\"></dxi-column>\r\n          <dxi-column dataField=\"Outlet\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [allowFiltering]=\"false\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_OS_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Company</label>\r\n              <ng-select\r\n                [items]=\"CompanyLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Company\"\r\n                placeholder=\"Select Company\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Company)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Master Brand</label>\r\n              <ng-select\r\n                [items]=\"MasterBrandLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"MasterBrand\"\r\n                placeholder=\"Select Master Brand\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.MasterBrand)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"SegmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Outlet</label>\r\n              <ng-select\r\n                [items]=\"OutletLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Outlet\"\r\n                placeholder=\"Select Outlet\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Outlet)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Field as PivotGridField } from 'src/model/pivotGridOptions.model';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { ShcSalesItem } from 'src/model/shcSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-pcs',\r\n  templateUrl: './pcs.component.html',\r\n  styleUrls: ['./pcs.component.css'],\r\n})\r\nexport class PcsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ShcSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  productClassificationLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  studyTypeValue = 'ProductClassificationSales';\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private router: Router\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ProductClassification: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PCS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n\r\n    this.getProductClassificationLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        this.studyTypeValue,\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .ProductClassificationSales as ShcSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  ProductClassification: item.ProductClassification,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ProductClassification',\r\n        area: 'row',\r\n        caption: 'Product Classification',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 1,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 2,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  getProductClassificationLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('ProductClassificationSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.productClassificationLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ShcSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: ShcSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      ProductClassification: newRowData.ProductClassification.Name,\r\n      ProductClassificationId: newRowData.ProductClassification.Id,\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) => item.ProductClassificationId == newRow.ProductClassificationId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.ProductClassificationId || 0) - (b.ProductClassificationId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : 0,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : 0,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : 0,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : 0,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : 0,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : 0,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      productClassificationSales: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData(this.studyTypeValue, studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      productClassificationSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData(this.studyTypeValue, formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ProductClassification:\r\n        this.getProductClassificationLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <!-- <dxo-scrolling mode=\"virtual\"></dxo-scrolling> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductClassification\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [allowFiltering]=\"false\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_PC_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Category</label>\r\n              <ng-select\r\n                [items]=\"productClassificationLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductClassification\"\r\n                placeholder=\"Select Product Classification\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductClassification\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { ShcSalesItem } from 'src/model/shcSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport lubesNetTrendViewDataSample from 'src/assets/lubesNetTrendViewDataSample.json'\r\nimport { HyperFormula } from 'hyperformula';\r\n@Component({\r\n  selector: 'app-pts',\r\n  templateUrl: './pts.component.html',\r\n  styleUrls: ['./pts.component.css'],\r\n})\r\nexport class PtsComponent implements OnInit {\r\n  lubesNetTrendViewData = lubesNetTrendViewDataSample\r\n  hyperformulaInstance = HyperFormula.buildEmpty({\r\n    // to use an external HyperFormula instance,\r\n    // initialize it with the `'internal-use-in-handsontable'` license key\r\n    licenseKey: 'internal-use-in-handsontable',\r\n  });\r\n  settings = {\r\n    colHeaders: true,\r\n    rowHeaders: true,\r\n    height: 'auto',\r\n    formulas: {\r\n      engine: this.hyperformulaInstance,\r\n      sheetName: 'Sheet1'\r\n    },\r\n    licenseKey: 'non-commercial-and-evaluation'\r\n   }\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n  columnHeaders?: any[];\r\n  columns?: any[];\r\n  studyTitle: string = '';\r\n  volumeYear: number = 0;\r\n  currentYear: number = 0;\r\n  years: any = [];\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ShcSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  productCategoryLists: DataEntrySHC[] = [];\r\n  productTypeLists: DataEntrySHC[] = [];\r\n  segmentLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  studyTypeValue = 'ProductTypeSales';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService,\r\n    private router: Router\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ProductCategory: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n    this.displayJson()\r\n    this.getProductTypeLists();\r\n    this.getProductCategoryLists();\r\n    this.getSegmentLists();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        'ProductTypeSales',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj\r\n              .ProductTypeSalesSHC as ShcSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  ProductCategory: item.ProductCategory,\r\n                  ProductType: item.ProductType,\r\n                  Segment: item.Segment,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n      this.setColumnHeaders();\r\n      this.setUpColumnsToShow();\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ProductCategory',\r\n        area: 'row',\r\n        caption: 'Product Category',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'ProductType',\r\n        area: 'row',\r\n        caption: 'Product Type',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        dataField: 'Segment',\r\n        area: 'row',\r\n        caption: 'Segment',\r\n        dataType: 'string',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as Field[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ShcSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n    }\r\n  }\r\n\r\n  getProductTypeLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('ProductTypeSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.productTypeLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getProductCategoryLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('ProductCategorySHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.productCategoryLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  getSegmentLists() {\r\n    this.sharedService\r\n      .getSHCDataEntryData('SegmentSHC')\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.segmentLists = data.Data;\r\n        }\r\n      });\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: ShcSalesItem = {\r\n      CurrentYear: +newRowData.CurrentYear,\r\n      DataRelationId: null,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: +newRowData.PreviousYear1,\r\n      PreviousYear2: +newRowData.PreviousYear2,\r\n      PreviousYear3: +newRowData.PreviousYear3,\r\n      PreviousYear4: +newRowData.PreviousYear4,\r\n      PreviousYear5: +newRowData.PreviousYear5,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      OldCurrentYear: 0,\r\n      CurrencyCode: this.currentCurrency.CurrencyCode,\r\n      CurrencyId: this.currentCurrency.CurrencyId,\r\n      CurrencyName: this.currentCurrency.CurrencyName,\r\n      ProductType: newRowData.ProductType.Name,\r\n      ProductTypeId: newRowData.ProductType.Id,\r\n      ProductCategory: newRowData.ProductCategory.Name,\r\n      ProductCategoryId: newRowData.ProductCategory.Id,\r\n      SegmentId: newRowData.Segment.Id,\r\n      Segment: newRowData.Segment.Name,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.SegmentId == newRow.SegmentId &&\r\n        item.ProductCategoryId == newRow.ProductCategoryId &&\r\n        item.ProductTypeId == newRow.ProductTypeId\r\n    );\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          (a.SegmentId || 0) - (b.SegmentId || 0) ||\r\n          (a.ProductCategoryId || 0) - (b.ProductCategoryId || 0) ||\r\n          (a.ProductTypeId || 0) - (b.ProductTypeId || 0)\r\n      );\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : null,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : null,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : null,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : null,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : null,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      productTypeSalesSHC: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData('ProductTypeSales', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      productTypeSalesSHC: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData('ProductTypeSales', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ProductCategory:\r\n        this.getProductCategoryLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.ProductType:\r\n        this.getProductTypeLists();\r\n        break;\r\n\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegmentLists();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  displayJson(): void \r\n  {\r\n   this.lubesNetTrendViewData = lubesNetTrendViewDataSample\r\n    this.years = []\r\n\r\n   this.lubesNetTrendViewData.forEach(item => {\r\n    if(!this.years.includes(item.Year))\r\n      this.years.push(item.Year)\r\n   })\r\n   this.lubesNetTrendViewData.forEach(item => {\r\n      this.years.forEach((y:number) => {\r\n        if(item.Year === y)\r\n          Object.assign(item, { [y]: item.Volume })\r\n        else\r\n          Object.assign(item, { [y]: null })\r\n      })\r\n   })\r\n   this.lubesNetTrendViewData.map((data) => {\r\n    Object.assign(data, {formula: \"=SUM(J:J)\"})\r\n   Object.assign(data, {Avg:\"=AVERAGE(J:J)\"})\r\n   Object.assign(data, {Median:\"=MEDIAN(J:J)\"})\r\n   Object.assign(data, {Max:\"=MAX(J:J)\"})\r\n   Object.assign(data, {Min:\"=MIN(J:J)\"})\r\n   })\r\n  //  console.log(this.years)\r\n  //  console.log(this.lubesNetTrendViewData)\r\n   this.setColumnHeaders();\r\n   this.setColumnHeaders()\r\n  }\r\n  setColumnHeaders(): void {\r\n    this.columnHeaders = \r\n    [\r\n     'Market Segment(A)',\r\n     'Product Category (B)',\r\n     'SubProduct (C)',\r\n     'ViscosityGrade (D)',\r\n    'Country(E)',\r\n    '2016(F)',\r\n    '2017(G)',\r\n    '2018(H)',\r\n    '2019(I)',\r\n    '2020(J)',\r\n    '2021(K)',\r\n    '2025(L)',\r\n    '2030(M)',\r\n    'Sum(Fx)',\r\n    'Avg(Fx)',\r\n    'Median(Fx)',\r\n    'Max(Fx)',\r\n    'Min(Fx)'\r\n    ]\r\n   \r\n  }\r\n\r\n    setUpColumnsToShow(): void \r\n    {\r\n     this.columns = [\r\n     {data:'MarketSegment'},\r\n     {data:'ProductCategory'}, \r\n     {data:'SubProduct'},\r\n     {data:'ViscosityGrade'},\r\n     {data:'Country'},\r\n     {data:'2016'},\r\n     {data:'2017'},\r\n     {data:'2018'},\r\n     {data:'2019'},\r\n     {data:'2020'},\r\n     {data:'2021'},\r\n     {data:'2025'},\r\n     {data:'2030'},\r\n     {data:'formula'},\r\n     {data:'Avg'},\r\n     {data:'Median'},\r\n     {data:'Max'},\r\n     {data:'Min'}\r\n    ]\r\n\r\n    // console.log(this.columns)\r\n   }\r\n\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n<div class=\"container-fluid my-4\" >\r\n  <div class=\"mb-3\" style=\"float: right;\">\r\n    <dx-button\r\n    icon=\"plus\"\r\n    class=\"ml-2\"\r\n    text=\"Add New Row\"\r\n    (onClick)=\"addNewRowPopup()\"\r\n    ></dx-button>\r\n   <dx-button\r\n\r\n  icon=\"save\"\r\n  class=\"ml-2\"\r\n  stylingMode=\"outlined\"\r\n  text=\"Save Data\"\r\n  type=\"default\"\r\n  (onClick)=\"saveStudyData()\"\r\n></dx-button>\r\n\r\n\r\n<dx-button\r\nicon=\"check\"\r\nclass=\"ml-2\"\r\ntype=\"success\"\r\ntext=\"Request for SignOff\"\r\n(onClick)=\"onRequestForSignOffClick()\"\r\n></dx-button>\r\n<dx-button\r\nicon=\"revert\"\r\nclass=\"ml-2\"\r\ntype=\"default\"\r\ntext=\"Request for Change Data\"\r\n(onClick)=\"onRequestForChangeDataClick()\"\r\n></dx-button>\r\n\r\n\r\n</div>\r\n\r\n <div>\r\n<app-handsontable\r\n[colHeaders]=\"columnHeaders\"\r\n[data]=\"lubesNetTrendViewData\"\r\n[columns]=\"columns\"\r\n[settings]=\"settings\"\r\n> \r\n</app-handsontable>\r\n\r\n</div>\r\n\r\n<!-- <div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n \r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n                <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n                  Currency: {{ currentCurrency.CurrencyName }} ({{\r\n                    currentCurrency.CurrencyCode\r\n                  }})\r\n                </div>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductCategory\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"ProductType\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column dataField=\"Segment\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [allowFiltering]=\"false\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_PT_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div> -->\r\n\r\n<dx-popup\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Category</label>\r\n              <ng-select\r\n                [items]=\"productCategoryLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductCategory\"\r\n                placeholder=\"Select Product Category\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ProductCategory\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Product Type</label>\r\n              <ng-select\r\n                [items]=\"productTypeLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ProductType\"\r\n                placeholder=\"Select Product Type\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.ProductType)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div class=\"form-group\">\r\n              <label>Segment</label>\r\n              <ng-select\r\n                [items]=\"segmentLists\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Segment\"\r\n                placeholder=\"Select Segment\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Segment)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let volumeYear of volumeYears\" class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n              <label>{{ volumeYear.year }}</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                [formControlName]=\"volumeYear.field\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            (click)=\"submitNewRow()\"\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Field } from 'devextreme/ui/pivot_grid/data_source';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataEntrySHC } from 'src/model/dataEntrySHC.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { SalonHairCareSales } from 'src/model/salonHairCareSales.model';\r\nimport { ShcSalesItem } from 'src/model/shcSalesItem.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport mock from 'src/assets/mock.json';\r\nimport mocke from 'src/assets/mocke.json';\r\nimport updatedJson from 'src/assets/updatejson.json';\r\nimport { pluck } from 'underscore';\r\nimport { first } from 'underscore';\r\n\r\n@Component({\r\n  selector: 'app-sc',\r\n  templateUrl: './sc.component.html',\r\n  styleUrls: ['./sc.component.css'],\r\n})\r\nexport class ScComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n  mockData = mock;\r\n  secondMockeData = mocke;\r\n  updatedJson = updatedJson;\r\n  formattedData: any;\r\n  secondFormattedData: any;\r\n  dataToShow: any;\r\n  columnHeaders: any[] = [];\r\n  columns: any;\r\n  studyTitle: string = '';\r\n\r\n  currentYear: number = 0;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  isMidYear: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  studyDataObj: SalonHairCareSales = {\r\n    MarketYearCategoryId: 0,\r\n    InitialSetup: new InitialSetup(),\r\n    ProductTypeSalesSHC: [],\r\n  };\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: ShcSalesItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  CompanyLists: DataEntrySHC[] = [];\r\n  MasterBrandLists: DataEntrySHC[] = [];\r\n  SegmentLists: DataEntrySHC[] = [];\r\n  OutletLists: DataEntrySHC[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  previewGridStorageKey: string;\r\n\r\n  allowedCols = [\r\n    'PreviousYear1',\r\n    'PreviousYear2',\r\n    'PreviousYear3',\r\n    'PreviousYear4',\r\n    'PreviousYear5',\r\n    'CurrentYear',\r\n  ];\r\n\r\n  studyTypeValue = 'SalonCount';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  @Input() set setSelectedCurrency(data: DataRelationsData[]) {\r\n    if (data) {\r\n      this.datRelationsData = data;\r\n\r\n      this.studyDataRelations = this.datRelationsData.find(\r\n        (item) =>\r\n          item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n      );\r\n\r\n      if (this.studyDataRelations) {\r\n        this.studyDataViewId = this.studyDataRelations.ViewId;\r\n      }\r\n    }\r\n  }\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService,\r\n    private studyService: StudyService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Company: [null, Validators.required],\r\n      MasterBrand: [null, Validators.required],\r\n      Segment: [null, Validators.required],\r\n      Outlet: [null, Validators.required],\r\n      ProductType: [null, Validators.required],\r\n      PreviousYear1: [null],\r\n      PreviousYear2: [null],\r\n      PreviousYear3: [null],\r\n      PreviousYear4: [null],\r\n      PreviousYear5: [null],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.previewGridStorageKey = `SHC-PTS-${this.studyAreaId}`;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n    this.displayJson();\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n\r\n    this.studyService\r\n      .getShcStudyData(\r\n        'SalonCount',\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyDataObj = res.Data as SalonHairCareSales;\r\n\r\n            this.studyMarketYearCategoryId =\r\n              this.studyDataObj.MarketYearCategoryId;\r\n\r\n            this.studyData = this.studyDataObj.SalonCount as ShcSalesItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              this.studyDataObj.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n\r\n            this.volumeYears = [];\r\n            for (let i = currentYear - 5, j = 5; i < currentYear; i++, j--) {\r\n              this.volumeYears.push({ field: `PreviousYear${j}`, year: i });\r\n            }\r\n\r\n            this.volumeYears.push({\r\n              field: `CurrentYear`,\r\n              year: this.currentYear,\r\n            });\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.currentCurrency = {\r\n                CurrencyId: item.CurrencyId,\r\n                CurrencyName: item.CurrencyName,\r\n                CurrencyCode: item.CurrencyCode,\r\n              };\r\n\r\n              this.volumeYears.map((d: any) => {\r\n                this.previewGridData.push({\r\n                  Market: this.studySummary.MarketName,\r\n                  Year: d.year,\r\n                  Value: item[d.field],\r\n                });\r\n              });\r\n\r\n              this.studyData[i].Market = this.studySummary.MarketName;\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'Market',\r\n        area: 'row',\r\n        caption: 'Market',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 1,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 2,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as ShcSalesItem;\r\n\r\n      data.CurrentYear = +data.CurrentYear;\r\n      data.PreviousYear1 = +data.PreviousYear1;\r\n      data.PreviousYear2 = +data.PreviousYear2;\r\n      data.PreviousYear3 = +data.PreviousYear3;\r\n      data.PreviousYear4 = +data.PreviousYear4;\r\n      data.PreviousYear5 = +data.PreviousYear5;\r\n    }\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyData = this.studyData.map((item: any) => ({\r\n      ...item,\r\n      PreviousYear1: item.PreviousYear1 > 0 ? item.PreviousYear1 : null,\r\n      PreviousYear2: item.PreviousYear2 > 0 ? item.PreviousYear2 : null,\r\n      PreviousYear3: item.PreviousYear3 > 0 ? item.PreviousYear3 : null,\r\n      PreviousYear4: item.PreviousYear4 > 0 ? item.PreviousYear4 : null,\r\n      PreviousYear5: item.PreviousYear5 > 0 ? item.PreviousYear5 : null,\r\n      CurrentYear: item.CurrentYear > 0 ? item.CurrentYear : null,\r\n    }));\r\n\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      salonCount: studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSHCData('SalonCount', studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          // this.getSalesData();\r\n          this.reloadCurrentRoute();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      salonCount: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSHCData('SalonCount', formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.isLoadingService.remove();\r\n          this.getSalesData();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometimes.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  displayJson() {\r\n    this.secondMockeData = mocke;\r\n    let data = this.secondMockeData.Data;\r\n    // console.log(this.secondMockeData);\r\n    this.secondFormattedData = [];\r\n    let data2 = this.updatedJson.Data;\r\n    const settingsJson = data2.settings;\r\n    console.log(settingsJson);\r\n\r\n    // this.columnHeaders = data2.ColumnList;\r\n\r\n    const columnLists: any = [];\r\n    const nestedColumnList: any = [];\r\n    const columnBinding: any = [];\r\n    data2.ColumnList.map((list) => {\r\n      if (list.IsVisible) {\r\n        columnLists.push(list.Title);\r\n        nestedColumnList.push(null);\r\n        columnBinding.push({ data: `ColumnsData.${list.Title}` });\r\n      }\r\n    });\r\n    data2.YearsList.sort((a, b) => a.Index - b.Index);\r\n    data2.YearsList.map((year) => {\r\n      columnLists.push({\r\n        label: year.Year,\r\n        colspan: year.AttributeList.length,\r\n      });\r\n      if (year.AttributeList) {\r\n        // const lastIndex = this.columnHeaders.length - 1;\r\n        // if (!this.columnHeaders[lastIndex]['sub']) {\r\n        //   this.columnHeaders[lastIndex]['sub'] = [];\r\n        // }\r\n        year.AttributeList.map((attr) => {\r\n          if (year.AttributeList.length > 1) {\r\n            nestedColumnList.push(attr.Title);\r\n          }\r\n          columnBinding.push({ data: `YearsData.${year.Year}.${attr.Title}` });\r\n          // this.columnHeaders[lastIndex]['sub'].push({\r\n          //   CoulmnTitle: attr.CoulmnTitle,\r\n          //   CoulmnIndex: attr.CoulmnIndex,\r\n          //   IsVisible: 1,\r\n          // });\r\n        });\r\n      }\r\n    });\r\n\r\n    this.columnHeaders.push(columnLists);\r\n    if (data2.HasAttribute) {\r\n      this.columnHeaders.push(nestedColumnList);\r\n    }\r\n    this.columns = columnBinding;\r\n\r\n    data2.DataList.map((item: any, i: number) => {\r\n      if (!this.secondFormattedData[i]) {\r\n        this.secondFormattedData[i] = { ColumnsData: {}, YearsData: {} };\r\n      }\r\n      data2.ColumnList.forEach((col) => {\r\n        if (col.IsVisible) {\r\n          Object.assign(this.secondFormattedData[i]['ColumnsData'], {\r\n            [col.Title]: item.ColumnsData[col.Index],\r\n          });\r\n        }\r\n      });\r\n\r\n      data2.YearsList.forEach((year, j) => {\r\n        if (!this.secondFormattedData[i]['YearsData'][year.Year]) {\r\n          this.secondFormattedData[i]['YearsData'][year.Year] = {};\r\n        }\r\n        // this.columnHeaders.push({\r\n        //   label: year.Year,\r\n        //   colspan: data2.YearsList.length,\r\n        // });\r\n        year.AttributeList.map((attribute: any) => {\r\n          Object.assign(this.secondFormattedData[i]['YearsData'][year.Year], {\r\n            [attribute.Title]:\r\n              typeof item.YearsData[year.Year] !== 'undefined'\r\n                ? item.YearsData[year.Year][attribute.Index]\r\n                : 0,\r\n          });\r\n        });\r\n      });\r\n    });\r\n    console.log(this.columnHeaders);\r\n    // data2.YearsList.forEach((year) => {\r\n    //   let yearIndex = data2.YearsList.indexOf(year);\r\n    //   Object.assign(this.secondFormattedData, {\r\n    //     [year.YearType]: {\r\n    //       [year.Attributes[0].CoulmnTitle]:\r\n    //         data2.DataItems[0].YearsData[0][2021],\r\n    //       [year.Attributes[1].CoulmnTitle]:\r\n    //         data2.DataItems[0].YearsData[1][2022],\r\n    //     },\r\n    //   });\r\n    // });\r\n    // console.log(data2);\r\n    // this.secondFormattedData = [this.secondFormattedData];\r\n    // console.log(this.secondFormattedData);\r\n\r\n    // this.formattedData = [];\r\n    // data.ColumnList.forEach((col) => {\r\n    //   let idx = data.ColumnList.indexOf(col);\r\n    //   Object.assign(this.formattedData, {\r\n    //     [col.CoulmnTitle]: data.DataItems[0].DataAttributes[idx],\r\n    //   });\r\n    //   // formattedData.push({\r\n    //   //   [col.CoulmnTitle]: data.DataItems[0].DataAttributes[idx]\r\n    //   // })\r\n    // });\r\n    // data.YearsList.forEach((year) => {\r\n    //   Object.assign(this.formattedData, {\r\n    //     [year.YearType]: {\r\n    //       [data.UnitOfValue[0].ValueTitle]: year.Values[0].CoulmnTitle,\r\n    //       [data.UnitOfValue[1].ValueTitle]: year.Values[1].CoulmnTitle,\r\n    //     },\r\n    //   });\r\n    // });\r\n\r\n    // this.formattedData = [this.formattedData];\r\n    // const YearsData = pluck(data2.DataItems, '2021');\r\n    // console.log(YearsData);\r\n    // console.log(this.formattedData);\r\n    // this.setColumnHeaders();\r\n    // this.setColumnData();\r\n  }\r\n\r\n  setColumnHeaders(): void {\r\n    this.columnHeaders = [\r\n      [\r\n        'Company',\r\n        'Brand',\r\n        'Channel',\r\n        { label: '2021', colspan: 2 },\r\n        { label: '2022', colspan: 2 },\r\n        { label: '2023', colspan: 2 },\r\n      ],\r\n      [\r\n        null,\r\n        null,\r\n        null,\r\n        { label: 'Volume' },\r\n        { label: 'Sales' },\r\n        { label: 'Volume' },\r\n        { label: 'Sales' },\r\n        { label: 'Volume' },\r\n        { label: 'Sales' },\r\n      ],\r\n    ];\r\n  }\r\n\r\n  setColumnData(): void {\r\n    this.columns = [\r\n      { data: 'Company' },\r\n      { data: 'Brand' },\r\n      { data: 'Channel' },\r\n      { data: '2021.Volume' },\r\n      { data: '2021.Sales' },\r\n      { data: '2022.Volume' },\r\n      { data: '2022.Sales' },\r\n      { data: '2023.Volume' },\r\n      { data: '2023.Sales' },\r\n    ];\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n<!-- <pre>{{ secondFormattedData | jsons }}</pre> -->\r\n<div class=\"container-fluid my-4\">\r\n  <!-- <app-handsontable\r\n    [data]=\"secondFormattedData\"\r\n    [colHeaders]=\"columnHeaders\"\r\n    [nestedHeaders]=\"columnHeaders\"\r\n    [columns]=\"columns\"\r\n  >\r\n  </app-handsontable> -->\r\n\r\n  <app-handson-table [setDataSource]=\"updatedJson\"></app-handson-table>\r\n\r\n  <!-- <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column dataField=\"Market\" [allowEditing]=\"false\"></dxi-column>\r\n\r\n          <dxi-column\r\n            [width]=\"100\"\r\n            [dataField]=\"volumeYear.field\"\r\n            [caption]=\"volumeYear.year\"\r\n            [allowEditing]=\"!isStudyEditable\"\r\n            cellTemplate=\"EditCellTemplate\"\r\n            *ngFor=\"let volumeYear of volumeYears\"\r\n          >\r\n          </dxi-column>\r\n\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'EditCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYearsCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setStudyType]=\"studyDataUrlEnum.SHC_SC_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel> -->\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable, Subject, takeUntil } from 'rxjs';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PivotGridOptions } from 'src/model/pivotGridOptions.model';\r\nimport { UserStateAndSetttings } from 'src/model/userStateAndSetttings.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { SlideInOutAnimation } from '../../../../../../../animations';\r\n\r\ndeclare let $: any;\r\n@Component({\r\n  selector: 'app-preview-top-menu',\r\n  templateUrl: './preview-top-menu.component.html',\r\n  styleUrls: ['./preview-top-menu.component.css'],\r\n  animations: [SlideInOutAnimation],\r\n})\r\nexport class PreviewTopMenuComponent implements OnInit {\r\n  calculatedFieldSelectorClicked: any;\r\n  intervalCalculatedField: any;\r\n\r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };\r\n  @Input() set setSelectedCurrency(data: SEDataEntry) {\r\n    if (data) {\r\n      this.selectedCurrency = data;\r\n      this.setTopMenuValues();\r\n    }\r\n  }\r\n  @Input() set pivotGridOptions(value: PivotGridOptions) {\r\n    this.pivotGridOptionsValues = value;\r\n    this.autoSaveStateStatus = this.getAutoSaveStateStatus(\r\n      this.pivotGridOptionsValues,\r\n      this.pivotGridstateValues\r\n    );\r\n  }\r\n  // @Input() pivotCalculatedFields: Observable<any>;\r\n\r\n  @Output() currencySelectionChanged = new EventEmitter<SEDataEntry>();\r\n  @Output() currencyConversionSelectionChanged = new EventEmitter<number>();\r\n  @Output() massUnitSelectionChanged = new EventEmitter<SEDataEntry>();\r\n  @Output() openAddCalculatedFieldChanged = new EventEmitter<number>();\r\n  @Output() calculatedFieldItemSelected = new EventEmitter<any>();\r\n  @Output() onExportToExcel = new EventEmitter<boolean>();\r\n  @Output() onExportToCvs = new EventEmitter<boolean>();\r\n  @Output() onExportSnapshot = new EventEmitter<boolean>();\r\n  @Output() onChangeAutoSaveStatus = new EventEmitter<boolean>();\r\n\r\n  private _destroyed$ = new Subject();\r\n\r\n  othersSelectorVisible: boolean = false;\r\n  timePeriodSelectorVisible: boolean = false;\r\n  massUnitSelectorVisible: boolean = false;\r\n  volumeUnitSelectorVisible: boolean = false;\r\n  currencyConversionSelectorVisible: boolean = false;\r\n  currencySelectorVisible: boolean = false;\r\n  parametersSelectorVisible: boolean = false;\r\n  othersSelectorClicked: boolean = false;\r\n  timePeriodSelectorClicked: boolean = false;\r\n  massUnitSelectorClicked: boolean = false;\r\n  volumeUnitSelectorClicked: boolean = false;\r\n  currencyConversionSelectorClicked: boolean = false;\r\n  currencySelectorClicked: boolean = false;\r\n  parametersSelectorClicked: boolean = false;\r\n\r\n  exportToExcelSelectorVisible = false;\r\n  exportToExcelSelectorClicked = false;\r\n  exportTypeDropdownSelected: any;\r\n\r\n  currencyDropdownSelected: any = undefined;\r\n  unitOfMassDropdownSelected: any = undefined;\r\n  unitOfVolumeDropdownSelected: any = undefined;\r\n  pivotWidth: number = 0;\r\n  currencyDropdown: SEDataEntry[] = [];\r\n  massUnitDropdown: SEDataEntry[] = [];\r\n  volumeUnitDropdown: any[] = [];\r\n  timePeriod: any[] = [];\r\n  timePeriodFrom: number = 0;\r\n  timePeriodTo: number = 0;\r\n  currencyConversionType: string[] = ['Current', 'Constant'];\r\n  currencyConversionTypeSelected: string = 'Constant';\r\n  exportType = [\r\n    { id: 1, value: 'Export All Data' },\r\n    { id: 2, value: 'Export All Data to CSV' },\r\n    { id: 3, value: 'Export Snapshot' },\r\n  ];\r\n  parametersList: any[] = [];\r\n  eventsCustomActionSubscription: any;\r\n  latestStateData: any;\r\n  latestStateAndSettingsData: any;\r\n  allStateDataList = [];\r\n  activeStateDataList = [];\r\n  isUndone = false;\r\n  count = 0;\r\n  isButtonPressed = false;\r\n  pivotGridOptionsValues: any = undefined;\r\n  pivotGridstateValues: any = undefined;\r\n  calculateFieldsItems: any[] = [];\r\n  calculatedFieldCaption = '';\r\n  calculatedFieldVisible = false;\r\n\r\n  dataLoadingIndicatorVisible = false;\r\n\r\n  calculatedItems: any[] = [\r\n    { name: CalculatedFieldType.percentOfTotal, value: 'percentOfTotal' },\r\n    { name: CalculatedFieldType.changePercent, value: 'changePercent' },\r\n    { name: CalculatedFieldType.cagr, value: 'cagr' },\r\n  ];\r\n\r\n  autoSaveStateStatus: boolean = false;\r\n\r\n  constructor(private sharedService: SharedService) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.pivotCalculatedFields\r\n    //   .pipe(takeUntil(this._destroyed$))\r\n    //   .subscribe((item: any) => (this.calculatedFieldCaption = item));\r\n\r\n    this.setTopMenuValues();\r\n    this.getCurrencyList();\r\n    this.getUnitOfMassList();\r\n  }\r\n\r\n  public setTopMenuValues() {\r\n    this.currencyDropdownSelected = this.selectedCurrency;\r\n    // this.unitOfVolumeDropdownSelected = pivotGridState.settings.unitOfVolume;\r\n    // this.unitOfMassDropdownSelected = pivotGridState.settings.unitOfMass;\r\n    // this.currencyConversionTypeSelected =\r\n    //   CurrencyConversionTypeEnum[\r\n    //     pivotGridState.settings.currencyConversionType\r\n    //   ];\r\n  }\r\n\r\n  // call for support data\r\n  public getCurrencyList() {\r\n    this.sharedService.getSEDataEntryData('Currencies').subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.currencyDropdown = res.Data as SEDataEntry[];\r\n          this.currencyDropdown.map((item: any) => {\r\n            item.CurrencyName = `${item.Name} (${item.CurrencyCode})`;\r\n          });\r\n        }\r\n      },\r\n      (error: any) => {\r\n        throw new Error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public getUnitOfMassList() {\r\n    this.sharedService.getSEDataEntryData('VolumeUnits').subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.massUnitDropdown = res.Data as SEDataEntry[];\r\n        }\r\n      },\r\n      (error: any) => {\r\n        throw new Error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  onHover(item: string) {\r\n    switch (item) {\r\n      case 'othersSelector':\r\n        if (this.othersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.othersSelectorVisible = !this.othersSelectorVisible;\r\n        break;\r\n      case 'timePeriodSelector':\r\n        if (this.timePeriodSelectorClicked) {\r\n          break;\r\n        }\r\n        this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;\r\n        break;\r\n      case 'massUnitSelector':\r\n        if (this.massUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.massUnitSelectorVisible = !this.massUnitSelectorVisible;\r\n        break;\r\n      case 'volumeUnitSelector':\r\n        if (this.volumeUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;\r\n        break;\r\n      case 'currencyConversionSelector':\r\n        if (this.currencyConversionSelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencyConversionSelectorVisible =\r\n          !this.currencyConversionSelectorVisible;\r\n        break;\r\n      case 'calculateFieldSelector':\r\n        // this.openAddCalculatedField();\r\n        if (this.calculatedFieldSelectorClicked) {\r\n          break;\r\n        }\r\n        this.calculatedFieldVisible = !this.calculatedFieldVisible;\r\n        break;\r\n      case 'currencySelector':\r\n        if (this.currencySelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencySelectorVisible = !this.currencySelectorVisible;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (this.parametersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = !this.parametersSelectorVisible;\r\n        break;\r\n      case 'exportToExcel':\r\n        if (this.exportToExcelSelectorClicked) {\r\n          break;\r\n        }\r\n        this.exportToExcelSelectorVisible = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  onLeave(item: string) {\r\n    switch (item) {\r\n      case 'othersSelector':\r\n        if (this.othersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.othersSelectorVisible = false;\r\n        break;\r\n      case 'timePeriodSelector':\r\n        if (this.timePeriodSelectorClicked) {\r\n          break;\r\n        }\r\n        this.timePeriodSelectorVisible = false;\r\n        break;\r\n      case 'massUnitSelector':\r\n        if (this.massUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.massUnitSelectorVisible = false;\r\n        break;\r\n      case 'volumeUnitSelector':\r\n        if (this.volumeUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.volumeUnitSelectorVisible = false;\r\n        break;\r\n      case 'currencyConversionSelector':\r\n        if (this.currencyConversionSelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencyConversionSelectorVisible = false;\r\n        break;\r\n      case 'calculateFieldSelector':\r\n        if (this.calculatedFieldSelectorClicked) {\r\n          break;\r\n        }\r\n        this.calculatedFieldVisible = false;\r\n        break;\r\n      case 'currencySelector':\r\n        if (this.currencySelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencySelectorVisible = false;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (this.parametersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = false;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (this.parametersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = false;\r\n        break;\r\n      case 'exportToExcel':\r\n        if (this.exportToExcelSelectorClicked) {\r\n          break;\r\n        }\r\n        this.exportToExcelSelectorVisible = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  // openAddCalculatedField() {\r\n  //   this.openAddCalculatedFieldChanged.emit();\r\n  //   if (this.calculatedFieldCaption) {\r\n  //     for (let item of this.calculatedFieldCaption) {\r\n  //       let text = '';\r\n  //       const isCurrencyText = item.caption.includes('<XTS>');\r\n  //       const isMassText = item.caption.includes('<UNIT>');\r\n  //       const isVolumeText = item.caption.includes('<UNIT-VOLUME>');\r\n  //       if (isCurrencyText) {\r\n  //         text = item.caption.replace(\r\n  //           '<XTS>',\r\n  //           this.currencyDropdownSelected.Code\r\n  //         );\r\n  //       } else if (isVolumeText) {\r\n  //         text = item.caption.replace(\r\n  //           '<UNIT-VOLUME>',\r\n  //           this.unitOfVolumeDropdownSelected.Name\r\n  //         );\r\n  //       } else if (isMassText) {\r\n  //         text = item.caption.replace(\r\n  //           '<UNIT>',\r\n  //           this.unitOfMassDropdownSelected.Name\r\n  //         );\r\n  //       } else {\r\n  //         text = item.caption;\r\n  //       }\r\n  //       const isExist = this.calculateFieldsItems.find(\r\n  //         (fieldItem) => fieldItem.name === text\r\n  //       );\r\n  //       if (!isExist) {\r\n  //         let calculatedItems: any[] = [];\r\n  //         if (\r\n  //           this.pivotGridOptionsValues.settings.calculatedFields\r\n  //             .isPercentOfTotal\r\n  //         ) {\r\n  //           calculatedItems.push({\r\n  //             name: CalculatedFieldType.percentOfTotal,\r\n  //             value: 'percentOfTotal',\r\n  //           });\r\n  //         }\r\n  //         if (\r\n  //           this.pivotGridOptionsValues.settings.calculatedFields\r\n  //             .isPercentOfChange\r\n  //         ) {\r\n  //           calculatedItems.push({\r\n  //             name: CalculatedFieldType.changePercent,\r\n  //             value: 'changePercent',\r\n  //           });\r\n  //         }\r\n  //         if (this.pivotGridOptionsValues.settings.calculatedFields.isCagr) {\r\n  //           calculatedItems.push({\r\n  //             name: CalculatedFieldType.cagr,\r\n  //             value: 'cagr',\r\n  //           });\r\n  //         }\r\n  //         this.calculateFieldsItems.push({\r\n  //           name: text,\r\n  //           value: item.dataField,\r\n  //           items: calculatedItems,\r\n  //         });\r\n  //       } else {\r\n  //         for (let i of this.calculateFieldsItems) {\r\n  //           const exist = this.calculateFieldsItems.filter(\r\n  //             (x) => x.value === i.value\r\n  //           );\r\n  //           if (exist.length > 1) {\r\n  //             const index = this.calculateFieldsItems.indexOf(exist[0]);\r\n  //             this.calculateFieldsItems.splice(index, 1);\r\n  //             this.calculateFieldsItems.shift();\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  calculatedFieldOnHover(id: string) {\r\n    for (let i = 0; i <= this.calculateFieldsItems.length; ) {\r\n      let elem = 'calculated-' + i;\r\n      if (elem === id) {\r\n        $('#' + id).addClass('show');\r\n      } else {\r\n        $('#' + elem).removeClass('show');\r\n      }\r\n      i++;\r\n    }\r\n  }\r\n\r\n  calculatedFieldOnLeave(id: string) {\r\n    $('#' + id).removeClass('show');\r\n  }\r\n\r\n  onCalcItemSelected(itemName: string, dataField: string) {\r\n    this.calculatedFieldItemSelected.emit({ itemName, dataField });\r\n  }\r\n\r\n  public getButtonStatus(status: boolean): string {\r\n    return status ? 'success' : 'normal';\r\n  }\r\n\r\n  getWidth(elementName: string): number {\r\n    if (this.pivotWidth > 0 && this.pivotWidth < 700) {\r\n      return this.pivotWidth;\r\n    }\r\n    switch (elementName) {\r\n      case 'othersSelectorBtn':\r\n        return 45;\r\n      case 'chartBtn':\r\n        return 45;\r\n      case 'expandCollapseBtn':\r\n        return 45;\r\n      case 'currencySelectorBtn':\r\n        return 100;\r\n      case 'currencyConversionSelectorBtn':\r\n        return 130;\r\n      case 'massUnitSelectorBtn':\r\n        return 175;\r\n      case 'volumeUnitSelectorBtn':\r\n        return 175;\r\n      case 'timePeriodSelectorBtn':\r\n        return 180;\r\n      case 'parameters':\r\n        return 190;\r\n      default:\r\n        return 100;\r\n    }\r\n  }\r\n\r\n  toggleMenuItem(item: string, isClick: boolean) {\r\n    switch (item) {\r\n      case 'othersSelector':\r\n        if (isClick) {\r\n          this.othersSelectorClicked = !this.othersSelectorClicked;\r\n          // this.getStateSaveByMe(this.viewId, this.userId);\r\n          // this.getStateSharedWithMe(this.viewId, this.userId);\r\n        }\r\n        if (this.othersSelectorClicked) {\r\n          this.othersSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.othersSelectorVisible = !this.othersSelectorVisible;\r\n        break;\r\n      case 'timePeriodSelector':\r\n        if (isClick) {\r\n          this.timePeriodSelectorClicked = !this.timePeriodSelectorClicked;\r\n        }\r\n        if (this.timePeriodSelectorClicked) {\r\n          this.timePeriodSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;\r\n        break;\r\n      case 'volumeUnitSelector':\r\n        if (isClick) {\r\n          this.volumeUnitSelectorClicked = !this.volumeUnitSelectorClicked;\r\n        }\r\n        if (this.volumeUnitSelectorClicked) {\r\n          this.volumeUnitSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;\r\n        break;\r\n      case 'massUnitSelector':\r\n        if (isClick) {\r\n          this.massUnitSelectorClicked = !this.massUnitSelectorClicked;\r\n        }\r\n        if (this.massUnitSelectorClicked) {\r\n          this.massUnitSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.massUnitSelectorVisible = !this.massUnitSelectorVisible;\r\n        break;\r\n      case 'currencyConversionSelector':\r\n        if (isClick) {\r\n          this.currencyConversionSelectorClicked =\r\n            !this.currencyConversionSelectorClicked;\r\n        }\r\n        if (this.currencyConversionSelectorClicked) {\r\n          this.currencyConversionSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.currencyConversionSelectorVisible =\r\n          !this.currencyConversionSelectorVisible;\r\n        break;\r\n      case 'calculateFieldSelector':\r\n        // this.openAddCalculatedField();\r\n        if (isClick) {\r\n          this.calculatedFieldSelectorClicked =\r\n            !this.calculatedFieldSelectorClicked;\r\n        }\r\n        if (this.calculatedFieldSelectorClicked) {\r\n          // this.intervalCalculatedField = setInterval(\r\n          //   () => this.openAddCalculatedField(),\r\n          //   50\r\n          // );\r\n          this.calculatedFieldVisible = true;\r\n          break;\r\n        }\r\n        this.calculatedFieldVisible = !this.calculatedFieldVisible;\r\n        clearInterval(this.intervalCalculatedField);\r\n        break;\r\n      case 'currencySelector':\r\n        if (isClick) {\r\n          this.currencySelectorClicked = !this.currencySelectorClicked;\r\n        }\r\n        if (this.currencySelectorClicked) {\r\n          this.currencySelectorVisible = true;\r\n          break;\r\n        }\r\n        this.currencySelectorVisible = !this.currencySelectorVisible;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (isClick) {\r\n          this.parametersSelectorClicked = !this.parametersSelectorClicked;\r\n        }\r\n        if (this.parametersSelectorClicked) {\r\n          this.parametersSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = !this.parametersSelectorVisible;\r\n        break;\r\n    }\r\n    // focus on first opened texteditor\r\n    $('.dx-texteditor-input').first().focus();\r\n  }\r\n\r\n  currencySelectionOnChanged(data: any) {\r\n    if (this.currencyDropdownSelected != data) {\r\n      this.currencyDropdownSelected = data;\r\n      this.currencySelectionChanged.emit(data);\r\n    }\r\n  }\r\n\r\n  currencyConversionTypeOnChanged(data: any) {\r\n    this.currencyConversionSelectionChanged.emit(\r\n      parseInt(CurrencyConversionTypeEnum[data])\r\n    );\r\n  }\r\n\r\n  massUnitSelectionChange(data: any) {\r\n    if (this.unitOfMassDropdownSelected != data) {\r\n      this.unitOfMassDropdownSelected = data;\r\n      this.massUnitSelectionChanged.emit(data);\r\n    }\r\n  }\r\n\r\n  exportToExcelSelectionOnChanged(data: any) {\r\n    this.exportTypeDropdownSelected = data;\r\n    switch (data.id) {\r\n      case 1:\r\n        this.exportToExcelSelectorVisible = false;\r\n        this.exportToExcel();\r\n        break;\r\n      case 2:\r\n        this.exportToExcelSelectorVisible = false;\r\n        this.onExportToCvs.emit(true);\r\n        break;\r\n      case 3:\r\n        this.exportToExcelSelectorVisible = false;\r\n        this.onExportSnapshot.emit(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.onExportToExcel.emit(true);\r\n  }\r\n\r\n  getAutoSaveStateStatus(\r\n    pivotGridOptions: PivotGridOptions,\r\n    userStateAndSetttings: UserStateAndSetttings\r\n  ) {\r\n    if (pivotGridOptions && userStateAndSetttings) {\r\n      if (userStateAndSetttings.settings.rememberLatestState == undefined) {\r\n        return pivotGridOptions.canSaveUserState;\r\n      } else {\r\n        return userStateAndSetttings.settings.rememberLatestState;\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSaveStatus(currentStatus: boolean) {\r\n    this.autoSaveStateStatus = !currentStatus;\r\n    this.onChangeAutoSaveStatus.emit(this.autoSaveStateStatus);\r\n  }\r\n}\r\n","<div class=\"buttons topmenu-buttons\">\r\n  <!-- add calculated field -->\r\n  <div\r\n    *ngIf=\"\r\n      pivotGridOptionsValues?.settings?.menuSettings\r\n        ?.isCalculatedFieldsSelection\r\n    \"\r\n    class=\"menu-dropdown\"\r\n    (mouseover)=\"onHover('calculateFieldSelector')\"\r\n    (mouseenter)=\"onHover('calculateFieldSelector')\"\r\n    (mouseout)=\"onLeave('calculateFieldSelector')\"\r\n  >\r\n    <dx-button\r\n      stylingMode=\"outlined\"\r\n      [type]=\"getButtonStatus(calculatedFieldSelectorClicked)\"\r\n      icon=\"fas fa-calculator\"\r\n      [width]=\"getWidth('chartBtn')\"\r\n      [height]=\"35\"\r\n      (onClick)=\"toggleMenuItem('calculateFieldSelector', true)\"\r\n    ></dx-button>\r\n    <div\r\n      [@slideInOut]=\"calculatedFieldVisible ? 'in' : 'out'\"\r\n      id=\"currencySelector\"\r\n      class=\"menu-dropdown-content\"\r\n    >\r\n      <div class=\"calculated-title\">Add Calculated Field for:</div>\r\n      <div class=\"btn-group dropright\" style=\"width: 100%\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-secondary dropdown-toggle text-left\"\r\n          data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\"\r\n          aria-expanded=\"false\"\r\n          (mouseenter)=\"calculatedFieldOnHover('calculated-0')\"\r\n          (mouseout)=\"calculatedFieldOnLeave('calculated-0')\"\r\n        >\r\n          Sales\r\n        </button>\r\n        <div\r\n          class=\"dropdown-menu\"\r\n          [id]=\"'calculated-0'\"\r\n          (mouseenter)=\"calculatedFieldOnHover('calculated-0')\"\r\n          (mouseover)=\"calculatedFieldOnHover('calculated-0')\"\r\n        >\r\n          <div *ngFor=\"let item of calculatedItems\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-light btn-calc-item\"\r\n              (click)=\"onCalcItemSelected(item.name, '')\"\r\n            >\r\n              {{ item.name }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- END add calculated field -->\r\n\r\n  <!-- Currency section -->\r\n  <div\r\n    *ngIf=\"pivotGridOptionsValues?.settings?.menuSettings?.isCurrencySelection\"\r\n    class=\"menu-dropdown\"\r\n    (mouseover)=\"onHover('currencySelector')\"\r\n    (mouseenter)=\"onHover('currencySelector')\"\r\n    (mouseout)=\"onLeave('currencySelector')\"\r\n  >\r\n    <dx-button\r\n      stylingMode=\"outlined\"\r\n      [type]=\"getButtonStatus(currencySelectorClicked)\"\r\n      icon=\"fa fa-money\"\r\n      [width]=\"getWidth('currencySelectorBtn')\"\r\n      [height]=\"35\"\r\n      [text]=\"currencyDropdownSelected?.CurrencyCode\"\r\n      (click)=\"toggleMenuItem('currencySelector', true)\"\r\n    ></dx-button>\r\n    <div\r\n      [@slideInOut]=\"currencySelectorVisible ? 'in' : 'out'\"\r\n      id=\"currencySelector\"\r\n      class=\"menu-dropdown-content\"\r\n    >\r\n      <div class=\"list-header\">Currency</div>\r\n      <dx-list\r\n        [dataSource]=\"currencyDropdown\"\r\n        [width]=\"255\"\r\n        [height]=\"250\"\r\n        [searchEnabled]=\"true\"\r\n        searchExpr=\"CurrencyName\"\r\n        searchMode=\"contains\"\r\n        [scrollByContent]=\"true\"\r\n        [scrollByThumb]=\"true\"\r\n      >\r\n        <div\r\n          *dxTemplate=\"let data of 'item'\"\r\n          [ngClass]=\"{\r\n            'selected-item':\r\n              data.CurrencyCode === currencyDropdownSelected?.Code\r\n          }\"\r\n        >\r\n          <div (click)=\"currencySelectionOnChanged(data)\">\r\n            {{ data.CurrencyName }}\r\n          </div>\r\n        </div>\r\n      </dx-list>\r\n    </div>\r\n  </div>\r\n  <!-- END Currency section -->\r\n\r\n  <!-- Currency conversion section -->\r\n  <div\r\n    *ngIf=\"pivotGridOptionsValues?.settings?.menuSettings?.isCurrencyConversion\"\r\n    class=\"menu-dropdown\"\r\n    (mouseover)=\"onHover('currencyConversionSelector')\"\r\n    (mouseout)=\"onLeave('currencyConversionSelector')\"\r\n  >\r\n    <dx-button\r\n      stylingMode=\"outlined\"\r\n      [type]=\"getButtonStatus(currencyConversionSelectorClicked)\"\r\n      icon=\"fa fa-exchange-alt\"\r\n      [width]=\"getWidth('currencyConversionSelectorBtn')\"\r\n      [height]=\"35\"\r\n      [text]=\"currencyConversionTypeSelected\"\r\n      (click)=\"toggleMenuItem('currencyConversionSelector', true)\"\r\n    >\r\n    </dx-button>\r\n    <div\r\n      [@slideInOut]=\"currencyConversionSelectorVisible ? 'in' : 'out'\"\r\n      id=\"currencyConversionSelector\"\r\n      class=\"menu-dropdown-content\"\r\n    >\r\n      <div class=\"list-header\">Currency Conversion</div>\r\n      <dx-radio-group\r\n        [items]=\"currencyConversionType\"\r\n        class=\"outline\"\r\n        type=\"normal\"\r\n        [(value)]=\"currencyConversionTypeSelected\"\r\n        (onValueChanged)=\"\r\n          currencyConversionTypeOnChanged(currencyConversionTypeSelected)\r\n        \"\r\n        layout=\"horizontal\"\r\n      >\r\n      </dx-radio-group>\r\n    </div>\r\n  </div>\r\n  <!-- END Currency conversion section -->\r\n\r\n  <!-- mass unit selection -->\r\n  <div\r\n    *ngIf=\"pivotGridOptionsValues?.settings.menuSettings?.isUnitsOfMass\"\r\n    class=\"menu-dropdown\"\r\n    (mouseover)=\"onHover('massUnitSelector')\"\r\n    (mouseout)=\"onLeave('massUnitSelector')\"\r\n  >\r\n    <dx-button\r\n      stylingMode=\"outlined\"\r\n      [type]=\"getButtonStatus(massUnitSelectorClicked)\"\r\n      icon=\"fa fa-balance-scale\"\r\n      [width]=\"getWidth('massUnitSelectorBtn')\"\r\n      [height]=\"35\"\r\n      [text]=\"unitOfMassDropdownSelected?.Name\"\r\n      (click)=\"toggleMenuItem('massUnitSelector', true)\"\r\n    >\r\n    </dx-button>\r\n    <div\r\n      [@slideInOut]=\"massUnitSelectorVisible ? 'in' : 'out'\"\r\n      id=\"massUnitSelector\"\r\n      class=\"menu-dropdown-content\"\r\n    >\r\n      <div class=\"list-header\">Units of Mass</div>\r\n      <dx-list\r\n        [dataSource]=\"massUnitDropdown\"\r\n        [width]=\"180\"\r\n        [height]=\"250\"\r\n        [searchEnabled]=\"false\"\r\n        searchExpr=\"Name\"\r\n        [scrollByContent]=\"true\"\r\n        [scrollByThumb]=\"true\"\r\n      >\r\n        <div\r\n          *dxTemplate=\"let data of 'item'\"\r\n          [ngClass]=\"{\r\n            'selected-item': data.Name === unitOfMassDropdownSelected?.Name\r\n          }\"\r\n        >\r\n          <div (click)=\"massUnitSelectionChange(data)\">{{ data.Name }}</div>\r\n        </div>\r\n      </dx-list>\r\n    </div>\r\n  </div>\r\n  <!-- END mass unit selection -->\r\n\r\n  <!-- auto save state-->\r\n  <div class=\"menu-dropdown auto-save-state\">\r\n    <dx-button\r\n      id=\"autoSaveState\"\r\n      type=\"success\"\r\n      icon=\"far fa-save\"\r\n      [width]=\"35\"\r\n      [height]=\"35\"\r\n      [type]=\"autoSaveStateStatus == true ? 'success' : 'normal'\"\r\n      [hint]=\"\r\n        autoSaveStateStatus == true\r\n          ? 'State is saved automatically'\r\n          : 'System keeps latest used state and settings'\r\n      \"\r\n      (onClick)=\"changeAutoSaveStatus(autoSaveStateStatus)\"\r\n    >\r\n    </dx-button>\r\n  </div>\r\n  <!-- END auto save state -->\r\n  <!-- Export to excel -->\r\n  <div\r\n    class=\"menu-dropdown export-to-exel\"\r\n    (mouseover)=\"onHover('exportToExcel')\"\r\n    (mouseenter)=\"onHover('exportToExcel')\"\r\n    (mouseout)=\"onLeave('exportToExcel')\"\r\n  >\r\n    <dx-button\r\n      id=\"exportBtn\"\r\n      stylingMode=\"outlined\"\r\n      icon=\"fas fa-download\"\r\n      [width]=\"50\"\r\n      [height]=\"35\"\r\n      type=\"normal\"\r\n      hint=\"Export to Excel\"\r\n      [disabled]=\"dataLoadingIndicatorVisible\"\r\n    >\r\n      <div *dxTemplate=\"let data of 'content'\">\r\n        <dx-load-indicator\r\n          class=\"button-indicator\"\r\n          [visible]=\"dataLoadingIndicatorVisible\"\r\n        >\r\n        </dx-load-indicator>\r\n        <i class=\"fas fa-download\" *ngIf=\"!dataLoadingIndicatorVisible\"></i>\r\n      </div>\r\n    </dx-button>\r\n    <div\r\n      [@slideInOut]=\"\r\n        exportToExcelSelectorVisible && !dataLoadingIndicatorVisible\r\n          ? 'in'\r\n          : 'out'\r\n      \"\r\n      id=\"exportTypeSelector\"\r\n      class=\"menu-dropdown-content\"\r\n    >\r\n      <!-- <div class=\"list-header\">{{localization.resourcesPlaceholders[pivotGridOptionsValues?.settings?.pivotGridTextKeys?.pivotCurrencyHeader]}}</div> -->\r\n      <dx-list\r\n        [dataSource]=\"exportType\"\r\n        [width]=\"155\"\r\n        [height]=\"120\"\r\n        [scrollByContent]=\"true\"\r\n        [scrollByThumb]=\"true\"\r\n      >\r\n        <div *dxTemplate=\"let data of 'item'\">\r\n          <div (click)=\"exportToExcelSelectionOnChanged(data)\">\r\n            {{ data.value }}\r\n          </div>\r\n        </div>\r\n      </dx-list>\r\n    </div>\r\n    <dx-tooltip\r\n      target=\"#exportBtn\"\r\n      [visible]=\"dataLoadingIndicatorVisible\"\r\n      [closeOnOutsideClick]=\"true\"\r\n    >\r\n      <div *dxTemplate=\"let data = data; of: 'content'\">Export in progress</div>\r\n    </dx-tooltip>\r\n  </div>\r\n  <!-- END Export to excel selection  -->\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource, {\r\n  Field,\r\n} from 'devextreme/ui/pivot_grid/data_source';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { ComboBox } from 'src/model/combo.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Workbook } from 'exceljs';\r\nimport * as lodash from 'lodash';\r\nimport { saveAs } from 'file-saver';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataFieldArea } from 'src/model/enums/dataFieldArea.enum';\r\nimport { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport {\r\n  UserSettings,\r\n  UserStateAndSetttings,\r\n} from 'src/model/userStateAndSetttings.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialValueType } from 'src/model/enums/specialValueType.enum';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport { CommonHelper } from 'src/guard/commonHelper';\r\nimport { Subject } from 'rxjs';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { ComputingType } from 'src/model/enums/computingType.enum';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'app-shc-preview',\r\n  templateUrl: './shc-preview.component.html',\r\n  styleUrls: ['./shc-preview.component.css'],\r\n})\r\nexport class ShcPreviewComponent implements OnInit {\r\n  @ViewChild(DxPivotGridComponent, { static: true }) pivotGrid:\r\n    | DxPivotGridComponent\r\n    | undefined;\r\n\r\n  @Input() currentYear: number = 0;\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n    }\r\n  }\r\n\r\n  gridFields: PivotGridField[] = [];\r\n  @Input() set setGridFields(data: any) {\r\n    if (data) {\r\n      this.gridFields = data;\r\n    }\r\n  }\r\n\r\n  previewGridKey: string = '';\r\n  @Input() set setPreviewGridKey(data: any) {\r\n    if (data) {\r\n      this.previewGridKey = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n\r\n  selectedCurrency: SEDataEntry = {\r\n    Id: 0,\r\n    IsActive: false,\r\n    Name: '',\r\n  };\r\n  @Input() set setSelectedCurrency(data: any) {\r\n    if (data) {\r\n      this.selectedCurrency = {\r\n        Id: data.CurrencyId,\r\n        IsActive: true,\r\n        Name: data.CurrencyName,\r\n        CurrencyCode: data.CurrencyCode,\r\n        CurrencyName: data.CurrencyName,\r\n      };\r\n\r\n      this.currencyDropdownSelected = this.selectedCurrency;\r\n    }\r\n  }\r\n\r\n  studyType: string = '';\r\n  @Input() set setStudyType(data: string) {\r\n    if (data) {\r\n      this.studyType = data;\r\n    }\r\n  }\r\n\r\n  isLubesnetStudy: boolean = false;\r\n  @Input() set setIsLubesnetStudy(data: boolean) {\r\n    if (data) {\r\n      this.isLubesnetStudy = data;\r\n    }\r\n  }\r\n\r\n  volumeYears: any[] = [];\r\n  @Input() set setVolumeYears(data: any[]) {\r\n    if (data) {\r\n      this.volumeYears = data;\r\n    }\r\n  }\r\n\r\n  viewId: number = 0;\r\n  @Input() set setViewId(data: number) {\r\n    if (data) {\r\n      this.viewId = data;\r\n      this.getPivotSettings();\r\n      this.getPivotState();\r\n    }\r\n  }\r\n  studyDataRelations: DataRelationsData | undefined;\r\n\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: SEDataEntry | undefined;\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  stateData: UserStateAndSetttings | undefined;\r\n\r\n  computingType = ComputingType;\r\n\r\n  eventsCustomAction: Subject<string> = new Subject<string>();\r\n  pivotGridNoDataMessage = '';\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  firstAvailableId = 0;\r\n\r\n  currencyDropdownSelected: any;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n  canCallSaveState = false;\r\n  adminSetNewState = false;\r\n\r\n  pivotSummaryDisplayModesSubtotals: ComboBox[] = [\r\n    { id: undefined, name: 'Same as the Data Fields' },\r\n    { id: 'percentOfColumnTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowTotal', name: 'Always Rows' },\r\n  ];\r\n\r\n  pivotSummaryDisplayModesGrandTotals: ComboBox[] = [\r\n    { id: 'percentOfColumnGrandTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowGrandTotal', name: 'Always Rows' },\r\n    { id: 'percentOfGrandTotal', name: 'Table (Absolute) Grand Total' },\r\n  ];\r\n\r\n  shownYears: any = undefined;\r\n  invisibleFields: PivotGridField[] = [];\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => {}, 0);\r\n  stateChange: Subject<UserStateAndSetttings> =\r\n    new Subject<UserStateAndSetttings>();\r\n\r\n  shownYearsPrev: any = undefined;\r\n  isAdmin = false;\r\n  pivotStateId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n\r\n    this.pivotGridOptions = new PivotGridOptions();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.pivotGridDataSource = new PivotGridDataSource({\r\n    //   store: this.previewData,\r\n    //   fields: this.gridFields,\r\n    // });\r\n    if (typeof this.pivotGridOptions !== 'undefined') {\r\n      this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n      this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(\r\n        this.pivotGridOptions.pivotGridSource as any\r\n      );\r\n    }\r\n  }\r\n\r\n  getPivotSettings() {\r\n    this.sharedService.getPivotSettings(this.viewId).subscribe((res) => {\r\n      this.pivotGridOptions = res.Data;\r\n      if (this.pivotGridOptions) {\r\n        this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n        this.pivotGridOptions.settings.specialSorting = [];\r\n        this.pivotGridOptions.viewId = this.viewId;\r\n      }\r\n    });\r\n  }\r\n\r\n  getPivotState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService.getPivotState(this.viewId).subscribe((res) => {\r\n        // in case state is not exists yet\r\n        try {\r\n          const stateRes =\r\n            typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n          stateData = Common.realMerge(\r\n            new UserStateAndSetttings(),\r\n            JSON.parse(stateRes.StateData)\r\n          );\r\n          this.pivotStateId = stateRes.PivotStateId;\r\n        } catch {\r\n          stateData = new UserStateAndSetttings();\r\n          // stateData.state.fields = this.getGridFields();\r\n        }\r\n\r\n        this.directDatasourceRenderPivot(stateData);\r\n      });\r\n    } else {\r\n      this.directDatasourceRenderPivot(this.stateData);\r\n    }\r\n  }\r\n\r\n  async directDatasourceRenderPivot(stateData: UserStateAndSetttings) {\r\n    if (this.pivotGridOptions.settings.isCube) {\r\n      // let token = await this.getAzureAnalysisToken();\r\n      // let cubesStore = CubeStoreHelper.setCubeStore(\r\n      //   this.pivotGridOptions.settings.cubeSettings.catalog,\r\n      //   this.pivotGridOptions.settings.cubeSettings.cube,\r\n      //   token,\r\n      //   this.devEndpoint\r\n      // );\r\n      // this.pivotGridOptions.pivotGridSource.store = cubesStore;\r\n      // this.pivotGridDataSource = new PivotGridDataSource(\r\n      //   this.pivotGridOptions.pivotGridSource as any\r\n      // );\r\n      // setTimeout(() => {\r\n      //   this.originalDataFieldsEmited.emit(this.pivotGridDataSource);\r\n      // }, 5000);\r\n      // this.saveStateEnabled = true;\r\n      // if (stateData.settings) {\r\n      //   if (!stateData.settings.currency) {\r\n      //     stateData.settings.currency =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n      //   }\r\n      //   if (!stateData.settings.currencyConversionType) {\r\n      //     stateData.settings.currencyConversionType =\r\n      //       this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n      //   }\r\n      //   if (!stateData.settings.selectedYear) {\r\n      //     stateData.settings.selectedYear.PeriodKey = 2021;\r\n      //   }\r\n      // }\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.stateData = stateData;\r\n      // this.fillPivotCube();\r\n      // setTimeout(() => {\r\n      //   this.canCallSaveState = true;\r\n      // }, 300);\r\n    } else {\r\n      if (stateData.settings) {\r\n        if (!stateData.settings.currency) {\r\n          stateData.settings.currency =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currency;\r\n        }\r\n        if (!stateData.settings.currencyConversionType) {\r\n          stateData.settings.currencyConversionType =\r\n            this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n        }\r\n        if (!stateData.settings.selectedYear?.PeriodKey) {\r\n          // stateData.settings.selectedYear = await this.getLatestAccessibleYear(\r\n          //   this.sharedService.getUserData().userId,\r\n          //   this.requestedView.databaseId,\r\n          //   this.requestedView.viewId\r\n          // );\r\n          stateData.settings.selectedYear = this.currentYear;\r\n        }\r\n        // if (!stateData.settings.unitOfVolume) {\r\n        //   stateData.settings.unitOfVolume = await this.getLatestUnitOfVolume(\r\n        //     this.requestedView.databaseId\r\n        //   );\r\n        // }\r\n        if (!stateData.settings.unitOfMass) {\r\n          // stateData.settings.unitOfMass = await this.getLatestUnitOfMass(\r\n          //   this.requestedView.databaseId\r\n          // );\r\n          stateData.settings.unitOfMass = { Id: 105, Name: 'Thousand Tonnes' };\r\n        }\r\n      }\r\n\r\n      // this.listOfAccessileYears = await this.getListAccessibleYears(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      // this.latestAccessibleYear = await this.getLatestAccessibleYear(\r\n      //   this.sharedService.getUserData().userId,\r\n      //   this.requestedView.databaseId,\r\n      //   this.requestedView.viewId\r\n      // );\r\n      this.stateData = stateData;\r\n      if (this.previewData && this.previewData.length) {\r\n        //get all invisible fields\r\n        this.invisibleFields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => f.visible === false\r\n          );\r\n        //filter invisible fields\r\n        this.pivotGridOptions.pivotGridSource.fields =\r\n          this.pivotGridOptions.pivotGridSource.fields.filter(\r\n            (f) => !f.visible || !f.isCalculated\r\n          );\r\n        //get count of visible fields for calculated fields ids\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions.pivotGridSource.fields.length;\r\n        // remove all invisible data from the datasource\r\n        if (this.invisibleFields && this.invisibleFields.length > 0) {\r\n          for (const invisibleField of this.invisibleFields) {\r\n            this.previewData.forEach((obj) => {\r\n              delete obj[invisibleField.dataField];\r\n            });\r\n          }\r\n        }\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      } else {\r\n        this.readPivotDataFromApi();\r\n      }\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    this.canCallSaveState = true;\r\n\r\n    // const userData = this.sharedService.getUserData();\r\n    // this.initChart();\r\n    // allow to save state only in case all requested data is available\r\n    if (\r\n      this.viewId &&\r\n      this.canCallSaveState &&\r\n      this.pivotGridOptions &&\r\n      this.stateData\r\n    ) {\r\n      this.stateData.state = data;\r\n      this.stateChange.next(this.stateData);\r\n      // find all shown years and reload pivot grid on change\r\n      const yearField = this.stateData.state.fields.filter(\r\n        (f: any) => f.dataField === this.yearDataFieldName\r\n      );\r\n      const hasCagrOrChange =\r\n        this.stateData.settings.cagrState.isSet ||\r\n        this.stateData.settings.changePercentState.isSet;\r\n      if (yearField && hasCagrOrChange) {\r\n        const pivotGridInstance: any = this.pivotGrid?.instance;\r\n        const pivotFridDataSource = pivotGridInstance.getDataSource();\r\n        const areaIndex: number = yearField[0].areaIndex;\r\n        const uniqArrByText: any = lodash.uniqBy(\r\n          pivotGridInstance._dataController._columnsInfo[areaIndex],\r\n          'text'\r\n        );\r\n        this.shownYears = uniqArrByText.map((t: any) => parseInt(t.text));\r\n        // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists\r\n        if (yearField[0].sortOrder === 'desc') {\r\n          pivotFridDataSource.field(this.yearDataFieldName, {\r\n            sortOrder: 'asc',\r\n          });\r\n          pivotFridDataSource.load();\r\n        }\r\n        if (!lodash.isEqual(this.shownYears, this.shownYearsPrev)) {\r\n          this.shownYearsPrev = this.shownYears;\r\n          pivotFridDataSource.load();\r\n        }\r\n      }\r\n\r\n      // in case user is NOT admin and has disable automatic saving state or remember latest state\r\n      else if (!isChangeAutoSaveStatus) {\r\n        if (this.stateData.settings.rememberLatestState == undefined) {\r\n          this.stateData.settings.rememberLatestState =\r\n            this.pivotGridOptions.canSaveUserState;\r\n        }\r\n        if (this.stateData.settings.rememberLatestState == false) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setPivotState(\r\n            this.viewId,\r\n            0,\r\n            this.isAdmin,\r\n            JSON.stringify(this.stateData)\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (\r\n                data &&\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions &&\r\n                this.isAdmin\r\n              ) {\r\n                this.alertService.info(\r\n                  'The system will remember the last state!'\r\n                );\r\n                // after save state, save also settings\r\n                this.saveSettings(this.viewId, this.pivotGridOptions);\r\n                // set can save default state to false\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      return this.stateData.state;\r\n    }\r\n  }\r\n\r\n  deleteCustomState() {\r\n    this.adminSetNewState = false;\r\n    if (this.viewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deletePivotState(this.viewId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            // finally read all data again\r\n            // this.readPivotOptionsAndData();\r\n            // this.readPivotDataFromApi();\r\n            const stateData = new UserStateAndSetttings();\r\n\r\n            this.directDatasourceRenderPivot(stateData);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveSettings(\r\n    currentlySelectedViewId: number,\r\n    optionsDataSource: PivotGridOptions\r\n  ): void {\r\n    let saveResult = false;\r\n    const optionsDataSourceTemp = { ...optionsDataSource };\r\n    optionsDataSourceTemp.pivotGridSource.fields =\r\n      optionsDataSourceTemp.pivotGridSource.fields.filter(\r\n        (f) => !f.isCalculated\r\n      );\r\n    // set store to empty, system will read fresh data from backend next time\r\n    optionsDataSourceTemp.pivotGridSource.store = [];\r\n  }\r\n\r\n  readPivotDataFromApi() {\r\n    this.isLoadingService.add();\r\n    this.yearDataFieldName = 'Year';\r\n    this.studyService\r\n      .getPreviewStudyData(\r\n        this.studyType,\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId,\r\n        typeof this.currencyDropdownSelected !== 'undefined'\r\n          ? this.currencyDropdownSelected.Id\r\n          : 0,\r\n        typeof this.unitOfMassDropdownSelected !== 'undefined'\r\n          ? this.unitOfMassDropdownSelected.Id\r\n          : 0,\r\n        typeof this.currencyConversionTypeSelected !== 'undefined'\r\n          ? this.currencyConversionTypeSelected\r\n          : 0\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyDataObj = res.Data;\r\n\r\n            const studyData =\r\n              studyDataObj[`${this.getDataFieldName(this.studyType)}`];\r\n\r\n            const previewData: any[] = [];\r\n            let index = 0;\r\n            studyData.map((item: any, i: number) => {\r\n              this.volumeYears.map((d: any) => {\r\n                this.gridFields.map((field: any) => {\r\n                  if (typeof previewData[index] === 'undefined') {\r\n                    previewData[index] = {};\r\n                  }\r\n                  previewData[index][field.dataField] = item[field.dataField];\r\n                  if (field.dataField === 'Year') {\r\n                    previewData[index][field.dataField] = d.year;\r\n                  }\r\n                  if (\r\n                    field.dataField === 'Sales' ||\r\n                    field.dataField === 'Value'\r\n                  ) {\r\n                    previewData[index][field.dataField] = item[d.field];\r\n                  }\r\n                });\r\n                index++;\r\n              });\r\n            });\r\n\r\n            this.previewData = previewData;\r\n\r\n            // this.pivotGridDataSource = new PivotGridDataSource({\r\n            //   store: this.previewData,\r\n            //   fields: this.gridFields,\r\n            // });\r\n            if (typeof this.pivotGridOptions !== 'undefined') {\r\n              this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n              this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n\r\n              this.pivotGridDataSource = new PivotGridDataSource(\r\n                this.pivotGridOptions.pivotGridSource as any\r\n              );\r\n            }\r\n\r\n            this.fillPivot(this.pivotGridOptions, this.previewData);\r\n            // when pivot data is loaded allow with small delay save state to the database\r\n            setTimeout(() => {\r\n              this.canCallSaveState = true;\r\n            }, 300);\r\n\r\n            // console.log(this.previewData);\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const errorShow =\r\n            typeof err.error !== 'undefined'\r\n              ? err.error\r\n              : 'Something went wrong. Please try again later.';\r\n          this.alertService.danger(errorShow);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataFieldName(fieldName: string) {\r\n    if (fieldName == this.studyDataUrlEnum.SHC_PT_SALES) {\r\n      return 'ProductTypeSalesSHC';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_FC_SALES) {\r\n      return 'ForecastSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_PC_SALES) {\r\n      return 'ProductClassificationSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_CB_SALES) {\r\n      return 'CompanyBrandSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_OS_SALES) {\r\n      return 'OutletSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_IR_SALES) {\r\n      return 'IndustryRevenues';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_SC_SALES) {\r\n      return 'SalonCount';\r\n    } else {\r\n      return 'dataItems';\r\n    }\r\n\r\n    return fieldName;\r\n  }\r\n\r\n  onOptionChanged(e: any) {}\r\n\r\n  onInitialized(e: any) {}\r\n\r\n  cellPrepared(e: any) {\r\n    // customize change % columns captions\r\n    // console.log(this.stateData?.settings.changePercentState.computingType);\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {\r\n      if (\r\n        e.cell.text &&\r\n        e.cell.text.startsWith(CalculatedFieldType.changePercent)\r\n      ) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex].toString() +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex].toString();\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n      //customize cagr columns captions\r\n      if (e.cell.text && e.cell.text.startsWith(CalculatedFieldType.cagr)) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex] +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex];\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.area === 'data') {\r\n      if (e.cell.value) {\r\n        e.cell.value.hasCd &&\r\n          e.cellElement.classList.add('pivot-grid-cell-has-cd');\r\n      }\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource &&\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n    ) {\r\n      const calculatedFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) =>\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.changePercent ||\r\n            f.calculatedFieldType === CalculatedFieldType.cagr\r\n        );\r\n      for (const calculatedField of calculatedFields) {\r\n        this.addCloseButtonToCalculatedField(\r\n          calculatedField.id,\r\n          calculatedField.calculatedFieldType\r\n        );\r\n      }\r\n    }\r\n\r\n    // change style for no data message\r\n    const noDataElement = e.component\r\n      .element()\r\n      .querySelector('.dx-pivotgrid-nodata');\r\n    if (noDataElement) {\r\n      setTimeout(() => {\r\n        if (this.pivotGridNoDataMessage) {\r\n          noDataElement.classList.add('noDataMessage');\r\n        } else {\r\n          noDataElement.classList.remove('noDataMessage');\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    if (this.pivotGrid && this.stateData && this.stateData.state) {\r\n      // Allow next rows if you want to enable disabling pivot during waiting for component response\r\n      //this.pivot.disabled = true;\r\n      // not allow to user change state too fast, pivot component needs some time to save emit state\r\n      //setTimeout(() => { this.pivot.disabled = false; }, 1000)\r\n    }\r\n  }\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    // this.pivot.disabled = true;\r\n    this.customizeContextMenu(e);\r\n\r\n    //if (e.area == \"row\" || e.area == \"column\") {\r\n    //    let id = e.columnIndex + \"\" + e.rowIndex;\r\n    //    let tooltip = $(\"<span></span>\").append($(\"<span id='\" + id + \"'></span>\").html(\"\")).appendTo(e.cellElement);\r\n    //    let field = $(\"#\" + id).closest('td');\r\n    //    field.attr('title', e.cell.text);\r\n    //}\r\n  }\r\n\r\n  customizeContextMenu(e: any): void {\r\n    this.updateDefaultContextMenuTextsAndIcons(e);\r\n    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Delete Calculated Field',\r\n        icon: 'fa fa-trash-alt',\r\n        onItemClick: () => {\r\n          const fieldToDelete = e.field as PivotGridField;\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (fieldToDelete.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n          this.deleteCalculatedField(e.field.id);\r\n        },\r\n      });\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Edit Calculated Field',\r\n        icon: 'fa fa-pencil-alt',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (e.field.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.isPercentOfTotalPopup = true;\r\n                this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n                  undefined || '';\r\n                this.pivotSummaryDisplayModesSubtotals[0].id =\r\n                  this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                    ? 'percentOfColumnTotal'\r\n                    : 'percentOfRowTotal';\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.isPercentOfChangePopup = true;\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.isCagrPopup = true;\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let openMenuItems = [];\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencySelection) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-money',\r\n        text: 'Change Currency',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencySelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencyConversion) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-exchange-alt',\r\n        text: 'Constant',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencyConversionSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfVolume) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-fill-drip',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('massUnitSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfMass) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-balance-scale',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('volumeUnitSelector');\r\n        },\r\n      });\r\n    }\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Reset to Default',\r\n      icon: 'fas fa-sync-alt',\r\n      onItemClick: () => {\r\n        this.deleteCustomState();\r\n      },\r\n    });\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Adjust Parameters',\r\n      icon: 'fa fa-sliders-h',\r\n      items: openMenuItems,\r\n    });\r\n\r\n    if (\r\n      e.field &&\r\n      e.field.area === 'data' &&\r\n      this.enabledInContextMenu(e.field)\r\n    ) {\r\n      let calculatedFieldsItems: any[] = [];\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfTotal) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.percentOfTotal,\r\n          onItemClick: () => {\r\n            this.isPercentOfTotalPopup = true;\r\n            this.pivotSummaryDisplayModesSubtotals[0].id =\r\n              this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n                ? 'percentOfColumnTotal'\r\n                : 'percentOfRowTotal';\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.percentOfTotalState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.percentOfTotalState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfChange) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.changePercent,\r\n          onItemClick: () => {\r\n            this.isPercentOfChangePopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.changePercentState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.changePercentState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isCagr) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.cagr,\r\n          onItemClick: () => {\r\n            this.isCagrPopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.cagrState.dataField = e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.cagrState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Add Calculated Field',\r\n        icon: 'fa fa-calculator',\r\n        items: calculatedFieldsItems,\r\n      });\r\n    }\r\n    // show only case if exist two or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter((f) =>\r\n        (<any>Object).values(PivotGridDataFieldType).includes(f.dataFieldType)\r\n      ).length >= 2\r\n    ) {\r\n      const dataFieldsHeaders =\r\n        this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n          ? 'Rows'\r\n          : 'Columns';\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Show Data Field Headers in ' + dataFieldsHeaders,\r\n        icon: 'fa fa-table',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            this.stateData.settings.dataFieldArea =\r\n              this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                ? DataFieldArea.row\r\n                : DataFieldArea.column;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteCalculatedField(fieldId: number) {\r\n    this.pivotGridOptions?.pivotGridSource.fields.splice(\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n        .map((m) => m.id)\r\n        .indexOf(fieldId),\r\n      1\r\n    );\r\n    this.firstAvailableId--;\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.readPivotDataFromApi();\r\n    } else {\r\n      if (typeof this.pivotGridOptions !== 'undefined') {\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDefaultContextMenuTextsAndIcons(e: any) {\r\n    let rowName = undefined;\r\n    let rowCaption;\r\n    if (e.cell?.path) {\r\n      if (e.cell && e.area === 'row') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.rowFields[path].dataField;\r\n        rowCaption = e.rowFields[path].caption;\r\n      } else if (e.cell && e.area === 'column') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.columnFields[path].dataField;\r\n        rowCaption = e.columnFields[path].caption;\r\n      }\r\n      const expandAll = e.items.find((f: any) => f.text.includes('Expand All'));\r\n      if (expandAll) {\r\n        expandAll.icon = 'fas fa-plus';\r\n        expandAll.text = 'Expand' + ' ' + rowCaption;\r\n      }\r\n      const collapseAll = e.items.find((f: any) =>\r\n        f.text.includes('Collapse All')\r\n      );\r\n      if (collapseAll) {\r\n        collapseAll.icon = 'fas fa-minus';\r\n        collapseAll.text = 'Collapse' + ' ' + rowCaption;\r\n      }\r\n    }\r\n    const fieldChooser = e.items.find((f: any) =>\r\n      f.text.includes('Show Field Chooser')\r\n    );\r\n    if (fieldChooser) {\r\n      fieldChooser.text = 'FieldChooser Text';\r\n    }\r\n    const exportToExcel = e.items.find((f: any) =>\r\n      f.text.includes('Export to')\r\n    );\r\n    if (exportToExcel) {\r\n      exportToExcel.text = 'Export to excel';\r\n    }\r\n    const sorts = e.items.filter((f: any) => f.text.includes('Sort'));\r\n    if (sorts) {\r\n      for (let sort of sorts) {\r\n        sort.icon = 'fas fa-sort';\r\n      }\r\n    }\r\n  }\r\n\r\n  enabledInContextMenu(field: any): boolean {\r\n    if (field.dataFieldType === PivotGridDataFieldType.AvgPrice) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addCloseButtonToCalculatedField(fieldId: number, datafieldType: string) {\r\n    const calculatedFieldObj = $(\r\n      \".dx-area-field-content:contains('\" + datafieldType + \"')\"\r\n    ).append(\r\n      \"<i id='\" +\r\n        Common.removeAllSpaces(datafieldType) +\r\n        \"' class='closeButton fas fa-times-circle'></i>\"\r\n    );\r\n\r\n    calculatedFieldObj\r\n      .parent()\r\n      .parent()\r\n      .css('padding-right', '0')\r\n      .css('margin-right', '0 !important');\r\n\r\n    calculatedFieldObj\r\n      .children()\r\n      .off()\r\n      .on('click', () => {\r\n        if (typeof this.stateData !== 'undefined') {\r\n          switch (datafieldType) {\r\n            case CalculatedFieldType.percentOfTotal:\r\n            case CalculatedFieldType.percentOfGrandTotal:\r\n              this.stateData.settings.percentOfTotalState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.changePercent:\r\n              this.stateData.settings.changePercentState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.cagr:\r\n              this.stateData.settings.cagrState.isSet = false;\r\n              break;\r\n          }\r\n        }\r\n        this.deleteCalculatedField(fieldId);\r\n      });\r\n  }\r\n\r\n  currencySelectionChanged(currency: SEDataEntry) {\r\n    this.currencyDropdownSelected = currency;\r\n    // this.stateData.settings.currency = currency;\r\n    this.readPivotDataFromApi();\r\n    // // on currency change update % of total caption if exists\r\n    // const percentOfTotalField =\r\n    //   this.pivotGridOptions.pivotGridSource.fields.find(\r\n    //     (f) => f.calculatedFieldType === CalculatedFieldType.percentOfTotal\r\n    //   );\r\n    // if (percentOfTotalField) {\r\n    //   percentOfTotalField.caption = this.getCaptionForPercentOfTotal();\r\n    // }\r\n  }\r\n\r\n  currencyConversionSelectionChanged(\r\n    currencyConversionType: CurrencyConversionTypeEnum\r\n  ) {\r\n    this.currencyConversionTypeSelected = currencyConversionType;\r\n    // this.stateData.settings.currencyConversionType = currencyConversionType;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  massUnitSelectionChanged(unitOfMass: SEDataEntry) {\r\n    this.unitOfMassDropdownSelected = unitOfMass;\r\n    // this.stateData.settings.unitOfMass = unitOfMass;\r\n    this.readPivotDataFromApi();\r\n  }\r\n\r\n  getUserSettings() {\r\n    const userSettings = {\r\n      currency: {\r\n        Id: this.selectedCurrency.Id,\r\n        Code: this.selectedCurrency.CurrencyCode,\r\n        Name: this.selectedCurrency.CurrencyName,\r\n      },\r\n      currencyConversionType: 1,\r\n      unitOfMass: { Id: 103, Name: 'Thousand Lbs' },\r\n      unitOfMeasure: { Id: 101, Name: 'Metric Tonnes' },\r\n      unitOfVolume: { Id: 7, Name: 'Quart (US)' },\r\n      selectedYear: {\r\n        PeriodKey: this.currentYear,\r\n        Name: this.currentYear.toString(),\r\n      },\r\n      percentOfTotalState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        basedOn: 'Subtotals',\r\n        summaryDisplayMode: 'percentOfColumnTotal',\r\n      },\r\n      changePercentState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'Previous (Shown) Year',\r\n      },\r\n      cagrState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'First (Shown) Year',\r\n      },\r\n      dataFieldArea: 'column',\r\n      userChartSetting: {\r\n        dataFieldsDisplayMode: 'singleAxis',\r\n        chartType: 'Column',\r\n      },\r\n      isReducedDataSource: false,\r\n      rememberLatestState: true,\r\n    };\r\n\r\n    return userSettings;\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.getUserSettings();\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    const menuSettings = this.pivotGridOptions?.settings?.menuSettings;\r\n    const pivotFields = this.pivotGridDataSource.fields();\r\n    const userSettings = this.getUserSettings();\r\n    let finalData;\r\n    if (this.previewData[0].hasOwnProperty('Year')) {\r\n      finalData = this.previewData.sort((a, b) => a.Year - b.Year);\r\n    } else {\r\n      finalData = this.previewData;\r\n    }\r\n    this.studyService\r\n      .exportToExcel(\r\n        finalData,\r\n        pivotFields,\r\n        userSettings,\r\n        title,\r\n        menuSettings,\r\n        0\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          let fileName = 'PivotTest';\r\n          if (title.length > 3) {\r\n            fileName = title.split(' ').join('');\r\n            fileName = fileName.split('-').join('_');\r\n          }\r\n          var file = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n          var fileURL = URL.createObjectURL(file);\r\n          let a = document.createElement('a');\r\n          document.body.appendChild(a);\r\n          a.style.display = 'none';\r\n          a.href = fileURL;\r\n          a.target = '_blank';\r\n          a.download = `${fileName}.xlsx`;\r\n          a.click();\r\n          a.remove();\r\n          this.studyService.changeExcelLoading(false);\r\n        },\r\n        (error) => {\r\n          this.studyService.changeExcelLoading(false);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  exportToCvs() {\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    this.studyService.exportToCsv(this.previewData, fileName);\r\n  }\r\n\r\n  exportToShanptshot() {\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet('Main sheet');\r\n    exportPivotGrid({\r\n      component: this.pivotGrid?.instance,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        const excelCell = options;\r\n        excelCell.excelCell.font = { name: 'Calibri', size: 11 };\r\n        excelCell.excelCell.alignment = { horizontal: 'left', vertical: 'top' };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer: BlobPart) {\r\n        saveAs(\r\n          new Blob([buffer], { type: 'application/octet-stream' }),\r\n          fileName + '.xlsx'\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  fillPivot(pivotGridOptions: PivotGridOptions, pivotData: any) {\r\n    this.saveStateEnabled = false;\r\n    const selectedYear = this.stateData\r\n      ? this.stateData.settings.selectedYear\r\n      : this.currentYear;\r\n\r\n    if (pivotGridOptions && this.stateData?.settings) {\r\n      // If is visible like default, add % of total to pivot\r\n      if (this.stateData.settings.percentOfTotalState.isSet) {\r\n        this.addPercentOfTotalsToPivot(true);\r\n      }\r\n      // If is visible like default, add change % to pivot\r\n      if (this.stateData.settings.changePercentState.isSet) {\r\n        this.addPrecentOfChangeToPivot(true);\r\n      }\r\n      // If is visible like default, add CAGR to pivot\r\n      if (this.stateData.settings.cagrState.isSet) {\r\n        this.addCAGRToPivot(true);\r\n      }\r\n\r\n      const pivotGridSource = new PivotGridSource();\r\n\r\n      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;\r\n      pivotGridSource.store = pivotData;\r\n      // make copy of datasource without reference to old object\r\n      let sourceCopy = lodash.cloneDeep(pivotGridSource);\r\n      // if administrator set default sorting to true do not use any special sorting\r\n      if (!pivotGridOptions.settings.useDefaultSorting) {\r\n        // if some special sorting is applied\r\n        if (\r\n          pivotGridOptions.settings.specialSorting &&\r\n          pivotGridOptions.settings.specialSorting.length\r\n        ) {\r\n          for (let specialSorting of pivotGridOptions.settings.specialSorting) {\r\n            if (specialSorting.fieldName) {\r\n              let orderAray: any[] = [];\r\n              if (pivotData) {\r\n                let rowData = 0;\r\n                for (let row of pivotData) {\r\n                  // if (row.Year == selectedYear.PeriodKey) {\r\n                  // in case value datafield is not exists, must exists unit\r\n                  rowData = row.Value === undefined ? row.Unit : row.Value;\r\n                  if (\r\n                    orderAray.some(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    )\r\n                  ) {\r\n                    orderAray.find(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    ).valueSum += rowData;\r\n                  } else {\r\n                    orderAray.push({\r\n                      field: row[specialSorting.fieldName],\r\n                      valueSum: rowData,\r\n                    });\r\n                  }\r\n                  // }\r\n                }\r\n                orderAray = orderAray\r\n                  .sort((a, b) => b.valueSum - a.valueSum)\r\n                  .map((m) => m.field);\r\n                orderAray.forEach((item: string, index: number) => {\r\n                  if (item.startsWith(specialSorting.beginningWith)) {\r\n                    orderAray.push(orderAray.splice(index, 1)[0]);\r\n                  }\r\n                });\r\n                const sortingField = sourceCopy.fields.find(\r\n                  (f) => f.dataField === specialSorting.fieldName\r\n                );\r\n                if (sortingField) {\r\n                  sortingField.sortOrder = 'asc';\r\n                  sortingField.sortingMethod = (b: any, a: any) => {\r\n                    // if (!this.isHeaderFilterLoading) {\r\n                    //   for (const item of orderAray) {\r\n                    //     if (a.value === item) {\r\n                    //       return 1;\r\n                    //     }\r\n                    //     if (b.value === item) {\r\n                    //       return -1;\r\n                    //     }\r\n                    //   }\r\n                    // }\r\n                    return b.value.localeCompare(a.value);\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this.applySortingRolesByYear();\r\n        }\r\n      }\r\n      if (this.pivotGridDataSource) {\r\n        this.pivotGridDataSource.dispose();\r\n      }\r\n\r\n      // check if source contains dataType property and set visibility to false\r\n      if (\r\n        pivotGridSource.store &&\r\n        pivotGridSource.store.length &&\r\n        pivotGridSource.store[0].DataType\r\n      ) {\r\n        let dataType = sourceCopy.fields.filter(\r\n          (d) => d.dataField === 'DataType'\r\n        );\r\n        dataType[0].visible = false;\r\n      }\r\n\r\n      // check all datafields if contains an exception in calculating\r\n      const allDatafields = sourceCopy.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      );\r\n\r\n      for (let field of allDatafields) {\r\n        let newField = this.returnSpecialSumamryField(field);\r\n        if (newField) {\r\n          sourceCopy.fields.push(newField);\r\n          field.visible = false;\r\n        }\r\n      }\r\n\r\n      // remove unused properties\r\n      for (let field of sourceCopy.fields) {\r\n        // remove group properties when group is empty\r\n        if (field.groupName == '') {\r\n          // delete field.groupName;\r\n          // delete field.groupIndex;\r\n        }\r\n        // in case fileld is grouped field parse index to int\r\n        else if (field.groupName && field.groupName.length > 0) {\r\n          let groupIndex: number = field.groupIndex\r\n            ? parseInt(field.groupIndex.toString())\r\n            : 0;\r\n          field.groupIndex = groupIndex;\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof this.pivotGridOptions !== 'undefined' &&\r\n        this.pivotGridOptions.settings.groupedFields\r\n      ) {\r\n        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {\r\n          let field = {\r\n            groupName: groupedField.groupName,\r\n            area: groupedField.area,\r\n          };\r\n          sourceCopy.fields.push(field as PivotGridField);\r\n        }\r\n      }\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(sourceCopy as any);\r\n\r\n      // this solves alphabetical filtering in filters\r\n      setTimeout(() => {\r\n        const source = this.pivotGrid?.instance.getDataSource();\r\n        const getFieldValues = (source as any).getFieldValues;\r\n        this.isHeaderFilterLoading = false;\r\n        let that = this;\r\n        (source as any).getFieldValues = function () {\r\n          that.isHeaderFilterLoading = true;\r\n          return getFieldValues.apply(this, arguments).always(function () {\r\n            that.isHeaderFilterLoading = false;\r\n          });\r\n        };\r\n      }, 1);\r\n\r\n      CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);\r\n\r\n      if (\r\n        pivotGridOptions.settings &&\r\n        (pivotGridOptions.settings.menuSettings.isChart ||\r\n          pivotGridOptions.settings.charts.isVisible)\r\n      ) {\r\n        // this.initChart();\r\n      }\r\n    }\r\n    //cutomize texts in pivot\r\n    // this.updateDefaultPivotTexts();\r\n    // apply special filtering\r\n    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {\r\n    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);\r\n    //}\r\n\r\n    setTimeout(() => {\r\n      this.saveStateEnabled = true;\r\n    }, 1);\r\n  }\r\n\r\n  returnSpecialSumamryField(fieldOriginal: PivotGridField) {\r\n    if (fieldOriginal.summaryType === 'range') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption || '';\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.dataField = fieldOriginal.dataField || '';\r\n      fieldNew.calculateCustomSummary = (e: any) =>\r\n        this.calculateSummaryValueRange(e, fieldOriginal);\r\n      fieldNew.customizeText = (e: any) => this.customizeRangeText(e);\r\n      fieldNew.isCalculated = true;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.range;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else if (fieldOriginal.summaryType === 'sumCdOd') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption;\r\n      fieldNew.calculateCustomSummary = (options: any) =>\r\n        this.calculateSummaryValueCdOd(options, fieldOriginal);\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.isCalculated = false;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.none;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueRange(e: any, field: PivotGridField) {\r\n    const valueNearZero = Number.EPSILON;\r\n    switch (e.summaryProcess) {\r\n      case 'start':\r\n        e.totalValue = 0;\r\n        e.values = [0, 0];\r\n        break;\r\n      case 'calculate':\r\n        if (e.value != -1.7976931348623157e308) {\r\n          if (!e.values[0] || !e.values[1]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value < e.values[0]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value > e.values[1]) {\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n        }\r\n        break;\r\n      case 'finalize':\r\n        let min = e.values[0]\r\n          ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        let max = e.values[1]\r\n          ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed(\r\n              field.format?.precision\r\n            )\r\n          : 0;\r\n        // if (\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find(\r\n        //     (v) => v === Number(min)\r\n        //   ) ||\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))\r\n        // ) {\r\n        //   ErrorHelper.informAdministrator(\r\n        //     this.appCommonDataService,\r\n        //     'Unhandled range value - (' +\r\n        //       min +\r\n        //       ')(' +\r\n        //       max +\r\n        //       ') ' +\r\n        //       Common.objToString(this.requestedView) +\r\n        //       'Environment: ' +\r\n        //       Common.objToString(\r\n        //         this.appEnvironmentData.getEnvironmentSettings()\r\n        //       ) +\r\n        //       ' User: ' +\r\n        //       Common.objToString(this.sharedService.getUserData())\r\n        //   );\r\n        // }\r\n        if (min === max) {\r\n          e.totalValue = min;\r\n        } else if (!min) {\r\n          e.totalValue = max;\r\n        } else {\r\n          e.totalValue = min + ' - ' + max;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  customizeRangeText(e: any) {\r\n    if (e.value === undefined) {\r\n      return SpecialValueType?.EmDash;\r\n    } else {\r\n      return e.value;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueCdOd(options: any, field: PivotGridField) {\r\n    switch (options.summaryProcess) {\r\n      case 'start':\r\n        options.totalValue = {\r\n          value: 0,\r\n          hasCd: false,\r\n          valueOf() {\r\n            return this.value;\r\n          },\r\n          toString() {\r\n            return this.value.toString();\r\n          },\r\n          indexOf() {\r\n            const stringValue = this.toString();\r\n            return stringValue.indexOf.apply(this, arguments);\r\n          },\r\n        };\r\n        break;\r\n      case 'calculate':\r\n        options.totalValue.value += options.value[field.dataField] || 0;\r\n        options.totalValue.hasCd =\r\n          options.totalValue.hasCd || options.value.DataType === 'cd';\r\n        break;\r\n      case 'finalize':\r\n        let totalValue = options.totalValue;\r\n        totalValue.value = (totalValue.value as number)\r\n          .toFixed(field.format?.precision)\r\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        options.totalValue = totalValue;\r\n        break;\r\n    }\r\n  }\r\n\r\n  applySortingRolesByYear() {\r\n    this.yearDataFieldName = 'Year';\r\n    setTimeout(() => {\r\n      const pivotGridDataSource: any = this.pivotGrid?.instance.getDataSource();\r\n      const columnFields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'column'\r\n      );\r\n      const datafields = pivotGridDataSource._fields.filter(\r\n        (f: any) => f.area === 'data'\r\n      );\r\n      const yearFieldOnFirstPositon = columnFields.filter(\r\n        (f: any) => f.areaIndex === 0 && f.dataField === this.yearDataFieldName\r\n      );\r\n\r\n      // apply this role only in case, year field is on first column position\r\n      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {\r\n        const rowFields = pivotGridDataSource._fields.filter(\r\n          (f: any) => f.area === 'row'\r\n        );\r\n        const selectedYear = this.currentYear;\r\n        // const selectedYear = this.stateData\r\n        //   ? this.stateData.settings.selectedYear.PeriodKey\r\n        //   : 2021;\r\n        if (selectedYear) {\r\n          for (const field of rowFields) {\r\n            pivotGridDataSource.field(field.dataField, {\r\n              sortBySummaryField: datafields\r\n                ? datafields.filter((f: any) => f.areaIndex === 0)[0].dataField\r\n                : undefined,\r\n              sortBySummaryPath: [selectedYear],\r\n              sortOrder: 'desc',\r\n            });\r\n          }\r\n          pivotGridDataSource.load();\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setCalculatedFieldFromTopMenu(value: any) {\r\n    const type = value.itemName;\r\n    const dataField = value.dataField;\r\n    switch (type) {\r\n      case CalculatedFieldType.percentOfTotal:\r\n        this.isPercentOfTotalPopup = true;\r\n        this.pivotSummaryDisplayModesSubtotals[0].id =\r\n          this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n            ? 'percentOfColumnTotal'\r\n            : 'percentOfRowTotal';\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.percentOfTotalState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.changePercent:\r\n        this.isPercentOfChangePopup = true;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.changePercentState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.cagr:\r\n        this.isCagrPopup = true;\r\n        // this.stateData?.settings.cagrState.dataField = dataField;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.cagrState.dataField = dataField;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // %of totals\r\n  summaryDisplayModeItems: any;\r\n  percentOfTotalBasedOn: string = 'Subtotals';\r\n  percentInDirection: string = '';\r\n  onBasedOnChange(isInit: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.basedOn =\r\n        this.percentOfTotalBasedOn;\r\n    }\r\n\r\n    this.summaryDisplayModeItems =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? this.pivotSummaryDisplayModesSubtotals\r\n        : this.pivotSummaryDisplayModesGrandTotals;\r\n    if (isInit === false && typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';\r\n    }\r\n  }\r\n\r\n  percentOfChangeComputeType: string = '';\r\n  onComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.changePercentState.computingType =\r\n        this.percentOfChangeComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.changePercentState.computingType =\r\n    //     ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  cagrComputeType: string = '';\r\n  onCagrComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.computingType = this.cagrComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  addPercentOfTotalsToPivot(iSCallFromFillPivot: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n        this.percentInDirection;\r\n    }\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotArray(iSCallFromFillPivot: boolean) {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of total exists\r\n      const percentOfTotal = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) =>\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal\r\n      );\r\n\r\n      if (percentOfTotal && this.pivotGridDataSource) {\r\n        fieldId = percentOfTotal.id;\r\n        percentOfTotal.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        percentOfTotal.caption = this.getCaptionForPercentOfTotal();\r\n        percentOfTotal.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        percentOfTotal.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridDataSource.field(percentOfTotal.id, {\r\n          summaryDisplayMode: percentOfTotal.summaryDisplayMode,\r\n          caption: percentOfTotal.caption,\r\n          calculatedFieldType: percentOfTotal.calculatedFieldType,\r\n          dataField:\r\n            this.stateData?.settings.percentOfTotalState.dataField || 'Value',\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        // CommonHelper.updatePlaceholders(\r\n        //   this.pivotGridDataSource,\r\n        //   this.stateData\r\n        // );\r\n      } else {\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions?.pivotGridSource.fields.length || 0;\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfTotal();\r\n        field.dataField =\r\n          this.stateData?.settings.percentOfTotalState.dataField || 'Value';\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = undefined;\r\n        field.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            1,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n\r\n        if (\r\n          !iSCallFromFillPivot &&\r\n          typeof this.pivotGridOptions !== 'undefined'\r\n        ) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfTotalPopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.percentOfTotalState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotCube(iSCallFromFillPivot: boolean) {\r\n    this.removeAllHiddenCalculatedFields();\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForPercentOfTotal();\r\n    field.dataField =\r\n      this.stateData?.settings.percentOfTotalState.dataField || '';\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = undefined;\r\n    field.summaryDisplayMode =\r\n      this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? CalculatedFieldType.percentOfTotal\r\n        : CalculatedFieldType.percentOfGrandTotal;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isPercentOfTotalPopup = false;\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  removeAllHiddenCalculatedFields() {\r\n    if (this.stateData?.state && this.pivotGridDataSource) {\r\n      this.stateData.state.fields = this.stateData.state.fields.filter(\r\n        (a: any) => a.area !== undefined\r\n      );\r\n      this.pivotGridDataSource.state(this.stateData.state);\r\n    }\r\n  }\r\n\r\n  getCaptionForPercentOfTotal(): string {\r\n    let caption = '';\r\n    //check if exist 2 or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions?.pivotGridSource.fields.filter(\r\n        (f: any) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfTotaldatafield =\r\n        this.stateData?.settings.percentOfTotalState.dataField;\r\n      let currentDatafieldCaption = '';\r\n      if (this.pivotGridOptions.settings.isCube) {\r\n        currentDatafieldCaption =\r\n          // this.pivotGridOptions.pivotGridSource.fields.find(\r\n          //   (f) => f.dataField === percentOfTotaldatafield\r\n          // ).caption;\r\n          'Cube Caption';\r\n      } else {\r\n        if (typeof this.pivotGridOptions !== 'undefined') {\r\n          const fieldCaption =\r\n            this.pivotGridOptions.pivotGridSource.fields.find(\r\n              (f: any) => f.dataFieldType === percentOfTotaldatafield\r\n            );\r\n          if (fieldCaption) {\r\n            currentDatafieldCaption = fieldCaption.caption;\r\n          }\r\n        }\r\n      }\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption\r\n          : CalculatedFieldType.percentOfGrandTotal +\r\n            ' ' +\r\n            currentDatafieldCaption;\r\n    } else {\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal\r\n          : CalculatedFieldType.percentOfGrandTotal;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addPrecentOfChangeToPivot(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of change exists\r\n      const percentOfChange =\r\n        this.pivotGridOptions?.pivotGridSource.fields.find(\r\n          (f) => f.calculatedFieldType === CalculatedFieldType.changePercent\r\n        );\r\n      if (percentOfChange && this.pivotGridDataSource) {\r\n        fieldId = percentOfChange.id;\r\n        this.pivotGridDataSource.field(percentOfChange.id, {\r\n          caption: this.getCaptionForPercentOfChange(),\r\n          dataField:\r\n            this.stateData?.settings.changePercentState.dataField || 'Value',\r\n          calculateSummaryValue: (e: any) =>\r\n            this.calculateSummaryValuePercentOfChange(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfChange();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.changePercentState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValuePercentOfChange(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.changePercent;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfChangePopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.changePercentState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSummaryValuePercentOfChange(e: any): any {\r\n    if (e.parent('column')) {\r\n      let base;\r\n      if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n      } else if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        let yearIndex = 0;\r\n        for (const index in e.parent('column').children()) {\r\n          if (\r\n            e\r\n              .parent('column')\r\n              .children()\r\n              [index].value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName)\r\n          ) {\r\n            yearIndex = parseInt(index);\r\n            break;\r\n          }\r\n        }\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const returnValue = e.value() / base.value() - 1;\r\n      return isNaN(returnValue) ||\r\n        (returnValue && returnValue.toString() === 'Infinity')\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCaptionForPercentOfChange() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfChangeDataField =\r\n        this.stateData?.settings.changePercentState.dataField;\r\n\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f: any) => f.dataFieldType === percentOfChangeDataField\r\n      );\r\n\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n\r\n      switch (percentOfChangeDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.changePercent;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.changePercent;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addCAGRToPivot(iSCallFromFillPivot: boolean): void {\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addCAGRToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addCAGRToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotArray(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case cagr exists, remove and recreate it (case for edit)\r\n      const cagr = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) => f.calculatedFieldType === CalculatedFieldType.cagr\r\n      );\r\n      if (cagr && this.pivotGridDataSource) {\r\n        fieldId = cagr.id;\r\n        this.pivotGridDataSource.field(cagr.id, {\r\n          dataField: this.stateData?.settings.cagrState.dataField || 'Value',\r\n          caption: this.getCaptionForCagr(),\r\n          calculateSummaryValue: (e: any) => this.calculateSummaryValueCagr(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForCagr();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField =\r\n          this.stateData?.settings.cagrState.dataField || 'Value';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValueCagr(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.cagr;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isCagrPopup = false;\r\n      if (this.stateData) this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotCube(iSCallFromFillPivot: boolean): void {\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForCagr();\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.dataField = this.stateData?.settings.cagrState.dataField || 'Value';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = (e: any) => this.calculateSummaryValueCagr(e);\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType = CalculatedFieldType.cagr;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isCagrPopup = false;\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n    if (!iSCallFromFillPivot) {\r\n      this.readPivotDataFromApi();\r\n    }\r\n  }\r\n\r\n  getCaptionForCagr() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const cagrDataField = this.stateData?.settings.cagrState.dataField;\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f) => f.dataField === cagrDataField\r\n      );\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n      switch (cagrDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.cagr;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.cagr;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  calculateSummaryValueCagr(e: any) {\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.parent('column') && shownYearsInPivot) {\r\n      let base;\r\n      let yearIndex = 0;\r\n      let prevYearIndex = 0;\r\n      for (const index in e.parent('column').children()) {\r\n        if (\r\n          e.parent('column').children()[index].value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName)\r\n        ) {\r\n          yearIndex = parseInt(index);\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n        prevYearIndex = 0;\r\n      } else if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();\r\n      const yearSpan =\r\n        shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];\r\n      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;\r\n      return isNaN(returnValue) || returnValue.toString() === 'Infinity'\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeAutoSaveStatus(statusValue: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.rememberLatestState = statusValue;\r\n    }\r\n    if (statusValue == false) {\r\n      this.alertService.info('The system will remember this state!');\r\n    } else {\r\n      this.alertService.info('The system will remember the last used state!');\r\n    }\r\n    this.canCallSaveState = true;\r\n    this.customSaveState(this.stateData?.state, true);\r\n  }\r\n}\r\n","<app-preview-top-menu\r\n  [setSelectedCurrency]=\"selectedCurrency\"\r\n  [pivotGridOptions]=\"pivotGridOptions\"\r\n  (currencySelectionChanged)=\"currencySelectionChanged($event)\"\r\n  (currencyConversionSelectionChanged)=\"\r\n    currencyConversionSelectionChanged($event)\r\n  \"\r\n  (massUnitSelectionChanged)=\"massUnitSelectionChanged($event)\"\r\n  (onExportToExcel)=\"exportToExcel()\"\r\n  (onExportToCvs)=\"exportToCvs()\"\r\n  (onExportSnapshot)=\"exportToShanptshot()\"\r\n  (calculatedFieldItemSelected)=\"setCalculatedFieldFromTopMenu($event)\"\r\n  (onChangeAutoSaveStatus)=\"onChangeAutoSaveStatus($event)\"\r\n></app-preview-top-menu>\r\n\r\n<dx-pivot-grid\r\n  id=\"pivotGrid\"\r\n  #pivotGrid\r\n  [allowSortingBySummary]=\"true\"\r\n  (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n  (onOptionChanged)=\"onOptionChanged($event)\"\r\n  (onInitialized)=\"onInitialized($event)\"\r\n  (onContentReady)=\"onContentReady($event)\"\r\n  (onCellPrepared)=\"cellPrepared($event)\"\r\n  [allowSorting]=\"true\"\r\n  [allowFiltering]=\"true\"\r\n  [allowExpandAll]=\"true\"\r\n  [showColumnGrandTotals]=\"false\"\r\n  [showRowGrandTotals]=\"true\"\r\n  [showRowTotals]=\"true\"\r\n  [showColumnTotals]=\"false\"\r\n  showTotalsPrior=\"none\"\r\n  [showBorders]=\"true\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n  [allowFiltering]=\"pivotGridOptions?.settings?.allowFiltering || false\"\r\n  [allowExpandAll]=\"pivotGridOptions?.settings?.allowExpandAll || false\"\r\n  [showBorders]=\"pivotGridOptions?.settings?.showBorders || false\"\r\n  [showColumnGrandTotals]=\"\r\n    pivotGridOptions?.settings?.showColumnGrandTotals || false\r\n  \"\r\n  [showRowGrandTotals]=\"pivotGridOptions?.settings?.showRowGrandTotals || false\"\r\n  [showRowTotals]=\"pivotGridOptions?.settings?.showRowTotals || false\"\r\n  [showColumnTotals]=\"pivotGridOptions?.settings?.showColumnTotals || false\"\r\n  [showTotalsPrior]=\"pivotGridOptions?.settings?.showTotalsPrior || ''\"\r\n  [dataFieldArea]=\"stateData?.settings?.dataFieldArea || ''\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n  <dxo-state-storing\r\n    [enabled]=\"saveStateEnabled\"\r\n    type=\"custom\"\r\n    [customSave]=\"customSaveState\"\r\n    [customLoad]=\"customLoadState\"\r\n    [savingTimeout]=\"300\"\r\n  >\r\n  </dxo-state-storing>\r\n</dx-pivot-grid>\r\n\r\n<!-- popup for % of total -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"250\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfTotalPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute '% Of Total':</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\">Based on</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"['Subtotals', 'Grand Totals']\"\r\n                [(value)]=\"percentOfTotalBasedOn\"\r\n                (onValueChanged)=\"onBasedOnChange(false)\"\r\n                (onInitialized)=\"onBasedOnChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"summaryDisplayModeItems\" class=\"dx-field\">\r\n            <div class=\"dx-field-label\">In Direction</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-select-box\r\n                [items]=\"summaryDisplayModeItems\"\r\n                displayExpr=\"name\"\r\n                valueExpr=\"id\"\r\n                [(value)]=\"percentInDirection\"\r\n              >\r\n              </dx-select-box>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                [disabled]=\"false\"\r\n                (onClick)=\"addPercentOfTotalsToPivot(false)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for % of change -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfChangePopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute change, %:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"percentOfChangeComputeType\"\r\n                (onValueChanged)=\"onComputeTypeChange(false)\"\r\n                (onInitialized)=\"onComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addPrecentOfChangeToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for CAGR -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isCagrPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute CAGR:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"cagrComputeType\"\r\n                (onValueChanged)=\"onCagrComputeTypeChange(false)\"\r\n                (onInitialized)=\"onCagrComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addCAGRToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\n\r\n@Component({\r\n  selector: 'app-show-initial-setup',\r\n  templateUrl: './show-initial-setup.component.html',\r\n  styleUrls: ['./show-initial-setup.component.css'],\r\n})\r\nexport class ShowInitialSetupComponent implements OnInit {\r\n  studySummaryDataObj: any = [];\r\n  @Input() set studySummaryData(data: any) {\r\n    this.studySummaryDataObj = new InitialSetup().deserialize(data);\r\n  }\r\n  constructor() {\r\n    // this.studySummaryData = new InitialSetup().deserialize(\r\n    //   this.studySummaryData\r\n    // );\r\n    // if (typeof this.studySummaryData.analystNameList !== 'undefined') {\r\n    //   this.analystNameList = this.studySummaryData.analystNameList.join(', ');\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"container-fluid my-4\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col\">\r\n      <div class=\"card\">\r\n        <!-- <div class=\"card-header\">\r\n          <h6 class=\"card-title\">Study Info</h6>\r\n        </div> -->\r\n        <div class=\"card-body p-2 small\">\r\n          <div *ngIf=\"studySummaryDataObj\" class=\"row\">\r\n            <div class=\"col\">\r\n              <div class=\"text-secondary\">Study Name:</div>\r\n              <div class=\"field-value\">{{ studySummaryDataObj.Name }}</div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"text-secondary\">Data Set:</div>\r\n              <div class=\"field-value\">\r\n                {{ studySummaryDataObj.StudyDataSetName }}\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"text-secondary\">Study Year:</div>\r\n              <div class=\"field-value\">{{ studySummaryDataObj.StudyYear }}</div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"text-secondary\">Project:</div>\r\n              <div class=\"field-value\">\r\n                {{ studySummaryDataObj.ProjectName }}\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"text-secondary\">Project Lead:</div>\r\n              <div class=\"field-value\">\r\n                {{ studySummaryDataObj.ProjectLead }}\r\n              </div>\r\n            </div>\r\n            <div class=\"col\">\r\n              <div class=\"text-secondary\">Analyst:</div>\r\n              <div\r\n                *ngIf=\"studySummaryDataObj.AnalystNameList\"\r\n                class=\"field-value\"\r\n              >\r\n                {{ studySummaryDataObj.AnalystNameList.join(', ') }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport PivotGridDataSource, {\n  Field,\n} from 'devextreme/ui/pivot_grid/data_source';\nimport { SpecialtyExcipientSaleItem } from 'src/model/specialtyExcipientSales.model';\n\n@Component({\n  selector: 'app-specialty-excipient-sales-preview',\n  templateUrl: './specialty-excipient-sales-preview.component.html',\n  styleUrls: ['./specialty-excipient-sales-preview.component.css'],\n})\nexport class SpecialtyExcipientSalesPreviewComponent implements OnInit {\n  @Input() studyData: SpecialtyExcipientSaleItem[] = [];\n  @Input() currentYear: number = 0;\n  @Input() previousYear: number = 0;\n\n  pivotGridDataSource: PivotGridDataSource;\n  gridFields: Field[] = [];\n\n  constructor() {\n    this.pivotGridDataSource = new PivotGridDataSource();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getPreviewData(this.studyData);\n  }\n\n  getPreviewData(studyData: SpecialtyExcipientSaleItem[]) {\n    const previewData: {\n      ExcipientCategory: string;\n      ExcipientGroup: string;\n      Excipient: string;\n      Supplier: string;\n      Year: number;\n      Sales: number;\n      Volume: number;\n      CAGR: number;\n    }[] = [];\n\n    studyData.map((item: SpecialtyExcipientSaleItem) => {\n      previewData.push({\n        ExcipientCategory: item.ExcipientCategoryName,\n        ExcipientGroup: item.ExcipientGroupName,\n        Excipient: item.ExcipientName,\n        Supplier: item.SupplierName,\n        Year: this.previousYear,\n        Sales: item.Value1,\n        Volume: item.Volume1,\n        CAGR: item.CAGR1,\n      });\n      previewData.push({\n        ExcipientCategory: item.ExcipientCategoryName,\n        ExcipientGroup: item.ExcipientGroupName,\n        Excipient: item.ExcipientName,\n        Supplier: item.SupplierName,\n        Year: this.currentYear,\n        Sales: item.Value2,\n        Volume: item.Volume2,\n        CAGR: item.CAGR2,\n      });\n    });\n\n    this.pivotGridDataSource = new PivotGridDataSource({\n      store: previewData,\n      fields: this.getGridFields(),\n    });\n  }\n\n  getGridFields() {\n    return (this.gridFields = [\n      {\n        dataField: 'ExcipientCategory',\n        area: 'row',\n        caption: 'Excipient Category',\n        dataType: 'string',\n      },\n      {\n        dataField: 'ExcipientGroup',\n        area: 'row',\n        caption: 'Excipient Group',\n        dataType: 'string',\n      },\n      {\n        dataField: 'Excipient',\n        area: 'row',\n        caption: 'Excipient',\n        dataType: 'string',\n      },\n      {\n        dataField: 'Supplier',\n        area: 'row',\n        caption: 'Supplier',\n        dataType: 'string',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Sales',\n        dataField: 'Sales',\n        dataFieldType: 'Sales',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'Volume',\n        dataField: 'Volume',\n        dataFieldType: 'Volume',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 6,\n        caption: 'CAGR(%)',\n        dataField: 'CAGR',\n        dataFieldType: 'CAGR',\n        width: 80,\n        dataType: 'number',\n        summaryType: 'sum',\n        summaryDisplayMode: 'none',\n        format: {\n          type: 'fixedPoint',\n          precision: 1,\n        },\n        area: 'data',\n      },\n      {\n        visible: true,\n        isCalculated: false,\n        calculatedFieldType: 'none',\n        id: 7,\n        caption: 'Year',\n        dataField: 'Year',\n        width: 30,\n        dataType: 'string',\n        summaryDisplayMode: 'none',\n        area: 'column',\n      },\n    ] as Field[]);\n  }\n}\n","<dx-pivot-grid\n  [allowSortingBySummary]=\"true\"\n  [allowSorting]=\"true\"\n  [allowFiltering]=\"true\"\n  [allowExpandAll]=\"true\"\n  [showColumnGrandTotals]=\"false\"\n  [showRowGrandTotals]=\"true\"\n  [showRowTotals]=\"true\"\n  [showColumnTotals]=\"false\"\n  showTotalsPrior=\"none\"\n  [showBorders]=\"true\"\n  [dataSource]=\"pivotGridDataSource\"\n  [fieldPanel]=\"{\n    showColumnFields: true,\n    showDataFields: true,\n    showFilterFields: true,\n    showRowFields: true,\n    allowFieldDragging: true,\n    visible: true\n  }\"\n  [fieldChooser]=\"{ enabled: true }\"\n>\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\n</dx-pivot-grid>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialtyExcipientItem } from 'src/model/avgPriceSE.model';\r\nimport { SEDataEntry } from 'src/model/dataEntrySE.model';\r\nimport {\r\n  SpecialtyExcipientSaleItem,\r\n  SpecialtyExcipientSales,\r\n} from 'src/model/specialtyExcipientSales.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-specialty-excipient-sales',\r\n  templateUrl: './specialty-excipient-sales.component.html',\r\n  styleUrls: ['./specialty-excipient-sales.component.css'],\r\n})\r\nexport class SpecialtyExcipientSalesComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  currentYear: number = 2022;\r\n  previousYear: number = 2019;\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  selectedDosageFormId: number = 0;\r\n  selectedDosageFormName: string = '';\r\n\r\n  isStudyEditable: boolean = false;\r\n\r\n  isManage: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: SpecialtyExcipientSaleItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n\r\n  selectedCurrency: any = {\r\n    CurrencyCode: 'USD',\r\n    Id: 27,\r\n    IsActive: true,\r\n    Name: 'United States Dollar',\r\n  };\r\n  selectedCurrencyCode: string = 'USD';\r\n  selectedVolumeUnitObj: any = {\r\n    Id: 106,\r\n    IsActive: true,\r\n    Name: 'Kg',\r\n    Rate: 1000,\r\n  };\r\n  selectedVolumeUnitId: number = 106;\r\n\r\n  selectedCurrencyCodeDefault: string = '';\r\n  previousSelectedCurrencyCode: string = '';\r\n\r\n  previousSelectedVolume: any;\r\n\r\n  currencies: SEDataEntry[] = [];\r\n  volumeUnits: SEDataEntry[] = [];\r\n\r\n  excipientCategories: SEDataEntry[] = [];\r\n  excipientGroups: SEDataEntry[] = [];\r\n  excipients: SEDataEntry[] = [];\r\n  suppliers: SEDataEntry[] = [];\r\n\r\n  currencyRates: any = {};\r\n\r\n  CalculatorId: number = 0;\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  allowedCols = ['Value2', 'Volume2', 'CAGR2'];\r\n\r\n  constructor(\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    if (this.isLoadingService.isLoading$()) {\r\n      this.isLoadingService.remove();\r\n    }\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      ExcipientCategory: [null, Validators.required],\r\n      ExcipientGroup: [null, Validators.required],\r\n      Excipient: [null, Validators.required],\r\n      Supplier: [null, Validators.required],\r\n      Currency: [null],\r\n      VolumeUnit: [null],\r\n      DosageForm: [null],\r\n      Sales: [null, Validators.required],\r\n      Volume: [null, Validators.required],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n    this.getDataRelations();\r\n    this.getCurrencies();\r\n    this.getVolumeUnits();\r\n    this.getExcipientCategory();\r\n    this.getExcipientGroups();\r\n    this.getExcipients();\r\n    this.getSuppliers();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSalesData();\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n\r\n        this.studyDataRelations = this.datRelationsData.find(\r\n          (item) =>\r\n            item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n        );\r\n\r\n        if (this.studyDataRelations) {\r\n          this.studyDataViewId = this.studyDataRelations.ViewId;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getCurrencies() {\r\n    this.sharedService\r\n      .getSEDataEntryData('Currencies')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.currencies = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getExcipientCategory() {\r\n    this.sharedService\r\n      .getSEDataEntryData('ExcipientCategories')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.excipientCategories = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getExcipientGroups() {\r\n    this.sharedService\r\n      .getSEDataEntryData('ExcipientGroups')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.excipientGroups = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getExcipients() {\r\n    this.sharedService\r\n      .getSEDataEntryData('Excipients')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.excipients = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getSuppliers() {\r\n    this.sharedService\r\n      .getSEDataEntryData('Suppliers')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.suppliers = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getCurrencyConversionRate(years: number[]) {\r\n    const p: any[] = [];\r\n    if (years.length > 0) {\r\n      years.map((year) => {\r\n        p.push({ key: 'Years', value: year });\r\n      });\r\n    }\r\n    this.sharedService\r\n      .getSEDataEntryData('CurrencyRates', p)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          res.Data.map((item: any) => {\r\n            if (typeof this.currencyRates[item.CurrencyCode] === 'undefined') {\r\n              this.currencyRates[item.CurrencyCode] = [];\r\n            }\r\n\r\n            this.currencyRates[item.CurrencyCode].push({\r\n              currencyCode: item.CurrencyCode,\r\n              Rate: item.Rate,\r\n              Year: item.Year,\r\n            });\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getVolumeUnits() {\r\n    this.sharedService\r\n      .getSEDataEntryData('VolumeUnits')\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.volumeUnits = res.Data as SEDataEntry[];\r\n        }\r\n      });\r\n  }\r\n\r\n  getSalesData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getSalesData(this.marketYearCategoryId, this.studyProjectMarketYearId)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            // console.log(res.Data);\r\n            const studyData = res.Data as SpecialtyExcipientSales;\r\n            this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n            this.studyData =\r\n              studyData.SpecialtyExcipientsSales as SpecialtyExcipientSaleItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              studyData.InitialSetup\r\n            );\r\n\r\n            this.CalculatorId = this.studySummary.CalculatorId || 0;\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            this.currentYear = currentYear;\r\n            this.previousYear = 0;\r\n\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              this.previousYear = item.LatestDataYear;\r\n              this.selectedCurrencyCode = item.CurrencyCode;\r\n              this.selectedVolumeUnitId = item.VolumeUnitId;\r\n\r\n              this.selectedDosageFormId = item.DosageFormId;\r\n              this.selectedDosageFormName = item.DosageFormName;\r\n\r\n              // this.CalculatorId = item.CalculatorId;\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    changelogObj[colValueArray[4]] = {};\r\n                    changelogObj[colValueArray[4]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.previewGridData.push({\r\n                ExcipientCategoryName: item.ExcipientCategoryName,\r\n                ExcipientGroupName: item.ExcipientGroupName,\r\n                ExcipientName: item.ExcipientName,\r\n                SupplierName: item.SupplierName,\r\n                Year: this.previousYear,\r\n                Value: item.Value1,\r\n                VolumeValue: item.Volume1,\r\n                CagrPer: item.CAGR1,\r\n              });\r\n\r\n              this.previewGridData.push({\r\n                ExcipientCategoryName: item.ExcipientCategoryName,\r\n                ExcipientGroupName: item.ExcipientGroupName,\r\n                ExcipientName: item.ExcipientName,\r\n                SupplierName: item.SupplierName,\r\n                Year: this.currentYear,\r\n                Value: item.Value2,\r\n                VolumeValue: item.Volume2,\r\n                CagrPer: item.CAGR2,\r\n              });\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.volumeYears.push({\r\n              field: `Value1`,\r\n              year: this.previousYear,\r\n              cagrField: 'CAGR1',\r\n              volumeField: 'Volume1',\r\n            });\r\n            this.volumeYears.push({\r\n              field: `Value2`,\r\n              year: this.currentYear,\r\n              cagrField: 'CAGR2',\r\n              volumeField: 'Volume2',\r\n            });\r\n\r\n            this.selectedCurrency = this.currencies.find(\r\n              (item) => item.CurrencyCode === this.selectedCurrencyCode\r\n            );\r\n\r\n            this.selectedCurrencyCodeDefault =\r\n              this.selectedCurrency.CurrencyCode;\r\n            this.previousSelectedCurrencyCode =\r\n              this.selectedCurrency.CurrencyCode;\r\n\r\n            this.selectedVolumeUnitObj = this.volumeUnits.find(\r\n              (item) => item.Id === this.selectedVolumeUnitId\r\n            );\r\n            this.previousSelectedVolume = this.selectedVolumeUnitObj;\r\n\r\n            this.getCurrencyConversionRate([\r\n              this.previousYear,\r\n              this.currentYear,\r\n            ]);\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  getGridFields() {\r\n    return [\r\n      {\r\n        dataField: 'ExcipientCategoryName',\r\n        area: 'row',\r\n        caption: 'Excipient Category',\r\n        dataType: 'string',\r\n        id: 0,\r\n      },\r\n      {\r\n        dataField: 'ExcipientGroupName',\r\n        area: 'row',\r\n        caption: 'Excipient Group',\r\n        dataType: 'string',\r\n        id: 1,\r\n      },\r\n      {\r\n        dataField: 'ExcipientName',\r\n        area: 'row',\r\n        caption: 'Excipient',\r\n        dataType: 'string',\r\n        id: 2,\r\n      },\r\n      {\r\n        dataField: 'SupplierName',\r\n        area: 'row',\r\n        caption: 'Supplier',\r\n        dataType: 'string',\r\n        id: 3,\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 4,\r\n        caption: 'Sales',\r\n        dataField: 'Value',\r\n        dataFieldType: 'Value',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 5,\r\n        caption: 'Volume',\r\n        dataField: 'VolumeValue',\r\n        dataFieldType: 'Volume',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 6,\r\n        caption: 'CAGR(%)',\r\n        dataField: 'CagrPer',\r\n        dataFieldType: 'CAGR',\r\n        width: 80,\r\n        dataType: 'number',\r\n        summaryType: 'sum',\r\n        summaryDisplayMode: 'none',\r\n        format: {\r\n          type: 'fixedPoint',\r\n          precision: 1,\r\n        },\r\n        area: 'data',\r\n      },\r\n      {\r\n        visible: true,\r\n        isCalculated: false,\r\n        calculatedFieldType: 'none',\r\n        id: 7,\r\n        caption: 'Year',\r\n        dataField: 'Year',\r\n        width: 30,\r\n        dataType: 'string',\r\n        summaryDisplayMode: 'none',\r\n        area: 'column',\r\n      },\r\n    ] as any[];\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    // this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    const selectedCurrency = this.currencies.find(\r\n      (item) => item.CurrencyCode === this.selectedCurrencyCode\r\n    );\r\n    this.newRowForm.get('Currency')?.setValue(selectedCurrency);\r\n\r\n    const selectedVolumeUnit = this.volumeUnits.find(\r\n      (item) => item.Id === this.selectedVolumeUnitId\r\n    );\r\n    this.newRowForm.get('Currency')?.setValue(selectedCurrency);\r\n    this.newRowForm.get('VolumeUnit')?.setValue(selectedVolumeUnit);\r\n\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: SpecialtyExcipientSaleItem = {\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      CurrencyCode: newRowData.Currency.CurrencyCode,\r\n      CurrencyId: newRowData.Currency.Id,\r\n      CurrencyName: newRowData.Currency.Name,\r\n      DosageFormId: this.selectedDosageFormId,\r\n      DosageFormName: this.selectedDosageFormName,\r\n      ExcipientCategoryId: newRowData.ExcipientCategory.Id,\r\n      ExcipientCategoryName: newRowData.ExcipientCategory.Name,\r\n      ExcipientGroupId: newRowData.ExcipientGroup.Id,\r\n      ExcipientGroupName: newRowData.ExcipientGroup.Name,\r\n      ExcipientId: newRowData.Excipient.Id,\r\n      ExcipientName: newRowData.Excipient.Name,\r\n      VolumeUnitId: newRowData.VolumeUnit.Id,\r\n      VolumeUnitName: newRowData.VolumeUnit.Name,\r\n      VolumeUnitRate: newRowData.VolumeUnit.Rate,\r\n      CAGR1: 0,\r\n      CAGR2: 0,\r\n      DataRelationId: 0,\r\n      RowCount: 0,\r\n      SupplierId: newRowData.Supplier.Id,\r\n      SupplierName: newRowData.Supplier.Name,\r\n      Value1: 0,\r\n      Value2: +newRowData.Sales,\r\n      Volume1: 0,\r\n      Volume2: +newRowData.Volume,\r\n      LatestDataYear: 0,\r\n      CalculatorId: 0,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.ExcipientCategoryId == newRow.ExcipientCategoryId &&\r\n        item.ExcipientGroupId === newRow.ExcipientGroupId &&\r\n        item.ExcipientId === newRow.ExcipientId &&\r\n        item.SupplierId === newRow.SupplierId\r\n    );\r\n\r\n    if (!isFound) {\r\n      this.studyData.push(newRow);\r\n\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          a.ExcipientCategoryId - b.ExcipientCategoryId ||\r\n          a.ExcipientGroupId - b.ExcipientGroupId ||\r\n          a.ExcipientId - b.ExcipientId ||\r\n          a.SupplierId - b.SupplierId\r\n      );\r\n\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    // if (e.changes) {\r\n    //   const data = e.changes[0].data as SpecialtyExcipientSaleItem;\r\n    //   const years = this.currentYear - this.previousYear;\r\n    //   // this.studyData.map((item: SpecialtyExcipientSaleItem, i) => {\r\n    //   const previousValue = data.Value1;\r\n    //   const currentValue = data.Value2;\r\n    //   data.CAGR2 = +this.calculateCAGRPercentage(\r\n    //     previousValue,\r\n    //     currentValue,\r\n    //     years\r\n    //   );\r\n    //   // });\r\n    // }\r\n    // console.log(this.studyData);\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    const isFound = this.allowedCols.some(\r\n      (item) => item === e.column.dataField\r\n    );\r\n    // console.log(e.data.ChangeLogObj);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (typeof e.data.ChangeLogObj !== 'undefined') {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.dataField] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.dataField]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = this.allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (typeof event.data.ChangeLogObj !== 'undefined') {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.dataField] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.dataField]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateCAGRPercentage(startValue: number, endValue: number, year: number) {\r\n    let cargPer = '';\r\n    if (startValue && endValue && year) {\r\n      const cagr = Math.pow(endValue / startValue, 1 / year) - 1;\r\n      cargPer = (cagr * 100).toFixed(1);\r\n    }\r\n    return cargPer;\r\n  }\r\n\r\n  onCurrencyChange(e: any) {\r\n    const defaultCurrency = this.currencies.find(\r\n      (item) => item.CurrencyCode === this.selectedCurrencyCodeDefault\r\n    );\r\n\r\n    const currency: SEDataEntry =\r\n      typeof e !== 'undefined' ? e : defaultCurrency;\r\n\r\n    this.selectedCurrencyCode = currency.CurrencyCode || '';\r\n    this.selectedCurrency = currency;\r\n\r\n    const previousSelectedRates =\r\n      this.currencyRates[this.previousSelectedCurrencyCode];\r\n    const rates = this.currencyRates[this.selectedCurrencyCode];\r\n\r\n    const previousSelectedObj = previousSelectedRates.find(\r\n      (rate: any) => rate.Year === this.previousYear\r\n    );\r\n\r\n    const previousSelectedRate =\r\n      typeof previousSelectedObj !== 'undefined' ? previousSelectedObj.Rate : 1;\r\n\r\n    const currentSelectedObj = previousSelectedRates.find(\r\n      (rate: any) => rate.Year === this.currentYear\r\n    );\r\n\r\n    const currentSelectedRate =\r\n      typeof currentSelectedObj !== 'undefined' ? currentSelectedObj.Rate : 1;\r\n\r\n    let previousRateObj = rates.find(\r\n      (rate: any) => rate.Year === this.previousYear\r\n    );\r\n\r\n    let previousRate =\r\n      typeof previousRateObj !== 'undefined' ? previousRateObj.Rate : 1;\r\n\r\n    let currentRateObj = rates.find(\r\n      (rate: any) => rate.Year === this.currentYear\r\n    );\r\n\r\n    let currentRate =\r\n      typeof currentRateObj !== 'undefined' ? currentRateObj.Rate : 1;\r\n\r\n    console.log(currentSelectedRate, currentRate);\r\n\r\n    this.previousSelectedCurrencyCode = currency.CurrencyCode || '';\r\n\r\n    this.studyData.map((item: SpecialtyExcipientSaleItem, i) => {\r\n      const convertUSDPreviousPrice = item.Value1 / previousSelectedRate;\r\n      const finalPreviousValue = convertUSDPreviousPrice * previousRate;\r\n\r\n      let finalCurrentValue = 0;\r\n      if (this.studyData[i].Value2 > 0) {\r\n        const convertUSDCurrentPrice = item.Value2 / currentSelectedRate;\r\n        finalCurrentValue = convertUSDCurrentPrice * currentRate;\r\n      }\r\n\r\n      this.studyData[i].Value1 = +finalPreviousValue.toFixed(1);\r\n      this.studyData[i].Value2 = +finalCurrentValue.toFixed(1);\r\n\r\n      this.studyData[i].CurrencyCode = currency.CurrencyCode || '';\r\n      this.studyData[i].CurrencyId = currency.Id;\r\n      this.studyData[i].CurrencyName = currency.Name;\r\n    });\r\n  }\r\n\r\n  onVolumeChange(currentVolume: SEDataEntry) {\r\n    const currentSelectedVolumeRate = currentVolume.Rate || 0;\r\n    const previousSelectedVolumeRate = this.previousSelectedVolume.Rate;\r\n\r\n    this.studyData.map((item: SpecialtyExcipientSaleItem, i) => {\r\n      const studyVolumePreviousYear = item.Volume1 || 0;\r\n      const studyVolumeCurrentYear = item.Volume2 || 0;\r\n      let newPreviousYearVolume = 0;\r\n      if (studyVolumePreviousYear > 0) {\r\n        newPreviousYearVolume =\r\n          (studyVolumePreviousYear / previousSelectedVolumeRate) *\r\n          currentSelectedVolumeRate;\r\n      }\r\n\r\n      let newCurrentYearVolume = 0;\r\n      if (studyVolumeCurrentYear > 0) {\r\n        newCurrentYearVolume =\r\n          (studyVolumeCurrentYear / previousSelectedVolumeRate) *\r\n          currentSelectedVolumeRate;\r\n      }\r\n\r\n      this.studyData[i].Volume1 = +newPreviousYearVolume.toFixed(1);\r\n      this.studyData[i].Volume2 = +newCurrentYearVolume.toFixed(1);\r\n\r\n      this.studyData[i].VolumeUnitId = currentVolume.Id;\r\n      this.studyData[i].VolumeUnitName = currentVolume.Name;\r\n      this.studyData[i].VolumeUnitRate = currentVolume.Rate || 0;\r\n    });\r\n\r\n    this.previousSelectedVolume = currentVolume;\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      specialtyExcipientsSales: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveSESData(studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSEAPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSEAPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      specialtyExcipientsSales: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSESData(formData).subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.alertService.success(res.Data);\r\n        // this.dataGrid?.instance.refresh();\r\n        this.getSalesData();\r\n        this.isLoadingService.remove();\r\n      } else {\r\n        this.alertService.danger(res.Data);\r\n        this.isLoadingService.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  onCalculatorbuttonClick() {\r\n    const url = `calculator/${this.CalculatorId}/${this.marketYearCategoryId}/${this.studyProjectMarketYearId}`;\r\n\r\n    this.router.navigateByUrl(url);\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.ExcipientCategory:\r\n        this.getExcipientCategory();\r\n        break;\r\n\r\n      case DataRelationsEnum.ExcipientGroup:\r\n        this.getExcipientGroups();\r\n        break;\r\n\r\n      case DataRelationsEnum.Excipient:\r\n        this.getExcipients();\r\n        break;\r\n\r\n      case DataRelationsEnum.Supplier:\r\n        this.getSuppliers();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <div class=\"text-right mb-2\" *ngIf=\"!isStudyEditable\">\r\n          <button\r\n            class=\"btn btn-outline-dark\"\r\n            (click)=\"onCalculatorbuttonClick()\"\r\n          >\r\n            Calculator\r\n          </button>\r\n        </div>\r\n\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-scrolling mode=\"virtual\"></dxo-scrolling>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <dxi-item location=\"after\">\r\n              <div style=\"width: 150px\" *dxTemplate>\r\n                <ng-select\r\n                  [items]=\"currencies\"\r\n                  bindLabel=\"Name\"\r\n                  placeholder=\"Select Currency\"\r\n                  [(ngModel)]=\"selectedCurrency\"\r\n                  [clearable]=\"false\"\r\n                  (change)=\"onCurrencyChange($event)\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <dxi-item location=\"after\">\r\n              <div style=\"width: 150px\" *dxTemplate>\r\n                <ng-select\r\n                  [items]=\"volumeUnits\"\r\n                  bindLabel=\"Name\"\r\n                  [clearable]=\"false\"\r\n                  [(ngModel)]=\"selectedVolumeUnitObj\"\r\n                  placeholder=\"Select Volume Unit\"\r\n                  (change)=\"onVolumeChange($event)\"\r\n                >\r\n                </ng-select>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            caption=\"Excipient Category\"\r\n            dataField=\"ExcipientCategoryName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Excipient Group\"\r\n            dataField=\"ExcipientGroupName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            dataField=\"ExcipientName\"\r\n            caption=\"Excipient\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Supplier\"\r\n            dataField=\"SupplierName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Year: {{ previousYear }} ({{ selectedCurrencyCode }})\"\r\n          >\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              dataField=\"Value1\"\r\n              caption=\"Sales\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              caption=\"Volume\"\r\n              dataField=\"Volume1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              caption=\"Cagr (%)\"\r\n              dataField=\"CAGR1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Year: {{ currentYear }} ({{ selectedCurrencyCode }})\"\r\n          >\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              dataField=\"Value2\"\r\n              caption=\"Sales\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              caption=\"Volume\"\r\n              dataField=\"Volume2\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"80\"\r\n              caption=\"Cagr (%)\"\r\n              dataField=\"CAGR2\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <!-- <app-specialty-excipient-sales-preview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear\"\r\n          [studyData]=\"studyData\"\r\n        ></app-specialty-excipient-sales-preview> -->\r\n        <app-shc-preview\r\n          *ngIf=\"previewGridData && previewGridData.length > 0\"\r\n          #studyPreview\r\n          [setGridFields]=\"getGridFields()\"\r\n          [setPreviewData]=\"previewGridData\"\r\n          [setPreviewGridKey]=\"previewGridStorageKey\"\r\n          [setStudyType]=\"studyDataUrlEnum.SE_SALES\"\r\n          [setVolumeYears]=\"volumeYears\"\r\n          [currentYear]=\"currentYear\"\r\n          [setSelectedCurrency]=\"currentCurrency\"\r\n          [setViewId]=\"studyDataViewId\"\r\n        ></app-shc-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [width]=\"600\"\r\n  [height]=\"380\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Excipient Category</label>\r\n              <ng-select\r\n                [items]=\"excipientCategories\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ExcipientCategory\"\r\n                placeholder=\"Select Excipient Category\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ExcipientCategory\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Excipient Group</label>\r\n              <ng-select\r\n                [items]=\"excipientGroups\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"ExcipientGroup\"\r\n                placeholder=\"Select Excipient Group\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(\r\n                    this,\r\n                    dataRelationsEnum.ExcipientGroup\r\n                  )\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Excipient</label>\r\n              <ng-select\r\n                [items]=\"excipients\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Excipient\"\r\n                placeholder=\"Select Excipient\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Excipient)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Supplier</label>\r\n              <ng-select\r\n                [items]=\"suppliers\"\r\n                bindLabel=\"Name\"\r\n                formControlName=\"Supplier\"\r\n                placeholder=\"Select Supplier\"\r\n                addTagText=\"Create New\"\r\n                [addTag]=\"\r\n                  createNewDataEntry.bind(this, dataRelationsEnum.Supplier)\r\n                \"\r\n              >\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Sales ({{ selectedCurrencyCode }})</label>\r\n              <input type=\"text\" class=\"form-control\" formControlName=\"Sales\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-6\">\r\n            <div class=\"form-group\">\r\n              <label>Volume ({{ selectedVolumeUnitObj.Name }})</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                formControlName=\"Volume\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (onClick)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit, ViewChild, ViewChildren, NgZone } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDropDownButtonComponent } from 'devextreme-angular';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\nimport { HandsonTableComponent } from 'src/app/shared/handson-table/handson-table.component';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataSourceResponse } from 'src/model/dataSourceResponse.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { StudyAreaSummary } from 'src/model/studyAreaSummary.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DropdownCurrency } from '../../../../../model/dropdownCurrency.model';\r\nimport { DropdownUnits } from '../../../../../model/dropdownUnits.model';\r\n\r\n@Component({\r\n  selector: 'app-study',\r\n  templateUrl: './study.component.html',\r\n  styleUrls: ['./study.component.css'],\r\n})\r\nexport class StudyComponent implements OnInit {\r\n  studyData: any = {};\r\n  studyDataPivotGridPreview: any = {};\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n  dataRelationsData: DataRelationsData | undefined;\r\n  dataRelationsEnum = DataRelationsEnum;\r\n  studyDataViewId: number = 0;\r\n  lookupDataRelations: any;\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  viewNotePopup: boolean = false;\r\n  selectedCommentCellData: any = {};\r\n  hasStudyData: boolean = false;\r\n  errorOccured: boolean = false;\r\n  summaryData: StudyAreaSummary[] = [];\r\n  deleteRowConfirmPopup: boolean = false;\r\n  deleteRowData: any;\r\n\r\n  signOffConfirmPopup: boolean = false;\r\n  signOffData: any;\r\n\r\n  currencyDropdown: DropdownCurrency[] = [];\r\n  massUnitDropdown: DropdownUnits[] = [];\r\n\r\n  currenCurrency: DropdownCurrency = new DropdownCurrency();\r\n  currentVolumeUnit: DropdownUnits = new DropdownUnits();\r\n\r\n  @ViewChildren('studyDropDown') studyDropDown: DxDropDownButtonComponent;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  @ViewChild(HandsonTableComponent)\r\n  HandsonTableComponent: HandsonTableComponent;\r\n\r\n  constructor(\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private studyService: StudyService,\r\n    private router: Router,\r\n    private ngZone: NgZone\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getDataRelations();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getStudyData(this.marketYearCategoryId, this.studyProjectMarketYearId);\r\n    this.getAllStudies();\r\n    this.getCurrencyList(this.dataSetId);\r\n    this.getUnitOfMassList(this.dataSetId);\r\n  }\r\n\r\n  getAllStudies() {\r\n    this.sharedService.getStudyAreaSummary().subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          // res.Data.sort((a,b) => b-a)\r\n          this.summaryData = res.Data.map((item: StudyAreaSummary) =>\r\n            new StudyAreaSummary().deserialize(item)\r\n          );\r\n          this.summaryData.map((item: any) => {\r\n            item.backColour = 'white';\r\n            if (item.IsSignOff) {\r\n              item.backColour = 'lightgray';\r\n            }\r\n          });\r\n          this.summaryData.sort(\r\n            (a, b) => Number(b.LockedForEditBy) - Number(a.LockedForEditBy)\r\n          );\r\n          this.summaryData.sort(\r\n            (a, b) => Number(a.IsSignOff) - Number(b.IsSignOff)\r\n          );\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n        this.isLoadingService.remove();\r\n      },\r\n      (err) => {\r\n        // if (err.status === 401) {\r\n        //   this.isLoadingService.remove();\r\n        // }\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.dataRelationsData = data.find(\r\n          (item) =>\r\n            item.DatabaseId === +this.dataSetId &&\r\n            item.DataItemCategoryId === parseInt(this.studyAreaId.toString())\r\n        );\r\n\r\n        if (this.dataRelationsData) {\r\n          this.studyDataViewId = this.dataRelationsData.ViewId;\r\n        }\r\n        this.lookupDataRelations = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  // Call get api for fetch data\r\n  getStudyData(marketYearCategoryId: any, studyProjectMarketYearId: any) {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getStudyData(marketYearCategoryId, studyProjectMarketYearId)\r\n      .subscribe(\r\n        (res: DataSourceResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.studyData = [];\r\n            this.studyData = res as DataSourceResponse;\r\n            this.studySummary = this.studyData.Data.StudySetup;\r\n            this.hasStudyData =\r\n              this.studyData.Data.DataList !== null &&\r\n                this.studyData.Data.DataList.length > 0\r\n                ? true\r\n                : false;\r\n            this.setStudyCurrencyAndUnits(this.studyData.Data);\r\n            this.marketYearCategoryId = this.studyData.Data.MarketYearCategoryId;\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            // this.alertService.danger(res.Data);\r\n            this.errorOccured = true;\r\n            this.alertService.danger(\r\n              'Something went wrong. Please try after sometime.'\r\n            );\r\n            this.isLoadingService.remove();\r\n          }\r\n        },\r\n        (err) => {\r\n          // console.log(err);\r\n          this.errorOccured = true;\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try after sometime.'\r\n          );\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  processDataSourceDataGrid(dataSourceDataGrid: any) {\r\n    let studyDataPivotGridPreview: any[] = [];\r\n    for (let dataSourceItem of dataSourceDataGrid) {\r\n      for (let yearItem in dataSourceItem.YearsData) {\r\n        const columns = dataSourceItem.ColumnsData;\r\n        const year = { Year: yearItem };\r\n        const values = dataSourceItem.YearsData[yearItem];\r\n        studyDataPivotGridPreview.push({ ...columns, ...year, ...values });\r\n      }\r\n    }\r\n    this.studyDataPivotGridPreview = studyDataPivotGridPreview;\r\n  }\r\n\r\n  // Call save api for saving data\r\n  saveStudyData(data: any) {\r\n    const dataSourceData = data.dataSourceData;\r\n    const unitOfValues = data.unitOfValues;\r\n    const saveDataSourceData = {\r\n      marketYearCategoryId: this.studyData.Data.MarketYearCategoryId,\r\n      studySetup: this.studySummary,\r\n      unitOfValues: unitOfValues,\r\n      yearsList: this.studyData.Data.YearsList,\r\n      data: dataSourceData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveStudyData(saveDataSourceData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.loadCurrentStudy();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometime.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  // Call request for sign off data\r\n  requestForSignOff(event: any) {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Call request for change data\r\n  requestForChange(event: any) {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Call sign off data\r\n  singOffData(dataSourceData: any) {\r\n    this.signOffData = {\r\n      data: dataSourceData,\r\n      yearsList: this.studyData.Data.YearsList,\r\n      marketYearCategoryId: this.studyData.Data.MarketYearCategoryId,\r\n      studySetup: this.studySummary,\r\n      unitOfValues: this.studyData.Data.UnitOfValues,\r\n    };\r\n\r\n    this.signOffConfirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = this.signOffData;\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffStudyData(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.loadCurrentStudy();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n        this.onSignOffConfirmHidden();\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometime.'\r\n        );\r\n        this.onSignOffConfirmHidden();\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignOffConfirmHidden() {\r\n    this.signOffData = {};\r\n    this.signOffConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n\r\n  // call when delete row button clicked\r\n  onDeleteRow(row: any) {\r\n    if (row) {\r\n      this.deleteRowData = row;\r\n      this.deleteRowConfirmPopup = true;\r\n    }\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    this.HandsonTableComponent.onDeleteRow(this.deleteRowData);\r\n    this.onDeleteRowConfirmPopupHide();\r\n    // this.isLoadingService.add();\r\n    // this.sharedService\r\n    //   .removeStudyDataRow(\r\n    //     this.studySummary.StudyDataSetId as number,\r\n    //     this.studySummary.StudyAreaId as number,\r\n    //     this.marketYearCategoryId,\r\n    //     this.deleteRowData.DataRowId\r\n    //   )\r\n    //   .subscribe(\r\n    //     (res: ApiResponse) => {\r\n    //       this.onDeleteRowConfirmPopupHide();\r\n    //       if (res.Data) {\r\n    //         this.alertService.success(\r\n    //           'Your data row has been removed successfully.'\r\n    //         );\r\n    //         this.loadCurrentStudy();\r\n    //       } else {\r\n    //         this.alertService.danger(\r\n    //           'Error: Something went wrong. Data row can not removed.'\r\n    //         );\r\n    //       }\r\n    //       this.isLoadingService.remove();\r\n    //     },\r\n    //     (err) => {\r\n    //       const msg =\r\n    //         typeof err.error !== 'undefined' && err.error !== ''\r\n    //           ? err.error\r\n    //           : 'Error: Something went wrong.';\r\n\r\n    //       this.onDeleteRowConfirmPopupHide();\r\n    //       this.alertService.danger(msg);\r\n    //       this.isLoadingService.remove();\r\n    //     }\r\n    //   );\r\n  }\r\n\r\n  loadCurrentStudy() {\r\n    let currentUrl = this.router.url;\r\n    this.ngZone.run(() => {\r\n      this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n        this.router.navigate([currentUrl]);\r\n      });\r\n    });\r\n  }\r\n\r\n  // call for support data\r\n  public getCurrencyList(studyDataSetId: number) {\r\n    this.sharedService.getCurrencies(studyDataSetId).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.currencyDropdown = res.Data as DropdownCurrency[];\r\n          this.currencyDropdown.map((item: any) => {\r\n            item.CurrencyName = `${item.Name} (${item.CurrencyCode})`;\r\n            this.setStudyCurrencyAndUnits(this.studyData);\r\n          });\r\n        }\r\n      },\r\n      (error: any) => {\r\n        throw new Error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public getUnitOfMassList(studyDataSetId: number) {\r\n    this.sharedService.getVolumeUnits(studyDataSetId).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.massUnitDropdown = res.Data as DropdownUnits[];\r\n          this.setStudyCurrencyAndUnits(this.studyData);\r\n        }\r\n      },\r\n      (error: any) => {\r\n        throw new Error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  public setStudyCurrencyAndUnits(data: any) {\r\n    if (data?.UnitOfValues) {\r\n      const volume = data.UnitOfValues.find(\r\n        (f: { Title: string }) => f.Title === 'Volume'\r\n      );\r\n      if (volume) {\r\n        this.currentVolumeUnit = this.massUnitDropdown.find(\r\n          (f) => f.Id === volume.Id\r\n        ) as DropdownUnits;\r\n      }\r\n      const currency = data.UnitOfValues.find(\r\n        (f: { Title: string }) => f.Title === 'Currency'\r\n      );\r\n      if (currency) {\r\n        this.currenCurrency = this.currencyDropdown.find(\r\n          (f) => f.Id === currency.Id\r\n        ) as DropdownCurrency;\r\n      }\r\n    }\r\n  }\r\n}\r\n","<app-show-initial-setup [studySummaryData]=\"studySummary\"></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel class=\"custom-tab-panel\" id=\"tabPanel\" [swipeEnabled]=\"false\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing *ngIf=\"!errorOccured\"\r\n                                   [studyInitialSetupData]=\"studySummary\"\r\n                                   [marketYearCategoryId]=\"marketYearCategoryId\"\r\n                                   [setIsStudyDataFound]=\"hasStudyData\">\r\n        </app-disable-study-editing>\r\n        <app-handson-table *ngIf=\"studyData\"\r\n                           [setDataSource]=\"studyData\"\r\n                           [setDataRelations]=\"lookupDataRelations\"\r\n                           [setCurrency]=\"currencyDropdown\"\r\n                           [setVolumeUnits]=\"massUnitDropdown\"\r\n                           (onRequestForChangeClicked)=\"requestForChange($event)\"\r\n                           (onRequestForSignOffClicked)=\"requestForSignOff($event)\"\r\n                           (onUnlockStudyClicked)=\"unlockStudy()\"\r\n                           (onSaveDataClicked)=\"saveStudyData($event)\"\r\n                           (dataSourceDataChanged)=\"processDataSourceDataGrid($event)\"\r\n                           (onDeleteRowClicked)=\"onDeleteRow($event)\"\r\n                           (onSignOffClicked)=\"singOffData($event)\">\r\n        </app-handson-table>\r\n      </div>\r\n    </dxi-item>\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <pivot-grid-preview [setPreviewData]=\"studyDataPivotGridPreview\"\r\n                            [setStudySetup]=\"studySummary\"\r\n                            [setMarketYearCategoryId]=\"marketYearCategoryId\"\r\n                            [setCurrency]=\"currencyDropdown\"\r\n                            [setCurrentCurrency]=\"currenCurrency\"\r\n                            [setCurrentVolumeUnit]=\"currentVolumeUnit\"\r\n                            [setVolumeUnits]=\"massUnitDropdown\">\r\n        </pivot-grid-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<!-- Delete Row Confirm Popup -->\r\n<dx-popup [width]=\"350\"\r\n          [height]=\"150\"\r\n          [showTitle]=\"false\"\r\n          title=\"Delete Row Confirm\"\r\n          [dragEnabled]=\"false\"\r\n          [closeOnOutsideClick]=\"false\"\r\n          [showCloseButton]=\"false\"\r\n          container=\".dx-viewport\"\r\n          [(visible)]=\"deleteRowConfirmPopup\"\r\n          (onHidden)=\"onDeleteRowConfirmPopupHide()\">\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button icon=\"check\"\r\n                   text=\"Yes\"\r\n                   type=\"success\"\r\n                   class=\"mr-2\"\r\n                   (onClick)=\"confirmDeleteRow()\"></dx-button>\r\n        <dx-button icon=\"close\"\r\n                   text=\"No\"\r\n                   (onClick)=\"deleteRowConfirmPopup = false\"></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n<!-- END Delete Row Confirm Popup -->\r\n<!-- SignOff Data Confirm Popup -->\r\n<dx-popup [width]=\"340\"\r\n          [height]=\"240\"\r\n          [showTitle]=\"true\"\r\n          title=\"SignOff Confirm\"\r\n          [dragEnabled]=\"false\"\r\n          [closeOnOutsideClick]=\"true\"\r\n          [showCloseButton]=\"true\"\r\n          container=\".dx-viewport\"\r\n          [(visible)]=\"signOffConfirmPopup\"\r\n          (onHidden)=\"onSignOffConfirmHidden()\">\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button icon=\"check\"\r\n                   text=\"SignOff Data\"\r\n                   type=\"success\"\r\n                   class=\"mr-2\"\r\n                   (onClick)=\"onSignOffData()\"></dx-button>\r\n        <dx-button icon=\"close\"\r\n                   text=\"Cancel\"\r\n                   (onClick)=\"signOffConfirmPopup = false\"></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n<!-- END SignOff Data Confirm Popup -->\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport {\r\n  SupplierMarketShareItem,\r\n  supplierMarketShare,\r\n} from 'src/model/supplierMarketShare.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport {\r\n  DxDataGridModule,\r\n  DxDataGridComponent,\r\n  DxTemplateModule,\r\n  DxSelectBoxModule,\r\n  DxTabPanelModule,\r\n  DxButtonModule,\r\n} from 'devextreme-angular';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { StudyAreaCategory } from 'src/model/studyDataSet.model';\r\nimport { SupplierMarketSharePreviewComponent } from 'src/app/pages/study-area-preview/components/supplier-market-share-preview/supplier-market-share-preview.component';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-supplier-market-share',\r\n  templateUrl: './supplier-market-share.component.html',\r\n  styleUrls: ['./supplier-market-share.component.css'],\r\n})\r\nexport class SupplierMarketShareComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  groupingValues: any[] = [];\r\n\r\n  studyData: SupplierMarketShareItem[] = [];\r\n\r\n  @ViewChild('smsPreview') smsPreview!: SupplierMarketSharePreviewComponent;\r\n\r\n  currentYear: number;\r\n  previousYear1: number;\r\n  yearReduce: number = 1;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  marketSegments: DataEntry[] = [];\r\n  suppliers: DataEntry[] = [];\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n\r\n  selectedRowItem = [];\r\n  isManage: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  isStudyEditable: boolean = false;\r\n\r\n  totalCurrentYearTotal: number = 0;\r\n\r\n  disabledSignOffButton: boolean = false;\r\n\r\n  marketSegmentVisePreviousYearTotal: any = {};\r\n  marketSegmentViseCurrentYearTotal: any = {};\r\n\r\n  studyTitle: string = '';\r\n  studyPageTitle: string = '';\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    this.currentYear = new Date().getFullYear();\r\n    this.previousYear1 = this.currentYear - 1;\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      marketSegment: [null, Validators.required],\r\n      supplier: [null, Validators.required],\r\n      CurrentYear: [null],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.getDataRelations();\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n    this.getMarketSegment();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.getSupplierMarketShareData();\r\n\r\n    this.getSuppliers();\r\n  }\r\n\r\n  getSupplierMarketShareData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getSupplierMarketShareData(\r\n        this.marketYearCategoryId,\r\n        this.studyProjectMarketYearId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const studyData = res.Data as supplierMarketShare;\r\n\r\n            this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n            this.studyData = [];\r\n            this.studyData =\r\n              studyData.SupplierMarketShareItems as SupplierMarketShareItem[];\r\n\r\n            this.studySummary = new InitialSetup().deserialize(\r\n              studyData.InitialSetup\r\n            );\r\n\r\n            this.isManage =\r\n              this.userDetail.Id === this.studySummary.ProjectLeadId\r\n                ? true\r\n                : false;\r\n\r\n            this.isLockedStudy =\r\n              !this.studySummary.IsSignOff &&\r\n              this.studySummary.LockedForEditBy === this.userDetail.Id\r\n                ? true\r\n                : false;\r\n\r\n            this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n            this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n            let currentYear =\r\n              this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n            currentYear = currentYear - this.yearReduce;\r\n\r\n            this.currentYear = currentYear;\r\n            this.previousYear1 = currentYear - 1;\r\n            // console.log(this.marketSegments);\r\n\r\n            this.marketSegments.map((segmentData: DataEntry) => {\r\n              this.marketSegmentVisePreviousYearTotal[segmentData.Name] =\r\n                this.studyData\r\n                  .filter((data) => data.MarketSegmentId === segmentData.Id)\r\n                  .reduce(\r\n                    (prev: number, curr: any) => prev + curr.PreviousYear1,\r\n                    0\r\n                  );\r\n\r\n              this.marketSegmentViseCurrentYearTotal[segmentData.Name] =\r\n                this.studyData\r\n                  .filter((data) => data.MarketSegmentId === segmentData.Id)\r\n                  .reduce(\r\n                    (prev: number, curr: any) => prev + curr.CurrentYear,\r\n                    0\r\n                  );\r\n            });\r\n            console.log(this.marketSegmentViseCurrentYearTotal);\r\n            const isDataRowNull = this.studyData.find(\r\n              (data) => data.DataRowId !== null\r\n            );\r\n\r\n            if (!isDataRowNull) {\r\n              this.disabledSignOffButton = true;\r\n            }\r\n\r\n            // console.log(this.disabledSignOffButton);\r\n            // const totalPreviousVolume = this.studyData.reduce(\r\n            //   (prev: number, curr: any) => prev + curr.PreviousYear1,\r\n            //   0\r\n            // );\r\n            // const totalCurrentVolume = this.studyData.reduce(\r\n            //   (prev: number, curr: any) => prev + curr.CurrentYear,\r\n            //   0\r\n            // );\r\n\r\n            // this.totalCurrentYearTotal = totalCurrentVolume;\r\n\r\n            this.studyData.map((item: any, i) => {\r\n              const rowNoteArray: any = [];\r\n              if (item.Notes !== null) {\r\n                const noteArray = item.Notes.split('|||');\r\n                noteArray.map((singleVal: any) => {\r\n                  const n = singleVal.split('@@@');\r\n                  const d = n[0].split('###');\r\n                  rowNoteArray.push({\r\n                    name: d[0].trim(),\r\n                    date: new Date(d[1].trim()),\r\n                    note: n[1].trim(),\r\n                  });\r\n                });\r\n              }\r\n\r\n              let sortRowNoteArray: any = [];\r\n              if (rowNoteArray.length > 0) {\r\n                sortRowNoteArray = rowNoteArray.sort(\r\n                  (a: any, b: any) => b.date - a.date\r\n                );\r\n              }\r\n\r\n              let prevPer: number = 0;\r\n              if (item.PreviousYear1 != '' && item.PreviousYear1 > 0) {\r\n                prevPer = this.calculatePerVolume(\r\n                  +item.PreviousYear1,\r\n                  +this.marketSegmentVisePreviousYearTotal[item.MarketSegment]\r\n                );\r\n              }\r\n\r\n              let currPer: number = 0;\r\n              if (item.CurrentYear != '' && item.CurrentYear > 0) {\r\n                currPer = this.calculatePerVolume(\r\n                  +item.CurrentYear,\r\n                  +this.marketSegmentViseCurrentYearTotal[item.MarketSegment]\r\n                );\r\n              }\r\n\r\n              let changelogObj: any[] = [];\r\n              if (item.ChangeLog !== null) {\r\n                const colValues = item.ChangeLog.split('|||');\r\n                if (colValues) {\r\n                  colValues.map((cv: any) => {\r\n                    const colValueArray = cv.trim().split('###');\r\n                    // console.log(colValueArray);\r\n                    changelogObj[colValueArray[3]] = {\r\n                      name: colValueArray[0],\r\n                      date: colValueArray[1],\r\n                      oldValue: colValueArray[2],\r\n                      year: colValueArray[3],\r\n                    };\r\n                  });\r\n                }\r\n              }\r\n\r\n              this.studyData[i].StudyNotes =\r\n                rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n              this.studyData[i].EditNote = false;\r\n              this.studyData[i].Notes = null;\r\n              this.studyData[i].NoteArray = rowNoteArray;\r\n              this.studyData[i].PreviousYear1Per = parseFloat(\r\n                prevPer.toFixed(1)\r\n              );\r\n              this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));\r\n              this.studyData[i].OldCurrentYear = item.CurrentYear;\r\n              this.studyData[i].ChangeLogObj = changelogObj;\r\n            });\r\n\r\n            this.isLoadingService.remove();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n            this.isLoadingService.remove();\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isLoadingService.remove();\r\n          this.alertService.danger(\r\n            'Something went wrong. Please try again or contact administrator.'\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getMarketSegment() {\r\n    this.sharedService.getMarketSegment().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.marketSegments = res.Data as DataEntry[];\r\n        this.getSupplierMarketShareData();\r\n      }\r\n    });\r\n  }\r\n\r\n  getSuppliers() {\r\n    this.sharedService.getSupplier().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.suppliers = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: SupplierMarketShareItem = {\r\n      CurrentYear: newRowData.CurrentYear,\r\n      OldCurrentYear: newRowData.CurrentYear,\r\n      DataRowId: '',\r\n      LubricantDemandId: 0,\r\n      MarketSegment: newRowData.marketSegment.Name,\r\n      MarketSegmentId: newRowData.marketSegment.Id,\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: newRowData.PreviousYear1,\r\n      SupplierName: newRowData.supplier.Name,\r\n      SupplierId: newRowData.supplier.Id,\r\n      PreviousYear1Per: 0,\r\n      CurrentYearPer: 0,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) =>\r\n        item.MarketSegmentId == newRow.MarketSegmentId &&\r\n        item.SupplierId == newRow.SupplierId\r\n    );\r\n\r\n    if (!isFound) {\r\n      this.marketSegmentViseCurrentYearTotal[newRowData.marketSegment.Name] =\r\n        this.marketSegmentViseCurrentYearTotal[newRowData.marketSegment.Name] +\r\n        parseFloat(newRowData.CurrentYear);\r\n      this.studyData.push(newRow);\r\n\r\n      this.studyData\r\n        .filter(\r\n          (item: any) => item.MarketSegmentId === newRowData.marketSegment.Id\r\n        )\r\n        .map((item: any, i) => {\r\n          let currPer: number = 0;\r\n          if (item.CurrentYear != '' && item.CurrentYear > 0) {\r\n            currPer = this.calculatePerVolume(\r\n              item.CurrentYear,\r\n              this.marketSegmentViseCurrentYearTotal[\r\n                newRowData.marketSegment.Name\r\n              ]\r\n            );\r\n          }\r\n\r\n          this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));\r\n        });\r\n\r\n      this.studyData.sort(\r\n        (a, b) =>\r\n          a.MarketSegmentId - b.MarketSegmentId || a.SupplierId - b.SupplierId\r\n      );\r\n\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n      // this.smsPreview.changeStudyData(this.studyData);\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as SupplierMarketShareItem;\r\n      // console.log(e);\r\n      const currentYear: number = +data.CurrentYear;\r\n      const oldCurrentYEar: number = +data.OldCurrentYear;\r\n      // console.log(currentYear, oldCurrentYEar);\r\n      this.marketSegmentViseCurrentYearTotal[data.MarketSegment] =\r\n        this.marketSegmentViseCurrentYearTotal[data.MarketSegment] -\r\n        oldCurrentYEar +\r\n        currentYear;\r\n\r\n      // this.totalCurrentYearTotal = this.totalCurrentYearTotal - oldCurrentYEar;\r\n\r\n      // this.totalCurrentYearTotal = this.totalCurrentYearTotal + currentYear;\r\n\r\n      data.OldCurrentYear = currentYear;\r\n\r\n      this.studyData\r\n        .filter((item: any, index) => {\r\n          item.index = index;\r\n          return item.MarketSegmentId === data.MarketSegmentId;\r\n        })\r\n        .map((item: any, i) => {\r\n          // console.log(item);\r\n          if (item.CurrentYear > 0) {\r\n            const currPer = this.calculatePerVolume(\r\n              item.CurrentYear,\r\n              this.marketSegmentViseCurrentYearTotal[data.MarketSegment]\r\n            );\r\n\r\n            this.studyData[item.index].CurrentYearPer = parseFloat(\r\n              currPer.toFixed(1)\r\n            );\r\n          }\r\n        });\r\n\r\n      // this.smsPreview.changeStudyData(this.studyData);\r\n      // console.log(this.studyData);\r\n    }\r\n  }\r\n\r\n  calculatePerVolume(colValue: number, totalColValue: number) {\r\n    return parseFloat(((colValue * 100) / totalColValue).toFixed(1));\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      supplierMarketShareItems: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveSupplierMarketShareData(studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffSupplierMarketShareData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSupplierMarketShareData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      supplierMarketShareItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .signOffSupplierMarketShareData(formData)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.getSupplierMarketShareData();\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n    console.log(dataRelationData, this.datRelationsData);\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.MarketSegment:\r\n        this.getMarketSegment();\r\n        break;\r\n\r\n      case DataRelationsEnum.Supplier:\r\n        this.getSuppliers();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping>\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-scrolling mode=\"virtual\"></dxo-scrolling>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <!-- <dxi-item location=\"before\">\r\n              <div *dxTemplate class=\"pl-3\">\r\n                <dx-button text=\"Preview\"></dx-button>\r\n              </div>\r\n            </dxi-item> -->\r\n\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                    type=\"default\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"MarketSegment\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"SupplierName\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column caption=\"Volume (in KTonnes)\">\r\n            <dxi-column\r\n              [width]=\"60\"\r\n              dataField=\"PreviousYear1\"\r\n              [caption]=\"previousYear1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              dataField=\"PreviousYear1Per\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"60\"\r\n              dataField=\"CurrentYear\"\r\n              [caption]=\"currentYear\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              dataField=\"CurrentYearPer\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'perCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <!-- <app-study-area-preview [currentYear]=\"currentYear\"\r\n          [setStudyData]=\"studyData\"\r\n          ></app-study-area-preview> -->\r\n\r\n        <app-supplier-market-share-preview\r\n          #smsPreview\r\n          [currentYear]=\"currentYear\"\r\n          [setStudyData]=\"studyData\"\r\n          [previousYear1]=\"previousYear1\"\r\n        ></app-supplier-market-share-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [width]=\"300\"\r\n  [height]=\"380\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"form-group\">\r\n          <label>Market Segment</label>\r\n          <ng-select\r\n            [items]=\"marketSegments\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"marketSegment\"\r\n            placeholder=\"Select Market Segment\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.MarketSegment)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Supplier</label>\r\n          <ng-select\r\n            [items]=\"suppliers\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"supplier\"\r\n            placeholder=\"Select Supplier\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"createNewDataEntry.bind(this, dataRelationsEnum.Supplier)\"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Volume Year - {{ currentYear }}</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"CurrentYear\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (click)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { SyntheticPenetrationPreviewComponent } from 'src/app/pages/study-area-preview/components/synthetic-penetration-preview/synthetic-penetration-preview.component';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport {\r\n  SyntheticPenetration,\r\n  SyntheticPenetrationItem,\r\n} from 'src/model/syntheticPenetration.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-synthetic-penetration',\r\n  templateUrl: './synthetic-penetration.component.html',\r\n  styleUrls: ['./synthetic-penetration.component.css'],\r\n})\r\nexport class SyntheticPenetrationComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  @ViewChild('studyPreview')\r\n  studyPreview!: SyntheticPenetrationPreviewComponent;\r\n\r\n  currentYear: number = 0;\r\n  previousYear1: number = 0;\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  isStudyEditable: boolean = false;\r\n\r\n  isManage: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: SyntheticPenetrationItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n\r\n  segments: DataEntry[] = [];\r\n  syntheticTypes: DataEntry[] = [];\r\n\r\n  disabledButtons: boolean = false;\r\n  errorMessages: string[] = [];\r\n\r\n  yearReduce: number = 1;\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  volumeYears: any[] = [];\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      Segment: [null, Validators.required],\r\n      // SyntheticType: [null, Validators.required],\r\n      // CurrentYear: this.formBuilder.array({}),\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.getDataRelations();\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n    this.getSyntheticType();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSPData();\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getSPData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getSPData(this.marketYearCategoryId, this.studyProjectMarketYearId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          const studyData = res.Data as SyntheticPenetration;\r\n\r\n          this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n          this.studyData =\r\n            studyData.SyntheticPenetrationItems as SyntheticPenetrationItem[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            studyData.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          currentYear = currentYear - this.yearReduce;\r\n\r\n          this.currentYear = currentYear;\r\n          this.previousYear1 = currentYear - 1;\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            const rowNoteArray: any = [];\r\n            if (item.Notes !== null) {\r\n              const noteArray = item.Notes.split('|||');\r\n              noteArray.map((singleVal: any) => {\r\n                const n = singleVal.split('@@@');\r\n                const d = n[0].split('###');\r\n                rowNoteArray.push({\r\n                  name: d[0].trim(),\r\n                  date: new Date(d[1].trim()),\r\n                  note: n[1].trim(),\r\n                });\r\n              });\r\n            }\r\n\r\n            let sortRowNoteArray: any = [];\r\n            if (rowNoteArray.length > 0) {\r\n              sortRowNoteArray = rowNoteArray.sort(\r\n                (a: any, b: any) => b.date - a.date\r\n              );\r\n            }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  // console.log(colValueArray);\r\n                  changelogObj[colValueArray[3]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            this.studyData[i].StudyNotes =\r\n              rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            this.studyData[i].EditNote = false;\r\n            this.studyData[i].Notes = null;\r\n            this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.studyPreview.changeStudyData(this.studyData);\r\n          this.getSegment(this.studySummary.MarketId);\r\n\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  getSegment(MarketId: number = 0) {\r\n    this.sharedService.getSPSegments(MarketId).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.segments = res.Data as DataEntry[];\r\n        } else {\r\n          this.segments = [];\r\n        }\r\n      },\r\n      (err) => {\r\n        this.segments = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  getSyntheticType() {\r\n    this.sharedService.getSyntheticType().subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.syntheticTypes = res.Data as DataEntry[];\r\n\r\n          this.syntheticTypes.map((item: DataEntry) => {\r\n            const fieldId = `currentYear_${item.Id}`;\r\n            this.newRowForm.addControl(\r\n              fieldId,\r\n              new FormControl(null, Validators.required)\r\n            );\r\n          });\r\n        } else {\r\n          this.syntheticTypes = [];\r\n        }\r\n      },\r\n      (err) => {\r\n        this.syntheticTypes = [];\r\n      }\r\n    );\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) => item.Segment == newRowData.Segment.Name\r\n    );\r\n\r\n    if (!isFound) {\r\n      let newRows: any[] = [];\r\n      this.syntheticTypes.map((item) => {\r\n        newRows.push({\r\n          CurrentYear: +newRowData[`currentYear_${item.Id}`],\r\n          DataRowId: '',\r\n          Notes: null,\r\n          StudyNotes: '',\r\n          EditNote: false,\r\n          NoteArray: null,\r\n          PreviousYear1: '',\r\n          Segment: newRowData.Segment.Name,\r\n          SyntheticType: item.Name,\r\n          SyntheticTypeDescription: item.Description,\r\n          SyntheticTypeId: item.Id,\r\n          IsNewRow: true,\r\n        });\r\n      });\r\n\r\n      // return false;\r\n      const totalPer = newRows.reduce(\r\n        (prev: number, item: SyntheticPenetrationItem) =>\r\n          prev + item.CurrentYear,\r\n        0\r\n      );\r\n      if (totalPer === 100) {\r\n        newRows.map((singleRow: SyntheticPenetrationItem) => {\r\n          this.studyData.push(singleRow);\r\n        });\r\n        // this.studyData.push(newRow);\r\n\r\n        // this.studyData.sort(\r\n        //   (a, b) => a.Segment - b.Segment || a.SupplierId - b.SupplierId\r\n        // );\r\n\r\n        this.popupVisible = false;\r\n        this.newRowForm.reset();\r\n        this.newRowForm.updateValueAndValidity();\r\n        // this.studyPreview.changeStudyData(this.studyData);\r\n      } else {\r\n        this.alertService.danger(\r\n          `You need to add 100% for '${newRowData.Segment.Name}'.`\r\n        );\r\n        // this.errorMessages.push(\r\n        //   `You need to add 100% for '${newRowData.Segment.Name}'.`\r\n        // );\r\n      }\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as SyntheticPenetrationItem;\r\n      const currentYearValue: number = +data.CurrentYear;\r\n\r\n      const totalPer = this.studyData\r\n        .filter(\r\n          (item: SyntheticPenetrationItem) => item.Segment === data.Segment\r\n        )\r\n        .reduce(\r\n          (prev: number, cur: SyntheticPenetrationItem) =>\r\n            prev + cur.CurrentYear,\r\n          0\r\n        )\r\n        .toFixed(1);\r\n\r\n      // this.studyPreview.changeStudyData(this.studyData);\r\n      this.disabledButtons = false;\r\n      const errorMessage = `You need to add 100% for '${data.Segment}'.`;\r\n      if (totalPer !== '100.0') {\r\n        // this.alertService.danger(`You need to add 100% for '${data.Segment}'.`);\r\n\r\n        const found = this.errorMessages.find((item) => item == errorMessage);\r\n        if (!found) {\r\n          this.errorMessages.push(\r\n            `You need to add 100% for '${data.Segment}'.`\r\n          );\r\n        }\r\n        this.disabledButtons = true;\r\n      } else {\r\n        this.errorMessages = this.errorMessages.filter(\r\n          (item) => item !== errorMessage\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      syntheticPenetrationItems: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService.saveSPData(studyDataInfo).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try again later.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForSignOffSPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeSPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      syntheticPenetrationItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffSPData(formData).subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.alertService.success(res.Data);\r\n        // this.dataGrid?.instance.refresh();\r\n        this.getSPData();\r\n        this.isLoadingService.remove();\r\n      } else {\r\n        this.alertService.danger(res.Data);\r\n        this.isLoadingService.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.Segment:\r\n        this.getSegment();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <div *ngIf=\"errorMessages.length > 0\" class=\"alert alert-danger\">\r\n          <ul class=\"pb-0 mb-0\">\r\n            <li *ngFor=\"let errorMessage of errorMessages\">\r\n              {{ errorMessage }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <!-- <dxo-grouping [autoExpandAll]=\"true\"></dxo-grouping> -->\r\n          <!-- <dxo-load-panel [enabled]=\"true\"></dxo-load-panel> -->\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <!-- <dxi-item location=\"before\">\r\n              <div *dxTemplate class=\"pl-3\">\r\n                <dx-button text=\"Preview\"></dx-button>\r\n              </div>\r\n            </dxi-item> -->\r\n\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                    [disabled]=\"errorMessages.length > 0\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                    [disabled]=\"errorMessages.length > 0\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                    [disabled]=\"errorMessages.length > 0\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                    [disabled]=\"\r\n                      disabledSignOffButton || errorMessages.length > 0\r\n                    \"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"Segment\"\r\n            [allowEditing]=\"false\"\r\n            sortOrder=\"asc\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"SyntheticType\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column caption=\"Market Penetration\">\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"PreviousYear1\"\r\n              alignment=\"right\"\r\n              [caption]=\"previousYear1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <!-- <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              dataField=\"PreviousYear1Per\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n            >\r\n            </dxi-column> -->\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"CurrentYear\"\r\n              alignment=\"right\"\r\n              [caption]=\"currentYear\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <!-- <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              dataField=\"CurrentYearPer\"\r\n              [allowEditing]=\"false\"\r\n            >\r\n            </dxi-column> -->\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'perCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? data.value.toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? data.value.toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-synthetic-penetration-preview\r\n          #studyPreview\r\n          [studyData]=\"studyData\"\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear1\"\r\n        ></app-synthetic-penetration-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<!-- Add New Popup -->\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [width]=\"300\"\r\n  [height]=\"470\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"form-group\">\r\n          <label>Segment</label>\r\n          <ng-select\r\n            [items]=\"segments\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"Segment\"\r\n            placeholder=\"Select Market Segment\"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <!-- <div class=\"form-group\">\r\n          <label>Synthetic Type</label>\r\n          <ng-select\r\n            [items]=\"syntheticTypes\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"SyntheticType\"\r\n            placeholder=\"Select Supplier\"\r\n          >\r\n          </ng-select>\r\n        </div> -->\r\n\r\n        <div *ngFor=\"let syntheticType of syntheticTypes\" class=\"form-group\">\r\n          <label>{{ syntheticType.Name }} - {{ currentYear }}</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"currentYear_{{ syntheticType.Id }}\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (click)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<!-- Add New Note -->\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<!-- SignOff Confirm Popup -->\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { DataEntry } from 'src/model/dataEntry.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport {\r\n  VehicleParcStatistics,\r\n  VehicleParcStatisticItem,\r\n} from 'src/model/vehicleParcStatistics.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { VehicleParcStatisticsPreviewComponent } from 'src/app/pages/study-area-preview/components/vehicle-parc-statistics-preview/vehicle-parc-statistics-preview.component';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { DisableStudyEditingComponent } from 'src/app/shared/disable-study-editing/disable-study-editing.component';\r\n\r\n@Component({\r\n  selector: 'app-vehicle-parc-statistics',\r\n  templateUrl: './vehicle-parc-statistics.component.html',\r\n  styleUrls: ['./vehicle-parc-statistics.component.css'],\r\n})\r\nexport class VehicleParcStatisticsComponent implements OnInit {\r\n  @ViewChild(DxDataGridComponent, { static: false })\r\n  dataGrid: DxDataGridComponent | undefined;\r\n\r\n  studyTitle: string = '';\r\n\r\n  studySummary: InitialSetup = new InitialSetup().deserialize({});\r\n\r\n  @ViewChild('studyPreview')\r\n  studyPreview!: VehicleParcStatisticsPreviewComponent;\r\n\r\n  currentYear: number = 0;\r\n  CurrentYearPer: number = 0;\r\n  previousYear1: number = 0;\r\n  previousYear1Per: number = 0;\r\n\r\n  totalCurrentYear: number = 0;\r\n  totalPreviousYear1: number = 0;\r\n\r\n  popupVisible: boolean = false;\r\n  notePopupVisible: boolean = false;\r\n  confirmPopup: boolean = false;\r\n  viewNotePopup: boolean = false;\r\n\r\n  newRowForm: FormGroup;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  selectedRowNotes: any;\r\n\r\n  isStudyEditable: boolean = false;\r\n\r\n  isManage: boolean = false;\r\n  userDetail: UserDetail;\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  studyMarketYearCategoryId: number = 0;\r\n  studyData: VehicleParcStatisticItem[] = [];\r\n\r\n  disabledSignOffButton: boolean = false;\r\n\r\n  segments: DataEntry[] = [];\r\n  syntheticTypes: DataEntry[] = [];\r\n\r\n  disabledButtons: boolean = false;\r\n  errorMessages: string[] = [];\r\n\r\n  yearReduce: number = 1;\r\n\r\n  vehicleTypes: DataEntry[] = [];\r\n\r\n  TooltipTarget: any;\r\n  isTooltipVisible: boolean = false;\r\n  TooltipText: string = '';\r\n\r\n  datRelationsData: DataRelationsData[] = [];\r\n  dataRelationsEnum = DataRelationsEnum;\r\n\r\n  previewGridData: any[] = [];\r\n\r\n  currentCurrency: any = {};\r\n\r\n  previewGridStorageKey: string = '';\r\n\r\n  studyDataRelations: DataRelationsData | undefined;\r\n  studyDataViewId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n  volumeYears: any[] = [];\r\n\r\n  deleteRowConfirmPopup: boolean = false;\r\n\r\n  isLockedStudy: boolean = false;\r\n  @ViewChild(DisableStudyEditingComponent) disableStudyComponent:\r\n    | DisableStudyEditingComponent\r\n    | undefined;\r\n\r\n  constructor(\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private sharedService: SharedService,\r\n    private formBuilder: FormBuilder,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newRowForm = this.formBuilder.group({\r\n      vehicleType: [null, Validators.required],\r\n      CurrentYear: [null, Validators.required],\r\n    });\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.getDataRelations();\r\n    this.isManage = this.userDetail.IsManager == true ? true : false;\r\n\r\n    this.getVehicleTypes();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getSPData();\r\n  }\r\n\r\n  getDataRelations() {\r\n    this.sharedService.getDataRelationsData().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        const data = res.Data as DataRelationsData[];\r\n        this.datRelationsData = data.filter(\r\n          (item) => item.DatabaseId === +this.dataSetId\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  getSPData() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getVPSData(this.marketYearCategoryId, this.studyProjectMarketYearId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          const studyData = res.Data as VehicleParcStatistics;\r\n\r\n          this.studyMarketYearCategoryId = studyData.MarketYearCategoryId;\r\n\r\n          this.studyData =\r\n            studyData.VehicleParcItems as VehicleParcStatisticItem[];\r\n\r\n          this.studySummary = new InitialSetup().deserialize(\r\n            studyData.InitialSetup\r\n          );\r\n\r\n          this.isManage =\r\n            this.userDetail.Id === this.studySummary.ProjectLeadId\r\n              ? true\r\n              : false;\r\n\r\n          this.isLockedStudy =\r\n            !this.studySummary.IsSignOff &&\r\n            this.studySummary.LockedForEditBy === this.userDetail.Id\r\n              ? true\r\n              : false;\r\n\r\n          this.studyTitle = `${this.studySummary.StudyDataSetName}-${this.studySummary.StudyYear}-${this.studySummary.MarketName}`;\r\n\r\n          this.isStudyEditable = this.studySummary.IsSignOff || false;\r\n\r\n          let currentYear =\r\n            this.studySummary.StudyYear || new Date().getFullYear();\r\n\r\n          currentYear = currentYear - this.yearReduce;\r\n\r\n          this.currentYear = currentYear;\r\n          this.previousYear1 = currentYear - 1;\r\n\r\n          const isDataRowNull = this.studyData.find(\r\n            (data) => data.DataRowId !== null\r\n          );\r\n\r\n          if (!isDataRowNull) {\r\n            this.disabledSignOffButton = true;\r\n          }\r\n\r\n          const { totalCurrentYear, totalPreviousYear1 } =\r\n            this.studyData.reduce(\r\n              ({ totalCurrentYear, totalPreviousYear1 }, currentYear) => ({\r\n                totalCurrentYear: totalCurrentYear + currentYear.CurrentYear,\r\n                totalPreviousYear1:\r\n                  totalPreviousYear1 + currentYear.PreviousYear1,\r\n              }),\r\n              { totalCurrentYear: 0, totalPreviousYear1: 0 }\r\n            );\r\n\r\n          this.totalPreviousYear1 = totalPreviousYear1;\r\n          this.totalCurrentYear = totalCurrentYear;\r\n\r\n          this.studyData.map((item: any, i) => {\r\n            const rowNoteArray: any = [];\r\n            if (item.Notes !== null) {\r\n              const noteArray = item.Notes.split('|||');\r\n              noteArray.map((singleVal: any) => {\r\n                const n = singleVal.split('@@@');\r\n                const d = n[0].split('###');\r\n                rowNoteArray.push({\r\n                  name: d[0].trim(),\r\n                  date: new Date(d[1].trim()),\r\n                  note: n[1].trim(),\r\n                });\r\n              });\r\n            }\r\n\r\n            let sortRowNoteArray: any = [];\r\n            if (rowNoteArray.length > 0) {\r\n              sortRowNoteArray = rowNoteArray.sort(\r\n                (a: any, b: any) => b.date - a.date\r\n              );\r\n            }\r\n\r\n            let prevPer: number = 0;\r\n            if (item.PreviousYear1 != '' && item.PreviousYear1 > 0) {\r\n              prevPer = this.calculatePerVolume(\r\n                item.PreviousYear1,\r\n                this.totalPreviousYear1\r\n              );\r\n            }\r\n\r\n            let currPer: number = 0;\r\n            if (item.CurrentYear != '' && item.CurrentYear > 0) {\r\n              currPer = this.calculatePerVolume(\r\n                item.CurrentYear,\r\n                this.totalCurrentYear\r\n              );\r\n            }\r\n\r\n            let changelogObj: any[] = [];\r\n            if (item.ChangeLog !== null) {\r\n              const colValues = item.ChangeLog.split('|||');\r\n              if (colValues) {\r\n                colValues.map((cv: any) => {\r\n                  const colValueArray = cv.trim().split('###');\r\n                  // console.log(colValueArray);\r\n                  changelogObj[colValueArray[3]] = {\r\n                    name: colValueArray[0],\r\n                    date: colValueArray[1],\r\n                    oldValue: colValueArray[2],\r\n                    year: colValueArray[3],\r\n                  };\r\n                });\r\n              }\r\n            }\r\n\r\n            this.studyData[i].StudyNotes =\r\n              rowNoteArray.length > 0 ? rowNoteArray[0].note : '';\r\n            this.studyData[i].EditNote = false;\r\n            this.studyData[i].Notes = null;\r\n            this.studyData[i].NoteArray = rowNoteArray;\r\n            this.studyData[i].PreviousYear1Per = parseFloat(prevPer.toFixed(1));\r\n            this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));\r\n            this.studyData[i].OldCurrentYear = item.CurrentYear;\r\n            this.studyData[i].ChangeLogObj = changelogObj;\r\n          });\r\n\r\n          this.studyPreview.changeStudyData(this.studyData);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n      });\r\n  }\r\n\r\n  getVehicleTypes() {\r\n    this.sharedService.getVehicleTypes().subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.vehicleTypes = res.Data as DataEntry[];\r\n      }\r\n    });\r\n  }\r\n\r\n  calculatePerVolume(colValue: number, totalColValue: number) {\r\n    return parseFloat(((colValue * 100) / totalColValue).toFixed(1));\r\n  }\r\n\r\n  onRowSaved(e: any) {\r\n    if (e.changes) {\r\n      const data = e.changes[0].data as VehicleParcStatisticItem;\r\n      // console.log(e);\r\n      const currentYear: number = +data.CurrentYear;\r\n      const oldCurrentYEar: number = +data.OldCurrentYear;\r\n\r\n      this.totalCurrentYear = this.totalCurrentYear - oldCurrentYEar;\r\n\r\n      this.totalCurrentYear = this.totalCurrentYear + currentYear;\r\n\r\n      data.OldCurrentYear = currentYear;\r\n\r\n      this.studyData.map((item: any, i) => {\r\n        // console.log(item);\r\n        if (item.CurrentYear > 0) {\r\n          const currPer = this.calculatePerVolume(\r\n            item.CurrentYear,\r\n            this.totalCurrentYear\r\n          );\r\n\r\n          this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));\r\n        }\r\n      });\r\n      // this.studyPreview.changeStudyData(this.studyData);\r\n      // console.log(this.studyData);\r\n    }\r\n  }\r\n\r\n  addNewRowPopup() {\r\n    this.popupVisible = true;\r\n  }\r\n\r\n  submitNewRow() {\r\n    const newRowData = this.newRowForm.value;\r\n\r\n    const newRow: VehicleParcStatisticItem = {\r\n      CurrentYear: newRowData.CurrentYear,\r\n      OldCurrentYear: newRowData.CurrentYear,\r\n      DataRowId: '',\r\n      Notes: null,\r\n      StudyNotes: '',\r\n      EditNote: false,\r\n      NoteArray: null,\r\n      PreviousYear1: newRowData.PreviousYear1,\r\n      PreviousYear1Per: 0,\r\n      CurrentYearPer: 0,\r\n      VehicleType: newRowData.vehicleType.Name,\r\n      VehicleTypeId: newRowData.vehicleType.Id,\r\n      ChangeLog: '',\r\n      ChangeLogObj: [],\r\n      IsNewRow: true,\r\n    };\r\n\r\n    const isFound = this.studyData.find(\r\n      (item) => item.VehicleTypeId == newRow.VehicleTypeId\r\n    );\r\n\r\n    if (!isFound) {\r\n      this.totalCurrentYear =\r\n        this.totalCurrentYear + parseFloat(newRowData.CurrentYear);\r\n      this.studyData.push(newRow);\r\n\r\n      this.studyData.map((item: any, i) => {\r\n        let currPer: number = 0;\r\n        if (item.CurrentYear != '' && item.CurrentYear > 0) {\r\n          currPer = this.calculatePerVolume(\r\n            item.CurrentYear,\r\n            this.totalCurrentYear\r\n          );\r\n        }\r\n\r\n        this.studyData[i].CurrentYearPer = parseFloat(currPer.toFixed(1));\r\n      });\r\n\r\n      // this.studyData.sort((a, b) => a.VehicleTypeId - b.VehicleTypeId);\r\n\r\n      this.popupVisible = false;\r\n      this.newRowForm.reset();\r\n      this.newRowForm.updateValueAndValidity();\r\n      // this.studyPreview.changeStudyData(this.studyData);\r\n    } else {\r\n      this.alertService.danger('You have already added this data in row.');\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e: any) {\r\n    if (typeof e.rowType !== 'undefined' && e.rowType === 'data') {\r\n      if (typeof e.data.IsNewRow !== 'undefined' && e.data.IsNewRow) {\r\n        e.rowElement.classList.add('highlighter-tr');\r\n      }\r\n    }\r\n  }\r\n\r\n  saveStudyData() {\r\n    this.studyData.map((d: any) => {\r\n      delete d.ChangeLogObj;\r\n      return d;\r\n    });\r\n    const studyDataInfo = {\r\n      marketYearCategoryId: this.marketYearCategoryId,\r\n      initialSetup: this.studySummary,\r\n      vehicleParcItems: this.studyData,\r\n    };\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .saveVPData(studyDataInfo)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          // this.dataGrid?.instance.refresh();\r\n          this.reloadCurrentRoute();\r\n          // this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  addNotes(data: any) {\r\n    this.newNoteForm.get('note')?.setValue(data.data.Notes);\r\n    this.newNoteForm.get('rowData')?.setValue(data);\r\n    this.notePopupVisible = true;\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  showNotePopup(row: any) {\r\n    this.selectedRowNotes = row.data.NoteArray;\r\n    this.viewNotePopup = true;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    // this.selectedRowItem = [];\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.newRowForm.updateValueAndValidity();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    const rowData = this.newNoteForm.value.rowData;\r\n    const rowIndex = rowData.rowIndex;\r\n    const newNote = this.newNoteForm.value.note;\r\n    // this.studyData[rowIndex].Notes =\r\n    //   newNote + ', ' + this.studyData[rowIndex].Notes;\r\n    const IsEditedNote = this.dataGrid?.instance.cellValue(\r\n      rowIndex,\r\n      'EditNote'\r\n    );\r\n\r\n    this.notePopupVisible = false;\r\n    // let noteValue = this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes');\r\n    let noteValue = rowData.data.StudyNotes;\r\n    noteValue = noteValue !== null ? noteValue : '';\r\n\r\n    if (IsEditedNote) {\r\n      const noteArray =\r\n        noteValue.indexOf(',') > -1 ? noteValue.split(',') : [noteValue];\r\n\r\n      noteArray.shift();\r\n\r\n      noteValue = noteArray.join(',');\r\n    }\r\n\r\n    const newNoteValue =\r\n      noteValue !== '' ? `${newNote}, ${noteValue}` : newNote;\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'Notes', newNote);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'StudyNotes', newNoteValue);\r\n    this.dataGrid?.instance.saveEditData();\r\n    this.dataGrid?.instance.cellValue(rowIndex, 'EditNote', true);\r\n    this.dataGrid?.instance.saveEditData();\r\n  }\r\n\r\n  onRequestForSignOffClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeVPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onRequestForChangeDataClick() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .requestForChangeVPData(this.studySummary)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSignOffClick() {\r\n    this.confirmPopup = true;\r\n  }\r\n\r\n  onSignOffData() {\r\n    const formData = {\r\n      marketYearCategoryId: +this.marketYearCategoryId,\r\n      initialSetup: {\r\n        studyDataSetId: this.studySummary.StudyDataSetId,\r\n        studyDataSetName: this.studySummary.StudyDataSetName,\r\n        studyProjectId: this.studySummary.StudyProjectId,\r\n        projectName: this.studySummary.ProjectName,\r\n        projectLeadId: this.studySummary.ProjectLeadId,\r\n        projectLead: this.studySummary.ProjectLead,\r\n        analystId: this.studySummary.AnalystId,\r\n        analystName: this.studySummary.AnalystName,\r\n        studyYear: this.studySummary.StudyYear,\r\n        marketId: this.studySummary.MarketId,\r\n        marketName: this.studySummary.MarketName,\r\n        studyAreaId: this.studySummary.StudyAreaId,\r\n        studyAreaName: this.studySummary.StudyAreaName,\r\n        name: this.studySummary.Name,\r\n        description: this.studySummary.Description,\r\n        id: this.studySummary.Id,\r\n        prefillFromId: this.studySummary.PrefillFromId,\r\n\r\n        analystIdList: this.studySummary.AnalystIdList,\r\n        analystNameList: this.studySummary.AnalystNameList,\r\n        isSignOff: this.studySummary.IsSignOff,\r\n        isMidYear: this.studySummary.IsMidYear,\r\n        lockedForEditBy: this.studySummary.LockedForEditBy,\r\n        lockedForEditByName: this.studySummary.LockedForEditByName,\r\n        csvAnalystIds: this.studySummary.CSVAnalystIds,\r\n        csvAnalystNames: this.studySummary.CSVAnalystNames,\r\n        calculatorId: this.studySummary.CalculatorId,\r\n      },\r\n      vehicleParcItems: [],\r\n    };\r\n\r\n    this.confirmPopup = false;\r\n    this.isLoadingService.add();\r\n    this.studyService.signOffVPData(formData).subscribe((res: ApiResponse) => {\r\n      if (res.HttpStatusCode === 200) {\r\n        this.alertService.success(res.Data);\r\n        // this.dataGrid?.instance.refresh();\r\n        this.getSPData();\r\n        this.isLoadingService.remove();\r\n      } else {\r\n        this.alertService.danger(res.Data);\r\n        this.isLoadingService.remove();\r\n      }\r\n    });\r\n  }\r\n\r\n  onCellPreparedHighlighter(e: any) {\r\n    // console.log(e);\r\n    const allowedCols = ['CurrentYear'];\r\n\r\n    const isFound = allowedCols.some((item) => item === e.column.dataField);\r\n    if (e.rowType === 'data' && isFound) {\r\n      if (e.data.ChangeLogObj.length > 0) {\r\n        const cellValue =\r\n          typeof e.data.ChangeLogObj[e.column.caption] !== 'undefined'\r\n            ? e.data.ChangeLogObj[e.column.caption]\r\n            : null;\r\n        if (cellValue !== null) {\r\n          // e.cellElement.bgColor = '#FFFF00';\r\n          e.cellElement.className = 'highlighter-td';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onCellHoverChanged(event: any) {\r\n    const allowedCols = ['CurrentYear'];\r\n    if (typeof event.column !== 'undefined') {\r\n      const isFound = allowedCols.some(\r\n        (item) => item === event.column.dataField\r\n      );\r\n      if (event.rowType === 'data' && isFound) {\r\n        this.TooltipTarget = event.cellElement;\r\n        if (event.eventType === 'mouseover') {\r\n          if (event.data.ChangeLogObj.length > 0) {\r\n            const cellValue =\r\n              typeof event.data.ChangeLogObj[event.column.caption] !==\r\n              'undefined'\r\n                ? event.data.ChangeLogObj[event.column.caption]\r\n                : null;\r\n            if (cellValue !== null) {\r\n              const oldValue = !isNaN(cellValue.oldValue)\r\n                ? +cellValue.oldValue\r\n                : 0;\r\n              const html = `<div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Name:</div>\r\n                            <div class=\"col-md-8\">${cellValue.name}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Old Value:</div>\r\n                            <div class=\"col-md-8\">${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class=\"row text-left\">\r\n                            <div class=\"col-md-4\">Date:</div>\r\n                            <div class=\"col-md-8\">${cellValue.date}</div>\r\n                        </div>`;\r\n              this.TooltipText = html;\r\n              this.isTooltipVisible = true;\r\n            }\r\n          }\r\n          // console.log(this.ToolTipText);\r\n        }\r\n\r\n        if (event.eventType === 'mouseout') {\r\n          // console.log(this.ToolTipText);\r\n          // this.ToolTipText = 'Blah Bl;ah Blah';\r\n          this.isTooltipVisible = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.datRelationsData.find(\r\n      (item) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(type);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  loadDataEntry(type: string) {\r\n    switch (type) {\r\n      case DataRelationsEnum.VehicleType:\r\n        this.getVehicleTypes();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  deleteRowData: any;\r\n  deleteRow(dataRowId: string) {\r\n    this.deleteRowData = {\r\n      DataSetId: this.studySummary.StudyDataSetId,\r\n      DataItemCategoryId: this.studySummary.StudyAreaId,\r\n      MarketYearCategoryDataId: this.marketYearCategoryId,\r\n      DataRowId: dataRowId,\r\n    };\r\n\r\n    this.deleteRowConfirmPopup = true;\r\n  }\r\n\r\n  confirmDeleteRow() {\r\n    console.log(this.deleteRowData);\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .removeStudyDataRow(\r\n        this.deleteRowData.DataSetId,\r\n        this.deleteRowData.DataItemCategoryId,\r\n        this.deleteRowData.MarketYearCategoryDataId,\r\n        this.deleteRowData.DataRowId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          this.onDeleteRowConfirmPopupHide();\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteRowConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onDeleteRowConfirmPopupHide() {\r\n    this.deleteRowData = {};\r\n    this.deleteRowConfirmPopup = false;\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.disableStudyComponent?.unlockStudy();\r\n  }\r\n}\r\n","<app-show-initial-setup\r\n  [studySummaryData]=\"studySummary\"\r\n></app-show-initial-setup>\r\n\r\n<div class=\"container-fluid my-4\">\r\n  <dx-tab-panel id=\"tabPanel\">\r\n    <dxi-item title=\"Data Entry\">\r\n      <div class=\"container-fluid my-4\">\r\n        <app-disable-study-editing\r\n          [studyInitialSetupData]=\"studySummary\"\r\n          [marketYearCategoryId]=\"marketYearCategoryId\"\r\n          [setIsStudyDataFound]=\"studyData.length > 0 ? true : false\"\r\n        ></app-disable-study-editing>\r\n        <dx-data-grid\r\n          *ngIf=\"studyData\"\r\n          id=\"gridContainer\"\r\n          [dataSource]=\"studyData\"\r\n          [showBorders]=\"true\"\r\n          [allowColumnResizing]=\"true\"\r\n          [columnMinWidth]=\"50\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          (onSaved)=\"onRowSaved($event)\"\r\n          (onCellPrepared)=\"onCellPreparedHighlighter($event)\"\r\n          (onCellHoverChanged)=\"onCellHoverChanged($event)\"\r\n          (onRowPrepared)=\"onRowPrepared($event)\"\r\n        >\r\n          <dxo-paging [enabled]=\"false\"></dxo-paging>\r\n          <dxo-filter-row [visible]=\"true\" applyFilter=\"auto\"></dxo-filter-row>\r\n          <dxo-header-filter [visible]=\"true\"></dxo-header-filter>\r\n          <dxo-editing\r\n            mode=\"cell\"\r\n            [allowUpdating]=\"true\"\r\n            [allowAdding]=\"false\"\r\n            [allowDeleting]=\"false\"\r\n            [enabled]=\"true\"\r\n          >\r\n          </dxo-editing>\r\n\r\n          <dxo-toolbar>\r\n            <dxi-item location=\"before\" class=\"dx-field\">\r\n              <div *dxTemplate class=\"ml-3\">\r\n                <h6>{{ studyTitle }}</h6>\r\n              </div>\r\n            </dxi-item>\r\n\r\n            <ng-container *ngIf=\"!isStudyEditable\">\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"plus\"\r\n                    text=\"Add New Row\"\r\n                    (onClick)=\"addNewRowPopup()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"save\"\r\n                    stylingMode=\"outlined\"\r\n                    text=\"Save Data\"\r\n                    type=\"default\"\r\n                    (onClick)=\"saveStudyData()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n\r\n              <dxi-item *ngIf=\"!isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"Request for SignOff\"\r\n                    (onClick)=\"onRequestForSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"revert\"\r\n                    type=\"default\"\r\n                    text=\"Request for Change Data\"\r\n                    (onClick)=\"onRequestForChangeDataClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isManage\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    icon=\"check\"\r\n                    type=\"success\"\r\n                    text=\"SignOff Data\"\r\n                    [disabled]=\"disabledSignOffButton\"\r\n                    (onClick)=\"onSignOffClick()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n              <dxi-item *ngIf=\"isLockedStudy\" location=\"after\">\r\n                <div *dxTemplate>\r\n                  <dx-button\r\n                    stylingMode=\"outlined\"\r\n                    icon=\"fas fa-unlock\"\r\n                    type=\"default\"\r\n                    (onClick)=\"unlockStudy()\"\r\n                  ></dx-button>\r\n                </div>\r\n              </dxi-item>\r\n            </ng-container>\r\n          </dxo-toolbar>\r\n\r\n          <dxi-column\r\n            dataField=\"VehicleType\"\r\n            [allowEditing]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column caption=\"Value (in Mil Unit)\">\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"PreviousYear1\"\r\n              [caption]=\"previousYear1\"\r\n              cellTemplate=\"previousYear1CellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              dataField=\"PreviousYear1Per\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              dataField=\"CurrentYear\"\r\n              [caption]=\"currentYear\"\r\n              cellTemplate=\"volumeYearCellTemplate\"\r\n              [allowEditing]=\"!isStudyEditable\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n            <dxi-column\r\n              [width]=\"100\"\r\n              caption=\"% of Total\"\r\n              cellTemplate=\"perCellTemplate\"\r\n              dataField=\"CurrentYearPer\"\r\n              [allowEditing]=\"false\"\r\n              [allowFiltering]=\"false\"\r\n            >\r\n            </dxi-column>\r\n          </dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"StudyNotes\"\r\n            cellTemplate=\"notesCellTemplate\"\r\n            [allowEditing]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            caption=\"Notes\"\r\n            dataField=\"Notes\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n          <dxi-column\r\n            dataField=\"EditNote\"\r\n            [allowEditing]=\"false\"\r\n            [visible]=\"false\"\r\n            [allowFiltering]=\"false\"\r\n          ></dxi-column>\r\n\r\n          <dxi-column\r\n            *ngIf=\"!isStudyEditable && !disabledSignOffButton\"\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"50\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              *ngIf=\"d.data.DataRowId !== null\"\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              (onClick)=\"deleteRow(d.data.DataRowId)\"\r\n              type=\"danger\"\r\n            ></dx-button>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'previousYear1CellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value.toFixed(1) : \"\" }}</span>\r\n          </div>\r\n          <div *dxTemplate=\"let data of 'perCellTemplate'\">\r\n            <span>{{ data.value > 0 ? data.value : \"\" }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'volumeYearCellTemplate'\">\r\n            <input\r\n              *ngIf=\"!isStudyEditable\"\r\n              type=\"text\"\r\n              [value]=\"data.value > 0 ? (data.value * 1).toFixed(1) : ''\"\r\n              class=\"form-control form-control-sm p-1 text-right\"\r\n            />\r\n            <span *ngIf=\"isStudyEditable\">{{\r\n              data.value > 0 ? (data.value * 1).toFixed(1) : \"\"\r\n            }}</span>\r\n          </div>\r\n\r\n          <div *dxTemplate=\"let data of 'notesCellTemplate'\">\r\n            <div class=\"text-left\" style=\"height: 15px\">\r\n              <dx-button\r\n                *ngIf=\"!isStudyEditable\"\r\n                stylingMode=\"text\"\r\n                icon=\"plus\"\r\n                type=\"default\"\r\n                class=\"small floating-note-button\"\r\n                (onClick)=\"addNotes(data)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n            <div class=\"mt-2 note-cell-value\">\r\n              <a href=\"javascript: void(0);\" (click)=\"showNotePopup(data)\">{{\r\n                data.value\r\n              }}</a>\r\n            </div>\r\n          </div>\r\n        </dx-data-grid>\r\n\r\n        <dx-tooltip [target]=\"TooltipTarget\" [visible]=\"isTooltipVisible\">\r\n          <div\r\n            *dxTemplate=\"let data of 'content'\"\r\n            [innerHTML]=\"TooltipText\"\r\n          ></div>\r\n        </dx-tooltip>\r\n      </div>\r\n    </dxi-item>\r\n\r\n    <dxi-item title=\"Data Preview\">\r\n      <div class=\"container-fluid my-4\">\r\n        <!-- <app-synthetic-penetration-preview\r\n          [studyData]=\"studyData\"\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear1\"\r\n        ></app-synthetic-penetration-preview> -->\r\n        <app-vehicle-parc-statistics-preview\r\n          #studyPreview\r\n          [currentYear]=\"currentYear\"\r\n          [previousYear]=\"previousYear1\"\r\n          [studyData]=\"studyData\"\r\n        ></app-vehicle-parc-statistics-preview>\r\n      </div>\r\n    </dxi-item>\r\n  </dx-tab-panel>\r\n</div>\r\n\r\n<dx-popup\r\n  *ngIf=\"popupVisible\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add New Row\"\r\n  [width]=\"300\"\r\n  [height]=\"300\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"popupVisible\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"newRowForm\">\r\n        <div class=\"form-group\">\r\n          <label>Vehicle Type</label>\r\n          <ng-select\r\n            [items]=\"vehicleTypes\"\r\n            bindLabel=\"Name\"\r\n            formControlName=\"vehicleType\"\r\n            placeholder=\"Select Vehicle Type\"\r\n            addTagText=\"Create New\"\r\n            [addTag]=\"\r\n              createNewDataEntry.bind(this, dataRelationsEnum.VehicleType)\r\n            \"\r\n          >\r\n          </ng-select>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Volume Year - {{ currentYear }}</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            formControlName=\"CurrentYear\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group text-center mb-0\">\r\n          <dx-button\r\n            [disabled]=\"newRowForm.invalid\"\r\n            icon=\"plus\"\r\n            type=\"default\"\r\n            text=\"Save Row\"\r\n            (onClick)=\"submitNewRow()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"300\"\r\n  [height]=\"250\"\r\n  [showTitle]=\"true\"\r\n  title=\"Add Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"notePopupVisible\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"form-group\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"note\"\r\n            rows=\"3\"\r\n            maxlength=\"1000\"\r\n            [ngClass]=\"{\r\n              'is-invalid': noteSubmit && n['note'].errors\r\n            }\"\r\n          ></textarea>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n          <dx-button\r\n            icon=\"plus\"\r\n            text=\"Save Note\"\r\n            type=\"default\"\r\n            [disabled]=\"newNoteForm.invalid\"\r\n            (onClick)=\"onSaveNote()\"\r\n          ></dx-button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"600\"\r\n  [showTitle]=\"true\"\r\n  title=\"Notes\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid\r\n        *ngIf=\"selectedRowNotes\"\r\n        [dataSource]=\"selectedRowNotes\"\r\n        [showBorders]=\"true\"\r\n        [columnMinWidth]=\"100\"\r\n        [columnHidingEnabled]=\"false\"\r\n        [rowAlternationEnabled]=\"true\"\r\n        [wordWrapEnabled]=\"true\"\r\n      >\r\n        <dxi-column dataField=\"name\" dataType=\"string\"></dxi-column>\r\n        <dxi-column\r\n          dataField=\"date\"\r\n          dataType=\"date\"\r\n          [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n        ></dxi-column>\r\n        <dxi-column dataField=\"note\" dataType=\"string\"></dxi-column>\r\n      </dx-data-grid>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"SignOff Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"confirmPopup\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to SignOff Data?</p>\r\n      <p>You can not change data after SignOff.</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"SignOff Data\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"onSignOffData()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Cancel\"\r\n          (onClick)=\"confirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteRowConfirmPopup\"\r\n  (onHidden)=\"onDeleteRowConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this row?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteRow()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteRowConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { StudyAreaCategory } from 'src/model/studyDataSet.model';\r\nimport { PendingChangesService } from 'src/services/pending-changes.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-study-area',\r\n  templateUrl: './study-area.component.html',\r\n  styleUrls: ['./study-area.component.css'],\r\n})\r\nexport class StudyAreaComponent implements OnInit {\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n  @Output() checkPendingChanges = new EventEmitter<any>();\r\n  studyPageTitle: string = '';\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private sharedService: SharedService,\r\n    private isLoadingService: IsLoadingService,\r\n    private pendingChangesService: PendingChangesService,\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.getStudyAreaCategory();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.isLoadingService.isLoading$()) {\r\n      this.isLoadingService.remove();\r\n    }\r\n  }\r\n  canDeactivate(){\r\n   const canNavigate = this.pendingChangesService.getTableDirtyFlag();\r\n   return !canNavigate; \r\n  }\r\n  getStudyAreaCategory() {\r\n    this.sharedService\r\n      .getStudyAreaCategory(this.dataSetId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          const studyAreaCategories = res.Data as StudyAreaCategory[];\r\n          const found = studyAreaCategories.filter(\r\n            (item) => item.Id == this.studyAreaId\r\n          );\r\n\r\n          if (found) {\r\n            this.studyPageTitle = found[0].Name || '';\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","<app-header [setTitle]=\"studyPageTitle\"></app-header>\r\n\r\n<div *ngIf=\"studyAreaId; else noDataFoundContainer\">\r\n  <app-study></app-study>\r\n\r\n  <!-- <app-lubricant-demand\r\n    *ngSwitchCase=\"studyAreaId == 1 || studyAreaId == 7 ? studyAreaId : ''\"\r\n  ></app-lubricant-demand>\r\n  <app-supplier-market-share\r\n    *ngSwitchCase=\"studyAreaId == 2 || studyAreaId == 8 ? studyAreaId : ''\"\r\n  ></app-supplier-market-share>\r\n  <app-synthetic-penetration\r\n    *ngSwitchCase=\"studyAreaId == 3 || studyAreaId == 9 ? studyAreaId : ''\"\r\n  ></app-synthetic-penetration>\r\n  <app-vehicle-parc-statistics\r\n    *ngSwitchCase=\"studyAreaId == 4 || studyAreaId == 10 ? studyAreaId : ''\"\r\n  ></app-vehicle-parc-statistics>\r\n  <app-service-category-consumption\r\n    *ngSwitchCase=\"studyAreaId == 5 || studyAreaId == 11 ? studyAreaId : ''\"\r\n  ></app-service-category-consumption>\r\n\r\n  <app-average-price\r\n    *ngSwitchCase=\"\r\n      studyAreaId == 13 ||\r\n      studyAreaId == 14 ||\r\n      studyAreaId == 15 ||\r\n      studyAreaId == 16\r\n        ? studyAreaId\r\n        : ''\r\n    \"\r\n  ></app-average-price>\r\n\r\n  <app-specialty-excipient-sales\r\n    *ngSwitchCase=\"\r\n      studyAreaId == 18 ||\r\n      studyAreaId == 19 ||\r\n      studyAreaId == 20 ||\r\n      studyAreaId == 21\r\n        ? studyAreaId\r\n        : ''\r\n    \"\r\n  ></app-specialty-excipient-sales>\r\n\r\n  <app-psc\r\n    *ngSwitchCase=\"\r\n      studyAreaId == 23 ||\r\n      studyAreaId == 24 ||\r\n      studyAreaId == 25 ||\r\n      studyAreaId == 26 ||\r\n      studyAreaId == 27\r\n        ? studyAreaId\r\n        : ''\r\n    \"\r\n  ></app-psc>\r\n\r\n  <app-shc\r\n    *ngSwitchCase=\"\r\n      studyAreaId == 28 ||\r\n      studyAreaId == 29 ||\r\n      studyAreaId == 30 ||\r\n      studyAreaId == 31 ||\r\n      studyAreaId == 32 ||\r\n      studyAreaId == 33 ||\r\n      studyAreaId == 34\r\n        ? studyAreaId\r\n        : ''\r\n    \"\r\n  ></app-shc>\r\n\r\n  <app-ehc *ngSwitchCase=\"dataSetId == 5 ? studyAreaId : ''\"></app-ehc>\r\n  <app-ivm *ngSwitchCase=\"dataSetId == 6 ? studyAreaId : ''\"></app-ivm>\r\n  <app-pnc *ngSwitchCase=\"dataSetId == 7 ? studyAreaId : ''\"></app-pnc> -->\r\n  <!-- <p *ngSwitchDefault>No Study Found</p> -->\r\n</div>\r\n\r\n<ng-template #noDataFoundContainer>\r\n  <p>No Study Found</p>\r\n</ng-template>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { CellClickedEvent, ColDef, GridReadyEvent } from 'ag-grid-community';\r\n\r\n@Component({\r\n  selector: 'app-ag-grid',\r\n  templateUrl: './ag-grid.component.html',\r\n  styleUrls: ['./ag-grid.component.css']\r\n})\r\nexport class AgGridComponent implements OnInit {\r\n@Input() rowData: any;\r\n@Input() columnDefs: any\r\n@Input() pagination: boolean = true;\r\n@Input() paginationPageSize: number = 10;\r\n@Input() title: string = '';\r\n public defaultColDef: ColDef = {\r\n    sortable: true,\r\n    filter: true,\r\n    floatingFilter: true\r\n  };\r\n\r\n  public rowSelection: 'single' | 'multiple' = 'multiple';\r\n \r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"pull-right\">\r\n  {{title}}\r\n  <ng-content>\r\n    \r\n  </ng-content>\r\n\r\n</div>\r\n\r\n\r\n<ag-grid-angular style=\"width: 100%; height: 500px\"\r\n   class=\"ag-theme-alpine\"\r\n   [columnDefs]=\"columnDefs\"\r\n   [defaultColDef]=\"defaultColDef\"\r\n   [rowData]=\"rowData\"\r\n   [rowSelection]=\"'multiple'\"\r\n   [animateRows]=\"true\"\r\n   [copyHeadersToClipboard]=\"true\"\r\n   [enableRangeSelection]=\"true\"\r\n   [rowSelection]=\"rowSelection\"\r\n   [suppressCopySingleCellRanges]=\"true\"\r\n   [pagination]=\"pagination\"\r\n   [paginationPageSize]=\"paginationPageSize\"\r\n ></ag-grid-angular>\r\n \r\n","import { outputAst } from '@angular/compiler';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nimport { PendingChangesService } from 'src/services/pending-changes.service';\r\nimport { HandsonTableComponent } from '../handson-table/handson-table.component';\r\n\r\n@Component({\r\n  selector: 'app-confirm-navigation',\r\n  templateUrl: './confirm-navigation.component.html',\r\n  styleUrls: ['./confirm-navigation.component.css']\r\n})\r\nexport class ConfirmNavigationComponent {\r\n  @Output() saveChanges = new EventEmitter<any>();\r\n  constructor(private pendingChangesService: PendingChangesService){}\r\n  @Input() opened:any;\r\n\r\n  confirm(): void {\r\n    this.pendingChangesService.confirm();\r\n  }\r\n\r\n  cancel(): void {\r\n    this.pendingChangesService.setPendingChanges(false);\r\n    this.saveChanges.emit();\r\n    this.pendingChangesService.cancel();\r\n  }\r\n  public onDialogClose() {\r\n    this.opened = false;\r\n    this.pendingChangesService.cancel();\r\n  }\r\n\r\n}\r\n","<dx-popup\r\n  [width]=\"340\"\r\n  [height]=\"240\"\r\n  [showTitle]=\"true\"\r\n  title=\"Confirm Navigation\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]= \"opened\"\r\n  (onHidden)=\"onDialogClose()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">You have unsaved changes!</p>\r\n      <p>Do you want to save changes or leave?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Save Changes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"cancel()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"Leave\"\r\n          type=\"danger\"\r\n          (onClick)=\"confirm()\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { InitialSetup } from 'src/model/initialSetup.model';\r\nimport { Market } from 'src/model/market.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { SharedService } from 'src/services/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-disable-study-editing',\r\n  templateUrl: './disable-study-editing.component.html',\r\n  styleUrls: ['./disable-study-editing.component.css'],\r\n})\r\nexport class DisableStudyEditingComponent implements OnInit {\r\n  isUnlockStudy: boolean = false;\r\n  isLockedByOther: boolean = false;\r\n  isSignOffStudy: boolean = false;\r\n\r\n  studyInitialSetup?: InitialSetup;\r\n  @Input() set studyInitialSetupData(data: InitialSetup) {\r\n    if (data) {\r\n      this.studyInitialSetup = data;\r\n      this.isUnlockStudy =\r\n        this.studyInitialSetup.LockedForEditBy === 0 ||\r\n        this.studyInitialSetup.LockedForEditBy === null\r\n          ? true\r\n          : false;\r\n\r\n      this.isLockedByOther =\r\n        !this.isUnlockStudy &&\r\n        this.studyInitialSetup.LockedForEditBy !== this.currentUser.Id\r\n          ? true\r\n          : false;\r\n\r\n      this.isSignOffStudy = this.studyInitialSetup.IsSignOff || false;\r\n      this.getMarket();\r\n    }\r\n  }\r\n\r\n  @Input() marketYearCategoryId = 0;\r\n\r\n  isStudyDataFound: boolean = true;\r\n  @Input() set setIsStudyDataFound(data: boolean) {\r\n    this.isStudyDataFound = data;\r\n  }\r\n\r\n  currentUser: UserDetail;\r\n\r\n  markets: Market[] = [];\r\n\r\n  selectedMarket: any;\r\n\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private sharedService: SharedService,\r\n    private alertService: AlertService,\r\n    private isLoadingService: IsLoadingService,\r\n    private router: Router\r\n  ) {\r\n    this.currentUser = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  lockStudy() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .setLockUnlockStudy(this.marketYearCategoryId, true)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          //if (err.status === 401) {\r\n            this.isLoadingService.remove();\r\n          //}\r\n        }\r\n      );\r\n  }\r\n\r\n  unlockStudy() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .setLockUnlockStudy(this.marketYearCategoryId, false)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          //if (err.status === 401) {\r\n            this.isLoadingService.remove();\r\n          //}\r\n        }\r\n      );\r\n  }\r\n\r\n  requestForUnlock() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .requestForUnlockStudy(this.marketYearCategoryId, this.studyInitialSetup)\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          //if (err.status === 401) {\r\n            this.isLoadingService.remove();\r\n          //}\r\n        }\r\n      );\r\n  }\r\n\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  getMarket() {\r\n    const dataSetId = this.studyInitialSetup?.StudyDataSetId || 0;\r\n    const year = this.studyInitialSetup?.StudyYear || new Date().getFullYear();\r\n    this.sharedService\r\n      .getMarket(dataSetId, year)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.markets = res.Data as Market[];\r\n        }\r\n      });\r\n  }\r\n\r\n  copyStudyData() {\r\n    this.isLoadingService.add();\r\n    this.sharedService\r\n      .migrateDataFromAnotherMarket(\r\n        this.marketYearCategoryId,\r\n        this.selectedMarket.Id\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            this.alertService.success(res.Data);\r\n            this.reloadCurrentRoute();\r\n          } else {\r\n            this.alertService.danger(res.Data);\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          //if (err.status === 401) {\r\n            this.isLoadingService.remove();\r\n          //}\r\n        }\r\n      );\r\n  }\r\n}\r\n","<div\r\n  *ngIf=\"\r\n    !isSignOffStudy && (isUnlockStudy || isLockedByOther || !isStudyDataFound)\r\n  \"\r\n  class=\"blur-background\"\r\n>\r\n  <!-- Disable study if there is no lock -->\r\n  <div class=\"blur-background-content\">\r\n    <div class=\"card\">\r\n      <ng-container *ngIf=\"isUnlockStudy; else elseTemplate\">\r\n        <div *ngIf=\"isUnlockStudy\" class=\"card-body\">\r\n          <p class=\"font-weight-bold\">\r\n            This study is disabled because it is not locked.<br />\r\n            If you want to edit this study, then please lock it.\r\n          </p>\r\n          <dx-button\r\n            icon=\"fas fa-lock\"\r\n            text=\"Lock Study\"\r\n            type=\"default\"\r\n            stylingMode=\"outlined\"\r\n            (onClick)=\"lockStudy()\"\r\n          ></dx-button>\r\n        </div>\r\n      </ng-container>\r\n      <ng-template #elseTemplate>\r\n        <ng-container *ngIf=\"isLockedByOther; else elseTemplate\">\r\n          <div *ngIf=\"isLockedByOther\" class=\"card-body\">\r\n            <p class=\"font-weight-bold\">\r\n              Study is disabled because It is locked by\r\n              {{ studyInitialSetup?.LockedForEditByName }}. <br />\r\n              If you want to edit this study then please request for unlock.\r\n            </p>\r\n            <dx-button\r\n              icon=\"fas fa-unlock\"\r\n              text=\"Request Unlock Study\"\r\n              type=\"default\"\r\n              stylingMode=\"outlined\"\r\n              (onClick)=\"requestForUnlock()\"\r\n            ></dx-button>\r\n          </div>\r\n        </ng-container>\r\n        <ng-template #elseTemplate>\r\n          <div *ngIf=\"!isStudyDataFound\" class=\"card-body\">\r\n            <p class=\"font-weight-bold\">\r\n              This study has no data available.<br />\r\n              If you want to copy data structure from the other market, then please select\r\n              a market from the below options:\r\n            </p>\r\n            <div class=\"row align-center justify-content-center\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <ng-select\r\n                    placeholder=\"Select Market...\"\r\n                    class=\"text-left\"\r\n                    [(ngModel)]=\"selectedMarket\"\r\n                  >\r\n                    <ng-option\r\n                      *ngFor=\"let item of markets\"\r\n                      [disabled]=\"!item.Active\"\r\n                      [value]=\"item\"\r\n                      >{{ item.OfficialName }}</ng-option\r\n                    >\r\n                  </ng-select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <dx-button\r\n              [disabled]=\"!selectedMarket\"\r\n              icon=\"fas fa-copy\"\r\n              text=\"Copy Study Data\"\r\n              type=\"default\"\r\n              stylingMode=\"outlined\"\r\n              (onClick)=\"copyStudyData()\"\r\n            ></dx-button>\r\n          </div>\r\n        </ng-template>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { PendingChangesService } from 'src/services/pending-changes.service';\r\nimport { StudyService } from 'src/services/study.service';\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.css'],\r\n})\r\nexport class CommentsComponent implements OnInit {\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n\r\n  viewNotePopup: boolean = false;\r\n  selectedCommentCellData: any = {};\r\n  selectedRowNotes: any;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n\r\n  @Input() set viewCommentPopup(data: boolean) {\r\n    this.viewNotePopup = data;\r\n  }\r\n\r\n  @Input() set setCommentCellData(data: any) {\r\n    console.log(data);\r\n    this.selectedCommentCellData = data;\r\n  }\r\n\r\n  @Output() onCommentBoxHidden = new EventEmitter<string>();\r\n  @Output() onCommentAdded = new EventEmitter<any>();\r\n  @Output() onCommentEmpty = new EventEmitter<any>();\r\n\r\n  deleteCommentConfirmPopup: boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private pendingChangeService: PendingChangesService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n    this.selectedCommentCellData = {};\r\n    this.onCommentBoxHidden.emit();\r\n  }\r\n\r\n  onCommentBoxShowing() {\r\n    this.getCellLevelComments();\r\n  }\r\n\r\n  getCellLevelComments() {\r\n    const dataRowId = this.selectedCommentCellData.dataRowId;\r\n    const cellColYear = this.selectedCommentCellData.colCaption;\r\n    const attrType = this.selectedCommentCellData.attrType;\r\n\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getCellCommentsForStudy(\r\n        this.studyAreaId,\r\n        this.marketYearCategoryId,\r\n        dataRowId,\r\n        cellColYear,\r\n        attrType\r\n      )\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.selectedRowNotes = data.Data;\r\n          this.viewNotePopup = true;\r\n\r\n          if (\r\n            this.selectedRowNotes.length === 0 &&\r\n            this.selectedCommentCellData\r\n          ) {\r\n            if (\r\n              this.selectedCommentCellData &&\r\n              typeof this.selectedCommentCellData.currentRowData['allComments'][\r\n                this.selectedCommentCellData.colValue\r\n              ] !== 'undefined'\r\n            ) {\r\n              this.selectedCommentCellData.currentRowData['allComments'][\r\n                this.selectedCommentCellData.colValue\r\n              ][this.selectedCommentCellData.attrType] = false;\r\n            }\r\n\r\n            this.onCommentEmpty.emit(this.selectedCommentCellData);\r\n          }\r\n\r\n          this.isLoadingService.remove();\r\n        }\r\n      });\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedCommentCellData) {\r\n      return;\r\n    }\r\n\r\n    const newNote = this.newNoteForm.value.note;\r\n\r\n    const formData = {\r\n      dataItemCategoryId: this.studyAreaId,\r\n      marketYearCategoryDataId: this.marketYearCategoryId,\r\n      draftDataRowId: this.selectedCommentCellData.dataRowId,\r\n      columnName: this.selectedCommentCellData.colValue,\r\n      attributeType: this.selectedCommentCellData.attrType,\r\n      comment: newNote,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService.addCommentForCell(formData).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          this.pendingChangeService.setPendingChanges(true);\r\n          if (\r\n            this.selectedCommentCellData.currentRowData &&\r\n            typeof this.selectedCommentCellData.currentRowData[\r\n              'allComments'\r\n            ] !== 'undefined'\r\n          ) {\r\n            if (\r\n              typeof this.selectedCommentCellData.currentRowData['allComments'][\r\n                this.selectedCommentCellData.colValue\r\n              ] === 'undefined'\r\n            ) {\r\n              this.selectedCommentCellData.currentRowData['allComments'][\r\n                this.selectedCommentCellData.colValue\r\n              ] = [];\r\n            }\r\n\r\n            if (\r\n              typeof this.selectedCommentCellData.currentRowData['allComments'][\r\n                this.selectedCommentCellData.colValue\r\n              ][this.selectedCommentCellData.attrType] === 'undefined'\r\n            ) {\r\n              this.selectedCommentCellData.currentRowData['allComments'][\r\n                this.selectedCommentCellData.colValue\r\n              ][this.selectedCommentCellData.attrType] = true;\r\n            }\r\n          }\r\n\r\n          this.onCommentAdded.emit(this.selectedCommentCellData);\r\n\r\n          this.noteSubmit = false;\r\n          this.newNoteForm.reset();\r\n\r\n          this.getCellLevelComments();\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        // console.log(err);\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometime.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteCommentData: any = {};\r\n  deleteComment(data: any) {\r\n    this.deleteCommentData = data;\r\n    this.deleteCommentConfirmPopup = true;\r\n    // this.viewNotePopup = false;\r\n  }\r\n\r\n  onDeleteCommentConfirmPopupHide() {\r\n    this.deleteCommentData = {};\r\n    this.deleteCommentConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteComment() {\r\n    this.isLoadingService.add();\r\n    const colValue = this.deleteCommentData.ColumnName;\r\n    const dataRowId = this.deleteCommentData.DraftDataRowId;\r\n    this.studyService\r\n      .deleteCellComment(\r\n        this.deleteCommentData.MarketYearCategoryDataId,\r\n        dataRowId,\r\n        colValue,\r\n        this.deleteCommentData.Id\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Cell level comment removed successfully.'\r\n            );\r\n            this.deleteCommentConfirmPopup = false;\r\n            this.getCellLevelComments();\r\n            this.pendingChangeService.setPendingChanges(true);\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteCommentConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n}\r\n","<dx-popup\r\n  [width]=\"600\"\r\n  [height]=\"500\"\r\n  [showTitle]=\"true\"\r\n  title=\"View Comments for {{ selectedCommentCellData.colCaption }}\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"true\"\r\n  [showCloseButton]=\"true\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"viewNotePopup\"\r\n  (onHidden)=\"onNotePopupHide()\"\r\n  (onShowing)=\"onCommentBoxShowing()\"\r\n>\r\n  <div class=\"card border-0 h-100 comment-container\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-scroll-view>\r\n        <dx-data-grid\r\n          *ngIf=\"selectedRowNotes\"\r\n          [dataSource]=\"selectedRowNotes\"\r\n          [showBorders]=\"true\"\r\n          [columnMinWidth]=\"100\"\r\n          [columnHidingEnabled]=\"false\"\r\n          [rowAlternationEnabled]=\"true\"\r\n          [wordWrapEnabled]=\"true\"\r\n        >\r\n          <dxi-column dataField=\"CreatedBy\" dataType=\"string\"></dxi-column>\r\n          <dxi-column\r\n            dataField=\"CreatedOn\"\r\n            dataType=\"date\"\r\n            [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"\r\n          ></dxi-column>\r\n          <dxi-column dataField=\"Comment\" dataType=\"string\"></dxi-column>\r\n          <dxi-column\r\n            caption=\"\"\r\n            cellTemplate=\"deleteCellTemplate\"\r\n            class=\"text-center\"\r\n            [width]=\"30\"\r\n          ></dxi-column>\r\n          <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n            <dx-button\r\n              icon=\"trash\"\r\n              stylingMode=\"text\"\r\n              type=\"danger\"\r\n              (onClick)=\"deleteComment(d.data)\"\r\n            ></dx-button>\r\n          </div>\r\n        </dx-data-grid>\r\n      </dx-scroll-view>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control\"\r\n                placeholder=\"Enter your comment\"\r\n                formControlName=\"note\"\r\n                rows=\"2\"\r\n                maxlength=\"1000\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': noteSubmit && n['note'].errors\r\n                }\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group text-center\">\r\n              <dx-button\r\n                text=\"Save Comment\"\r\n                type=\"default\"\r\n                [disabled]=\"newNoteForm.invalid\"\r\n                (onClick)=\"onSaveNote()\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup\r\n  [width]=\"350\"\r\n  [height]=\"150\"\r\n  [showTitle]=\"false\"\r\n  title=\"Delete Row Confirm\"\r\n  [dragEnabled]=\"false\"\r\n  [closeOnOutsideClick]=\"false\"\r\n  [showCloseButton]=\"false\"\r\n  container=\".dx-viewport\"\r\n  [(visible)]=\"deleteCommentConfirmPopup\"\r\n  (onHidden)=\"onDeleteCommentConfirmPopupHide()\"\r\n>\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this comment?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button\r\n          icon=\"check\"\r\n          text=\"Yes\"\r\n          type=\"success\"\r\n          class=\"mr-2\"\r\n          (onClick)=\"confirmDeleteComment()\"\r\n        ></dx-button>\r\n        <dx-button\r\n          icon=\"close\"\r\n          text=\"No\"\r\n          (onClick)=\"deleteCommentConfirmPopup = false\"\r\n        ></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { PendingChangesService } from 'src/services/pending-changes.service';\r\nimport { StudyService } from 'src/services/study.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-study-comments',\r\n  templateUrl: './study-comments.component.html',\r\n  styleUrls: ['./study-comments.component.css']\r\n})\r\nexport class StudyCommentsComponent implements OnInit {\r\n  viewNotePopup: boolean = false;\r\n  @Input() set viewCommentPopup(data: boolean) {\r\n    this.viewNotePopup = data;\r\n  }\r\n  dataItemCategoryId: number;\r\n  marketYearCategoryId: number;\r\n  @Input() set studyData(data: any) {\r\n    this.dataItemCategoryId = data.dataItemCategoryId;\r\n    this.marketYearCategoryId = data.marketYearCategoryId;\r\n  }\r\n  @Output() closeCommentPopup: EventEmitter<any> = new EventEmitter<any>();\r\n  noteSubmit = false;\r\n  newNoteForm: FormGroup;\r\n  deleteCommentConfirmPopup: boolean = false;\r\n  selectedRowNotes: any[] = [];\r\n  deleteCommentData: any = {};\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private pendingChangeService: PendingChangesService\r\n  ) {\r\n    const params = this.route.snapshot.params;\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.dataItemCategoryId = params['studyArea'];\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCommentBoxShowing() {\r\n    this.getAllStudyComments();\r\n  }\r\n\r\n  onNotePopupHide() {\r\n    this.noteSubmit = false;\r\n    this.newNoteForm.reset();\r\n    this.selectedRowNotes = [];\r\n    this.viewNotePopup = false;\r\n    this.closeCommentPopup.emit();\r\n  }\r\n\r\n  get n() {\r\n    return this.newNoteForm.controls;\r\n  }\r\n\r\n  getAllStudyComments() {\r\n    this.isLoadingService.add();\r\n    this.studyService.getAllStudyNotes(\r\n      this.dataItemCategoryId, this.marketYearCategoryId\r\n    ).subscribe((data: ApiResponse) => {\r\n      if (data.HttpStatusCode === 200) {\r\n        this.selectedRowNotes = data.Data;\r\n        this.viewNotePopup = true;\r\n        this.isLoadingService.remove();\r\n      }\r\n    });\r\n  }\r\n  \r\n  deleteComment(data: any) {\r\n    this.deleteCommentData = data;\r\n    this.deleteCommentConfirmPopup = true;\r\n  }\r\n\r\n  onDeleteCommentConfirmPopupHide() {\r\n    this.deleteCommentData = {};\r\n    this.deleteCommentConfirmPopup = false;\r\n  }\r\n\r\n  confirmDeleteComment() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .deleteStudyNotes(\r\n        this.deleteCommentData.StudyNoteLogId,\r\n        this.deleteCommentData.MarketYearCategoryDataId,\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.Data) {\r\n            this.alertService.success(\r\n              'Your data row has been removed successfully.'\r\n            );\r\n            this.deleteCommentConfirmPopup = false;\r\n            this.pendingChangeService.setPendingChanges(true);\r\n            this.getAllStudyComments();\r\n          } else {\r\n            this.alertService.danger(\r\n              'Error: Something went wrong. Data row can not removed.'\r\n            );\r\n          }\r\n          this.isLoadingService.remove();\r\n        },\r\n        (err) => {\r\n          const msg =\r\n            typeof err.error !== 'undefined' && err.error !== ''\r\n              ? err.error\r\n              : 'Error: Something went wrong.';\r\n\r\n          this.onDeleteCommentConfirmPopupHide();\r\n          this.alertService.danger(msg);\r\n          this.isLoadingService.remove();\r\n        }\r\n      );\r\n  }\r\n\r\n  onSaveNote() {\r\n    this.noteSubmit = true;\r\n    if (this.newNoteForm.invalid) {\r\n      return;\r\n    }\r\n    \r\n    const newNote = this.newNoteForm.value.note;\r\n    const formData = {\r\n      dataItemCategoryId: this.dataItemCategoryId,\r\n      marketYearCategoryDataId: this.marketYearCategoryId,\r\n      note: newNote,\r\n    };\r\n    this.isLoadingService.add();\r\n    this.studyService.saveStudyNote(formData)\r\n    .subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.alertService.success(res.Data);\r\n          this.isLoadingService.remove();\r\n          this.noteSubmit = false;\r\n          this.newNoteForm.reset();\r\n          this.getAllStudyComments();\r\n          this.pendingChangeService.setPendingChanges(true);\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n          this.isLoadingService.remove();\r\n        }\r\n      },\r\n      (err) => {\r\n        this.alertService.danger(\r\n          'Something went wrong. Please try after sometime.'\r\n        );\r\n        this.isLoadingService.remove();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<dx-popup [width]=\"600\"\r\n          [height]=\"500\"\r\n          [showTitle]=\"true\"\r\n          title=\"Study Comments\"\r\n          [dragEnabled]=\"false\"\r\n          [closeOnOutsideClick]=\"true\"\r\n          [showCloseButton]=\"true\"\r\n          container=\".dx-viewport\"\r\n          [(visible)]=\"viewNotePopup\"\r\n          (onHidden)=\"onNotePopupHide()\"\r\n          (onShowing)=\"onCommentBoxShowing()\">\r\n  <div class=\"card border-0 h-100 comment-container\">\r\n    <div class=\"card-body px-0\">\r\n      <dx-data-grid *ngIf=\"selectedRowNotes\"\r\n                    [dataSource]=\"selectedRowNotes\"\r\n                    [showBorders]=\"true\"\r\n                    [columnMinWidth]=\"100\"\r\n                    [columnHidingEnabled]=\"false\"\r\n                    [rowAlternationEnabled]=\"true\"\r\n                    [wordWrapEnabled]=\"true\">\r\n        <dxi-column dataField=\"CreatedBy\" dataType=\"string\"></dxi-column>\r\n        <dxi-column dataField=\"CreatedOn\"\r\n                    dataType=\"date\"\r\n                    [format]=\"{ type: 'MMM d, yyyy hh:mm a' }\"></dxi-column>\r\n        <dxi-column dataField=\"Note\" dataType=\"string\"></dxi-column>\r\n        <dxi-column caption=\"\"\r\n                    cellTemplate=\"deleteCellTemplate\"\r\n                    class=\"text-center\"\r\n                    [width]=\"30\"></dxi-column>\r\n        <div *dxTemplate=\"let d of 'deleteCellTemplate'\" class=\"text-center\">\r\n          <dx-button icon=\"trash\"\r\n                     stylingMode=\"text\"\r\n                     type=\"danger\"\r\n                     (onClick)=\"deleteComment(d.data)\"></dx-button>\r\n        </div>\r\n      </dx-data-grid>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <form [formGroup]=\"newNoteForm\">\r\n        <div class=\"row align-items-center justify-content-center\">\r\n          <div class=\"col-md-8\">\r\n            <div class=\"form-group\">\r\n              <textarea class=\"form-control\"\r\n                        placeholder=\"Enter your comment\"\r\n                        formControlName=\"note\"\r\n                        rows=\"2\"\r\n                        maxlength=\"1000\"\r\n                        [ngClass]=\"{\r\n                  'is-invalid': noteSubmit && n['note'].errors\r\n                }\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <div class=\"form-group text-center\">\r\n              <dx-button text=\"Save Comment\"\r\n                         type=\"default\"\r\n                         [disabled]=\"newNoteForm.invalid\"\r\n                         (onClick)=\"onSaveNote()\"></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<dx-popup [width]=\"350\"\r\n          [height]=\"150\"\r\n          [showTitle]=\"false\"\r\n          title=\"Delete Row Confirm\"\r\n          [dragEnabled]=\"false\"\r\n          [closeOnOutsideClick]=\"false\"\r\n          [showCloseButton]=\"false\"\r\n          container=\".dx-viewport\"\r\n          [(visible)]=\"deleteCommentConfirmPopup\"\r\n          (onHidden)=\"onDeleteCommentConfirmPopupHide()\">\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <p class=\"mb-1\">Are you sure you want to delete this comment?</p>\r\n      <div class=\"form-group text-center\">\r\n        <dx-button icon=\"check\"\r\n                   text=\"Yes\"\r\n                   type=\"success\"\r\n                   class=\"mr-2\"\r\n                   (onClick)=\"confirmDeleteComment()\"></dx-button>\r\n        <dx-button icon=\"close\"\r\n                   text=\"No\"\r\n                   (onClick)=\"deleteCommentConfirmPopup = false\"></dx-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { HotTableRegisterer } from '@handsontable/angular';\r\nimport Handsontable from 'handsontable/base';\r\nimport { HyperFormula } from 'hyperformula';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { DataGridConfiguration } from 'src/model/dataGridConfiguration.model';\r\nimport { DataSourceResponse } from 'src/model/dataSourceResponse.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { ContextMenu } from 'handsontable/plugins/contextMenu';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { DataRelationsEnum } from 'src/model/enums/dataRelations.enum';\r\nimport { CommonService } from 'src/services/common.service';\r\nimport * as lodash from 'lodash';\r\nimport { Console } from 'console';\r\nimport { type } from 'os';\r\nimport { AnyMxRecord } from 'dns';\r\nimport { DataGridState } from '../../../model/dataGridState.model';\r\nimport { confirm } from 'devextreme/ui/dialog';\r\nimport { DropdownCurrency } from '../../../model/dropdownCurrency.model';\r\nimport { DropdownUnits } from '../../../model/dropdownUnits.model';\r\nimport { settings } from 'cluster';\r\nimport { toUpper } from 'lodash';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { PendingChangesService } from 'src/services/pending-changes.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-handson-table',\r\n  templateUrl: './handson-table.component.html',\r\n  styleUrls: ['./handson-table.component.css'],\r\n})\r\nexport class HandsonTableComponent implements OnInit {\r\n  handsontableLicenseKey = 'ac5e0-311ac-e9b54-0f139-a1425';\r\n  hyperformulaInstance = HyperFormula.buildEmpty({\r\n    // to use an external HyperFormula instance,\r\n    // initialize it with the `'internal-use-in-handsontable'` license key\r\n    licenseKey: this.handsontableLicenseKey,\r\n  });\r\n\r\n  @Input() set setDataSource(data: any) {\r\n    if (!lodash.isEmpty(data)) {\r\n      this.dataSource = data;\r\n      this.getAllColumnsComments();\r\n      // set decimal places format for enter new data validation \r\n      this.newRowNumberBoxFormat = this.dataSource.Data.Settings.handontableSettings?.decimalPlaces === 1\r\n        ? '#.0'\r\n        : '#.00';\r\n    }\r\n  }\r\n  @Input() set setCurrency(data: any) {\r\n    this.currencyDropdown = data;\r\n  }\r\n\r\n  @Input() set setVolumeUnits(data: any) {\r\n    this.unitsDropdown = data;\r\n  }\r\n\r\n  @Input() set setDataRelations(data: any) {\r\n    this.dataRelations = data;\r\n  }\r\n\r\n  pendingChange: boolean = false;\r\n  @Output() onRequestForSignOffClicked = new EventEmitter<string>();\r\n  @Output() onRequestForChangeClicked = new EventEmitter<string>();\r\n  @Output() onSaveDataClicked = new EventEmitter<any>();\r\n  @Output() onSignOffClicked = new EventEmitter<any>();\r\n  @Output() onUnlockStudyClicked = new EventEmitter<string>();\r\n  @Output() onDeleteRowClicked = new EventEmitter<any>();\r\n  @Output() dataSourceDataChanged = new EventEmitter<any>();\r\n  @Output() hasPendingChanges = new EventEmitter<boolean>();\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n  studyAreaId: number = 0;\r\n  dataSetId: number = 0;\r\n  yearsList: any[];\r\n  columnsList: any[];\r\n  isLockedStudy: boolean = false;\r\n  isVolumeYear: boolean = false;\r\n  dataSource: DataSourceResponse = new DataSourceResponse();\r\n  currencyDropdown: DropdownCurrency[] = [];\r\n  unitsDropdown: DropdownUnits[] = [];\r\n  isResetDataRequired: boolean = false;\r\n  calculatedField: string = 'Value';\r\n  dataRelations: any[] = [];\r\n  clipboardCache: any = '';\r\n  dataSourceData: any[] = [];\r\n  dataSourceDataNoFormulas: any[] = [];\r\n  hiddenColumns: any = {\r\n    columns: [],\r\n    indicators: false,\r\n    copyPasteEnabled: false,\r\n  };\r\n  filterableColumns: any = [];\r\n  dataSettings: DataGridConfiguration = new DataGridConfiguration();\r\n  isManager: boolean = false;\r\n  userDetail: UserDetail;\r\n  disabledSignOffButton: boolean = false;\r\n  isStudyEditable: boolean = false;\r\n  studyTitle: string = '';\r\n  isAddNewRowVisible: boolean = true;\r\n  unitOfValues: any[] = [];\r\n  currentCurrency: any;\r\n  colHeaders: any[] = [];\r\n  columns: any;\r\n  data: any;\r\n  cell: any;\r\n  nestedHeaders: any;\r\n  fixedRowsTop: number = 0;\r\n  fixedColumnsLeft: number = 0;\r\n  formulas: any;\r\n  addNewRowForm: FormGroup;\r\n  private hotRegisterer = new HotTableRegisterer();\r\n  id = 'hotInstance';\r\n  hotSettings: any = {};\r\n  viewNotePopup: boolean = false;\r\n  viewStudyComments: boolean = false;\r\n  showHelpText: boolean = false;\r\n  selectedCommentCellData: any = {};\r\n  selectedRowNotes: any;\r\n  newNoteForm: FormGroup;\r\n  noteSubmit = false;\r\n  isAddNewRowPopup = false;\r\n  newRowFormObj: any[] = [];\r\n  visibleGridColumns: any[] = [];\r\n  calculatorContextMenuItems: any[] = [];\r\n  resetMenuItems: any[] = [];\r\n  viewMenuItems: any[] = [];\r\n  selectedView: any;\r\n  showFormula: boolean = false;\r\n  valueColsIndexes: any[] = [];\r\n  isDefaultStateMode: boolean = false;\r\n  dataGridState: DataGridState = new DataGridState();\r\n  countOfFormulasInDatagrid: number = 0;\r\n  renderingFinishedTimeout: NodeJS.Timeout = setTimeout(() => { }, 0);\r\n  isRenderingFinished: boolean = false;\r\n  isRenderAllRows: boolean = true;\r\n  tableHeight: string = this.isRenderAllRows ? 'auto' : '600';\r\n  columnReferences: string[] = [];\r\n  deletedRows: any[] = [];\r\n  newRowNumberBoxFormat: string = '';\r\n  staticColumns: any[] = [];\r\n  openDialog$: Observable<boolean> = this.pendingChangeService.askForConfirmation$;\r\n  isFormulaAllowed: boolean = true;\r\n  selectedCellValue: any;\r\n  selectedCell: any ={row:0,col:0};\r\n  disableFormulaBar: boolean = true;\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private studyService: StudyService,\r\n    private isLoadingService: IsLoadingService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService,\r\n    private commonService: CommonService,\r\n    private pendingChangeService: PendingChangesService\r\n  ) {\r\n    this.isLoadingService.add();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n    this.dataSetId = params['dataSetId'];\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n\r\n    this.isManager = this.userDetail.IsManager === true ? true : false;\r\n\r\n    this.newNoteForm = this.formBuilder.group({\r\n      note: [null, Validators.required],\r\n      rowData: [null],\r\n    });\r\n    this.calculatorContextMenuItems = this.commonService.getCalculatorFields();\r\n    this.resetMenuItems = this.commonService.getResetToDefaultOptions();\r\n    this.columnReferences = this.commonService.getColumnReferences();\r\n    this.viewMenuItems = this.commonService.getDataViewOptions();\r\n    this.selectedView = this.viewMenuItems[0];\r\n    this.formulas = {\r\n      engine: HyperFormula,\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.cellRendererData = this.cellRendererData.bind(this);\r\n\r\n    this.hotSettings = {\r\n      afterChange: (changes: [any, any, any, any][]) => {\r\n        \r\n        changes?.forEach(([row, prop, oldValue, newValue]) => {\r\n          const col = this.hotRegisterer.getInstance(this.id).propToCol(prop);\r\n          this.pendingChange = true;\r\n          // check if user has added formula to the datagrid\r\n          if (this.isFormulaAllowed === true) {\r\n            if (\r\n              isNaN(Number(oldValue)) === false &&\r\n              newValue !== null &&\r\n              newValue.toString().startsWith('=', 0)\r\n            ) {\r\n              this.countOfFormulasInDatagrid++;\r\n            } else if (\r\n              oldValue.toString().startsWith('=', 0) &&\r\n              isNaN(Number(newValue)) === false\r\n            ) {\r\n              this.countOfFormulasInDatagrid--;\r\n            }\r\n          }\r\n          else if (isNaN(Number(oldValue)) === false &&\r\n            newValue !== null &&\r\n            newValue.toString().startsWith('=', 0)) {\r\n            this.hotRegisterer\r\n              .getInstance(this.id)\r\n              .setDataAtRowProp(row, prop, oldValue);\r\n          }\r\n\r\n          // in case new value is number, apply validation\r\n          if (isNaN(Number(newValue)) === false) {\r\n            // apply rounding when user want to insert more decimal places te allowed\r\n            const decimalPlaces =\r\n              this.dataSource.Data.Settings.handontableSettings\r\n                ?.decimalPlaces || 2;\r\n            const expressionOneDecimal = /^(\\d{1,50}|\\d{0,50}\\.\\d{1})$/;\r\n            const expressionTwoDecimals = /^(\\d{1,50}|\\d{0,50}\\.\\d{1,2})$/;\r\n            const reg =\r\n              decimalPlaces === 1\r\n                ? expressionOneDecimal\r\n                : expressionTwoDecimals;\r\n            if (!reg.test(newValue)) {\r\n              const newValueRounded = lodash\r\n                .round(newValue, decimalPlaces)\r\n                .toFixed(decimalPlaces);\r\n              this.hotRegisterer\r\n                .getInstance(this.id)\r\n                .setDataAtRowProp(row, prop, newValueRounded);\r\n            }\r\n\r\n            // change color of the cell if user change value\r\n            //if (newValue !== oldValue) {\r\n            //  this.hotRegisterer.getInstance(this.id).setCellMeta(row, col, 'className', 'lightgreen-bg');\r\n            //}\r\n          }\r\n          // in case new value is not number and is not formula, change cell value to 0\r\n          else if (newValue.toString().startsWith('=', 0) === false) {\r\n            this.hotRegisterer\r\n              .getInstance(this.id)\r\n              .setDataAtRowProp(row, prop, oldValue);\r\n          }\r\n\r\n          // finally render all changes\r\n          this.hotRegisterer.getInstance(this.id).loadData(this.dataSourceData);\r\n        });\r\n        this.emitDatasourceForPreviewAndUpdateNoFormulasSource();\r\n        this.setTableChanges();\r\n      },\r\n      // render 20 columns outside of the grid's viewport, this will fix stange horizontal scrolling behavior\r\n      viewportColumnRenderingOffset: 20,\r\n      afterViewRender: () => {\r\n        clearTimeout(this.renderingFinishedTimeout);\r\n        this.renderingFinishedTimeout = setTimeout(() => {\r\n          this.isRenderingFinished = true;\r\n          this.isLoadingService.remove();\r\n        }, 1000);\r\n      },\r\n      afterScrollVertically: () => {\r\n        if (\r\n          this.isRenderAllRows === false &&\r\n          this.calculatorContextMenuItems.find((f) => f.isCheck === true)\r\n        ) {\r\n          clearTimeout(this.renderingFinishedTimeout);\r\n          this.renderingFinishedTimeout = setTimeout(() => {\r\n            // this.hotRegisterer\r\n            //   .getInstance(this.id)\r\n            //   .loadData(this.dataSourceData);\r\n            this.hotRegisterer\r\n              .getInstance(this.id)\r\n              .loadData(\r\n                this.hotRegisterer.getInstance(this.id).getSourceData()\r\n              );\r\n            this.hotRegisterer.getInstance(this.id).render();\r\n          }, 500);\r\n        }\r\n      },\r\n    };\r\n    this.addNewRowForm = new FormGroup({});\r\n  }\r\n\r\n  setTableChanges() {\r\n    if (!this.isLockedStudy) {\r\n      this.pendingChangeService.setPendingChanges(false);\r\n    }\r\n    else {\r\n      const dataState = JSON.stringify(this.dataGridState);\r\n      let newState = JSON.stringify(new DataGridState());\r\n      if ((dataState !== newState || this.pendingChange) && !this.isResetDataRequired) {\r\n        this.pendingChangeService.setPendingChanges(true);\r\n      }\r\n    }\r\n  }\r\n  emitDatasourceForPreviewAndUpdateNoFormulasSource() {\r\n    if (this.dataSourceData?.length) {\r\n      let dataSourceDataCopy = lodash.cloneDeep(this.dataSourceData);\r\n\r\n      const countOfColumnsData = Object.keys(\r\n        dataSourceDataCopy[0].ColumnsData\r\n      ).length;\r\n\r\n      let datasourceRowCounter = 0;\r\n      for (const datasourceRow of dataSourceDataCopy) {\r\n        const yearsData = datasourceRow.YearsData;\r\n        let yearsDataCounter = 0;\r\n        for (const yearData in yearsData) {\r\n          // count with value\r\n          if (yearsData[yearData].Value?.toString().startsWith('=', 0)) {\r\n            const realCellValue = this.getValueByYearsDataPosition(\r\n              datasourceRowCounter,\r\n              yearsDataCounter,\r\n              countOfColumnsData\r\n            );\r\n            dataSourceDataCopy[datasourceRowCounter]['YearsData'][yearData] = {\r\n              Value: realCellValue,\r\n            };\r\n          }\r\n\r\n          //count with volume\r\n          if (yearsData[yearData].Volume?.toString().startsWith('=', 0)) {\r\n            const realCellValue = this.getValueByYearsDataPosition(\r\n              datasourceRowCounter,\r\n              yearsDataCounter,\r\n              countOfColumnsData\r\n            );\r\n            dataSourceDataCopy[datasourceRowCounter]['YearsData'][yearData] = {\r\n              Volume: realCellValue,\r\n            };\r\n          }\r\n\r\n          // TODO use enum in condition for all future cases\r\n          // unit\r\n          if (yearsData[yearData].Unit?.toString().startsWith('=', 0)) {\r\n            const realCellValue = this.getValueByYearsDataPosition(\r\n              datasourceRowCounter,\r\n              yearsDataCounter,\r\n              countOfColumnsData\r\n            );\r\n            dataSourceDataCopy[datasourceRowCounter]['YearsData'][yearData] = {\r\n              Unit: realCellValue,\r\n            };\r\n          }\r\n\r\n          // check count of the properties in year object and update index\r\n          const countOfYearProperties = Object.keys(\r\n            Object.values(datasourceRow.YearsData)[0] as any\r\n          ).length;\r\n\r\n          yearsDataCounter += countOfYearProperties;\r\n        }\r\n        datasourceRowCounter++;\r\n      }\r\n\r\n      // remove all calculated fields from datasource copy\r\n      for (let sourceRow in dataSourceDataCopy) {\r\n        for (let year in this.dataSourceData[sourceRow].YearsData) {\r\n          delete dataSourceDataCopy[sourceRow]['YearsData'][year]['% Of Total'];\r\n          delete dataSourceDataCopy[sourceRow]['YearsData'][year]['CAGR'];\r\n          delete dataSourceDataCopy[sourceRow]['YearsData'][year]['Change, %'];\r\n        }\r\n      }\r\n\r\n      // emit updated data on any change\r\n      this.dataSourceDataChanged.emit(dataSourceDataCopy);\r\n      this.dataSourceDataNoFormulas = dataSourceDataCopy;\r\n    }\r\n  }\r\n\r\n  getValueByYearsDataPosition(\r\n    rowIndex: number,\r\n    yearsDataIndex: number,\r\n    countOfColumnsData: number\r\n  ) {\r\n    const realData = this.hotRegisterer.getInstance(this.id).getData();\r\n    const requestedRowData = realData[rowIndex];\r\n    return requestedRowData[countOfColumnsData + yearsDataIndex];\r\n  }\r\n\r\n  allColsComments: any[] = [];\r\n  getAllColumnsComments() {\r\n    this.isLoadingService.add();\r\n    this.studyService\r\n      .getAllCommentsForStudy(this.studyAreaId, this.marketYearCategoryId)\r\n      .subscribe((data: ApiResponse) => {\r\n        if (data.HttpStatusCode === 200) {\r\n          this.allColsComments = data.Data;\r\n        }\r\n        this.processDataSource();\r\n      });\r\n  }\r\n\r\n  processDataSource() {\r\n    if (this.isResetDataRequired) {\r\n      this.dataSourceData = [];\r\n    }\r\n    const data = this.dataSource.Data;\r\n    if (typeof data === 'undefined') {\r\n      this.isLoadingService.remove();\r\n      return;\r\n    }\r\n\r\n    if (data.DataList === null) {\r\n      this.isLoadingService.remove();\r\n      return;\r\n    }\r\n    this.dataSettings = Common.realMerge(\r\n      new DataGridConfiguration(),\r\n      data.Settings || {}\r\n    );\r\n\r\n    const studySummary = data.StudySetup;\r\n\r\n    this.isManager =\r\n      this.userDetail.Id === studySummary.ProjectLeadId ? true : false;\r\n\r\n    this.studyTitle = `${studySummary.StudyDataSetName}-${studySummary.StudyYear}-${studySummary.MarketName}`;\r\n\r\n    this.isStudyEditable = studySummary.IsSignOff || false;\r\n\r\n    this.isLockedStudy =\r\n      !studySummary.IsSignOff &&\r\n        studySummary.LockedForEditBy === this.userDetail.Id\r\n        ? true\r\n        : false;\r\n\r\n    this.unitOfValues = data.UnitOfValues || [];\r\n\r\n    const currency = this.unitOfValues.find(\r\n      (item) => item.Title === 'Currency'\r\n    );\r\n    this.currentCurrency = this.currencyDropdown.find(\r\n      (f) => f?.Id === currency?.Id\r\n    );\r\n\r\n    const columnLists: any[] = [];\r\n    const nestedColumnList: any = [];\r\n    let columnBinding: any[] = [];\r\n    this.staticColumns = [];\r\n    data.ColumnList.map((list) => {\r\n      const colSetting = this.dataSettings.fields.find(\r\n        (item) => item.dataField === list.Title\r\n      );\r\n      columnLists.push(colSetting?.caption || list.Title);\r\n      this.staticColumns.push(colSetting?.caption || list.Title);\r\n      nestedColumnList.push(null);\r\n      columnBinding.push({\r\n        data: `ColumnsData.${list.Title}`,\r\n        readOnly: !this.isStudyEditable ? colSetting?.readOnly : true,\r\n        type: colSetting?.dataType,\r\n        width: colSetting?.width,\r\n        isVisible: list.IsVisible,\r\n        isColumnData: true,\r\n      });\r\n      list.IsVisible =\r\n        typeof colSetting?.isVisible === 'boolean'\r\n          ? colSetting.isVisible\r\n          : list.IsVisible;\r\n      this.filterableColumns.push(list.Index);\r\n      if (!list.IsVisible) {\r\n        this.hiddenColumns.columns.push(list.Index);\r\n      }\r\n    });\r\n\r\n    //this.fixedColumnsLeft =\r\n    //  columnBinding.filter((f) => !(f.isVisible && f.isColumnData)).length + 1;\r\n\r\n    this.fixedColumnsLeft = columnBinding.filter((f) => f.isColumnData).length;\r\n\r\n    data.YearsList.sort((a, b) => a.Index - b.Index);\r\n    let nestedcColSetting: any;\r\n    let yearWiseFieldList: any[] = [];\r\n    let forecastFieldList: any[] = [];\r\n    data.YearsList.map((year) => {\r\n      if (year.AttributeList) {\r\n        year.AttributeList.map((attr) => {\r\n          this.calculatedField =\r\n            attr.Title === 'Unit'\r\n              ? 'Unit'\r\n              : attr.Title === 'Volume'\r\n                ? 'Volume'\r\n                : 'Value';\r\n          const colSetting = this.dataSettings.fields.find(\r\n            (item) =>\r\n              item.dataField === attr.Title &&\r\n              item.isYearValue &&\r\n              item.yearType.indexOf(year.Type) !== -1\r\n          );\r\n\r\n          // nestedcColSetting = this.dataSettings.fields.find(\r\n          //   (item) =>\r\n          //     item.dataField === attr.Title &&\r\n          //     item.isVolumeYear &&\r\n          //     item.yearType.indexOf(year.Type) !== -1\r\n          // );\r\n\r\n          // const yearWiseField = this.dataSettings.fields.find(\r\n          //   (item) =>\r\n          //     item.isYearWiseVolume &&\r\n          //     item.dataField === attr.Title &&\r\n          //     item.yearType.indexOf(year.Type) !== -1\r\n          // );\r\n\r\n          // const forecastField = this.dataSettings.fields.find(\r\n          //   (item) =>\r\n          //     item.isForecastVolume &&\r\n          //     item.dataField === attr.Title &&\r\n          //     item.yearType.indexOf(year.Type) !== -1\r\n          // );\r\n          if (colSetting) {\r\n            nestedColumnList.push(colSetting?.caption || attr.Title);\r\n            columnBinding.push({\r\n              data: `YearsData.${year.Year}.${attr.Title}`,\r\n              readOnly: !this.isStudyEditable ? colSetting?.readOnly : true,\r\n              type: colSetting?.dataType,\r\n              width: colSetting?.width,\r\n              isVisible: true,\r\n              allowEmpty: false,\r\n            });\r\n          }\r\n          // if (nestedcColSetting) {\r\n          //   this.isVolumeYear = true;\r\n          //   nestedColumnList.push(year.Year);\r\n          //   columnBinding.push({\r\n          //     data: `YearsData.${year.Year}.${attr.Title}`,\r\n          //     readOnly: !this.isStudyEditable\r\n          //       ? nestedcColSetting?.readOnly\r\n          //       : true,\r\n          //     type: nestedcColSetting?.dataType,\r\n          //     width: nestedcColSetting?.width,\r\n          //     isVisible: true,\r\n          //     allowEmpty: false,\r\n          //   });\r\n          // }\r\n          // if (yearWiseField) {\r\n          //   this.isVolumeYear = true;\r\n          //   yearWiseFieldList.push({\r\n          //     column: year.Year,\r\n          //     title: yearWiseField.caption,\r\n          //   });\r\n          //   columnBinding.push({\r\n          //     data: `YearsData.${year.Year}.${attr.Title}`,\r\n          //     readOnly: !this.isStudyEditable ? yearWiseField?.readOnly : true,\r\n          //     type: yearWiseField?.dataType,\r\n          //     width: yearWiseField?.width,\r\n          //     isVisible: true,\r\n          //     allowEmpty: false,\r\n          //   });\r\n          // }\r\n\r\n          // if (forecastField) {\r\n          //   this.isVolumeYear = true;\r\n          //   forecastFieldList.push({\r\n          //     column: year.Year,\r\n          //     title: forecastField.caption,\r\n          //   });\r\n          //   columnBinding.push({\r\n          //     data: `YearsData.${year.Year}.${attr.Title}`,\r\n          //     readOnly: !this.isStudyEditable ? forecastField?.readOnly : true,\r\n          //     type: forecastField?.dataType,\r\n          //     width: forecastField?.width,\r\n          //     isVisible: true,\r\n          //     allowEmpty: false,\r\n          //   });\r\n          // }\r\n        });\r\n      }\r\n      //if (!this.isVolumeYear) {\r\n      columnLists.push({\r\n        label: year.Year,\r\n        colspan: year.AttributeList.length,\r\n      });\r\n      // }\r\n    });\r\n\r\n    // if (nestedcColSetting) {\r\n    //   columnLists.push({\r\n    //     label: nestedcColSetting?.caption,\r\n    //     colspan: nestedcColSetting.colspan,\r\n    //   });\r\n    // }\r\n    // if (yearWiseFieldList && yearWiseFieldList.length > 0) {\r\n    //   yearWiseFieldList.forEach((item) => {\r\n    //     nestedColumnList.push(item.column);\r\n    //   });\r\n    //   columnLists.push({\r\n    //     label: yearWiseFieldList[0].title,\r\n    //     colspan: yearWiseFieldList.length,\r\n    //   });\r\n    // }\r\n    // if (forecastFieldList && forecastFieldList.length > 0) {\r\n    //   forecastFieldList.forEach((item) => {\r\n    //     nestedColumnList.push(item.column);\r\n    //   });\r\n    //   columnLists.push({\r\n    //     label: forecastFieldList[0].title,\r\n    //     colspan: forecastFieldList.length,\r\n    //   });\r\n    // }\r\n    if (!this.isStudyEditable) {\r\n      columnLists.push('');\r\n      columnBinding.push({\r\n        readOnly: true,\r\n        filters: false,\r\n        isVisible: true,\r\n        isDeleteRowCell: true,\r\n      });\r\n    }\r\n\r\n    this.colHeaders.push(columnLists);\r\n    let colHeaders = [];\r\n    colHeaders.push(columnLists);\r\n    if (data.HasAttribute) {\r\n      colHeaders.push(nestedColumnList);\r\n    }\r\n    // if (this.isVolumeYear) {\r\n    //   colHeaders.push(nestedColumnList);\r\n    // }\r\n    this.valueColsIndexes = [];\r\n    for (let h = 0; h <= nestedColumnList.length; h++) {\r\n      if (\r\n        typeof nestedColumnList[h] !== 'undefined' &&\r\n        nestedColumnList[h] === this.calculatedField\r\n      ) {\r\n        this.valueColsIndexes.push(h + 1);\r\n      }\r\n    }\r\n\r\n    // this function updates references to the correct alphabetical sequence\r\n    //const returnObj = this.moveHiddenFieldsToEndAndUpdateHiddenIndexes(\r\n    //  columnBinding,\r\n    //  colHeaders,\r\n    //  false\r\n    //);\r\n    //columnBinding = returnObj.columns;\r\n    //colHeaders = returnObj.colHeaders;\r\n\r\n    this.nestedHeaders = colHeaders;\r\n    this.colHeaders = colHeaders;\r\n    this.columns = columnBinding;\r\n\r\n    data.DataList.map((item: any, i: number) => {\r\n      if (!this.dataSourceData[i]) {\r\n        if (item.ChangeLog !== null) {\r\n          const changeLogObj = item.ChangeLog.split('|||');\r\n          if (changeLogObj) {\r\n            item['ChangeLogObj'] = [];\r\n            changeLogObj.map((change: any) => {\r\n              const changeObj = change.split('###');\r\n              if (changeObj) {\r\n                if (typeof item.ChangeLogObj[changeObj[3]] === 'undefined') {\r\n                  item.ChangeLogObj[changeObj[3]] = {};\r\n                }\r\n\r\n                if (\r\n                  typeof item.ChangeLogObj[changeObj[3]][changeObj[4]] ===\r\n                  'undefined'\r\n                ) {\r\n                  item.ChangeLogObj[changeObj[3]][changeObj[4]] = {};\r\n                }\r\n\r\n                item.ChangeLogObj[changeObj[3]][changeObj[4]] = {\r\n                  name: changeObj[0],\r\n                  date: changeObj[1],\r\n                  oldValue: changeObj[2],\r\n                  year: changeObj[3],\r\n                  attrType: changeObj[4],\r\n                  dataRowId: changeObj[5],\r\n                };\r\n              }\r\n            });\r\n          }\r\n        }\r\n\r\n        let rowComments: any[] = [];\r\n        if (this.allColsComments) {\r\n          rowComments = this.allColsComments.filter(\r\n            (single: any) => single.DraftDataRowId == item.DataRowId\r\n          );\r\n\r\n          item['allComments'] = [];\r\n          rowComments.map(({ ColumnName, AttributeType }) => {\r\n            if (typeof item['allComments'][ColumnName] === 'undefined') {\r\n              item['allComments'][ColumnName] = [];\r\n            }\r\n\r\n            if (\r\n              typeof item['allComments'][ColumnName][AttributeType] ===\r\n              'undefined'\r\n            ) {\r\n              item['allComments'][ColumnName][AttributeType] = true;\r\n            }\r\n          });\r\n        }\r\n\r\n        item['IsDeleted'] = false;\r\n\r\n        this.dataSourceData[i] = {\r\n          ...item,\r\n          ColumnsData: {},\r\n          YearsData: {},\r\n        };\r\n      }\r\n      data.ColumnList.forEach((col) => {\r\n        // if (col.IsVisible) {\r\n        Object.assign(this.dataSourceData[i]['ColumnsData'], {\r\n          [col.Title]:\r\n            item.ColumnsData[col.Index] !== null\r\n              ? item.ColumnsData[col.Index].toString()\r\n              : '',\r\n        });\r\n        // }\r\n      });\r\n\r\n      data.YearsList.forEach((year, j) => {\r\n        if (!this.dataSourceData[i]['YearsData'][year.Year]) {\r\n          this.dataSourceData[i]['YearsData'][year.Year] = {};\r\n        }\r\n\r\n        year.AttributeList.map((attribute: any) => {\r\n          Object.assign(this.dataSourceData[i]['YearsData'][year.Year], {\r\n            [attribute.Title]:\r\n              typeof item.YearsData[year.Year] !== 'undefined'\r\n                ? item.YearsData[year.Year][attribute.Index]\r\n                : 0,\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    const isDataRowNull = this.dataSourceData.find(\r\n      (data) => data.DataRowId !== null\r\n    );\r\n\r\n    if (!isDataRowNull) {\r\n      this.disabledSignOffButton = true;\r\n    }\r\n\r\n    // console.log(this.hotRegisterer.getInstance(this.id).updateSettings);\r\n    this.onContextMenuPrepare();\r\n\r\n    this.dataSourceData = this.dataSourceData.filter(\r\n      (item) => item.IsDeleted !== true\r\n    );\r\n\r\n    // emit datasource for preview\r\n    this.dataSourceDataChanged.emit(this.dataSourceData);\r\n    // show column reference\r\n    this.showCellReferences();\r\n    //get state\r\n    this.getState();\r\n\r\n    //Check If adding new row is allowed or not\r\n    this.checkNewRow();\r\n    const that = this;\r\n    this.hotRegisterer.getInstance(this.id).updateSettings({\r\n      columnSorting: {\r\n        sortEmptyCells: true,\r\n      },\r\n      cells(row: any, column: any, prop: { toString: () => string }) {\r\n        const cellProperties: any = {};\r\n\r\n        const cellProps = prop.toString().split('.');\r\n        const data = this.instance.getSourceDataAtRow(row) as any;\r\n\r\n        cellProperties.isStudyEditable = that.isStudyEditable;\r\n        cellProperties.calculatedField = that.calculatedField;\r\n        cellProperties.dataSetId = that.dataSetId;\r\n        cellProperties.showFormula = that.showFormula;\r\n        cellProperties.renderer = that.cellRendererData.bind(this);\r\n\r\n        return cellProperties;\r\n      },\r\n      afterOnCellMouseDown(\r\n        event: any,\r\n        coords: { col: number; row: any },\r\n        TD: any\r\n      ) {\r\n        const totalCols = that.hotRegisterer.getInstance(that.id).countCols();\r\n        if (!that.isStudyEditable && coords.col === totalCols - 1) {\r\n          const logicalRow = that.hotRegisterer\r\n            .getInstance(that.id)\r\n            .toPhysicalRow(coords.row);\r\n\r\n          const currentRow = that.hotRegisterer\r\n            .getInstance(that.id)\r\n            .getSourceDataAtRow(logicalRow) as any;\r\n          that.onDeleteRowClicked.emit(currentRow);\r\n        }\r\n      },\r\n      afterSelection: (row, column, row2, column2, preventScrolling, selectionLayerLevel) => {\r\n        const col = that.hotRegisterer.getInstance(that.id).getSourceDataAtCell(row,column);\r\n          const meta = that.hotRegisterer.getInstance(that.id).getCellMeta(row,column);\r\n          const currentColumn = that.columns.find((item:any)=>item.data == meta.prop);\r\n          if(currentColumn && currentColumn.type == 'numeric'){\r\n            that.selectedCell.row = row;\r\n            that.selectedCell.col = column;\r\n            that.selectedCellValue = col;\r\n            that.disableFormulaBar = currentColumn.readOnly;\r\n          }\r\n          else{\r\n            that.selectedCellValue = '';\r\n          }\r\n      },\r\n      beforeCopy: function(data, coords) {\r\n        var coord = coords[0];\r\n       // var p = this.getPlugin('formulas');\r\n        \r\n        var row = 0;\r\n        var col = 0;\r\n        \r\n        console.log(coord.startRow)\r\n        \r\n        for (var i = coord.startRow; i <= coord.endRow; i++) {\r\n          for (var j = coord.startCol; j <= coord.endCol; j++) {\r\n             data[row][col] = that.hotRegisterer.getInstance(that.id).getSourceDataAtCell(i, j);\r\n             col++;\r\n          }\r\n          col = 0;\r\n          row++;\r\n        }\r\n      },\r\n\r\n      afterFilter(conditionsStack: any[]) {\r\n        // exclude newly added rows from filter\r\n        //that.hotRegisterer.getInstance(that.id).batch(() => {\r\n        //  const newRows = that.dataSourceData.filter(f => f.IsNewRow === true);\r\n        //  if (newRows.length > 0) {\r\n        //    for (let i = 0; i < newRows.length; i++) {\r\n        //      (that.hotRegisterer.getInstance(that.id).getPlugin('filters') as any).filtersRowsMap.setValueAtIndex(i, false);\r\n        //    }\r\n        //  }\r\n        //});\r\n\r\n        that.dataGridState.filters = conditionsStack;\r\n        that.saveState();\r\n        //that.recalculateColumns();\r\n        setTimeout(() => {\r\n          //that.getvisibleRows();\r\n          //that.recalculateColumns();\r\n          that.cellRendererData.bind(this);\r\n          //that.hotRegisterer.getInstance(that.id).render();\r\n        }, 100);\r\n      },\r\n\r\n      afterColumnSort(currentSortConfig: any, destinationSortConfigs: any[]) {\r\n        // keep newly added rows always on top\r\n        //const newRows = that.dataSourceData.filter(f => f.IsNewRow === true);\r\n        //if (newRows.length > 0) {\r\n        //  for (let i = 0; i < newRows.length; i++) {\r\n        //    const visualRow = that.hotRegisterer.getInstance(that.id).toVisualRow(i);\r\n        //    that.hotRegisterer.getInstance(that.id).rowIndexMapper.moveIndexes([visualRow], 0);\r\n        //  }\r\n        //}\r\n        //that.recalculateColumns();\r\n        that.dataGridState.sorting = destinationSortConfigs;\r\n        that.hotRegisterer.getInstance(that.id).render();\r\n        that.saveState();\r\n      },\r\n\r\n      afterColumnResize(\r\n        newSize: any,\r\n        column: string | number,\r\n        isDoubleClick: any\r\n      ) {\r\n        that.dataGridState.columnResize[column] = newSize;\r\n        that.saveState();\r\n      },\r\n    });\r\n\r\n    if (\r\n      this.localStorageService.getData('isDataAfterReloadOrRefresh') === true\r\n    ) {\r\n      this.setUpCalculatedFieldsFromSatedata();\r\n    }\r\n    this.setTableChanges();\r\n    this.isLoadingService.remove();\r\n  }\r\n  textBoxValueChanged(event:any){\r\n    if(event.event){\r\n      this.hotRegisterer\r\n            .getInstance(this.id)\r\n            .setDataAtCell(this.selectedCell.row, this.selectedCell.col, event.value);\r\n    }\r\n  }\r\n\r\n  cellRendererData(\r\n    instance: any,\r\n    td: any,\r\n    row: number,\r\n    col: number,\r\n    prop: string,\r\n    value: any,\r\n    cellProperties: any\r\n  ) {\r\n    Handsontable.renderers.NumericRenderer.apply(this, arguments as any);\r\n\r\n    const visiblerows = instance.rowIndexMapper.getNotTrimmedIndexes();\r\n    const logicalRowNum = cellProperties.row;\r\n    const cellProps = prop.toString().split('.');\r\n    const data = instance.getSourceDataAtRow(logicalRowNum) as any;\r\n    const rowData = instance.getDataAtRow(row);\r\n    const visibleIndex = visiblerows.find((x: any) => x == logicalRowNum);\r\n    if (data && data.IsNewRow) {\r\n      if (typeof cellProps[0] !== 'undefined' && cellProps[0] === 'YearsData') {\r\n        td.classList.add('htNumeric');\r\n      }\r\n      td.classList.add('highlighter-tr');\r\n    }\r\n\r\n    if (typeof cellProps[0] !== 'undefined' && cellProps[0] === 'YearsData') {\r\n      td.classList.add('htRight');\r\n      const cellValue = instance.getSourceDataAtCell(logicalRowNum,cellProperties.col);\r\n      if(cellValue.toString().startsWith('=',0)){\r\n        td.classList.add('has-formula');\r\n        if(cellProperties.showFormula){\r\n          td.innerHTML= cellValue;\r\n        }\r\n      }\r\n      if (\r\n        data &&\r\n        typeof data['ChangeLog'] !== 'undefined' &&\r\n        data['ChangeLog'] !== null\r\n      ) {\r\n        const rowChangeLogData = data['ChangeLogObj'];\r\n        if (typeof rowChangeLogData[cellProps[1]] !== 'undefined') {\r\n          const yearChangeLogData = rowChangeLogData[cellProps[1]];\r\n          if (typeof yearChangeLogData[cellProps[2]] !== 'undefined') {\r\n            let commentHtml = '';\r\n            if (\r\n              data['ChangeLogObj'] &&\r\n              typeof data['ChangeLogObj'][cellProps[1]] !== 'undefined'\r\n            ) {\r\n              const commentData =\r\n                data['ChangeLogObj'][cellProps[1]][cellProps[2]];\r\n\r\n              const oldValue = !isNaN(commentData.oldValue)\r\n                ? +commentData.oldValue\r\n                : 0;\r\n\r\n              commentHtml = `<div class='row text-left'>\r\n                            <div class='col-3'>Name:</div>\r\n                            <div class='col'>${commentData.name}</div>\r\n                        </div>\r\n                        <div class='row text-left'>\r\n                            <div class='col-3'>Old Value:</div>\r\n                            <div class='col'>${oldValue.toFixed(1)}</div>\r\n                        </div>\r\n                        <div class='row text-left'>\r\n                            <div class='col-3'>Date:</div>\r\n                            <div class='col'>${commentData.date}</div>\r\n                        </div>`;\r\n            }\r\n            // Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n            // td.className = 'htRight htNumeric highlighter-td cellWithComment';\r\n            td.classList.add('htRight');\r\n            td.classList.add('htNumeric');\r\n            td.classList.add('highlighter-td');\r\n            td.classList.add('cellWithComment');\r\n            \r\n            // const myDiv = `<div popup-tooltip='${commentHtml}'></div>`;\r\n\r\n            const div = document.createElement('div');\r\n            div.innerHTML = commentHtml;\r\n            div.className = 'cellComment';\r\n            // div.parentElement?.parentElement?.parentElement?.classList.add('');\r\n            // td.setAttribute(\r\n            //   'popup-tooltip',\r\n            //   'This is test tooltip without HTML'\r\n            // );\r\n            td.appendChild(div);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (\r\n        data &&\r\n        typeof data['allComments'] !== 'undefined' &&\r\n        data['allComments'] !== null\r\n      ) {\r\n        if (typeof data['allComments'][cellProps[1]] !== 'undefined') {\r\n          if (\r\n            typeof data['allComments'][cellProps[1]][cellProps[2]] !==\r\n            'undefined' &&\r\n            data['allComments'][cellProps[1]][cellProps[2]]\r\n          ) {\r\n            // cellProperties.className = 'has-comment';\r\n            td.classList.add('has-comment');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const colCount = instance.countCols();\r\n    //const hiddenColumnsCount = this.hiddenColumns?.columns?.length || 0;\r\n    //if (\r\n    //  !cellProperties.isStudyEditable &&\r\n    //  col === colCount - hiddenColumnsCount - 1\r\n    //) {\r\n    if (!cellProperties.isStudyEditable && col === colCount - 1) {\r\n      td.className = 'text-center';\r\n      td.innerHTML =\r\n        '<button class=\"btn btn-outline-danger btn-sm\"><i class=\"fa fa-trash\"></i></button>';\r\n    }\r\n\r\n    if (typeof cellProps[0] !== 'undefined' && cellProps[0] === 'YearsData') {\r\n      if (cellProps[2] !== cellProperties.calculatedField) {\r\n        const calculatedFiled = cellProperties.calculatorContextMenuItems?.find(\r\n          (single: any) => single.name === cellProps[2] && single.isCheck\r\n        );\r\n\r\n        if (calculatedFiled) {\r\n          const valueProp = `${cellProps[0]}.${cellProps[1]}.${cellProperties.calculatedField}`;\r\n          const currentValue = cellProperties.valueColsIndexes.find(\r\n            (valueColsIndex: any) => valueColsIndex.prop === valueProp\r\n          );\r\n          const currentValueIndex = cellProperties.valueColsIndexes.findIndex(\r\n            (valueColsIndex: any) => valueColsIndex.prop === valueProp\r\n          );\r\n\r\n          if (currentValue) {\r\n            const colStaticColName = Common.getAlphabetFromNo(\r\n              currentValue.index + 1\r\n            );\r\n\r\n            const previousValueIndex =\r\n              currentValueIndex > 0 ? currentValueIndex - 1 : 0;\r\n\r\n            const previousValue =\r\n              cellProperties.valueColsIndexes[previousValueIndex];\r\n\r\n            let colStaticColPreviousValue = '';\r\n            if (previousValue) {\r\n              colStaticColPreviousValue = Common.getAlphabetFromNo(\r\n                previousValue.index + 1\r\n              );\r\n            }\r\n            // console.log(instance.countRows());\r\n            let replaceValue = {\r\n              colStaticColName: colStaticColName,\r\n              COL_PREVIOUS_VALUE: colStaticColPreviousValue,\r\n              TOTAL_ROWS: instance.countRows(),\r\n              ROW_NO: row + 1,\r\n              NO_YEAR: 1,\r\n            };\r\n\r\n            let colFormula =\r\n              typeof calculatedFiled.formula !== 'undefined'\r\n                ? calculatedFiled.formula\r\n                : '';\r\n\r\n            colFormula = Common.replaceAll(colFormula, replaceValue);\r\n            // console.log(colFormula);\r\n            data['YearsData'][cellProps[1]][cellProps[2]] = colFormula;\r\n            cellProperties.numericFormat = {\r\n              pattern: '0,0.0'\r\n            }\r\n            Handsontable.renderers.NumericRenderer.apply(this, arguments as any);\r\n            // add % symbol to calculated fields, numeric sorting is allowed\r\n            td.innerHTML = `${value}%`;\r\n          }\r\n        }\r\n      }\r\n      // cellProperties.type= 'numeric',\r\n      //Handsontable.renderers.NumericRenderer.apply(this, arguments as any);\r\n      cellProperties.numericFormat = {\r\n        pattern:\r\n          cellProperties.calculatedField == 'Unit'\r\n            ? '0,0'\r\n            : cellProperties.dataSetId == 4\r\n              ? '0,0.0'\r\n              : '0,0.00',\r\n      };\r\n    }\r\n\r\n    return td;\r\n  }\r\n\r\n  getvisibleRows() {\r\n    let visibleRows: any[] = [];\r\n    const filterRows = this.hotRegisterer\r\n      .getInstance(this.id)\r\n      .rowIndexMapper.getNotTrimmedIndexes();\r\n    if (filterRows) {\r\n      filterRows.map((filterRow) => {\r\n        const row = this.hotRegisterer\r\n          .getInstance(this.id)\r\n          .getSourceDataAtRow(filterRow) as any;\r\n        // const yearData = item.YearsData;\r\n        // let colStaticColNo = Object.keys(item.ColumnsData).length;\r\n\r\n        // if (yearData) {\r\n        //   let valueColIndex = 0;\r\n        //   let isFirstCol = false;\r\n        //   Object.keys(yearData).map((year: any) => {\r\n        //     colStaticColNo++;\r\n        //     if (calculatedFiled.isCheck) {\r\n        //       if (\r\n        //         typeof item.YearsData[year][calculatedFiled.name] ===\r\n        //         'undefined'\r\n        //       ) {\r\n        //         item.YearsData[year][calculatedFiled.name] = '';\r\n        //       }\r\n        //     } else {\r\n        //       delete item.YearsData[year][calculatedFiled.name];\r\n        //     }\r\n\r\n        //     if (!myCols.includes(...Object.keys(item.YearsData[year]))) {\r\n        //       myCols.push(...Object.keys(item.YearsData[year]));\r\n        //     }\r\n        //   });\r\n        // }\r\n        visibleRows.push(row);\r\n      });\r\n    }\r\n    // this.hotRegisterer.getInstance(this.id).loadData(visibleRows);\r\n    return visibleRows;\r\n  }\r\n  recalculateColumns() {\r\n    const filterRows = this.hotRegisterer\r\n      .getInstance(this.id)\r\n      .rowIndexMapper.getNotTrimmedIndexes();\r\n    // this.hotRegisterer.getInstance(this.id).render();\r\n    // if (filterRows) {\r\n    //   filterRows.map((filterRow) => {\r\n    //     const row = this.hotRegisterer\r\n    //       .getInstance(this.id)\r\n    //       .getSourceDataAtRow(filterRow) as any;\r\n    //     let colData: any = [];\r\n    //     Object.keys(row.ColumnsData).map((col: any) => {\r\n    //       colData.push(row.ColumnsData[col]);\r\n    //     });\r\n\r\n    //     Object.keys(row.YearsData).map((yearData: any) => {\r\n    //       Object.keys(row.YearsData[yearData]).map((innerData) => {\r\n    //         colData.push(row.YearsData[yearData][innerData]);\r\n    //       });\r\n    //     });\r\n\r\n    //     for (let i = 0; i < colData.length; i++) {\r\n    //       this.hotRegisterer\r\n    //         .getInstance(this.id)\r\n    //         .setSourceDataAtCell(filterRow, i, colData[i]);\r\n    //     }\r\n    //   });\r\n    // }\r\n  }\r\n\r\n  // No need these functions now\r\n  // highlighCellWithChangelog(\r\n  //   instance: any,\r\n  //   td: any,\r\n  //   row: number,\r\n  //   col: number,\r\n  //   prop: string,\r\n  //   value: any,\r\n  //   cellProperties: any\r\n  // ) {\r\n  //   // Handsontable.renderers.getRenderer('html')(\r\n  //   //   instance,\r\n  //   //   td,\r\n  //   //   row,\r\n  //   //   col,\r\n  //   //   prop,\r\n  //   //   value,\r\n  //   //   cellProperties\r\n  //   // );\r\n\r\n  //   Handsontable.renderers.HtmlRenderer.apply(this, [\r\n  //     instance,\r\n  //     td,\r\n  //     row,\r\n  //     col,\r\n  //     prop,\r\n  //     value,\r\n  //     cellProperties,\r\n  //   ]);\r\n\r\n  //   const rowData = instance.getSourceDataAtRow(row);\r\n  //   const propObj = prop.split('.');\r\n\r\n  //   let commentHtml = '';\r\n  //   if (\r\n  //     rowData['ChangeLogObj'] &&\r\n  //     typeof rowData['ChangeLogObj'][propObj[1]] !== 'undefined'\r\n  //   ) {\r\n  //     const commentData = rowData['ChangeLogObj'][propObj[1]][propObj[2]];\r\n\r\n  //     const oldValue = !isNaN(commentData.oldValue) ? +commentData.oldValue : 0;\r\n\r\n  //     commentHtml = `<div class=\"row text-left\">\r\n  //                           <div class=\"col-3\">Name:</div>\r\n  //                           <div class=\"col\">${commentData.name}</div>\r\n  //                       </div>\r\n  //                       <div class=\"row text-left\">\r\n  //                           <div class=\"col-3\">Old Value:</div>\r\n  //                           <div class=\"col\">${oldValue.toFixed(1)}</div>\r\n  //                       </div>\r\n  //                       <div class=\"row text-left\">\r\n  //                           <div class=\"col-3\">Date:</div>\r\n  //                           <div class=\"col\">${commentData.date}</div>\r\n  //                       </div>`;\r\n  //   }\r\n  //   // Handsontable.renderers.TextRenderer.apply(this, arguments);\r\n  //   // td.className = 'htRight htNumeric highlighter-td cellWithComment';\r\n  //   td.classList.add('htRight');\r\n  //   td.classList.add('htNumeric');\r\n  //   td.classList.add('highlighter-td');\r\n  //   td.classList.add('cellWithComment');\r\n\r\n  //   const div = document.createElement('div');\r\n  //   div.innerHTML = commentHtml;\r\n  //   div.className = 'cellComment';\r\n\r\n  //   td.appendChild(div);\r\n  //   return td;\r\n  // }\r\n\r\n  // newRowHighlight(\r\n  //   instance: Handsontable.Core,\r\n  //   td: HTMLTableCellElement,\r\n  //   row: number,\r\n  //   col: number,\r\n  //   prop: string,\r\n  //   value: any,\r\n  //   cellProperties: Handsontable.CellProperties\r\n  // ) {\r\n  //   Handsontable.renderers.HtmlRenderer.apply(this, [\r\n  //     instance,\r\n  //     td,\r\n  //     row,\r\n  //     col,\r\n  //     prop,\r\n  //     value,\r\n  //     cellProperties,\r\n  //   ]);\r\n\r\n  //   const propObj = prop.split('.');\r\n\r\n  //   if (typeof propObj[0] !== 'undefined' && propObj[0] === 'YearsData') {\r\n  //     td.classList.add('htRight');\r\n  //     td.classList.add('htNumeric');\r\n  //   }\r\n  //   td.classList.add('highlighter-tr');\r\n  // }\r\n\r\n  // addNewDeleteCol(\r\n  //   instance: any,\r\n  //   td: any,\r\n  //   row: number,\r\n  //   col: number,\r\n  //   prop: string,\r\n  //   value: any,\r\n  //   cellProperties: any\r\n  // ) {\r\n  //   Handsontable.renderers.HtmlRenderer.apply(this, [\r\n  //     instance,\r\n  //     td,\r\n  //     row,\r\n  //     col,\r\n  //     prop,\r\n  //     value,\r\n  //     cellProperties,\r\n  //   ]);\r\n\r\n  //   td.className = 'text-center';\r\n  //   td.innerHTML =\r\n  //     '<button class=\"btn btn-outline-danger btn-sm\"><i class=\"fa fa-trash\"></i></button>';\r\n  // }\r\n  // END\r\n\r\n  afterFormulasValuesUpdate = (changes: any) => { };\r\n\r\n  onRequestForSignOffClickedEvent(event: any) {\r\n    this.onRequestForSignOffClicked.emit(event);\r\n  }\r\n\r\n  onRequestForChangeClickedEvent(event: any) {\r\n    this.onRequestForChangeClicked.emit(event);\r\n  }\r\n\r\n  onDeleteRow(currentRow: any) {\r\n    if (\r\n      this.deletedRows.filter((item) => item.DataRowId !== currentRow.DataRowId)\r\n    ) {\r\n      this.deletedRows.push(currentRow);\r\n    }\r\n    console.log(this.deletedRows);\r\n    if (this.deletedRows.length > 0) {\r\n      this.isRenderingFinished = false;\r\n      const data = this.hotRegisterer\r\n        .getInstance(this.id)\r\n        .getSourceData() as any;\r\n      const dataSourceData = data.reduce((item: any, curr: any) => {\r\n        const stored = this.deletedRows.find(\r\n          ({ DataRowId }) => DataRowId === curr.DataRowId\r\n        );\r\n        console.log(stored);\r\n        if (stored) {\r\n          stored.IsDeleted = true;\r\n          // item.push(stored);\r\n        } else {\r\n          item.push(curr);\r\n        }\r\n        return item;\r\n      }, []);\r\n      console.log(dataSourceData);\r\n      this.pendingChangeService.setPendingChanges(true);\r\n      this.alertService.success('Your data row has been removed successfully.');\r\n      setTimeout(() => {\r\n        this.hotRegisterer.getInstance(this.id).loadData(dataSourceData);\r\n        this.hotRegisterer.getInstance(this.id).render();\r\n        this.setUpUserState();\r\n      }, 100);\r\n\r\n      // this.isRenderingFinished = true;\r\n    }\r\n  }\r\n\r\n  unlockStudyClickedEvent(event: any) {\r\n    this.onUnlockStudyClicked.emit(event);\r\n  }\r\n\r\n  onSaveDataClickedEvent() {\r\n    this.pendingChangeService.setPendingChanges(false);\r\n    this.hotRegisterer.getInstance(this.id).validateCells((valid) => {\r\n      if (valid) {\r\n        this.localStorageService.setData(true, 'isDataAfterReloadOrRefresh');\r\n        setTimeout(() => {\r\n          const data = {\r\n            dataSourceData:\r\n              this.dataSourceDataNoFormulas.length > 0\r\n                ? this.dataSourceDataNoFormulas\r\n                : this.dataSourceData,\r\n            unitOfValues: this.unitOfValues,\r\n          };\r\n\r\n          if (data.dataSourceData && this.deletedRows.length) {\r\n            data.dataSourceData = data.dataSourceData.reduce(\r\n              (item: any, curr: any) => {\r\n                const stored = this.deletedRows.find(\r\n                  ({ DataRowId }) => DataRowId === curr.DataRowId\r\n                );\r\n                if (stored) {\r\n                  stored.IsDeleted = true;\r\n                  for (let year in stored.YearsData) {\r\n                    delete stored['YearsData'][year]['% Of Total'];\r\n                    delete stored['YearsData'][year]['CAGR'];\r\n                    delete stored['YearsData'][year]['Change, %'];\r\n                  }\r\n                  item.push(stored);\r\n                } else {\r\n                  item.push(curr);\r\n                }\r\n                return item;\r\n              },\r\n              []\r\n            );\r\n          }\r\n\r\n          this.onSaveDataClicked.emit(data);\r\n        }, 100);\r\n      } else {\r\n        this.alertService.danger('Grid contains some invalid cells!');\r\n      }\r\n    });\r\n  }\r\n\r\n  onSignOffClickedEvent(event: any) {\r\n    this.onSignOffClicked.emit(this.dataSourceData);\r\n  }\r\n\r\n  addNewRow() {\r\n    if (this.isAddNewRowPopup === false) {\r\n      this.isAddNewRowPopup = true;\r\n      this.createNewRowObj();\r\n    } else {\r\n      this.bindRowFormObjectToHandsontableData();\r\n    }\r\n  }\r\n\r\n  dropdownchange(event: any, rowItem: any) {\r\n    let dropDownValue = this.newRowFormObj.find(\r\n      (item) => item.title == rowItem.title\r\n    );\r\n\r\n    if (dropDownValue && event) {\r\n      dropDownValue.value = event.Name;\r\n      this.newRowFormObj.forEach((item) => {\r\n        if (item.title == (rowItem.title + 'Id')) {\r\n          item.value = event.Id;\r\n        }\r\n      });\r\n      //For handling dependent dropdown fields for Add New Row\r\n      //this.bindDependentDropdown(event);\r\n    }\r\n  }\r\n\r\n  //For handling dependent dropdown fields for Add New Row\r\n  bindDependentDropdown(rowItem: any) {\r\n    let dependentField: any = [];\r\n    this.newRowFormObj.forEach((item) => {\r\n      if (item.title == (rowItem.title + 'Id')) {\r\n        item.value = rowItem.Id;\r\n      }\r\n      if (item.IsDependent && item.DependingAttributes.length > 0) {\r\n        dependentField = [];\r\n        item.DependingAttributes.forEach((attr: any) => {\r\n          const dependentItem = this.newRowFormObj.find(dependent => dependent.title == attr && attr == (rowItem.title + 'Id'));\r\n          if (dependentItem) {\r\n            let obj: any = {};\r\n            obj.dependentPropertyName = attr;\r\n            obj.dependentPropertyValue = dependentItem.value;\r\n            dependentField.push(obj);\r\n          }\r\n        });\r\n        if (dependentField && dependentField.length > 0) {\r\n          this.loadDependentDropdown(item, dependentField);\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log('dependent', dependentField);\r\n  }\r\n  createNewRowObj() {\r\n    this.newRowFormObj = [];\r\n    for (let col of this.dataSource.Data.ColumnList) {\r\n      const colSetting = this.dataSettings.fields.find(\r\n        (item) => item.dataField === col.Title\r\n      );\r\n      if (col.IsVisible) {\r\n        if (colSetting && !colSetting.isVisibleToAddRow) {\r\n          let existingRowData = this.dataSourceData[0]['ColumnsData'];\r\n          let rowObj = {\r\n            title: col.Title,\r\n            label: colSetting.caption,\r\n            value: existingRowData[col.Title].toString(),\r\n            isColumnsData: true,\r\n            isEditable: false,\r\n            isVisible: true\r\n          };\r\n          this.newRowFormObj.push(rowObj);\r\n          if (existingRowData && existingRowData[col.Title + 'Id']) {\r\n            const existingColumn = this.newRowFormObj.find(item => item.title === col.Title + 'Id');\r\n            if (existingColumn) {\r\n              existingColumn.value = existingRowData[col.Title + 'Id'].toString();\r\n            }\r\n          }\r\n        } else {\r\n          let rowObj = {\r\n            title: col.Title,\r\n            label: colSetting?.caption || col.Title,\r\n            value: '',\r\n            isColumnsData: true,\r\n            isEditable:\r\n              typeof colSetting?.isEditable == 'boolean'\r\n                ? colSetting.isEditable\r\n                : true,\r\n            isVisible: true,\r\n          };\r\n          this.newRowFormObj.push(rowObj);\r\n        }\r\n      }\r\n      else {\r\n        let rowObj = {\r\n          title: col.Title,\r\n          label: '',\r\n          value: '',\r\n          isColumnsData: true,\r\n          isEditable: false,\r\n          isVisible: false\r\n        };\r\n        this.newRowFormObj.push(rowObj);\r\n      }\r\n    }\r\n    for (let col of this.dataSource.Data.YearsList) {\r\n      col.AttributeList.forEach((attr) => {\r\n        const colSetting = this.dataSettings.fields.find(\r\n          (item) =>\r\n            item.dataField === attr.Title &&\r\n            item.yearType.indexOf(col.Type) !== -1\r\n        );\r\n        if (colSetting) {\r\n          let rowObj = {\r\n            title: col.Year,\r\n            label: col.Year,\r\n            value: '',\r\n            isColumnsData: false,\r\n            readOnly:\r\n              typeof colSetting.readOnly == 'boolean'\r\n                ? colSetting.readOnly\r\n                : false,\r\n            isVisible: true\r\n          };\r\n          this.newRowFormObj.push(rowObj);\r\n        }\r\n      });\r\n    }\r\n    this.yearsList = this.newRowFormObj.filter((item) => !item.isColumnsData && !item.readOnly);\r\n    this.columnsList = this.newRowFormObj.filter(item => item.isColumnsData && item.isVisible);\r\n    this.createForm();\r\n    this.getDataEntryDropDown();\r\n  }\r\n\r\n  bindRowFormObjectToHandsontableData() {\r\n    if (this.addNewRowForm.valid) {\r\n      let columnsData: any = {};\r\n      let yearsData: any = {};\r\n      let columns: any = [];\r\n      for (let rowItem of this.newRowFormObj) {\r\n        if (rowItem.isColumnsData) {\r\n          columnsData[rowItem.title] = rowItem.value.toString();\r\n        } else {\r\n          let yearDataField: any = [];\r\n          this.dataSource.Data.YearsList[0].AttributeList.forEach((item) =>\r\n            yearDataField.push(item.Title)\r\n          );\r\n          if (yearDataField && yearDataField.length == 1) {\r\n            const title = yearDataField[0];\r\n            yearsData[rowItem.title] = { [title]: Number(rowItem.value) };\r\n          }\r\n        }\r\n      }\r\n      //Get Column Names for Editable Columns\r\n      this.columnsList.forEach(item => {\r\n        if (item.isEditable) {\r\n          columns.push(item.title);\r\n        }\r\n      });\r\n      let newDataSourceData = {\r\n        ChangeLog: null,\r\n        DataRowId: UUID.UUID().toUpperCase(),\r\n        IsNewRow: true,\r\n        ColumnsData: columnsData,\r\n        YearsData: yearsData,\r\n      };\r\n      let duplicateColumns = this.commonService.checkDuplicateRow(\r\n        this.dataSourceData,\r\n        columns,\r\n        newDataSourceData\r\n      );\r\n      if (duplicateColumns && duplicateColumns.length > 0) {\r\n        this.alertService.danger('You have already added this data in row.');\r\n        this.addNewRowForm.setErrors({ duplicate: true });\r\n      } else {\r\n        // console.log(newDataSourceData);\r\n        const data = this.hotRegisterer.getInstance(this.id).getSourceData();\r\n        this.isRenderingFinished = false;\r\n        this.dataSourceData.unshift(newDataSourceData);\r\n        data.unshift(newDataSourceData as any);\r\n        this.hotRegisterer.getInstance(this.id).loadData(data);\r\n        this.hotRegisterer.getInstance(this.id).render();\r\n        this.pendingChangeService.setPendingChanges(true);\r\n        // move the newly created row to the top and exclude it from sorting until sort is applied again\r\n        const stateFiltersTemp = this.dataGridState.filters;\r\n        // off filters to avoid adding a blank row\r\n        this.dataGridState.filters = [];\r\n        this.applyStateFilters();\r\n        setTimeout(() => {\r\n          const visualRow = this.hotRegisterer\r\n            .getInstance(this.id)\r\n            .toVisualRow(0);\r\n          this.hotRegisterer\r\n            .getInstance(this.id)\r\n            .rowIndexMapper.moveIndexes([visualRow], 0);\r\n          //(this.hotRegisterer.getInstance(this.id).getPlugin('filters') as any).filtersRowsMap.setValueAtIndex(0, false);\r\n          this.hotRegisterer.getInstance(this.id).render();\r\n          this.dataGridState.filters = stateFiltersTemp;\r\n          this.applyStateFilters();\r\n          this.isRenderingFinished = true;\r\n        }, 1500);\r\n\r\n        this.isAddNewRowPopup = false;\r\n        this.setUpUserState();\r\n      }\r\n    } else {\r\n      this.alertService.danger('Need to complete selection to save row.');\r\n    }\r\n  }\r\n\r\n  onContextMenuPrepare() {\r\n    let that = this;\r\n    this.hotRegisterer.getInstance(this.id).updateSettings({\r\n      contextMenu: {\r\n        items: {\r\n          copy: {\r\n            name: 'Copy',\r\n            hidden(): any {\r\n              return this.getActiveEditor() !== undefined ? false : true;\r\n            },\r\n          },\r\n          cut: {\r\n            name: 'Cut',\r\n            hidden() {\r\n              return this.getActiveEditor() !== undefined ? false : true;\r\n            },\r\n          },\r\n          sp: {\r\n            name: '---------',\r\n            hidden() {\r\n              return this.getActiveEditor() !== undefined ? false : true;\r\n            },\r\n          },\r\n          comment_custom: {\r\n            name: 'Comments',\r\n            hidden() {\r\n              return this.getActiveEditor() !== undefined ? false : true;\r\n            },\r\n            callback: function (key, selection, clickEvent) {\r\n              const currentSelected = this.getSelectedLast();\r\n              // console.log(key, selection, clickEvent);\r\n\r\n              if (currentSelected) {\r\n                const logicalRow = that.hotRegisterer\r\n                  .getInstance(that.id)\r\n                  .toPhysicalRow(currentSelected[0]);\r\n                const rowData = this.getSourceDataAtRow(logicalRow) as any;\r\n                const cellMeta = this.getCellMeta(\r\n                  currentSelected[0],\r\n                  currentSelected[1]\r\n                );\r\n                const cellValueProp = cellMeta.prop as string;\r\n\r\n                const dataRowId = rowData.DataRowId;\r\n                const cellValuePropObj = cellValueProp.split('.');\r\n                const cellColYear = cellValuePropObj[1];\r\n                const attrType = cellValuePropObj[2];\r\n\r\n                that.selectedCommentCellData = {\r\n                  colValue: cellColYear,\r\n                  dataRowId: dataRowId,\r\n                  currentCell: {},\r\n                  currentRowData: rowData,\r\n                  cellValueProp: cellValueProp,\r\n                  colCaption: cellColYear,\r\n                  attrType: attrType,\r\n                };\r\n\r\n                that.viewNotePopup = true;\r\n              }\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  onCommentBoxHidden() {\r\n    this.viewNotePopup = false;\r\n    this.selectedCommentCellData = {};\r\n  }\r\n\r\n  onCommentAdded(data: any) {\r\n    let rowData = this.hotRegisterer\r\n      .getInstance(this.id)\r\n      .getSourceData()\r\n      .find((item) => item['DataRowId'] === data.dataRowId);\r\n\r\n    if (rowData) {\r\n      rowData['allComments'] = data.currentRowData.allComments;\r\n    }\r\n\r\n    const that = this;\r\n    this.hotRegisterer.getInstance(this.id).updateSettings({\r\n      cells(row, column, prop) {\r\n        const cellProperties: any = {};\r\n\r\n        cellProperties.isStudyEditable = that.isStudyEditable;\r\n        cellProperties.calculatedField = that.calculatedField;\r\n        cellProperties.dataSetId = that.dataSetId;\r\n        cellProperties.showFormula = that.showFormula;\r\n        cellProperties.renderer = that.cellRendererData;\r\n        cellProperties.numericFormat = {\r\n          pattern:\r\n            cellProperties.calculatedField == 'Unit'\r\n              ? '0,0'\r\n              : cellProperties.dataSetId == 4\r\n                ? '0,0.0'\r\n                : '0,0.00',\r\n        };\r\n        return cellProperties;\r\n      },\r\n    });\r\n  }\r\n\r\n  onCommentEmpty(data: any) {\r\n    let rowData = this.hotRegisterer\r\n      .getInstance(this.id)\r\n      .getSourceData()\r\n      .find((item) => item['DataRowId'] === data.dataRowId);\r\n\r\n    if (rowData) {\r\n      rowData['allComments'] = data.currentRowData.allComments;\r\n    }\r\n\r\n    const that = this;\r\n    this.hotRegisterer.getInstance(this.id).updateSettings({\r\n      cells(row, column, prop) {\r\n        const cellProperties: any = {};\r\n\r\n        cellProperties.isStudyEditable = that.isStudyEditable;\r\n        cellProperties.calculatedField = that.calculatedField;\r\n        cellProperties.dataSetId = that.dataSetId;\r\n        cellProperties.showFormula = that.showFormula;\r\n        cellProperties.renderer = that.cellRendererData;\r\n        cellProperties.numericFormat = {\r\n          pattern:\r\n            cellProperties.calculatedField == 'Unit'\r\n              ? '0,0'\r\n              : cellProperties.dataSetId == 4\r\n                ? '0,0.0'\r\n                : '0,0.00',\r\n        };\r\n        return cellProperties;\r\n      },\r\n    });\r\n  }\r\n\r\n  onResetIemClick(e: any) {\r\n    this.isRenderingFinished = false;\r\n    this.isLoadingService.add();\r\n    setTimeout(() => {\r\n      switch (e.itemData.value) {\r\n        case 'ResetState':\r\n          this.deleteCustomState();\r\n          break;\r\n        case 'ResetData':\r\n          this.localStorageService.setData(true, 'isDataAfterReloadOrRefresh');\r\n          setTimeout(() => {\r\n            this.isResetDataRequired = true;\r\n            this.deletedRows = [];\r\n            this.getAllColumnsComments();\r\n          }, 100);\r\n          break;\r\n        case 'ResetCalculatedFields':\r\n          this.resetCalculatedFields();\r\n          break;\r\n        default:\r\n          // reset all\r\n          this.isResetDataRequired = true;\r\n          this.deleteCustomState();\r\n          setTimeout(() => {\r\n            this.deletedRows = [];\r\n            this.getAllColumnsComments();\r\n            this.resetCalculatedFields();\r\n          }, 1000);\r\n        // this.getAllColumnsComments();\r\n        // this.resetCalculatedFields();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  onCalculatedItemClick(e: any) {\r\n    this.isRenderingFinished = false;\r\n    this.isLoadingService.add();\r\n    setTimeout(() => {\r\n      this.addCalculatedItem(e);\r\n    }, 100);\r\n  }\r\n\r\n  addCalculatedItem(e: any) {\r\n    if (typeof e.itemData !== 'undefined' || typeof e !== 'undefined') {\r\n      this.isLoadingService.add();\r\n      const calculatedFiled = e?.itemData || e;\r\n      calculatedFiled.isCheck = !calculatedFiled.isCheck;\r\n      calculatedFiled.icon = calculatedFiled.isCheck ? 'check' : '';\r\n      // let dataSourceData = this.hotRegisterer\r\n      //   .getInstance(this.id)\r\n      //   .getSourceData();\r\n      // //this.recalculateColumns();\r\n      const myCols: any = [];\r\n      // const visibleRow = this.getvisibleRows();\r\n      // if(visibleRow.length< dataSourceData.length){\r\n      //   dataSourceData = visibleRow;\r\n      // }\r\n      let dataSourceData = this.hotRegisterer\r\n        .getInstance(this.id)\r\n        .getSourceData();\r\n\r\n      dataSourceData.map((item: any, i) => {\r\n        const yearData = item.YearsData;\r\n        let colStaticColNo = Object.keys(item.ColumnsData).length;\r\n\r\n        if (yearData) {\r\n          let valueColIndex = 0;\r\n          let isFirstCol = false;\r\n          Object.keys(yearData).map((year: any) => {\r\n            colStaticColNo++;\r\n            if (calculatedFiled.isCheck) {\r\n              if (\r\n                typeof item.YearsData[year][calculatedFiled.name] ===\r\n                'undefined'\r\n              ) {\r\n                item.YearsData[year][calculatedFiled.name] = '';\r\n              }\r\n            } else {\r\n              // valueColIndex = this.calculateFiledValues(\r\n              //   item,\r\n              //   year,\r\n              //   calculatedFiled,\r\n              //   i,\r\n              //   dataSourceData.length,\r\n              //   valueColIndex\r\n              // );\r\n\r\n              delete item.YearsData[year][calculatedFiled.name];\r\n            }\r\n\r\n            if (!myCols.includes(...Object.keys(item.YearsData[year]))) {\r\n              myCols.push(...Object.keys(item.YearsData[year]));\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      let nestedHeader: any = [];\r\n      this.colHeaders[0].map((colItem: any) => {\r\n        if (typeof colItem.label !== 'undefined') {\r\n          //if (!this.isVolumeYear) {\r\n          colItem.colspan = myCols.length;\r\n          myCols.map((nestedCol: any) => {\r\n            nestedHeader.push(nestedCol);\r\n          });\r\n          // } else {\r\n          //   nestedHeader = this.colHeaders[1];\r\n          // }\r\n        } else {\r\n          nestedHeader.push(null);\r\n        }\r\n      });\r\n\r\n      let columnLists: any = [];\r\n\r\n      this.columns.map((cols: any, index: number) => {\r\n        let colObj =\r\n          typeof cols.data !== 'undefined' ? cols.data.split('.') : [];\r\n        if (cols.data === `YearsData.${colObj[1]}.${this.calculatedField}`) {\r\n          // let newCols: any = [];\r\n          columnLists.push(cols);\r\n          myCols.map((nestedCol: any) => {\r\n            if (nestedCol !== this.calculatedField) {\r\n              const newCols = {\r\n                data: `YearsData.${colObj[1]}.${nestedCol}`,\r\n                readOnly: true,\r\n                width: 50,\r\n                wordWrap: false,\r\n                placeholder: '...',\r\n                isCalculatedField: true\r\n              };\r\n              columnLists.push(newCols);\r\n            }\r\n          });\r\n          // columnLists.splice(index, 0, ...newCols);\r\n        } else {\r\n          columnLists.push(cols);\r\n        }\r\n      });\r\n\r\n      if (typeof this.colHeaders[1] !== 'undefined') {\r\n        this.colHeaders[1] = nestedHeader;\r\n      } else {\r\n        this.colHeaders.push(nestedHeader);\r\n      }\r\n\r\n      if (myCols.length <= 1) {\r\n        this.colHeaders.pop();\r\n      }\r\n      // this.columns = this.colHeaders;\r\n\r\n      //this function updates references to the correct alphabetical sequence\r\n      //const returnObj = this.moveHiddenFieldsToEndAndUpdateHiddenIndexes(\r\n      //  columnLists,\r\n      //  this.colHeaders,\r\n      //  true\r\n      //);\r\n      //columnLists = returnObj.columns;\r\n      //this.colHeaders = returnObj.colHeaders;\r\n      //this.nestedHeaders = returnObj.colHeaders;\r\n\r\n      this.valueColsIndexes = [];\r\n      for (let h = 0; h <= nestedHeader.length; h++) {\r\n        if (\r\n          typeof nestedHeader[h] !== 'undefined' &&\r\n          nestedHeader[h] === this.calculatedField\r\n        ) {\r\n          this.valueColsIndexes.push({\r\n            prop: columnLists[h]?.data || '',\r\n            index: h,\r\n          });\r\n          // this.valueColsIndexes.push(h + 1);\r\n        }\r\n      }\r\n\r\n      const that = this;\r\n      this.hotRegisterer.getInstance(this.id).updateSettings({\r\n        columns: columnLists,\r\n        colHeaders: this.colHeaders,\r\n        nestedHeaders: this.nestedHeaders,\r\n\r\n        cells(row, column, prop) {\r\n          const cellProperties: any = {};\r\n          cellProperties.calculatedField = that.calculatedField;\r\n          cellProperties.dataSetId = that.dataSetId;\r\n          cellProperties.valueColsIndexes = that.valueColsIndexes;\r\n          cellProperties.calculatorContextMenuItems =\r\n            that.calculatorContextMenuItems;\r\n          cellProperties.showFormula = that.showFormula;  \r\n          cellProperties.renderer = that.cellRendererData.bind(this);\r\n\r\n          return cellProperties;\r\n        },\r\n      });\r\n      // console.log(nestedHeader);\r\n\r\n      if (this.isFormulaAllowed) {\r\n        dataSourceData = this.replaceCellReferences(dataSourceData);\r\n      }\r\n\r\n      this.showCellReferences();\r\n      // setTimeout(() => {\r\n      this.hotRegisterer.getInstance(this.id).loadData(dataSourceData);\r\n      this.hotRegisterer.getInstance(this.id).render();\r\n\r\n      this.applyStateFilters();\r\n      this.applyStateSort();\r\n      this.applyStateColumnResize();\r\n      // }, 100);\r\n\r\n      // only for case itemData exists,only in this case is field added manually\r\n      if (e.itemData) {\r\n        if (e.itemData.value === 'percentOfTotal') {\r\n          this.dataGridState.isPercentOfTotal = e.itemData.isCheck;\r\n        }\r\n        if (e.itemData.value === 'changePercent') {\r\n          this.dataGridState.isChangePercent = e.itemData.isCheck;\r\n        }\r\n        if (e.itemData.value === 'cagr') {\r\n          this.dataGridState.isCagr = e.itemData.isCheck;\r\n        }\r\n        this.saveState();\r\n      }\r\n\r\n      this.isLoadingService.remove();\r\n    }\r\n  }\r\n\r\n  replaceCellReferences(dataSourceData: any) {\r\n    // clone data and update and return only copy\r\n    let dataSourceDataCopy = lodash.cloneDeep(dataSourceData);\r\n\r\n    // check all cells for referencing\r\n    dataSourceData.forEach((datasourceRow: any, datasourceRowIndex: any) => {\r\n      //console.log(dataSourceData);\r\n      const yearsData = datasourceRow.YearsData;\r\n      let yearsDataIndex = 0;\r\n      for (let yearData in yearsData) {\r\n        // count with value if any formula exists\r\n        if (yearsData[yearData].Value?.toString().startsWith('=', 0)) {\r\n          console.log(yearsData[yearData].Value);\r\n          // check if formula matching reference from reference list\r\n          this.columnReferences.forEach((reference: any, index: any, columnReferences: any) => {\r\n\r\n            // regular expression for reference in formula\r\n            const regFullReference = new RegExp(`\\\\\\$?${reference}\\\\\\$?[1-9][0-9]?[0-9]?[0-9]?`, \"g\");\r\n            // regular expression for reference\r\n            const regColumnReference = new RegExp(`${reference}`, \"g\");\r\n\r\n            // value with formula\r\n            const str = yearsData[yearData].Value;\r\n\r\n            // get all matches\r\n            const matchArr = str.match(regFullReference);\r\n\r\n            // if matches exists, replace reference by new reference\r\n            if (matchArr?.length) {\r\n              const columnsDataReferenceCount = Object.keys(datasourceRow.ColumnsData).length;\r\n              const yearsDataReferenceCount = Object.keys(yearsData).length;\r\n              const yearDataPropCount = Object.keys(yearsData[yearData]).length;\r\n              const matchedReferenceIndex = index;\r\n              // compute new reference\r\n              const newReference = this.getNewReference(matchedReferenceIndex, columnReferences, columnsDataReferenceCount, yearsDataReferenceCount, yearDataPropCount);\r\n              for (let match of matchArr) {\r\n                const replacedMatch = match.replace(regColumnReference, newReference);\r\n                dataSourceDataCopy[datasourceRowIndex].YearsData[yearData].Value = dataSourceDataCopy[datasourceRowIndex].YearsData[yearData].Value.replace(match, replacedMatch);\r\n              }\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n        //!!!! function have to count also with volume or units, use some enum way instead this\r\n        //count with volume\r\n        //if (yearsData[yearData].Volume?.toString().startsWith('=', 0)) {\r\n\r\n        //}\r\n\r\n        // TODO use enum in condition for all future cases\r\n        // unit\r\n        //if (yearsData[yearData].Unit?.toString().startsWith('=', 0)) {\r\n\r\n        //}\r\n        yearsDataIndex++;\r\n      }\r\n    });\r\n\r\n    return dataSourceDataCopy;\r\n  }\r\n\r\n  getNewReference(matchedReferenceIndex: any, columnReferences: any, columnsDataReferenceCount: any, yearsDataReferenceCount: any, yearDataPropCount: any) {\r\n    // check the column position of changed reference\r\n\r\n    //TODO Use yearDataPropCount to recognize how many calculated fielad are applied\r\n    //TODO Figure out if user removing calculated fields\r\n\r\n    const indexPositionInYearsData = yearsDataReferenceCount - ((columnsDataReferenceCount + yearsDataReferenceCount) - matchedReferenceIndex);\r\n    return columnReferences[columnsDataReferenceCount + (indexPositionInYearsData * 2)];\r\n  }\r\n\r\n  //private calculateFiledValues(\r\n  //  item: any,\r\n  //  year: number,\r\n  //  calculatedFiled: any,\r\n  //  i: number,\r\n  //  dataSourceDataLength: number,\r\n  //  valueColIndex: number\r\n  //) {\r\n  //  // let colStaticColPreviousValue = '';\r\n  //  // let colStaticColName = '';\r\n  //  // console.log(this.valueColsIndexes);\r\n  //  // const colHeaders = this.colHeaders[0];\r\n  //  // console.log(colHeaders);\r\n  //  // const colHeaderData =\r\n  //  //   colHeaders.find(\r\n  //  //     (head: any) => typeof head.label !== 'undefined' && head.label === year\r\n  //  //   ) || {};\r\n\r\n  //  // const colSpan =\r\n  //  //   colHeaderData && colHeaderData.colspan ? colHeaderData.colspan : 0;\r\n  //  // console.log(colSpan);\r\n  //  // if (typeof this.valueColsIndexes[valueColIndex] !== 'undefined') {\r\n  //  //   colStaticColName = Common.getAlphabetFromNo(\r\n  //  //     this.valueColsIndexes[valueColIndex] + valueColIndex\r\n  //  //   );\r\n  //  //   const preValueIndex = valueColIndex === 0 ? 0 : valueColIndex - 1;\r\n  //  //   colStaticColPreviousValue = Common.getAlphabetFromNo(\r\n  //  //     this.valueColsIndexes[preValueIndex] + preValueIndex\r\n  //  //   );\r\n\r\n  //  //   valueColIndex++;\r\n  //  // }\r\n\r\n  //  // let replaceValue = {\r\n  //  //   colStaticColName: colStaticColName,\r\n  //  //   COL_PREVIOUS_VALUE: colStaticColPreviousValue,\r\n  //  //   TOTAL_ROWS: dataSourceDataLength,\r\n  //  //   ROW_NO: i + 1,\r\n  //  //   NO_YEAR: 1,\r\n  //  // };\r\n\r\n  //  if (typeof item.YearsData[year][calculatedFiled.name] === 'undefined') {\r\n  //    item.YearsData[year][calculatedFiled.name] = '';\r\n  //  }\r\n\r\n  //  this.calculatorContextMenuItems.find(\r\n  //    (menui) => menui.value === calculatedFiled.value\r\n  //  ).isCheck = calculatedFiled.isCheck;\r\n\r\n  //  Object.keys(item.YearsData[year]).map((itemKey) => {\r\n  //    if (itemKey !== 'Value') {\r\n  //      this.calculatorContextMenuItems.map((menuItem) => {\r\n  //        if (menuItem.isCheck) {\r\n  //          let colFormula =\r\n  //            typeof menuItem.formula !== 'undefined' ? menuItem.formula : '';\r\n\r\n  //          //colFormula = Common.replaceAll(colFormula, replaceValue);\r\n  //          // item.YearsData[year][menuItem.name] = colFormula;\r\n  //          item.YearsData[year][menuItem.name] = '';\r\n  //        }\r\n  //      });\r\n  //    }\r\n  //  });\r\n\r\n  //  return valueColIndex;\r\n  //}\r\n\r\n  showCellReferences() {\r\n    if (this.colHeaders.length > 1) {\r\n      let newHeaderRow = [];\r\n      for (\r\n        let i = 0;\r\n        i < this.colHeaders[this.colHeaders.length - 1].length;\r\n        i++\r\n      ) {\r\n        // if (i === 0) {\r\n        //   console.log(this.staticColumns.length);\r\n        //   newHeaderRow.push({\r\n        //     label: null,\r\n        //     colspan: this.staticColumns.length,\r\n        //   });\r\n        // } else {\r\n        // if (\r\n        //   this.colHeaders[0][i] &&\r\n        //   typeof this.colHeaders[0][i] !== 'object'\r\n        // ) {\r\n        //   newHeaderRow.push(this.colHeaders[0][i]);\r\n        // }\r\n        // }\r\n      }\r\n      // console.log(newHeaderRow);\r\n      // this.colHeaders[0] = newHeaderRow;\r\n      // console.log(this.colHeaders[1]);\r\n      let nestedHeaderRow = [];\r\n      for (let s of this.staticColumns) {\r\n        nestedHeaderRow.push(s);\r\n      }\r\n      for (let h in this.colHeaders[1]) {\r\n        if (this.colHeaders[1][h]) {\r\n          nestedHeaderRow.push(this.colHeaders[1][h]);\r\n        }\r\n      }\r\n\r\n      this.colHeaders[1] = nestedHeaderRow;\r\n    }\r\n\r\n    const columnReferences = this.columnReferences;\r\n\r\n    // remove all existing references\r\n    for (let headersArray in this.colHeaders) {\r\n      for (let header in this.colHeaders[headersArray]) {\r\n        if (\r\n          typeof this.colHeaders[headersArray][header] === 'object' &&\r\n          this.colHeaders[headersArray][header] !== null\r\n        ) {\r\n          this.colHeaders[headersArray][header]['label'] = this.colHeaders[\r\n            headersArray\r\n          ][header]['label']?.replace(/ *\\([^)]*\\) */g, '');\r\n        } else {\r\n          this.colHeaders[headersArray][header] =\r\n            this.colHeaders[headersArray][header]?.replace(\r\n              / *\\([^)]*\\) */g,\r\n              ''\r\n            ) || '';\r\n        }\r\n      }\r\n    }\r\n\r\n    // add reference to last nested level\r\n    let index = 0;\r\n    for (let header in this.colHeaders[this.colHeaders.length - 1]) {\r\n      if (\r\n        typeof this.colHeaders[this.colHeaders.length - 1][header] ===\r\n        'object' &&\r\n        this.colHeaders[this.colHeaders.length - 1][header] !== null\r\n      ) {\r\n        this.colHeaders[this.colHeaders.length - 1][header]['label'] =\r\n          '(' +\r\n          columnReferences[index] +\r\n          ') ' +\r\n          this.colHeaders[this.colHeaders.length - 1][header]['label'];\r\n      } else {\r\n        if (\r\n          this.colHeaders[this.colHeaders.length - 1][header] === 'Value' ||\r\n          this.colHeaders[this.colHeaders.length - 1][header] === 'Volume' ||\r\n          this.colHeaders[this.colHeaders.length - 1][header] === 'Unit' ||\r\n          /^[0-9]{4}$/.test(this.colHeaders[this.colHeaders.length - 1][header])\r\n        ) {\r\n          this.colHeaders[this.colHeaders.length - 1][header] =\r\n            '(' +\r\n            columnReferences[index] +\r\n            ') ' +\r\n            this.colHeaders[this.colHeaders.length - 1][header];\r\n        }\r\n      }\r\n      index++;\r\n    }\r\n\r\n    const that = this;\r\n    this.hotRegisterer.getInstance(this.id).updateSettings({\r\n      colHeaders: this.colHeaders,\r\n      afterGetColHeader(column: any, TH: any, cp: any) {\r\n        if (that.colHeaders.length > 1) {\r\n          // TH.classList.add('new-header');\r\n          // console.log(that.colHeaders);\r\n          if (cp == 0) {\r\n            for (let i = 0; i < that.staticColumns.length; i++) {\r\n              if (column == i) TH.classList.add('new-header');\r\n            }\r\n          }\r\n          // if (cp === 0 && column == 0) TH.classList.add('new-header');\r\n          // if (cp === 1 && column == 0) TH.remove();\r\n        }\r\n      },\r\n      afterGetColumnHeaderRenderers(renderers) { },\r\n    });\r\n  }\r\n\r\n  createNewDataEntry(type: string, newValue: string) {\r\n    const dataRelationData = this.dataRelations.find(\r\n      (item: any) =>\r\n        (<any>Object).values(DataRelationsEnum).includes(item.TableName) &&\r\n        item.TableName === type\r\n    );\r\n\r\n    if (dataRelationData) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .saveNewDataEntry(dataRelationData.DataRelationId, newValue)\r\n        .subscribe(\r\n          (res: ApiResponse) => {\r\n            if (res.HttpStatusCode === 200) {\r\n              this.alertService.success(res.Data);\r\n              this.loadDataEntry(dataRelationData);\r\n              this.isLoadingService.remove();\r\n            } else {\r\n              this.alertService.danger(res.Data);\r\n              this.isLoadingService.remove();\r\n            }\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n            this.isLoadingService.remove();\r\n          }\r\n        );\r\n    }\r\n  }\r\n  loadDataEntry(dataRelationData: any) {\r\n    this.sharedService\r\n      .getDataEntryDropDowns(dataRelationData.DataRelationId)\r\n      .subscribe((res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.bindDropdownToModel(res.Data, dataRelationData.TableName);\r\n        }\r\n      });\r\n  }\r\n\r\n  //For handling dependent dropdown fields for Add New Row\r\n  loadDependentDropdown(dataRelationData: any, dependentField: any) {\r\n    this.sharedService\r\n      .getDependentDataEntryDropDowns(dataRelationData.DataRelationId, dependentField)\r\n      .subscribe((res) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          this.bindDropdownToModel(res.Data, dataRelationData.title);\r\n        }\r\n      });\r\n  }\r\n  getDataEntryDropDown() {\r\n    if (this.dataRelations && this.dataRelations.length > 0) {\r\n      this.dataRelations.forEach((item) => {\r\n        this.newRowFormObj.forEach((val) => {\r\n          const title = toUpper(val.title);\r\n          const dataItem = toUpper(item.TableName);\r\n          const label = toUpper(val.label.replace(/\\s/g, \"\"));\r\n          if (title === dataItem && val.isEditable) {\r\n            val.data = [];\r\n            val.IsDependent = item.IsDependent;\r\n            val.DependingAttributes = item.DependingAttributes;\r\n            val.DataRelationId = item.DataRelationId;\r\n            //if(!item.IsDependent){\r\n            this.loadDataEntry(item);\r\n            //}\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n  bindDropdownToModel(data: any, dropdownName: any) {\r\n    this.newRowFormObj.find((val) => {\r\n      const title = toUpper(val.title);\r\n      const dataItem = toUpper(dropdownName);\r\n      const label = toUpper(val.label.replace(/\\s/g, \"\"));\r\n      if (title === dataItem && val.isEditable) {\r\n        val.data = data?.sort((a: any, b: any) =>\r\n          a.Name.localeCompare(b.Name)\r\n        );\r\n        val.data = val.data.filter((item: any) => item.Name !== '' && item.Name !== null);\r\n      }\r\n    });\r\n  }\r\n\r\n  getState() {\r\n    this.sharedService\r\n      .getState(this.dataSource.Data.StudySetup.ViewId, this.marketYearCategoryId, true)\r\n      .subscribe(\r\n        (data) => {\r\n          try {\r\n            const stateRes =\r\n              typeof data.Data[0] !== 'undefined' ? data.Data[0] : {};\r\n            this.dataGridState = Common.realMerge(\r\n              new DataGridState(),\r\n              JSON.parse(stateRes.StateData)\r\n            );\r\n          } catch {\r\n            this.dataGridState = new DataGridState();\r\n          } finally {\r\n            if (\r\n              !this.localStorageService.getData('isDataAfterReloadOrRefresh') ||\r\n              this.localStorageService.getData('isDataAfterReloadOrRefresh') ===\r\n              false\r\n            ) {\r\n              this.dataGridState.isCagr = false;\r\n              this.dataGridState.isChangePercent = false;\r\n              this.dataGridState.isPercentOfTotal = false;\r\n            } else {\r\n              this.localStorageService.setData(\r\n                false,\r\n                'isDataAfterReloadOrRefresh'\r\n              );\r\n            }\r\n            this.setUpUserState();\r\n            this.isLoadingService.remove();\r\n            // this.applyStateFilters();\r\n            // this.applyStateSort();\r\n            // this.applyStateColumnResize();\r\n          }\r\n        },\r\n        (error) => {\r\n          throw new Error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  saveState() {\r\n    this.sharedService\r\n      .setState(\r\n        this.dataSource.Data.StudySetup.ViewId,\r\n        this.marketYearCategoryId,\r\n        0,\r\n        this.isDefaultStateMode,\r\n        JSON.stringify(this.dataGridState),\r\n        true\r\n      )\r\n      .subscribe(\r\n        (data) => { },\r\n        (error) => {\r\n          throw new Error(error);\r\n        }\r\n      );\r\n    this.pendingChange = true;\r\n  }\r\n\r\n  deleteCustomState() {\r\n    if (this.dataSource.Data.StudySetup.ViewId) {\r\n      this.isLoadingService.add();\r\n      this.sharedService\r\n        .deleteState(this.dataSource.Data.StudySetup.ViewId, this.marketYearCategoryId, 0)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            this.isLoadingService.remove();\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            this.dataGridState = new DataGridState();\r\n            setTimeout(() => {\r\n              this.getState();\r\n            }, 100);\r\n          }\r\n        );\r\n    } else {\r\n      this.isRenderingFinished = true;\r\n      this.isLoadingService.remove();\r\n    }\r\n  }\r\n\r\n  setUpUserState() {\r\n    setTimeout(() => {\r\n      // console.log(this.hotRegisterer.getInstance(this.id).getSourceData());\r\n      // this.hotRegisterer.getInstance(this.id).loadData(this.dataSourceData);\r\n      console.log(\r\n        this.hotRegisterer.getInstance(this.id).getSourceData().length\r\n      );\r\n      this.hotRegisterer\r\n        .getInstance(this.id)\r\n        .loadData(this.hotRegisterer.getInstance(this.id).getSourceData());\r\n      this.hotRegisterer.getInstance(this.id).render();\r\n\r\n      this.applyStateFilters();\r\n      this.applyStateSort();\r\n      this.applyStateColumnResize();\r\n    }, 100);\r\n  }\r\n\r\n  setUpCalculatedFieldsFromSatedata() {\r\n    setTimeout(() => {\r\n      this.calculatorContextMenuItems[0].isCheck =\r\n        !this.dataGridState.isPercentOfTotal;\r\n      this.addCalculatedItem(this.calculatorContextMenuItems[0]);\r\n\r\n      this.calculatorContextMenuItems[1].isCheck =\r\n        !this.dataGridState.isChangePercent;\r\n      this.addCalculatedItem(this.calculatorContextMenuItems[1]);\r\n\r\n      this.calculatorContextMenuItems[2].isCheck = !this.dataGridState.isCagr;\r\n      this.addCalculatedItem(this.calculatorContextMenuItems[2]);\r\n    }, 2000);\r\n  }\r\n\r\n  resetCalculatedFields() {\r\n    this.dataGridState.isCagr = false;\r\n    this.dataGridState.isChangePercent = false;\r\n    this.dataGridState.isPercentOfTotal = false;\r\n\r\n    this.calculatorContextMenuItems[0].isCheck = true;\r\n    this.addCalculatedItem(this.calculatorContextMenuItems[0]);\r\n\r\n    this.calculatorContextMenuItems[1].isCheck = true;\r\n    this.addCalculatedItem(this.calculatorContextMenuItems[1]);\r\n\r\n    this.calculatorContextMenuItems[2].isCheck = true;\r\n    this.addCalculatedItem(this.calculatorContextMenuItems[2]);\r\n\r\n    this.saveState();\r\n  }\r\n\r\n  createForm() {\r\n    let form: any = {};\r\n    this.newRowFormObj.forEach((item) => {\r\n      form[item.title] = new FormControl();\r\n    });\r\n    this.addNewRowForm = new FormGroup(form);\r\n  }\r\n\r\n  applyStateFilters() {\r\n    if (this.dataGridState.filters) {\r\n      const filterPlugins = this.hotRegisterer\r\n        .getInstance(this.id)\r\n        .getPlugin('filters');\r\n\r\n      this.dataGridState.filters.map((filterItem) => {\r\n        if (filterItem.conditions) {\r\n          filterItem.conditions.map((condition: any) => {\r\n            filterPlugins.addCondition(\r\n              filterItem.column,\r\n              condition.name,\r\n              condition.args,\r\n              filterItem.operation\r\n            );\r\n          });\r\n        }\r\n      });\r\n      filterPlugins.filter();\r\n      this.recalculateColumns();\r\n    }\r\n  }\r\n\r\n  applyStateSort() {\r\n    if (this.dataGridState.sorting) {\r\n      const columnSortingPlugin = this.hotRegisterer\r\n        .getInstance(this.id)\r\n        .getPlugin('columnSorting');\r\n\r\n      this.dataGridState.sorting.map((sort) => {\r\n        columnSortingPlugin.sort(sort);\r\n      });\r\n    }\r\n  }\r\n\r\n  applyStateColumnResize() {\r\n    if (this.dataGridState.columnResize) {\r\n      const colResize = this.hotRegisterer\r\n        .getInstance(this.id)\r\n        .getPlugin('manualColumnResize');\r\n\r\n      Object.keys(this.dataGridState.columnResize).map((column) => {\r\n        const col = parseInt(column);\r\n        if (\r\n          typeof this.dataGridState.columnResize[col] !== 'undefined' &&\r\n          this.dataGridState.columnResize[col] > 0\r\n        ) {\r\n          colResize.setManualSize(col, this.dataGridState.columnResize[col]);\r\n        }\r\n      });\r\n\r\n      // this.hotRegisterer.getInstance(this.id).render();\r\n      colResize.updatePlugin();\r\n    }\r\n  }\r\n  addComment() {\r\n    this.viewStudyComments = true;\r\n  }\r\n  closeAddComment() {\r\n    this.viewStudyComments = false;\r\n  }\r\n  showHelpTextPopup() {\r\n    this.showHelpText = true;\r\n  }\r\n  closeHelpTextPopup() {\r\n    this.showHelpText = false;\r\n  }\r\n\r\n  checkNewRow() {\r\n    const isVisibleToAddRowCount = this.dataSettings.fields.filter(\r\n      (item) => item.isVisibleToAddRow\r\n    );\r\n    if (!isVisibleToAddRowCount || isVisibleToAddRowCount.length == 0) {\r\n      this.isAddNewRowVisible = false;\r\n    }\r\n  }\r\n  onViewChange(e: any){\r\n    this.isRenderingFinished = false;\r\n    this.isLoadingService.add();\r\n    setTimeout(() => {\r\n      switch (e.itemData.value) {\r\n        case 'DisplayValues':\r\n          this.showFormula = false;\r\n          setTimeout(() => {\r\n            this.updateViewOnClick();\r\n          }, 100);\r\n          break;\r\n        case 'DisplayFormula':\r\n          this.showFormula = true;\r\n          setTimeout(() => {\r\n            this.updateViewOnClick();\r\n          }, 100);\r\n          break;\r\n        default:\r\n          this.showFormula = false;\r\n          setTimeout(() => {\r\n            this.updateViewOnClick();\r\n          }, 100);\r\n      }\r\n    }, 100);\r\n  }\r\n  updateViewOnClick(){\r\n    let that = this;\r\n    this.hotRegisterer.getInstance(this.id).updateSettings({\r\n      cells(row, column, prop) {\r\n        const cellProperties: any = {};\r\n        cellProperties.calculatedField = that.calculatedField;\r\n        cellProperties.dataSetId = that.dataSetId;\r\n        cellProperties.showFormula = that.showFormula;\r\n        cellProperties.renderer = that.cellRendererData;\r\n        cellProperties.numericFormat = {\r\n          pattern:\r\n            cellProperties.calculatedField == 'Unit'\r\n              ? '0,0'\r\n              : cellProperties.dataSetId == 4\r\n                ? '0,0.0'\r\n                : '0,0.00',\r\n        };\r\n        return cellProperties;\r\n      },\r\n    });\r\n  }\r\n}\r\n","<dx-button *ngIf=\"userDetail.IsAdmin\"\r\n           stylingMode=\"outlined\"\r\n           type=\"default\"\r\n           text=\"{{\r\n    isDefaultStateMode\r\n      ? 'Switch OFF Settings of Default State'\r\n      : 'Switch ON Settings of Default State'\r\n  }}\"\r\n           (onClick)=\"isDefaultStateMode = !isDefaultStateMode\">\r\n</dx-button>\r\n<div [style]=\"isDefaultStateMode ? 'outline: 5px solid #ff9e92' : ''\">\r\n  <div class=\"action-container\">\r\n    <div class=\"row justify-content-between align-items-center\">\r\n      <div class=\"col\">\r\n        <h6>{{ studyTitle }}</h6>\r\n        <div *ngIf=\"currentCurrency\" class=\"font-weight-bold1\">\r\n          Currency: {{ currentCurrency?.CurrencyName }}\r\n        </div>\r\n      </div>\r\n      <div class=\"col-auto\" *ngIf=\"!isStudyEditable\">\r\n        <dx-drop-down-button icon=\"fa fa-eye\"\r\n                             text=\"Change View\"\r\n                             [(selectedItem)]=\"selectedView\"\r\n                             [dropDownOptions]=\"{ width: 250 }\"\r\n                             displayExpr=\"name\"\r\n                             keyExpr=\"value\"\r\n                             [items]=\"viewMenuItems\"\r\n                             (onItemClick)=\"onViewChange($event)\">\r\n        </dx-drop-down-button>\r\n        <dx-drop-down-button icon=\"refresh\"\r\n                             text=\"Reset\"\r\n                             [dropDownOptions]=\"{ width: 250 }\"\r\n                             displayExpr=\"name\"\r\n                             keyExpr=\"value\"\r\n                             [items]=\"resetMenuItems\"\r\n                             (onItemClick)=\"onResetIemClick($event)\">\r\n        </dx-drop-down-button>\r\n\r\n        <dx-drop-down-button icon=\"fas fa-calculator\"\r\n                             [dropDownOptions]=\"{ width: 200 }\"\r\n                             displayExpr=\"name\"\r\n                             keyExpr=\"value\"\r\n                             [items]=\"calculatorContextMenuItems\"\r\n                             (onItemClick)=\"onCalculatedItemClick($event)\">\r\n        </dx-drop-down-button>\r\n        <dx-button icon=\"comment\"\r\n                   stylingMode=\"outlined\"\r\n                   type=\"default\"\r\n                   hint=\"Add Comment\"\r\n                   (onClick)=\"addComment()\">\r\n        </dx-button>\r\n        <dx-button *ngIf=\"isAddNewRowVisible\"\r\n                   icon=\"plus\"\r\n                   stylingMode=\"outlined\"\r\n                   type=\"default\"\r\n                   hint=\"Add New Row\"\r\n                   (onClick)=\"addNewRow()\">\r\n        </dx-button>\r\n        <dx-button icon=\"save\"\r\n                   stylingMode=\"outlined\"\r\n                   hint=\"Save Data\"\r\n                   type=\"default\"\r\n                   (onClick)=\"onSaveDataClickedEvent()\">\r\n        </dx-button>\r\n        <dx-button *ngIf=\"!isManager\"\r\n                   icon=\"revert\"\r\n                   stylingMode=\"outlined\"\r\n                   type=\"default\"\r\n                   text=\"Request for SignOff\"\r\n                   (onClick)=\"onRequestForSignOffClickedEvent($event)\">\r\n        </dx-button>\r\n\r\n        <dx-button *ngIf=\"isManager\"\r\n                   icon=\"revert\"\r\n                   stylingMode=\"outlined\"\r\n                   type=\"default\"\r\n                   text=\"Request for Change\"\r\n                   (onClick)=\"onRequestForChangeClickedEvent($event)\">\r\n        </dx-button>\r\n\r\n        <dx-button *ngIf=\"isManager\"\r\n                   icon=\"fa fa-sign-out\"\r\n                   text=\"Sign Off Data\"\r\n                   type=\"success\"\r\n                   hint=\"SignOff Data\"\r\n                   [disabled]=\"disabledSignOffButton\"\r\n                   (onClick)=\"onSignOffClickedEvent($event)\">\r\n        </dx-button>\r\n\r\n        <dx-button *ngIf=\"isLockedStudy\"\r\n                   stylingMode=\"outlined\"\r\n                   icon=\"fas fa-lock\"\r\n                   type=\"default\"\r\n                   hint=\"Unlock Study\"\r\n                   (onClick)=\"unlockStudyClickedEvent($event)\">\r\n        </dx-button>\r\n        <dx-button icon=\"fa fa-question\"\r\n                   type=\"danger\"\r\n                   hint=\"Help\"\r\n                   (onClick)=\"showHelpTextPopup()\">\r\n        </dx-button>\r\n        <dx-text-box label=\"fx\"\r\n            class=\"custom-textbox\"\r\n            [(ngModel)]=\"selectedCellValue\" \r\n            valueChangeEvent=\"keyup\"\r\n            [readOnly]=\"disableFormulaBar\"\r\n            (onValueChanged)=\"textBoxValueChanged($event)\">\r\n        </dx-text-box>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!--<div class=\"cells-cotains-formula\" *ngIf=\"countOfFormulasInDatagrid > 0\"><i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i> You have applied formulas, adding or removing calculated fields might have an effect on formula references from now.</div>-->\r\n  <div [style]=\"isRenderingFinished ? '' : 'filter: blur(5px);'\"\r\n       class=\"handon-table-containesr w-100\">\r\n    <hot-table *ngIf=\"dataSourceData\"\r\n      #hot\r\n      id=\"handsonTable\"\r\n      className=\"userTable\"\r\n      [settings]=\"hotSettings\"\r\n      [hotId]=\"id\"\r\n      [manualColumnMove]=\"true\"\r\n      [colHeaders]=\"colHeaders\"\r\n      [formulas]=\"formulas\"\r\n      [rowHeaders]=\"true\"\r\n      [data]=\"dataSourceData\"\r\n      [nestedHeaders]=\"nestedHeaders\"\r\n      [fixedRowsTop]=\"fixedRowsTop\"\r\n      [fixedColumnsLeft]=\"fixedColumnsLeft\"\r\n      width=\"100%\"\r\n      [height]=\"tableHeight\"\r\n      [renderAllRows]=\"isRenderAllRows\"\r\n      stretchH=\"all\"\r\n      [dropdownMenu]=\"[\r\n        'filter_by_condition',\r\n        '---------',\r\n        'filter_by_value',\r\n        '---------',\r\n        'filter_action_bar'\r\n      ]\"\r\n               [comments]=\"true\"\r\n               [manualColumnResize]=\"true\"\r\n               [filters]=\"dataSettings.handontableSettings.filters\"\r\n               [columnSorting]=\"dataSettings.handontableSettings.columnSorting\"\r\n               [copyPaste]=\"dataSettings.handontableSettings.copyPaste\"\r\n               [cell]=\"cell\"\r\n               [columns]=\"columns\"\r\n               [hiddenColumns]=\"hiddenColumns\"\r\n               [licenseKey]=\"handsontableLicenseKey\"\r\n               (afterFormulasValuesUpdate)=\"afterFormulasValuesUpdate($event)\">\r\n    </hot-table>\r\n  </div>\r\n</div>\r\n\r\n<!-- <pre>{{ dataSourceData | json }}</pre> -->\r\n\r\n<app-comments [viewCommentPopup]=\"viewNotePopup\"\r\n              [setCommentCellData]=\"selectedCommentCellData\"\r\n              (onCommentBoxHidden)=\"onCommentBoxHidden()\"\r\n              (onCommentAdded)=\"onCommentAdded($event)\"\r\n              (onCommentEmpty)=\"onCommentEmpty($event)\">\r\n</app-comments>\r\n\r\n<!-- Add/View Study Level Comments -->\r\n<app-study-comments [viewCommentPopup]=\"viewStudyComments\"\r\n                    (closeCommentPopup)=\"closeAddComment()\"></app-study-comments>\r\n\r\n<dx-popup width=\"60%\"\r\n          [height]=\"350\"\r\n          [showTitle]=\"true\"\r\n          title=\"Add New Row\"\r\n          [dragEnabled]=\"false\"\r\n          [closeOnOutsideClick]=\"true\"\r\n          [showCloseButton]=\"true\"\r\n          container=\".dx-viewport\"\r\n          [(visible)]=\"isAddNewRowPopup\">\r\n  <dx-scroll-view [useNative]=\"true\">\r\n    <form [formGroup]=\"addNewRowForm\">\r\n      <div class=\"container mt-3\">\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let rowItem of columnsList\" class=\"col-md-4\">\r\n            <div class=\"form-group\" *ngIf=\"rowItem.isColumnsData\">\r\n              <label>{{ rowItem.label }}</label>\r\n              <dx-text-box value=\"{{ rowItem.value }}\"\r\n                           *ngIf=\"!rowItem.isEditable\"\r\n                           [readOnly]=\"true\"></dx-text-box>\r\n              <ng-select *ngIf=\"rowItem.isEditable\"\r\n                         [items]=\"rowItem.data\"\r\n                         bindLabel=\"Name\"\r\n                         bindValue=\"Id\"\r\n                         placeholder=\"Select {{ rowItem.label }}\"\r\n                         (change)=\"dropdownchange($event, rowItem)\"\r\n                         [addTag]=\"\r\n                  isManager\r\n                    ? createNewDataEntry.bind(this, rowItem.title)\r\n                    : false\r\n                \"\r\n                         required=\"true\"\r\n                         [formControlName]=\"rowItem.title\">\r\n              </ng-select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div *ngFor=\"let rowItem of yearsList\" class=\"col-md-4\">\r\n            <ng-template [ngIf]=\"!rowItem.isColumnsData\">\r\n              <div>\r\n                <div class=\"form-group\" *ngIf=\"!rowItem.isColumnsData\">\r\n                  <label>{{ rowItem.title }}</label>\r\n                  <dx-number-box [(value)]=\"rowItem.value\"\r\n                                 [formControlName]=\"rowItem.title\"\r\n                                 [disabled]=\"rowItem.readOnly\"\r\n                                 [format]=\"newRowNumberBoxFormat\">\r\n                  </dx-number-box>\r\n                </div>\r\n              </div>\r\n            </ng-template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    <div class=\"float-right buttonMargin\">\r\n      <div class=\"container\">\r\n        <dx-button icon=\"plus\"\r\n                   stylingMode=\"outlined\"\r\n                   type=\"default\"\r\n                   style=\"margin-right: 4px\"\r\n                   text=\"Save\"\r\n                   (onClick)=\"addNewRow()\">\r\n        </dx-button>\r\n        <dx-button icon=\"close\"\r\n                   stylingMode=\"outlined\"\r\n                   type=\"default\"\r\n                   text=\"Cancel\"\r\n                   (onClick)=\"isAddNewRowPopup = false\">\r\n        </dx-button>\r\n      </div>\r\n    </div>\r\n  </dx-scroll-view>\r\n</dx-popup>\r\n\r\n<dx-popup [width]=\"650\"\r\n          [height]=\"300\"\r\n          [showTitle]=\"true\"\r\n          title=\"Help Text\"\r\n          [dragEnabled]=\"false\"\r\n          [closeOnOutsideClick]=\"true\"\r\n          [showCloseButton]=\"true\"\r\n          container=\".dx-viewport\"\r\n          [(visible)]=\"showHelpText\"\r\n          (onHidden)=\"closeHelpTextPopup()\">\r\n  <div class=\"card border-0\">\r\n    <div class=\"card-body text-centerx-0\">\r\n      <ul>\r\n        <!-- <li>\r\n          Cell Reference? Click on the cell and type the reference cell number\r\n          for e. g. =J5\r\n        </li>\r\n        <li>\r\n          Apply Formula? Click on the cell and type the formula (Please type the\r\n          cell number to which you are referring in the formula.) E.g.\r\n          =J1+J10/=Sum(J1:J10)\r\n        </li>\r\n        <li>View Formula? Double-click on the cell to view the formula.</li> -->\r\n        <li>Use Control-C to Cut and Control-V to paste.</li>\r\n        <li>\r\n          Where there is more data than your screen space, scrolling to\r\n          right/left by using shift and mouse wheel.\r\n        </li>\r\n        <li>\r\n          If the master brand moves to a different parent company? – Delete the\r\n          existing row and add a new row.\r\n        </li>\r\n        <li>\r\n          Delete row works once you have made your first \"Save\" of the draft\r\n          data\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</dx-popup>\r\n\r\n<!-- Confirm Navigation Without Save Popup-->\r\n<app-confirm-navigation *ngIf=\"openDialog$ | async\" (saveChanges)=\"onSaveDataClickedEvent()\"\r\n[opened]=\"openDialog$ | async\"></app-confirm-navigation>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { HotTableRegisterer } from '@handsontable/angular';\r\nimport Handsontable from 'handsontable';\r\nimport { HyperFormula } from 'hyperformula';\r\n@Component({\r\n  selector: 'app-handsontable',\r\n  templateUrl: './handsontable.component.html',\r\n  styleUrls: ['./handsontable.component.css'],\r\n})\r\nexport class HandsontableComponent implements OnInit {\r\n  data1 = [\r\n    ['10.26', null, 'Sum', '=SUM(A:A)'],\r\n    ['20.12', null, 'Average', '=AVERAGE(A:A)'],\r\n    ['30.01', null, 'Median', '=MEDIAN(A:A)'],\r\n    ['40.29', null, 'MAX', '=MAX(A:A)'],\r\n    ['50.18', null, 'MIN', '=MIN(A1:A5)'],\r\n  ];\r\n  hyperformulaInstance = HyperFormula.buildEmpty({\r\n    // to use an external HyperFormula instance,\r\n    // initialize it with the `'internal-use-in-handsontable'` license key\r\n    licenseKey: 'internal-use-in-handsontable',\r\n  });\r\n\r\n  // @Input() manualColumnMove: any\r\n  @Input() colHeaders: any;\r\n  @Input() settings: any;\r\n  @Input() columns: any;\r\n  @Input() data: any;\r\n  @Input() cell: any;\r\n  @Input() nestedHeaders: any;\r\n  @Input() fixedRowsTop: number = 2;\r\n  @Input() fixedColumnsLeft: number = 2;\r\n  @Input() formulas: any;\r\n  @Output() afterOnCellMouseDownEvent = new EventEmitter<string>();\r\n  private hotRegisterer = new HotTableRegisterer();\r\n  constructor() {}\r\n\r\n  id = '1';\r\n  ngOnInit(): void {}\r\n\r\n  afterFormulasValuesUpdate = (changes: any) => {\r\n    console.log(changes);\r\n  };\r\n  test() {\r\n    console.log('test:');\r\n    console.log(event);\r\n    console.log(this.hotRegisterer.getInstance(this.id));\r\n  }\r\n  afterOnCellMouseDown(event: any) {\r\n    this.afterOnCellMouseDownEvent.emit(event);\r\n  }\r\n}\r\n","<hot-table [hotId]=\"id\"\r\n           [manualColumnMove]=\"true\"\r\n           [settings]=\"settings\"\r\n           [colHeaders]=\"colHeaders\"\r\n           [formulas]=\"formulas\"\r\n           (afterFormulasValuesUpdate)=\"afterFormulasValuesUpdate($event)\"\r\n           (afterOnCellMouseDown)=\"afterOnCellMouseDown($event)\"\r\n           [rowHeaders]=\"true\"\r\n           [data]=\"data\"\r\n           [nestedHeaders]=\"nestedHeaders\"\r\n           [fixedRowsTop]=\"2\"\r\n           [fixedColumnsLeft]=\"2\"\r\n           [colWidths]=\"120\"\r\n           width=\"100%\"\r\n           height=\"500\"\r\n           [dropdownMenu]=\"true\"\r\n           [comments]=\"true\"\r\n           [contextMenu]=\"true\"\r\n           [filters]=\"true\"\r\n           [columnSorting]=\"true\"\r\n           [copyPaste]=\"true\"\r\n           [cell]=\"cell\"\r\n           [columns]=\"columns\"\r\n           licenseKey=\"non-commercial-and-evaluation\">\r\n</hot-table>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { UserService } from 'src/services/user.service';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { StudyAreaSummary } from 'src/model/studyAreaSummary.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  title: string = '';\r\n  @Input() set setTitle(title: string) {\r\n    this.title = title;\r\n  }\r\n  studiesData: StudyAreaSummary[] = [];\r\n  userDetail: UserDetail;\r\n  searchExpressionItem = 'SearchExp';\r\n  constantEnv = Constants.environment;\r\n\r\n  constructor(\r\n    private localStorageService: LocalStorageService,\r\n    private userService: UserService,\r\n    private sharedService: SharedService,\r\n    private alertService: AlertService,\r\n    private isLoadingService: IsLoadingService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUserDetail(this.userDetail.UserName || '');\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n    this.getAllStudies();\r\n  }\r\n\r\n  getUserDetail(emailAddress: string) {\r\n    this.userService.getUserDetail(emailAddress).subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          const userDetail = new UserDetail().deserialize(res.Data);\r\n          this.localStorageService.setData(userDetail, Constants.userDetailKey);\r\n        }\r\n      },\r\n      (err) => { }\r\n    );\r\n  }\r\n  getAllStudies() {\r\n    this.isLoadingService.add();\r\n    this.sharedService.getStudyAreaSummary().subscribe(\r\n      (res: ApiResponse) => {\r\n        if (res.HttpStatusCode === 200) {\r\n          // res.Data.sort((a,b) => b-a)\r\n          this.studiesData = res.Data.map((item: StudyAreaSummary) =>\r\n            new StudyAreaSummary().deserialize(item)\r\n          );\r\n          this.studiesData.map((item: any) => {\r\n            item.backColour = 'white';\r\n            if (item.IsSignOff) {\r\n              item.backColour = 'lightgray';\r\n            }\r\n            item.SearchExp = item.StudyAreaName +\": \" +item.StudyName;\r\n          });\r\n          \r\n          this.filterOpenStudy();\r\n          this.studiesData.sort((a, b) => Number(a.LockedForEditBy && a.IsSignOff) - Number(b.LockedForEditBy && b.IsSignOff));\r\n        } else {\r\n          this.alertService.danger(res.Data);\r\n        }\r\n        this.isLoadingService.remove();\r\n      },\r\n      (err) => {\r\n        if (err.status === 401) {\r\n          this.isLoadingService.remove();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  filterOpenStudy(){\r\n    const params = this.route.snapshot.params;\r\n    const marketYearCategoryId = parseInt(params['mycId']);\r\n    const studyProjectMarketYearId = parseInt(params['spmId']);\r\n    const studyAreaId = parseInt(params['studyArea']);\r\n    const dataSetId =parseInt(params['dataSetId']);\r\n    const openStudy = this.studiesData.find(item=> \r\n      item.StudyAreaId === studyAreaId \r\n      && item.DataSetId === dataSetId\r\n      && item.MarketYearCategoryId === marketYearCategoryId\r\n      && item.StudyProjectMarketYearId === studyProjectMarketYearId);\r\n\r\n    if(openStudy){\r\n      var idx = this.studiesData.indexOf(openStudy);\r\n      if (idx != -1) \r\n      this.studiesData.splice(idx, 1);\r\n    }\r\n  }\r\n  \r\n  studySelectionChange(event: any) {\r\n    if (event && event.selectedItem) {\r\n      let selectedStudy = event.selectedItem;\r\n      this.isLoadingService.add();\r\n      this.router.navigate(['/study-area',{\r\n        'studyArea': selectedStudy.StudyAreaId,\r\n        'spmId': selectedStudy.StudyProjectMarketYearId,\r\n        'mycId': selectedStudy.MarketYearCategoryId,\r\n        'dataSetId': selectedStudy.DataSetId\r\n      }]);\r\n      const url = \r\n      `/study-area/${selectedStudy.StudyAreaId}/${selectedStudy.StudyProjectMarketYearId}/${selectedStudy.MarketYearCategoryId}/${selectedStudy.DataSetId}`\r\n      this.loadCurrentUrl(url);\r\n      this.isLoadingService.remove();\r\n    }\r\n  }\r\n  loadCurrentUrl(url:any) {\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([url]);\r\n    });\r\n  }\r\n}\r\n","<header class=\"custom-header\">\r\n  <div class=\"environment-check\">\r\n    <p class=\"alert alert-danger\" *ngIf=\"constantEnv == '-dev'\">\r\n      Development Site (DEV)\r\n    </p>\r\n    <p class=\"alert alert-warning\" *ngIf=\"constantEnv == '-uat'\">\r\n      Internal Testing Site (UAT)\r\n    </p>\r\n  </div>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light mb-0\">\r\n    <a class=\"navbar-brand pt-4\" routerLink=\"/\">\r\n      <img class=\"img-fluid\" src=\"../../../images/kline-logo55px.png\" />\r\n      <h6 *ngIf=\"title\">{{ title }}</h6>\r\n    </a>\r\n    <button class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarText\"\r\n            aria-controls=\"navbarText\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n      <div class=\"ml-auto text-center text-lg-right\">\r\n        <span class=\"navbar-text small mb-0 pb-0\">Welcome, {{ userDetail.Name }}</span>\r\n        <ul class=\"navbar-nav ml-auto mr-auto\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\"\r\n               routerLink=\"/study-summary\"\r\n               routerLinkActive=\"active\">Study Area Summary</a>\r\n          </li>\r\n          <li class=\"nav-item d-none d-lg-block\" *ngIf=\"userDetail.IsManager\">\r\n            <span class=\"nav-link\">|</span>\r\n          </li>\r\n          <li class=\"nav-item \">\r\n            <div class=\"custom-dropdown\">\r\n              <dx-select-box\r\n                displayExpr=\"StudyName\"\r\n                valueExpr=\"StudyAreaId\"\r\n                [items]=\"studiesData\"\r\n                [searchEnabled]=\"true\"\r\n                [searchExpr]=\"searchExpressionItem\"\r\n                itemTemplate=\"studyItem\"\r\n                [width]=\"300\"\r\n                stylingMode=\"filled\"\r\n                placeholder=\"My Studies\"\r\n                (onSelectionChanged)=\"studySelectionChange($event)\"\r\n              >\r\n                <div *dxTemplate=\"let data of 'studyItem'\" [ngStyle]=\"{'background-color': data.backColour}\">\r\n                  <a\r\n                    [routerLink]=\"[\r\n                      '/study-area',\r\n                      data.StudyAreaId,\r\n                      data.StudyProjectMarketYearId,\r\n                      data.MarketYearCategoryId,\r\n                      data.DataSetId\r\n                    ]\"\r\n                    title=\"{{data.SearchExp}}\"\r\n                    style=\"text-decoration: none;\"\r\n                  >{{data.SearchExp}}</a>\r\n                </div>\r\n              </dx-select-box>\r\n            </div>\r\n           \r\n          </li>\r\n          <li class=\"nav-item d-none d-lg-block\" *ngIf=\"userDetail.IsManager\">\r\n            <span class=\"nav-link\">|</span>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"userDetail.IsManager\">\r\n            <a class=\"nav-link\"\r\n               routerLink=\"/initial-setup\"\r\n               routerLinkActive=\"active\">Initial Setup</a>\r\n          </li>\r\n          <li class=\"nav-item d-none d-lg-block\" *ngIf=\"userDetail.IsManager\">\r\n            <span class=\"nav-link\">|</span>\r\n          </li>\r\n          <li class=\"nav-item\" *ngIf=\"userDetail.IsAdmin\">\r\n            <a class=\"nav-link\"\r\n               routerLink=\"/app-data-grids-configuration\"\r\n               routerLinkActive=\"active\">Data Grids Configuration</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable, Subject, takeUntil } from 'rxjs';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PivotGridOptions } from 'src/model/pivotGridOptions.model';\r\nimport { CurrencyDropdown, UserStateAndSetttings } from 'src/model/userStateAndSetttings.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { DropdownCurrency } from '../../../../model/dropdownCurrency.model';\r\nimport { DropdownUnits } from '../../../../model/dropdownUnits.model';\r\nimport { SlideInOutAnimation } from '../../../animations';\r\n\r\ndeclare let $: any;\r\n@Component({\r\n  selector: 'pivot-grid-preview-top-menu',\r\n  templateUrl: './pivot-grid-preview-top-menu.component.html',\r\n  styleUrls: ['./pivot-grid-preview-top-menu.component.css'],\r\n  animations: [SlideInOutAnimation],\r\n})\r\nexport class PivotGridPreviewTopMenuComponent implements OnInit {\r\n  calculatedFieldSelectorClicked: any;\r\n  intervalCalculatedField: any;\r\n\r\n  selectedCurrency: DropdownCurrency = new DropdownCurrency();\r\n  selectedMassUnit: DropdownUnits = new DropdownUnits();\r\n\r\n  studySetup: any;\r\n\r\n  @Input() set setSelectedCurrency(data: DropdownCurrency) {\r\n    if (data) {\r\n      this.selectedCurrency = data;\r\n    }\r\n  }\r\n\r\n  @Input() set setSelectedMassUnit(data: DropdownUnits) {\r\n    if (data) {\r\n      this.selectedMassUnit = data;\r\n    }\r\n  }\r\n\r\n  @Input() set setCurrency(data: any) {\r\n    this.currencyDropdown = data;\r\n  }\r\n\r\n  @Input() set setVolumeUnits(data: any) {\r\n    this.massUnitDropdown = data;\r\n  }\r\n\r\n  @Input() set pivotGridOptions(value: PivotGridOptions) {\r\n    this.pivotGridOptionsValues = value;\r\n    this.autoSaveStateStatus = this.getAutoSaveStateStatus(\r\n      this.pivotGridOptionsValues,\r\n      this.pivotGridstateValues\r\n    );\r\n  }\r\n\r\n  @Input() set setStudySetup(studySetup: any) {\r\n    if (studySetup) {\r\n      this.studySetup = studySetup;\r\n      this.setTopMenuValues();\r\n    }\r\n  }\r\n  // @Input() pivotCalculatedFields: Observable<any>;\r\n\r\n  @Output() currencySelectionChanged = new EventEmitter<DropdownCurrency>();\r\n  @Output() currencyConversionSelectionChanged = new EventEmitter<number>();\r\n  @Output() massUnitSelectionChanged = new EventEmitter<DropdownUnits>();\r\n  @Output() openAddCalculatedFieldChanged = new EventEmitter<number>();\r\n  @Output() calculatedFieldItemSelected = new EventEmitter<any>();\r\n  @Output() onExportToExcel = new EventEmitter<boolean>();\r\n  @Output() onExportToCvs = new EventEmitter<boolean>();\r\n  @Output() onExportSnapshot = new EventEmitter<boolean>();\r\n  @Output() onChangeAutoSaveStatus = new EventEmitter<boolean>();\r\n\r\n  private _destroyed$ = new Subject();\r\n\r\n  othersSelectorVisible: boolean = false;\r\n  timePeriodSelectorVisible: boolean = false;\r\n  massUnitSelectorVisible: boolean = false;\r\n  volumeUnitSelectorVisible: boolean = false;\r\n  currencyConversionSelectorVisible: boolean = false;\r\n  currencySelectorVisible: boolean = false;\r\n  parametersSelectorVisible: boolean = false;\r\n  othersSelectorClicked: boolean = false;\r\n  timePeriodSelectorClicked: boolean = false;\r\n  massUnitSelectorClicked: boolean = false;\r\n  volumeUnitSelectorClicked: boolean = false;\r\n  currencyConversionSelectorClicked: boolean = false;\r\n  currencySelectorClicked: boolean = false;\r\n  parametersSelectorClicked: boolean = false;\r\n\r\n  exportToExcelSelectorVisible = false;\r\n  exportToExcelSelectorClicked = false;\r\n  exportTypeDropdownSelected: any;\r\n\r\n  currencyDropdownSelected: any = undefined;\r\n  unitOfMassDropdownSelected: any = undefined;\r\n  unitOfVolumeDropdownSelected: any = undefined;\r\n  pivotWidth: number = 0;\r\n  currencyDropdown: DropdownCurrency[] = [];\r\n  massUnitDropdown: DropdownUnits[] = [];\r\n  volumeUnitDropdown: any[] = [];\r\n  timePeriod: any[] = [];\r\n  timePeriodFrom: number = 0;\r\n  timePeriodTo: number = 0;\r\n  currencyConversionType: string[] = ['Current', 'Constant'];\r\n  currencyConversionTypeSelected: string = 'Constant';\r\n  exportType = [\r\n    { id: 1, value: 'Export All Data' },\r\n    { id: 2, value: 'Export All Data to CSV' },\r\n    { id: 3, value: 'Export Snapshot' },\r\n  ];\r\n  parametersList: any[] = [];\r\n  eventsCustomActionSubscription: any;\r\n  latestStateData: any;\r\n  latestStateAndSettingsData: any;\r\n  allStateDataList = [];\r\n  activeStateDataList = [];\r\n  isUndone = false;\r\n  count = 0;\r\n  isButtonPressed = false;\r\n  pivotGridOptionsValues: any = undefined;\r\n  pivotGridstateValues: any = undefined;\r\n  calculateFieldsItems: any[] = [];\r\n  calculatedFieldCaption = '';\r\n  calculatedFieldVisible = false;\r\n\r\n  dataLoadingIndicatorVisible = false;\r\n\r\n  calculatedItems: any[] = [\r\n    { name: CalculatedFieldType.percentOfTotal, value: 'percentOfTotal' },\r\n    { name: CalculatedFieldType.changePercent, value: 'changePercent' },\r\n    { name: CalculatedFieldType.cagr, value: 'cagr' },\r\n  ];\r\n\r\n  autoSaveStateStatus: boolean = false;\r\n\r\n  constructor(private sharedService: SharedService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public setTopMenuValues() {\r\n    this.currencyDropdownSelected = this.selectedCurrency;\r\n    this.unitOfMassDropdownSelected = this.selectedMassUnit;\r\n  }\r\n\r\n  onHover(item: string) {\r\n    switch (item) {\r\n      case 'othersSelector':\r\n        if (this.othersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.othersSelectorVisible = !this.othersSelectorVisible;\r\n        break;\r\n      case 'timePeriodSelector':\r\n        if (this.timePeriodSelectorClicked) {\r\n          break;\r\n        }\r\n        this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;\r\n        break;\r\n      case 'massUnitSelector':\r\n        if (this.massUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.massUnitSelectorVisible = !this.massUnitSelectorVisible;\r\n        break;\r\n      case 'volumeUnitSelector':\r\n        if (this.volumeUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;\r\n        break;\r\n      case 'currencyConversionSelector':\r\n        if (this.currencyConversionSelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencyConversionSelectorVisible =\r\n          !this.currencyConversionSelectorVisible;\r\n        break;\r\n      case 'calculateFieldSelector':\r\n        if (this.calculatedFieldSelectorClicked) {\r\n          break;\r\n        }\r\n        this.calculatedFieldVisible = !this.calculatedFieldVisible;\r\n        break;\r\n      case 'currencySelector':\r\n        if (this.currencySelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencySelectorVisible = !this.currencySelectorVisible;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (this.parametersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = !this.parametersSelectorVisible;\r\n        break;\r\n      case 'exportToExcel':\r\n        if (this.exportToExcelSelectorClicked) {\r\n          break;\r\n        }\r\n        this.exportToExcelSelectorVisible = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  onLeave(item: string) {\r\n    switch (item) {\r\n      case 'othersSelector':\r\n        if (this.othersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.othersSelectorVisible = false;\r\n        break;\r\n      case 'timePeriodSelector':\r\n        if (this.timePeriodSelectorClicked) {\r\n          break;\r\n        }\r\n        this.timePeriodSelectorVisible = false;\r\n        break;\r\n      case 'massUnitSelector':\r\n        if (this.massUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.massUnitSelectorVisible = false;\r\n        break;\r\n      case 'volumeUnitSelector':\r\n        if (this.volumeUnitSelectorClicked) {\r\n          break;\r\n        }\r\n        this.volumeUnitSelectorVisible = false;\r\n        break;\r\n      case 'currencyConversionSelector':\r\n        if (this.currencyConversionSelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencyConversionSelectorVisible = false;\r\n        break;\r\n      case 'calculateFieldSelector':\r\n        if (this.calculatedFieldSelectorClicked) {\r\n          break;\r\n        }\r\n        this.calculatedFieldVisible = false;\r\n        break;\r\n      case 'currencySelector':\r\n        if (this.currencySelectorClicked) {\r\n          break;\r\n        }\r\n        this.currencySelectorVisible = false;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (this.parametersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = false;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (this.parametersSelectorClicked) {\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = false;\r\n        break;\r\n      case 'exportToExcel':\r\n        if (this.exportToExcelSelectorClicked) {\r\n          break;\r\n        }\r\n        this.exportToExcelSelectorVisible = false;\r\n        break;\r\n    }\r\n  }\r\n\r\n  calculatedFieldOnHover(id: string) {\r\n    for (let i = 0; i <= this.calculateFieldsItems.length;) {\r\n      let elem = 'calculated-' + i;\r\n      if (elem === id) {\r\n        $('#' + id).addClass('show');\r\n      } else {\r\n        $('#' + elem).removeClass('show');\r\n      }\r\n      i++;\r\n    }\r\n  }\r\n\r\n  calculatedFieldOnLeave(id: string) {\r\n    $('#' + id).removeClass('show');\r\n  }\r\n\r\n  onCalcItemSelected(itemName: string, dataField: string) {\r\n    this.calculatedFieldItemSelected.emit({ itemName, dataField });\r\n  }\r\n\r\n  public getButtonStatus(status: boolean): string {\r\n    return status ? 'success' : 'normal';\r\n  }\r\n\r\n  getWidth(elementName: string): number {\r\n    if (this.pivotWidth > 0 && this.pivotWidth < 700) {\r\n      return this.pivotWidth;\r\n    }\r\n    switch (elementName) {\r\n      case 'othersSelectorBtn':\r\n        return 45;\r\n      case 'chartBtn':\r\n        return 45;\r\n      case 'expandCollapseBtn':\r\n        return 45;\r\n      case 'currencySelectorBtn':\r\n        return 100;\r\n      case 'currencyConversionSelectorBtn':\r\n        return 130;\r\n      case 'massUnitSelectorBtn':\r\n        return 175;\r\n      case 'volumeUnitSelectorBtn':\r\n        return 175;\r\n      case 'timePeriodSelectorBtn':\r\n        return 180;\r\n      case 'parameters':\r\n        return 190;\r\n      default:\r\n        return 100;\r\n    }\r\n  }\r\n\r\n  toggleMenuItem(item: string, isClick: boolean) {\r\n    switch (item) {\r\n      case 'othersSelector':\r\n        if (isClick) {\r\n          this.othersSelectorClicked = !this.othersSelectorClicked;\r\n          // this.getStateSaveByMe(this.viewId, this.userId);\r\n          // this.getStateSharedWithMe(this.viewId, this.userId);\r\n        }\r\n        if (this.othersSelectorClicked) {\r\n          this.othersSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.othersSelectorVisible = !this.othersSelectorVisible;\r\n        break;\r\n      case 'timePeriodSelector':\r\n        if (isClick) {\r\n          this.timePeriodSelectorClicked = !this.timePeriodSelectorClicked;\r\n        }\r\n        if (this.timePeriodSelectorClicked) {\r\n          this.timePeriodSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.timePeriodSelectorVisible = !this.timePeriodSelectorVisible;\r\n        break;\r\n      case 'volumeUnitSelector':\r\n        if (isClick) {\r\n          this.volumeUnitSelectorClicked = !this.volumeUnitSelectorClicked;\r\n        }\r\n        if (this.volumeUnitSelectorClicked) {\r\n          this.volumeUnitSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.volumeUnitSelectorVisible = !this.volumeUnitSelectorVisible;\r\n        break;\r\n      case 'massUnitSelector':\r\n        if (isClick) {\r\n          this.massUnitSelectorClicked = !this.massUnitSelectorClicked;\r\n        }\r\n        if (this.massUnitSelectorClicked) {\r\n          this.massUnitSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.massUnitSelectorVisible = !this.massUnitSelectorVisible;\r\n        break;\r\n      case 'currencyConversionSelector':\r\n        if (isClick) {\r\n          this.currencyConversionSelectorClicked =\r\n            !this.currencyConversionSelectorClicked;\r\n        }\r\n        if (this.currencyConversionSelectorClicked) {\r\n          this.currencyConversionSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.currencyConversionSelectorVisible =\r\n          !this.currencyConversionSelectorVisible;\r\n        break;\r\n      case 'calculateFieldSelector':\r\n        // this.openAddCalculatedField();\r\n        if (isClick) {\r\n          this.calculatedFieldSelectorClicked =\r\n            !this.calculatedFieldSelectorClicked;\r\n        }\r\n        if (this.calculatedFieldSelectorClicked) {\r\n          // this.intervalCalculatedField = setInterval(\r\n          //   () => this.openAddCalculatedField(),\r\n          //   50\r\n          // );\r\n          this.calculatedFieldVisible = true;\r\n          break;\r\n        }\r\n        this.calculatedFieldVisible = !this.calculatedFieldVisible;\r\n        clearInterval(this.intervalCalculatedField);\r\n        break;\r\n      case 'currencySelector':\r\n        if (isClick) {\r\n          this.currencySelectorClicked = !this.currencySelectorClicked;\r\n        }\r\n        if (this.currencySelectorClicked) {\r\n          this.currencySelectorVisible = true;\r\n          break;\r\n        }\r\n        this.currencySelectorVisible = !this.currencySelectorVisible;\r\n        break;\r\n      case 'parametersSelector':\r\n        if (isClick) {\r\n          this.parametersSelectorClicked = !this.parametersSelectorClicked;\r\n        }\r\n        if (this.parametersSelectorClicked) {\r\n          this.parametersSelectorVisible = true;\r\n          break;\r\n        }\r\n        this.parametersSelectorVisible = !this.parametersSelectorVisible;\r\n        break;\r\n    }\r\n    // focus on first opened texteditor\r\n    $('.dx-texteditor-input').first().focus();\r\n  }\r\n\r\n  currencySelectionOnChanged(data: any) {\r\n    if (this.currencyDropdownSelected != data) {\r\n      this.currencyDropdownSelected = data;\r\n      this.currencySelectionChanged.emit(data);\r\n    }\r\n  }\r\n\r\n  currencyConversionTypeOnChanged(data: any) {\r\n    this.currencyConversionSelectionChanged.emit(\r\n      parseInt(CurrencyConversionTypeEnum[data])\r\n    );\r\n  }\r\n\r\n  massUnitSelectionChange(data: any) {\r\n    if (this.unitOfMassDropdownSelected != data) {\r\n      this.unitOfMassDropdownSelected = data;\r\n      this.massUnitSelectionChanged.emit(data);\r\n    }\r\n  }\r\n\r\n  exportToExcelSelectionOnChanged(data: any) {\r\n    this.exportTypeDropdownSelected = data;\r\n    switch (data.id) {\r\n      case 1:\r\n        this.exportToExcelSelectorVisible = false;\r\n        this.exportToExcel();\r\n        break;\r\n      case 2:\r\n        this.exportToExcelSelectorVisible = false;\r\n        this.onExportToCvs.emit(true);\r\n        break;\r\n      case 3:\r\n        this.exportToExcelSelectorVisible = false;\r\n        this.onExportSnapshot.emit(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.onExportToExcel.emit(true);\r\n  }\r\n\r\n  getAutoSaveStateStatus(\r\n    pivotGridOptions: PivotGridOptions,\r\n    userStateAndSetttings: UserStateAndSetttings\r\n  ) {\r\n    if (pivotGridOptions && userStateAndSetttings) {\r\n      if (userStateAndSetttings.settings.rememberLatestState == undefined) {\r\n        return pivotGridOptions.canSaveUserState;\r\n      } else {\r\n        return userStateAndSetttings.settings.rememberLatestState;\r\n      }\r\n    }\r\n  }\r\n\r\n  changeAutoSaveStatus(currentStatus: boolean) {\r\n    this.autoSaveStateStatus = !currentStatus;\r\n    this.onChangeAutoSaveStatus.emit(this.autoSaveStateStatus);\r\n  }\r\n}\r\n","<div class=\"buttons topmenu-buttons\">\r\n  <!-- add calculated field -->\r\n  <div *ngIf=\"\r\n      pivotGridOptionsValues?.settings?.menuSettings\r\n        ?.isCalculatedFieldsSelection\r\n    \"\r\n       class=\"menu-dropdown\"\r\n       (mouseover)=\"onHover('calculateFieldSelector')\"\r\n       (mouseenter)=\"onHover('calculateFieldSelector')\"\r\n       (mouseout)=\"onLeave('calculateFieldSelector')\">\r\n    <dx-button stylingMode=\"outlined\"\r\n               [type]=\"getButtonStatus(calculatedFieldSelectorClicked)\"\r\n               icon=\"fas fa-calculator\"\r\n               [width]=\"getWidth('chartBtn')\"\r\n               [height]=\"35\"\r\n               (onClick)=\"toggleMenuItem('calculateFieldSelector', true)\"></dx-button>\r\n    <div [@slideInOut]=\"calculatedFieldVisible ? 'in' : 'out'\"\r\n         id=\"currencySelector\"\r\n         class=\"menu-dropdown-content\">\r\n      <div class=\"calculated-title\">Add Calculated Field for:</div>\r\n      <div class=\"btn-group dropright\" style=\"width: 100%\">\r\n        <button type=\"button\"\r\n                class=\"btn btn-secondary dropdown-toggle text-left\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n                (mouseenter)=\"calculatedFieldOnHover('calculated-0')\"\r\n                (mouseout)=\"calculatedFieldOnLeave('calculated-0')\">\r\n          Sales\r\n        </button>\r\n        <div class=\"dropdown-menu\"\r\n             [id]=\"'calculated-0'\"\r\n             (mouseenter)=\"calculatedFieldOnHover('calculated-0')\"\r\n             (mouseover)=\"calculatedFieldOnHover('calculated-0')\">\r\n          <div *ngFor=\"let item of calculatedItems\">\r\n            <button type=\"button\"\r\n                    class=\"btn btn-light btn-calc-item\"\r\n                    (click)=\"onCalcItemSelected(item.name, '')\">\r\n              {{ item.name }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- END add calculated field -->\r\n  <!-- Currency section -->\r\n  <div *ngIf=\"pivotGridOptionsValues?.settings?.menuSettings?.isCurrencySelection\"\r\n       class=\"menu-dropdown\"\r\n       (mouseover)=\"onHover('currencySelector')\"\r\n       (mouseenter)=\"onHover('currencySelector')\"\r\n       (mouseout)=\"onLeave('currencySelector')\">\r\n    <dx-button stylingMode=\"outlined\"\r\n               [type]=\"getButtonStatus(currencySelectorClicked)\"\r\n               icon=\"fa fa-money\"\r\n               [width]=\"getWidth('currencySelectorBtn')\"\r\n               [height]=\"35\"\r\n               [text]=\"selectedCurrency?.CurrencyCode!\"\r\n               (click)=\"toggleMenuItem('currencySelector', true)\"></dx-button>\r\n    <div [@slideInOut]=\"currencySelectorVisible ? 'in' : 'out'\"\r\n         id=\"currencySelector\"\r\n         class=\"menu-dropdown-content\">\r\n      <div class=\"list-header\">Currency</div>\r\n      <dx-list [dataSource]=\"currencyDropdown\"\r\n               [width]=\"255\"\r\n               [height]=\"250\"\r\n               [searchEnabled]=\"true\"\r\n               searchExpr=\"CurrencyName\"\r\n               searchMode=\"contains\"\r\n               [scrollByContent]=\"true\"\r\n               [scrollByThumb]=\"true\">\r\n        <div *dxTemplate=\"let data of 'item'\"\r\n             [ngClass]=\"{'selected-item': data.CurrencyCode === currencyDropdownSelected?.CurrencyCode}\">\r\n          <div (click)=\"currencySelectionOnChanged(data)\">\r\n            {{ data.CurrencyName }}\r\n          </div>\r\n        </div>\r\n      </dx-list>\r\n    </div>\r\n  </div>\r\n  <!-- END Currency section -->\r\n  <!-- Currency conversion section -->\r\n  <div *ngIf=\"pivotGridOptionsValues?.settings?.menuSettings?.isCurrencyConversion\"\r\n       class=\"menu-dropdown\"\r\n       (mouseover)=\"onHover('currencyConversionSelector')\"\r\n       (mouseout)=\"onLeave('currencyConversionSelector')\">\r\n    <dx-button stylingMode=\"outlined\"\r\n               [type]=\"getButtonStatus(currencyConversionSelectorClicked)\"\r\n               icon=\"fa fa-exchange-alt\"\r\n               [width]=\"getWidth('currencyConversionSelectorBtn')\"\r\n               [height]=\"35\"\r\n               [text]=\"currencyConversionTypeSelected\"\r\n               (click)=\"toggleMenuItem('currencyConversionSelector', true)\">\r\n    </dx-button>\r\n    <div [@slideInOut]=\"currencyConversionSelectorVisible ? 'in' : 'out'\"\r\n         id=\"currencyConversionSelector\"\r\n         class=\"menu-dropdown-content\">\r\n      <div class=\"list-header\">Currency Conversion</div>\r\n      <dx-radio-group [items]=\"currencyConversionType\"\r\n                      class=\"outline\"\r\n                      type=\"normal\"\r\n                      [(value)]=\"currencyConversionTypeSelected\"\r\n                      (onValueChanged)=\"\r\n          currencyConversionTypeOnChanged(currencyConversionTypeSelected)\r\n        \"\r\n                      layout=\"horizontal\">\r\n      </dx-radio-group>\r\n    </div>\r\n  </div>\r\n  <!-- END Currency conversion section -->\r\n  <!-- mass unit selection -->\r\n  <div *ngIf=\"pivotGridOptionsValues?.settings.menuSettings?.isUnitsOfMass\"\r\n       class=\"menu-dropdown\"\r\n       (mouseover)=\"onHover('massUnitSelector')\"\r\n       (mouseout)=\"onLeave('massUnitSelector')\">\r\n    <dx-button stylingMode=\"outlined\"\r\n               [type]=\"getButtonStatus(massUnitSelectorClicked)\"\r\n               icon=\"fa fa-balance-scale\"\r\n               [width]=\"getWidth('massUnitSelectorBtn')\"\r\n               [height]=\"35\"\r\n               [text]=\"unitOfMassDropdownSelected?.Name\"\r\n               (click)=\"toggleMenuItem('massUnitSelector', true)\">\r\n    </dx-button>\r\n    <div [@slideInOut]=\"massUnitSelectorVisible ? 'in' : 'out'\"\r\n         id=\"massUnitSelector\"\r\n         class=\"menu-dropdown-content\">\r\n      <div class=\"list-header\">Units of Mass</div>\r\n      <dx-list [dataSource]=\"massUnitDropdown\"\r\n               [width]=\"180\"\r\n               [height]=\"250\"\r\n               [searchEnabled]=\"false\"\r\n               searchExpr=\"Name\"\r\n               [scrollByContent]=\"true\"\r\n               [scrollByThumb]=\"true\">\r\n        <div *dxTemplate=\"let data of 'item'\"\r\n             [ngClass]=\"{\r\n            'selected-item': data.Name === unitOfMassDropdownSelected?.Name\r\n          }\">\r\n          <div (click)=\"massUnitSelectionChange(data)\">{{ data.Name }}</div>\r\n        </div>\r\n      </dx-list>\r\n    </div>\r\n  </div>\r\n  <!-- END mass unit selection -->\r\n  <!-- auto save state-->\r\n  <!--<div class=\"menu-dropdown auto-save-state\">\r\n    <dx-button id=\"autoSaveState\"\r\n               type=\"success\"\r\n               icon=\"far fa-save\"\r\n               [width]=\"35\"\r\n               [height]=\"35\"\r\n               [type]=\"autoSaveStateStatus == true ? 'success' : 'normal'\"\r\n               [hint]=\"\r\n        autoSaveStateStatus == true\r\n          ? 'State is saved automatically'\r\n          : 'System keeps latest used state and settings'\r\n      \"\r\n               (onClick)=\"changeAutoSaveStatus(autoSaveStateStatus)\">\r\n    </dx-button>\r\n  </div>-->\r\n  <!-- END auto save state -->\r\n  <!-- Export to excel -->\r\n  <div class=\"menu-dropdown export-to-exel\"\r\n       (mouseover)=\"onHover('exportToExcel')\"\r\n       (mouseenter)=\"onHover('exportToExcel')\"\r\n       (mouseout)=\"onLeave('exportToExcel')\">\r\n    <dx-button id=\"exportBtn\"\r\n               stylingMode=\"outlined\"\r\n               icon=\"fas fa-download\"\r\n               [width]=\"50\"\r\n               [height]=\"35\"\r\n               type=\"normal\"\r\n               hint=\"Export to Excel\"\r\n               [disabled]=\"dataLoadingIndicatorVisible\">\r\n      <div *dxTemplate=\"let data of 'content'\">\r\n        <dx-load-indicator class=\"button-indicator\"\r\n                           [visible]=\"dataLoadingIndicatorVisible\">\r\n        </dx-load-indicator>\r\n        <i class=\"fas fa-download\" *ngIf=\"!dataLoadingIndicatorVisible\"></i>\r\n      </div>\r\n    </dx-button>\r\n    <div [@slideInOut]=\"\r\n        exportToExcelSelectorVisible && !dataLoadingIndicatorVisible\r\n          ? 'in'\r\n          : 'out'\r\n      \"\r\n         id=\"exportTypeSelector\"\r\n         class=\"menu-dropdown-content\">\r\n      <!-- <div class=\"list-header\">{{localization.resourcesPlaceholders[pivotGridOptionsValues?.settings?.pivotGridTextKeys?.pivotCurrencyHeader]}}</div> -->\r\n      <dx-list [dataSource]=\"exportType\"\r\n               [width]=\"155\"\r\n               [height]=\"120\"\r\n               [scrollByContent]=\"true\"\r\n               [scrollByThumb]=\"true\">\r\n        <div *dxTemplate=\"let data of 'item'\">\r\n          <div (click)=\"exportToExcelSelectionOnChanged(data)\">\r\n            {{ data.value }}\r\n          </div>\r\n        </div>\r\n      </dx-list>\r\n    </div>\r\n    <dx-tooltip target=\"#exportBtn\"\r\n                [visible]=\"dataLoadingIndicatorVisible\"\r\n                [closeOnOutsideClick]=\"true\">\r\n      <div *dxTemplate=\"let data = data; of: 'content'\">Export in progress</div>\r\n    </dx-tooltip>\r\n  </div>\r\n  <!-- END Export to excel selection  -->\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  SimpleChanges,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { DxPivotGridComponent } from 'devextreme-angular';\r\nimport PivotGridDataSource from 'devextreme/ui/pivot_grid/data_source';\r\nimport { CurrencyConversionTypeEnum } from 'src/model/enums/currencyConversionType.enum';\r\nimport { PscSalesItem } from 'src/model/pscSalesItem.model';\r\nimport { ComboBox } from 'src/model/combo.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IsLoadingService } from '@service-work/is-loading';\r\nimport { AlertService } from '@full-fledged/alerts';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\nimport { Workbook } from 'exceljs';\r\nimport * as lodash from 'lodash';\r\nimport { saveAs } from 'file-saver';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\nimport { DataFieldArea } from 'src/model/enums/dataFieldArea.enum';\r\nimport { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\nimport {\r\n  Field as PivotGridField,\r\n  Format,\r\n  PivotGridOptions,\r\n  Field,\r\n  PivotGridSource,\r\n} from 'src/model/pivotGridOptions.model';\r\nimport {\r\n  CurrencyDropdown,\r\n  UnitDropdown,\r\n  UserSettings,\r\n  UserStateAndSetttings,\r\n} from 'src/model/userStateAndSetttings.model';\r\nimport { StudyService } from 'src/services/study.service';\r\nimport { SpecialValueType } from 'src/model/enums/specialValueType.enum';\r\nimport { exportPivotGrid } from 'devextreme/excel_exporter';\r\nimport { CommonHelper } from 'src/guard/commonHelper';\r\nimport { Subject } from 'rxjs';\r\nimport { Common } from 'src/extensions/common.extension';\r\nimport { ComputingType } from 'src/model/enums/computingType.enum';\r\nimport { DataRelationsData } from 'src/model/dataRelationsData.model';\r\nimport { SharedService } from 'src/services/shared.service';\r\nimport { StudyDataUrlEnum } from 'src/model/enums/studyDataUrl.enum';\r\nimport { UserDetail } from '../../../model/userDetail.model';\r\nimport { Constants } from '../../Constant';\r\nimport { LocalStorageService } from '../../../services/localStorage.service';\r\nimport { DropdownCurrency } from '../../../model/dropdownCurrency.model';\r\nimport { DropdownUnits } from '../../../model/dropdownUnits.model';\r\n\r\ndeclare let $: any;\r\n\r\n@Component({\r\n  selector: 'pivot-grid-preview',\r\n  templateUrl: './pivot-grid-preview.component.html',\r\n  styleUrls: ['./pivot-grid-preview.component.css'],\r\n})\r\nexport class PivotGridPreviewComponent implements OnInit {\r\n  @ViewChild(DxPivotGridComponent, { static: true })\r\n  pivotGrid: DxPivotGridComponent;\r\n\r\n  @Input() currentYear: number = 0;\r\n  previewData: any[] = [];\r\n  saveStateEnabled: boolean = false;\r\n  studySetup: any;\r\n  studyAreaId: number = 0;\r\n  userDetail: UserDetail;\r\n  isDefaultStateMode = false;\r\n  currencyDropdown: DropdownCurrency[] = [];\r\n  unitsDropdown: DropdownUnits[] = [];\r\n\r\n  @Input() set setPreviewData(data: any) {\r\n    if (data) {\r\n      this.previewData = data;\r\n      if (this.previewData && this.studySetup) {\r\n        setTimeout(() => {\r\n          this.getPivotSettings();\r\n        }, 100)\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() set setStudySetup(studySetup: any) {\r\n    if (studySetup) {\r\n      this.studySetup = studySetup;\r\n      if (this.previewData && this.studySetup) {\r\n        setTimeout(() => {\r\n          this.getPivotSettings();\r\n        }, 100)\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() set setMarketYearCategoryId(data: number) {\r\n    this.marketYearCategoryId = data;\r\n  }\r\n\r\n  @Input() set setCurrency(data: any) {\r\n    this.currencyDropdown = data;\r\n  }\r\n\r\n  @Input() set setVolumeUnits(data: any) {\r\n    this.unitsDropdown = data;\r\n  }\r\n\r\n  @Input() set setCurrentCurrency(data: any) {\r\n    if (data) {\r\n      this.currencyDropdownSelected = data;\r\n    }\r\n  }\r\n\r\n  @Input() set setCurrentVolumeUnit(data: any) {\r\n    if (data) {\r\n      this.unitOfMassDropdownSelected = data;\r\n    }\r\n  }\r\n\r\n  marketYearCategoryId: number = 0;\r\n  studyProjectMarketYearId: number = 0;\r\n\r\n  currencyConversionTypeSelected: CurrencyConversionTypeEnum = 1;\r\n  unitOfMassDropdownSelected: DropdownUnits = new DropdownUnits();\r\n\r\n  pivotGridDataSource: PivotGridDataSource;\r\n  pivotGridOptions: PivotGridOptions;\r\n  stateData: UserStateAndSetttings | undefined;\r\n\r\n  computingType = ComputingType;\r\n\r\n  eventsCustomAction: Subject<string> = new Subject<string>();\r\n  pivotGridNoDataMessage = '';\r\n\r\n  isPercentOfTotalPopup = false;\r\n  isPercentOfChangePopup = false;\r\n  isCagrPopup = false;\r\n\r\n  firstAvailableId = 0;\r\n\r\n  currencyDropdownSelected: DropdownCurrency = null!;\r\n\r\n  yearDataFieldName: string = '';\r\n  isHeaderFilterLoading = false;\r\n  canCallSaveState = false;\r\n  adminSetNewState = false;\r\n\r\n  pivotSummaryDisplayModesSubtotals: ComboBox[] = [\r\n    { id: undefined, name: 'Same as the Data Fields' },\r\n    { id: 'percentOfColumnTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowTotal', name: 'Always Rows' },\r\n  ];\r\n\r\n  pivotSummaryDisplayModesGrandTotals: ComboBox[] = [\r\n    { id: 'percentOfColumnGrandTotal', name: 'Always Columns' },\r\n    { id: 'percentOfRowGrandTotal', name: 'Always Rows' },\r\n    { id: 'percentOfGrandTotal', name: 'Table (Absolute) Grand Total' },\r\n  ];\r\n\r\n  shownYears: any = undefined;\r\n  invisibleFields: PivotGridField[] = [];\r\n  saveStateToDbTimeout: NodeJS.Timeout = setTimeout(() => { }, 0);\r\n  stateChange: Subject<UserStateAndSetttings> =\r\n    new Subject<UserStateAndSetttings>();\r\n\r\n  shownYearsPrev: any = undefined;\r\n  pivotStateId: number = 0;\r\n\r\n  studyDataUrlEnum = StudyDataUrlEnum;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private isLoadingService: IsLoadingService,\r\n    private studyService: StudyService,\r\n    private alertService: AlertService,\r\n    private sharedService: SharedService,\r\n    private localStorageService: LocalStorageService\r\n  ) {\r\n    this.pivotGridDataSource = new PivotGridDataSource();\r\n\r\n    const params = this.route.snapshot.params;\r\n\r\n    this.marketYearCategoryId = params['mycId'];\r\n    this.studyProjectMarketYearId = params['spmId'];\r\n    this.studyAreaId = params['studyArea'];\r\n\r\n    this.customSaveState = this.customSaveState.bind(this);\r\n    this.customLoadState = this.customLoadState.bind(this);\r\n\r\n    this.userDetail = new UserDetail().deserialize(\r\n      this.localStorageService.getData(Constants.userDetailKey)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  dataField: string = '';\r\n  getPivotSettings() {\r\n    if (this.studySetup?.ViewId > 0) {\r\n      this.sharedService\r\n        .getPivotSettings(this.studySetup.ViewId)\r\n        .subscribe((res) => {\r\n          this.pivotGridOptions = res.Data;\r\n          if (this.pivotGridOptions) {\r\n            //this.pivotGridOptions.pivotGridSource.fields = this.gridFields;\r\n            this.pivotGridOptions.settings.specialSorting = [];\r\n\r\n            // hardcoded fix because this study don't have any view yet.\r\n            if (this.studySetup.StudyAreaId === 49) {\r\n              this.pivotGridOptions.pivotGridSource!.fields!.find(\r\n                (d) => d.dataField === 'Unit'\r\n              )!.caption = 'Count';\r\n            }\r\n\r\n            // get datafield for this view from settings\r\n            this.dataField =\r\n              this.pivotGridOptions.pivotGridSource.fields.find(\r\n                (f) => f.dataFieldType\r\n              )?.dataField || 'Value';\r\n\r\n\r\n            this.pivotGridOptions.pivotGridSource.store = this.previewData;\r\n            this.pivotGridDataSource = new PivotGridDataSource(\r\n              this.pivotGridOptions.pivotGridSource as any\r\n            );\r\n\r\n            // get also pivot state when settings is available\r\n            this.getPivotState();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  getPivotState() {\r\n    if (!this.stateData) {\r\n      let stateData = undefined;\r\n      this.sharedService\r\n        .getState(this.studySetup?.ViewId, this.marketYearCategoryId, false)\r\n        .subscribe((res) => {\r\n          // in case state is not exists yet\r\n          try {\r\n            const stateRes =\r\n              typeof res.Data[0] !== 'undefined' ? res.Data[0] : {};\r\n\r\n            stateData = Common.realMerge(\r\n              new UserStateAndSetttings(),\r\n              JSON.parse(stateRes.StateData)\r\n            );\r\n\r\n            this.pivotStateId = stateRes.PivotStateId;\r\n          } catch {\r\n            stateData = new UserStateAndSetttings();\r\n            // stateData.state.fields = this.getGridFields();\r\n          }\r\n\r\n          this.directDatasourceRenderPivot(stateData);\r\n        });\r\n    } else {\r\n      this.directDatasourceRenderPivot(this.stateData);\r\n    }\r\n  }\r\n\r\n  async directDatasourceRenderPivot(stateData: UserStateAndSetttings) {\r\n    if (stateData.settings) {\r\n      if (!stateData.settings.currencyConversionType) {\r\n        stateData.settings.currencyConversionType =\r\n          this.pivotGridOptions.pivotGridDefaultValues.currencyConversionType;\r\n      }\r\n      if (!stateData.settings.selectedYear?.PeriodKey) {\r\n        stateData.settings.selectedYear = this.currentYear;\r\n      }\r\n\r\n      let selectedCurrency = new CurrencyDropdown();\r\n      selectedCurrency.Id = this.currencyDropdownSelected.Id;\r\n      selectedCurrency.Code = this.currencyDropdownSelected.CurrencyCode;\r\n      selectedCurrency.Name = this.currencyDropdownSelected.Name;\r\n\r\n      stateData.settings.currency = selectedCurrency;\r\n\r\n      let unitDropdown = new UnitDropdown();\r\n      unitDropdown.Id = this.unitOfMassDropdownSelected.Id;\r\n      unitDropdown.Name = this.unitOfMassDropdownSelected.Name;\r\n\r\n      stateData.settings.unitOfMass = unitDropdown;\r\n    }\r\n\r\n    this.stateData = stateData;\r\n    if (this.previewData && this.previewData.length) {\r\n      //get all invisible fields\r\n      this.invisibleFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) => f.visible === false\r\n        );\r\n      //filter invisible fields\r\n      this.pivotGridOptions.pivotGridSource.fields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) => !f.visible || !f.isCalculated\r\n        );\r\n      //get count of visible fields for calculated fields ids\r\n      this.firstAvailableId =\r\n        this.pivotGridOptions.pivotGridSource.fields.length;\r\n      // remove all invisible data from the datasource\r\n      if (this.invisibleFields && this.invisibleFields.length > 0) {\r\n        for (const invisibleField of this.invisibleFields) {\r\n          this.previewData.forEach((obj) => {\r\n            delete obj[invisibleField.dataField];\r\n          });\r\n        }\r\n      }\r\n      this.fillPivot(this.pivotGridOptions, this.previewData);\r\n    }\r\n  }\r\n\r\n  customSaveState(data: any, isChangeAutoSaveStatus?: boolean) {\r\n    // do not save state to db in case, states are emited too intensively\r\n    clearTimeout(this.saveStateToDbTimeout);\r\n    this.canCallSaveState = true;\r\n\r\n    // allow to save state only in case all requested data is available\r\n    if (\r\n      this.studySetup?.ViewId &&\r\n      this.canCallSaveState &&\r\n      this.pivotGridOptions &&\r\n      this.stateData\r\n    ) {\r\n      this.stateData.state = data;\r\n      this.stateChange.next(this.stateData);\r\n      // find all shown years and reload pivot grid on change\r\n      const yearField = this.stateData.state.fields.filter(\r\n        (f: any) => f.dataField === this.yearDataFieldName\r\n      );\r\n      const hasCagrOrChange =\r\n        this.stateData.settings.cagrState.isSet ||\r\n        this.stateData.settings.changePercentState.isSet;\r\n      if (yearField && hasCagrOrChange) {\r\n        const pivotGridInstance: any = this.pivotGrid?.instance;\r\n        const pivotFridDataSource = pivotGridInstance.getDataSource();\r\n        const areaIndex: number = yearField[0].areaIndex;\r\n        const uniqArrByText: any = lodash.uniqBy(\r\n          pivotGridInstance._dataController._columnsInfo[areaIndex],\r\n          'text'\r\n        );\r\n        this.shownYears = uniqArrByText.map((t: any) => parseInt(t.text));\r\n        // in case user try to change sorting on calculated field, do not allow it in case cagr or %change exists\r\n        if (yearField[0].sortOrder === 'desc') {\r\n          pivotFridDataSource.field(this.yearDataFieldName, {\r\n            sortOrder: 'asc',\r\n          });\r\n          pivotFridDataSource.load();\r\n        }\r\n        if (!lodash.isEqual(this.shownYears, this.shownYearsPrev)) {\r\n          this.shownYearsPrev = this.shownYears;\r\n          pivotFridDataSource.load();\r\n        }\r\n      }\r\n\r\n      // in case user is NOT admin and has disable automatic saving state or remember latest state\r\n      //else if (!isChangeAutoSaveStatus) {\r\n      //  if (this.stateData.settings.rememberLatestState == undefined) {\r\n      //    this.stateData.settings.rememberLatestState =\r\n      //      this.pivotGridOptions.canSaveUserState;\r\n      //  }\r\n      //  if (this.stateData.settings.rememberLatestState == false) {\r\n      //    return;\r\n      //  }\r\n      //}\r\n\r\n      this.saveStateToDbTimeout = setTimeout(() => {\r\n        this.sharedService\r\n          .setState(\r\n            this.studySetup?.ViewId,\r\n            this.marketYearCategoryId,\r\n            0,\r\n            this.isDefaultStateMode,\r\n            JSON.stringify(this.stateData)\r\n          )\r\n          .subscribe(\r\n            (data) => {\r\n              if (\r\n                data &&\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions &&\r\n                this.isDefaultStateMode\r\n              ) {\r\n                this.alertService.info(\r\n                  'The system will remember the last state!'\r\n                );\r\n                // after save state, save also settings\r\n                this.saveSettings(\r\n                  this.studySetup?.ViewId,\r\n                  this.pivotGridOptions\r\n                );\r\n                // set can save default state to false\r\n                this.pivotGridOptions.canSaveDefaultStateAndOptions = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              throw new Error(error);\r\n            }\r\n          );\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  customLoadState() {\r\n    if (this.stateData) {\r\n      return this.stateData.state;\r\n    }\r\n  }\r\n\r\n  deleteCustomState() {\r\n    this.adminSetNewState = false;\r\n    if (this.studySetup?.ViewId && this.pivotStateId) {\r\n      this.sharedService\r\n        .deleteState(this.studySetup?.ViewId, this.marketYearCategoryId, this.pivotStateId)\r\n        .subscribe(\r\n          (data) => data,\r\n          (error) => {\r\n            throw new Error(error);\r\n          },\r\n          () => {\r\n            this.stateData = undefined;\r\n            setTimeout(() => {\r\n              this.getPivotState();\r\n            }, 100);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  saveSettings(\r\n    currentlySelectedViewId: number,\r\n    optionsDataSource: PivotGridOptions\r\n  ): void {\r\n    let saveResult = false;\r\n    const optionsDataSourceTemp = { ...optionsDataSource };\r\n    optionsDataSourceTemp.pivotGridSource.fields =\r\n      optionsDataSourceTemp.pivotGridSource.fields.filter(\r\n        (f) => !f.isCalculated\r\n      );\r\n    // set store to empty, system will read fresh data from backend next time\r\n    optionsDataSourceTemp.pivotGridSource.store = [];\r\n  }\r\n\r\n  getDataFieldName(fieldName: string) {\r\n    if (fieldName == this.studyDataUrlEnum.SHC_PT_SALES) {\r\n      return 'ProductTypeSalesSHC';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_FC_SALES) {\r\n      return 'ForecastSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_PC_SALES) {\r\n      return 'ProductClassificationSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_CB_SALES) {\r\n      return 'CompanyBrandSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_OS_SALES) {\r\n      return 'OutletSales';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_IR_SALES) {\r\n      return 'IndustryRevenues';\r\n    } else if (fieldName == this.studyDataUrlEnum.SHC_SC_SALES) {\r\n      return 'SalonCount';\r\n    } else {\r\n      return 'dataItems';\r\n    }\r\n\r\n    return fieldName;\r\n  }\r\n\r\n  onOptionChanged(e: any) { }\r\n\r\n  onInitialized(e: any) { }\r\n\r\n  cellPrepared(e: any) {\r\n    // customize change % columns captions\r\n    // console.log(this.stateData?.settings.changePercentState.computingType);\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.area === 'column' && shownYearsInPivot && shownYearsInPivot.length) {\r\n      if (\r\n        e.cell.text &&\r\n        e.cell.text.startsWith(CalculatedFieldType.changePercent)\r\n      ) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.changePercentState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex].toString() +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex].toString();\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n      //customize cagr columns captions\r\n      if (e.cell.text && e.cell.text.startsWith(CalculatedFieldType.cagr)) {\r\n        let years = '';\r\n        if (e.cell.path) {\r\n          for (const path of e.cell.path) {\r\n            years = path ? path : '';\r\n          }\r\n          if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.FirstYear\r\n          ) {\r\n            if (shownYearsInPivot[0]) {\r\n              years = shownYearsInPivot[0] + ' to ' + years;\r\n            } else {\r\n              years = '...';\r\n            }\r\n          } else if (\r\n            this.stateData?.settings.cagrState.computingType ===\r\n            ComputingType.PreviousYear\r\n          ) {\r\n            const yearIndex = shownYearsInPivot.indexOf(parseInt(years));\r\n            const prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n            if (\r\n              shownYearsInPivot[prevYearIndex] &&\r\n              shownYearsInPivot[yearIndex]\r\n            ) {\r\n              years =\r\n                shownYearsInPivot[prevYearIndex] +\r\n                ' to ' +\r\n                shownYearsInPivot[yearIndex];\r\n            } else {\r\n              years = '...';\r\n            }\r\n          }\r\n          e.cellElement.textContent = e.cell.text + ', ' + years;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (e.area === 'data') {\r\n      if (e.cell.value) {\r\n        e.cell.value.hasCd &&\r\n          e.cellElement.classList.add('pivot-grid-cell-has-cd');\r\n      }\r\n    }\r\n  }\r\n\r\n  onContentReady(e: any) {\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource &&\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n    ) {\r\n      const calculatedFields =\r\n        this.pivotGridOptions.pivotGridSource.fields.filter(\r\n          (f) =>\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal ||\r\n            f.calculatedFieldType === CalculatedFieldType.changePercent ||\r\n            f.calculatedFieldType === CalculatedFieldType.cagr\r\n        );\r\n      for (const calculatedField of calculatedFields) {\r\n        this.addCloseButtonToCalculatedField(\r\n          calculatedField.id,\r\n          calculatedField.calculatedFieldType\r\n        );\r\n      }\r\n    }\r\n\r\n    // change style for no data message\r\n    const noDataElement = e.component\r\n      .element()\r\n      .querySelector('.dx-pivotgrid-nodata');\r\n    if (noDataElement) {\r\n      setTimeout(() => {\r\n        if (this.pivotGridNoDataMessage) {\r\n          noDataElement.classList.add('noDataMessage');\r\n        } else {\r\n          noDataElement.classList.remove('noDataMessage');\r\n        }\r\n      }, 100);\r\n    }\r\n\r\n    if (this.pivotGrid && this.stateData && this.stateData.state) {\r\n      // Allow next rows if you want to enable disabling pivot during waiting for component response\r\n      //this.pivot.disabled = true;\r\n      // not allow to user change state too fast, pivot component needs some time to save emit state\r\n      //setTimeout(() => { this.pivot.disabled = false; }, 1000)\r\n    }\r\n  }\r\n\r\n  onContextMenuPreparing(e: any): void {\r\n    // this.pivot.disabled = true;\r\n    this.customizeContextMenu(e);\r\n\r\n    //if (e.area == \"row\" || e.area == \"column\") {\r\n    //    let id = e.columnIndex + \"\" + e.rowIndex;\r\n    //    let tooltip = $(\"<span></span>\").append($(\"<span id='\" + id + \"'></span>\").html(\"\")).appendTo(e.cellElement);\r\n    //    let field = $(\"#\" + id).closest('td');\r\n    //    field.attr('title', e.cell.text);\r\n    //}\r\n  }\r\n\r\n  customizeContextMenu(e: any): void {\r\n    this.updateDefaultContextMenuTextsAndIcons(e);\r\n    if (e.field && e.field.isCalculated && this.enabledInContextMenu(e.field)) {\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Delete Calculated Field',\r\n        icon: 'fa fa-trash-alt',\r\n        onItemClick: () => {\r\n          const fieldToDelete = e.field as PivotGridField;\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (fieldToDelete.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n          this.deleteCalculatedField(e.field.id);\r\n        },\r\n      });\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Edit Calculated Field',\r\n        icon: 'fa fa-pencil-alt',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            switch (e.field.calculatedFieldType) {\r\n              case CalculatedFieldType.percentOfTotal:\r\n              case CalculatedFieldType.percentOfGrandTotal:\r\n                this.isPercentOfTotalPopup = true;\r\n                this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n                  undefined || '';\r\n                this.pivotSummaryDisplayModesSubtotals[0].id =\r\n                  this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                    ? 'percentOfColumnTotal'\r\n                    : 'percentOfRowTotal';\r\n                this.stateData.settings.percentOfTotalState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.changePercent:\r\n                this.isPercentOfChangePopup = true;\r\n                this.stateData.settings.changePercentState.isSet = false;\r\n                break;\r\n              case CalculatedFieldType.cagr:\r\n                this.isCagrPopup = true;\r\n                this.stateData.settings.cagrState.isSet = false;\r\n                break;\r\n            }\r\n          }\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    let openMenuItems = [];\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencySelection) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-money',\r\n        text: 'Change Currency',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencySelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isCurrencyConversion) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-exchange-alt',\r\n        text: 'Constant',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('currencyConversionSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfVolume) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-fill-drip',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('massUnitSelector');\r\n        },\r\n      });\r\n    }\r\n    if (this.pivotGridOptions?.settings.menuSettings.isUnitsOfMass) {\r\n      openMenuItems.push({\r\n        icon: 'fa fa-balance-scale',\r\n        text: 'Units of Volume',\r\n        onItemClick: () => {\r\n          this.eventsCustomAction.next('volumeUnitSelector');\r\n        },\r\n      });\r\n    }\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Reset to Default',\r\n      icon: 'fas fa-sync-alt',\r\n      onItemClick: () => {\r\n        this.deleteCustomState();\r\n      },\r\n    });\r\n\r\n    e.items.push({\r\n      beginGroup: true,\r\n      text: 'Adjust Parameters',\r\n      icon: 'fa fa-sliders-h',\r\n      items: openMenuItems,\r\n    });\r\n\r\n    if (\r\n      e.field &&\r\n      e.field.area === 'data' &&\r\n      this.enabledInContextMenu(e.field)\r\n    ) {\r\n      let calculatedFieldsItems: any[] = [];\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfTotal) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.percentOfTotal,\r\n          onItemClick: () => {\r\n            this.isPercentOfTotalPopup = true;\r\n            this.pivotSummaryDisplayModesSubtotals[0].id =\r\n              this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n                ? 'percentOfColumnTotal'\r\n                : 'percentOfRowTotal';\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.percentOfTotalState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.percentOfTotalState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isPercentOfChange) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.changePercent,\r\n          onItemClick: () => {\r\n            this.isPercentOfChangePopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.changePercentState.dataField =\r\n                e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.changePercentState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      if (this.pivotGridOptions?.settings.calculatedFields.isCagr) {\r\n        calculatedFieldsItems.push({\r\n          text: CalculatedFieldType.cagr,\r\n          onItemClick: () => {\r\n            this.isCagrPopup = true;\r\n            if (\r\n              this.pivotGridOptions?.settings.isCube &&\r\n              typeof this.stateData !== 'undefined'\r\n            ) {\r\n              this.stateData.settings.cagrState.dataField = e.field.dataField;\r\n            } else {\r\n              if (typeof this.stateData !== 'undefined')\r\n                this.stateData.settings.cagrState.dataField =\r\n                  e.field.dataFieldType;\r\n            }\r\n          },\r\n        });\r\n      }\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Add Calculated Field',\r\n        icon: 'fa fa-calculator',\r\n        items: calculatedFieldsItems,\r\n      });\r\n    }\r\n    // show only case if exist two or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter((f) =>\r\n        (<any>Object).values(PivotGridDataFieldType).includes(f.dataFieldType)\r\n      ).length >= 2\r\n    ) {\r\n      const dataFieldsHeaders =\r\n        this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n          ? 'Rows'\r\n          : 'Columns';\r\n      e.items.push({\r\n        beginGroup: true,\r\n        text: 'Show Data Field Headers in ' + dataFieldsHeaders,\r\n        icon: 'fa fa-table',\r\n        onItemClick: () => {\r\n          if (typeof this.stateData !== 'undefined') {\r\n            this.stateData.settings.dataFieldArea =\r\n              this.stateData.settings.dataFieldArea === DataFieldArea.column\r\n                ? DataFieldArea.row\r\n                : DataFieldArea.column;\r\n          }\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteCalculatedField(fieldId: number) {\r\n    this.pivotGridOptions?.pivotGridSource.fields.splice(\r\n      this.pivotGridOptions.pivotGridSource.fields\r\n        .map((m) => m.id)\r\n        .indexOf(fieldId),\r\n      1\r\n    );\r\n    this.firstAvailableId--;\r\n    if (!this.pivotGridOptions?.settings.isCube) {\r\n      if (typeof this.pivotGridOptions !== 'undefined') {\r\n        this.fillPivot(this.pivotGridOptions, this.previewData);\r\n      }\r\n    }\r\n  }\r\n\r\n  updateDefaultContextMenuTextsAndIcons(e: any) {\r\n    let rowName = undefined;\r\n    let rowCaption;\r\n    if (e.cell?.path) {\r\n      if (e.cell && e.area === 'row') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.rowFields[path].dataField;\r\n        rowCaption = e.rowFields[path].caption;\r\n      } else if (e.cell && e.area === 'column') {\r\n        const path = e.cell.path.length - 1;\r\n        rowName = e.columnFields[path].dataField;\r\n        rowCaption = e.columnFields[path].caption;\r\n      }\r\n      const expandAll = e.items.find((f: any) => f.text.includes('Expand All'));\r\n      if (expandAll) {\r\n        expandAll.icon = 'fas fa-plus';\r\n        expandAll.text = 'Expand' + ' ' + rowCaption;\r\n      }\r\n      const collapseAll = e.items.find((f: any) =>\r\n        f.text.includes('Collapse All')\r\n      );\r\n      if (collapseAll) {\r\n        collapseAll.icon = 'fas fa-minus';\r\n        collapseAll.text = 'Collapse' + ' ' + rowCaption;\r\n      }\r\n    }\r\n    const fieldChooser = e.items.find((f: any) =>\r\n      f.text.includes('Show Field Chooser')\r\n    );\r\n    if (fieldChooser) {\r\n      fieldChooser.text = 'FieldChooser Text';\r\n    }\r\n    const exportToExcel = e.items.find((f: any) =>\r\n      f.text.includes('Export to')\r\n    );\r\n    if (exportToExcel) {\r\n      exportToExcel.text = 'Export to excel';\r\n    }\r\n    const sorts = e.items.filter((f: any) => f.text.includes('Sort'));\r\n    if (sorts) {\r\n      for (let sort of sorts) {\r\n        sort.icon = 'fas fa-sort';\r\n      }\r\n    }\r\n  }\r\n\r\n  enabledInContextMenu(field: any): boolean {\r\n    if (field.dataFieldType === PivotGridDataFieldType.AvgPrice) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  addCloseButtonToCalculatedField(fieldId: number, datafieldType: string) {\r\n    const calculatedFieldObj = $(\r\n      \".dx-area-field-content:contains('\" + datafieldType + \"')\"\r\n    ).append(\r\n      \"<i id='\" +\r\n      Common.removeAllSpaces(datafieldType) +\r\n      \"' class='closeButton fas fa-times-circle'></i>\"\r\n    );\r\n\r\n    calculatedFieldObj\r\n      .parent()\r\n      .parent()\r\n      .css('padding-right', '0')\r\n      .css('margin-right', '0 !important');\r\n\r\n    calculatedFieldObj\r\n      .children()\r\n      .off()\r\n      .on('click', () => {\r\n        if (typeof this.stateData !== 'undefined') {\r\n          switch (datafieldType) {\r\n            case CalculatedFieldType.percentOfTotal:\r\n            case CalculatedFieldType.percentOfGrandTotal:\r\n              this.stateData.settings.percentOfTotalState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.changePercent:\r\n              this.stateData.settings.changePercentState.isSet = false;\r\n              break;\r\n            case CalculatedFieldType.cagr:\r\n              this.stateData.settings.cagrState.isSet = false;\r\n              break;\r\n          }\r\n        }\r\n        this.deleteCalculatedField(fieldId);\r\n      });\r\n  }\r\n\r\n  currencySelectionChanged(currency: DropdownCurrency) {\r\n    const currentCurrencyId = this.currencyDropdownSelected?.Id;\r\n    const changedCurrency = currency.Id;\r\n    const currencyConversionId = this.currencyConversionTypeSelected;\r\n    this.currencyDropdownSelected = currency;\r\n    this.refreshCurrencyInPreview(\r\n      currentCurrencyId,\r\n      changedCurrency,\r\n      currencyConversionId\r\n    );\r\n  }\r\n\r\n  currencyConversionSelectionChanged(\r\n    currencyConversionType: CurrencyConversionTypeEnum\r\n  ) {\r\n    const currentCurrencyId = this.currencyDropdownSelected?.Id;\r\n    this.refreshCurrencyInPreview(\r\n      currentCurrencyId,\r\n      currentCurrencyId,\r\n      currencyConversionType\r\n    );\r\n    this.currencyConversionTypeSelected = currencyConversionType;\r\n  }\r\n\r\n  refreshCurrencyInPreview(\r\n    currentCurrencyId: number,\r\n    changedCurrency: number,\r\n    currencyConversionId: number\r\n  ) {\r\n    this.studyService\r\n      .getCurrencyConversionFactor(\r\n        this.studySetup.StudyYear,\r\n        currentCurrencyId,\r\n        changedCurrency,\r\n        currencyConversionId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const conversionfactor = res.Data;\r\n            for (const dataRow of this.previewData) {\r\n              dataRow.Value *= conversionfactor;\r\n            }\r\n\r\n            this.getPivotSettings();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          throw new Error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  massUnitSelectionChanged(unitOfMass: DropdownUnits) {\r\n    const currentUnitOfMassId = this.unitOfMassDropdownSelected.Id;\r\n    const changedUnitOfMassId = unitOfMass.Id;\r\n    this.unitOfMassDropdownSelected = unitOfMass;\r\n    this.refreshMassUnitInPreview(currentUnitOfMassId, changedUnitOfMassId);\r\n  }\r\n\r\n  refreshMassUnitInPreview(\r\n    currentMassUnitId: number,\r\n    changedMassUnitId: number\r\n  ) {\r\n    this.studyService\r\n      .getVolumeConversionFactor(\r\n        currentMassUnitId,\r\n        changedMassUnitId,\r\n        this.studySetup.StudyDataSetId\r\n      )\r\n      .subscribe(\r\n        (res: ApiResponse) => {\r\n          if (res.HttpStatusCode === 200) {\r\n            const conversionfactor = res.Data;\r\n            for (const dataRow of this.previewData) {\r\n              dataRow.Volume *= conversionfactor;\r\n            }\r\n\r\n            this.getPivotSettings();\r\n          }\r\n        },\r\n        (error: any) => {\r\n          throw new Error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  getUserSettings() {\r\n    const userSettings = {\r\n      currency: {\r\n        Id: this.currencyDropdownSelected.Id,\r\n        Code: this.currencyDropdownSelected.CurrencyCode,\r\n        Name: this.currencyDropdownSelected.Name,\r\n      },\r\n      currencyConversionType: 1,\r\n      unitOfMass: { Id: 103, Name: 'Thousand Lbs' },\r\n      unitOfMeasure: { Id: 101, Name: 'Metric Tonnes' },\r\n      unitOfVolume: { Id: 7, Name: 'Quart (US)' },\r\n      selectedYear: {\r\n        PeriodKey: this.currentYear,\r\n        Name: this.currentYear.toString(),\r\n      },\r\n      percentOfTotalState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        basedOn: 'Subtotals',\r\n        summaryDisplayMode: 'percentOfColumnTotal',\r\n      },\r\n      changePercentState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'Previous (Shown) Year',\r\n      },\r\n      cagrState: {\r\n        isSet: true,\r\n        dataField: 'Value',\r\n        computingType: 'First (Shown) Year',\r\n      },\r\n      dataFieldArea: 'column',\r\n      userChartSetting: {\r\n        dataFieldsDisplayMode: 'singleAxis',\r\n        chartType: 'Column',\r\n      },\r\n      isReducedDataSource: false,\r\n      rememberLatestState: true,\r\n    };\r\n\r\n    return userSettings;\r\n  }\r\n\r\n  exportToExcel() {\r\n    this.getUserSettings();\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    const menuSettings = this.pivotGridOptions?.settings?.menuSettings;\r\n    const pivotFields = this.pivotGridDataSource.fields();\r\n    const userSettings = this.getUserSettings();\r\n    let finalData;\r\n    if (this.previewData[0].hasOwnProperty('Year')) {\r\n      finalData = this.previewData.sort((a, b) => a.Year - b.Year);\r\n    } else {\r\n      finalData = this.previewData;\r\n    }\r\n    this.studyService\r\n      .exportToExcel(\r\n        finalData,\r\n        pivotFields,\r\n        userSettings,\r\n        title,\r\n        menuSettings,\r\n        0\r\n      )\r\n      .subscribe(\r\n        (res) => {\r\n          let fileName = 'PivotExport';\r\n          if (title.length > 3) {\r\n            fileName = title.split(' ').join('');\r\n            fileName = fileName.split('-').join('_');\r\n          }\r\n          var file = new Blob([res], { type: 'application/vnd.ms-excel' });\r\n          var fileURL = URL.createObjectURL(file);\r\n          let a = document.createElement('a');\r\n          document.body.appendChild(a);\r\n          a.style.display = 'none';\r\n          a.href = fileURL;\r\n          a.target = '_blank';\r\n          a.download = `${fileName}.xlsx`;\r\n          a.click();\r\n          a.remove();\r\n          this.studyService.changeExcelLoading(false);\r\n        },\r\n        (error) => {\r\n          this.studyService.changeExcelLoading(false);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  exportToCvs() {\r\n    this.studyService.changeExcelLoading(true);\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n    this.studyService.exportToCsv(this.previewData, fileName);\r\n  }\r\n\r\n  exportToShanptshot() {\r\n    let title: string = '...';\r\n    let fileName = 'DashboardFileName';\r\n    if (title.length > 3) {\r\n      fileName = title.split(' ').join('');\r\n      fileName = fileName.split('-').join('_');\r\n    }\r\n\r\n    const workbook = new Workbook();\r\n    const worksheet = workbook.addWorksheet('Main sheet');\r\n    exportPivotGrid({\r\n      component: this.pivotGrid?.instance,\r\n      worksheet: worksheet,\r\n      customizeCell: function (options) {\r\n        const excelCell = options;\r\n        excelCell.excelCell.font = { name: 'Calibri', size: 11 };\r\n        excelCell.excelCell.alignment = { horizontal: 'left', vertical: 'top' };\r\n      },\r\n    }).then(function () {\r\n      workbook.xlsx.writeBuffer().then(function (buffer: BlobPart) {\r\n        saveAs(\r\n          new Blob([buffer], { type: 'application/octet-stream' }),\r\n          fileName + '.xlsx'\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  fillPivot(pivotGridOptions: PivotGridOptions, pivotData: any) {\r\n    this.saveStateEnabled = false;\r\n    const selectedYear = this.stateData\r\n      ? this.stateData.settings.selectedYear\r\n      : this.currentYear;\r\n\r\n    if (pivotGridOptions && this.stateData?.settings) {\r\n      // If is visible like default, add % of total to pivot\r\n      if (this.stateData.settings.percentOfTotalState.isSet) {\r\n        this.addPercentOfTotalsToPivot(true);\r\n      }\r\n      // If is visible like default, add change % to pivot\r\n      if (this.stateData.settings.changePercentState.isSet) {\r\n        this.addPrecentOfChangeToPivot(true);\r\n      }\r\n      // If is visible like default, add CAGR to pivot\r\n      if (this.stateData.settings.cagrState.isSet) {\r\n        this.addCAGRToPivot(true);\r\n      }\r\n\r\n      const pivotGridSource = new PivotGridSource();\r\n\r\n      pivotGridSource.fields = pivotGridOptions.pivotGridSource.fields;\r\n      pivotGridSource.store = pivotData;\r\n      // make copy of datasource without reference to old object\r\n      let sourceCopy = lodash.cloneDeep(pivotGridSource);\r\n      // if administrator set default sorting to true do not use any special sorting\r\n      if (!pivotGridOptions.settings.useDefaultSorting) {\r\n        // if some special sorting is applied\r\n        if (\r\n          pivotGridOptions.settings.specialSorting &&\r\n          pivotGridOptions.settings.specialSorting.length\r\n        ) {\r\n          for (let specialSorting of pivotGridOptions.settings.specialSorting) {\r\n            if (specialSorting.fieldName) {\r\n              let orderAray: any[] = [];\r\n              if (pivotData) {\r\n                let rowData = 0;\r\n                for (let row of pivotData) {\r\n                  // if (row.Year == selectedYear.PeriodKey) {\r\n                  // in case value datafield is not exists, must exists unit\r\n                  rowData = row.Value === undefined ? row.Unit : row.Value;\r\n                  if (\r\n                    orderAray.some(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    )\r\n                  ) {\r\n                    orderAray.find(\r\n                      (r) => r.field === row[specialSorting.fieldName]\r\n                    ).valueSum += rowData;\r\n                  } else {\r\n                    orderAray.push({\r\n                      field: row[specialSorting.fieldName],\r\n                      valueSum: rowData,\r\n                    });\r\n                  }\r\n                  // }\r\n                }\r\n                orderAray = orderAray\r\n                  .sort((a, b) => b.valueSum - a.valueSum)\r\n                  .map((m) => m.field);\r\n                orderAray.forEach((item: string, index: number) => {\r\n                  if (item.startsWith(specialSorting.beginningWith)) {\r\n                    orderAray.push(orderAray.splice(index, 1)[0]);\r\n                  }\r\n                });\r\n                const sortingField = sourceCopy.fields.find(\r\n                  (f) => f.dataField === specialSorting.fieldName\r\n                );\r\n                if (sortingField) {\r\n                  sortingField.sortOrder = 'asc';\r\n                  sortingField.sortingMethod = (b: any, a: any) => {\r\n                    // if (!this.isHeaderFilterLoading) {\r\n                    //   for (const item of orderAray) {\r\n                    //     if (a.value === item) {\r\n                    //       return 1;\r\n                    //     }\r\n                    //     if (b.value === item) {\r\n                    //       return -1;\r\n                    //     }\r\n                    //   }\r\n                    // }\r\n                    return b.value.localeCompare(a.value);\r\n                  };\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } else {\r\n          this.applySortingRolesByYear();\r\n        }\r\n      }\r\n      if (this.pivotGridDataSource) {\r\n        this.pivotGridDataSource.dispose();\r\n      }\r\n\r\n      // check if source contains dataType property and set visibility to false\r\n      if (\r\n        pivotGridSource.store &&\r\n        pivotGridSource.store.length &&\r\n        pivotGridSource.store[0].DataType\r\n      ) {\r\n        let dataType = sourceCopy.fields.filter(\r\n          (d) => d.dataField === 'DataType'\r\n        );\r\n        dataType[0].visible = false;\r\n      }\r\n\r\n      // check all datafields if contains an exception in calculating\r\n      const allDatafields = sourceCopy.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      );\r\n\r\n      for (let field of allDatafields) {\r\n        let newField = this.returnSpecialSumamryField(field);\r\n        if (newField) {\r\n          sourceCopy.fields.push(newField);\r\n          field.visible = false;\r\n        }\r\n      }\r\n\r\n      // remove unused propertiesf\r\n      for (let field of sourceCopy.fields) {\r\n        // remove group properties when group is empty\r\n        if (field.groupName == '') {\r\n          // delete field.groupName;\r\n          // delete field.groupIndex;\r\n        }\r\n        // in case fileld is grouped field parse index to int\r\n        else if (field.groupName && field.groupName.length > 0) {\r\n          let groupIndex: number = field.groupIndex\r\n            ? parseInt(field.groupIndex.toString())\r\n            : 0;\r\n          field.groupIndex = groupIndex;\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof this.pivotGridOptions !== 'undefined' &&\r\n        this.pivotGridOptions.settings.groupedFields\r\n      ) {\r\n        for (let groupedField of this.pivotGridOptions.settings.groupedFields) {\r\n          let field = {\r\n            groupName: groupedField.groupName,\r\n            area: groupedField.area,\r\n          };\r\n          sourceCopy.fields.push(field as PivotGridField);\r\n        }\r\n      }\r\n\r\n      this.pivotGridDataSource = new PivotGridDataSource(sourceCopy as any);\r\n\r\n      // this solves alphabetical filtering in filters\r\n      setTimeout(() => {\r\n        const source = this.pivotGrid?.instance.getDataSource();\r\n        const getFieldValues = (source as any)?.getFieldValues;\r\n        if (getFieldValues) {\r\n          this.isHeaderFilterLoading = false;\r\n          let that = this;\r\n          (source as any).getFieldValues = function () {\r\n            that.isHeaderFilterLoading = true;\r\n            return getFieldValues.apply(this, arguments).always(function () {\r\n              that.isHeaderFilterLoading = false;\r\n            });\r\n          };\r\n        }\r\n      }, 1);\r\n\r\n      CommonHelper.updatePlaceholders(this.pivotGridDataSource, this.stateData);\r\n\r\n      if (\r\n        pivotGridOptions.settings &&\r\n        (pivotGridOptions.settings.menuSettings.isChart ||\r\n          pivotGridOptions.settings.charts.isVisible)\r\n      ) {\r\n        // this.initChart();\r\n      }\r\n    }\r\n    //cutomize texts in pivot\r\n    // this.updateDefaultPivotTexts();\r\n    // apply special filtering\r\n    //if (pivotGridOptions.settings.reducedDataSource && pivotGridOptions.settings.reducedDataSource.isReducedDataSource) {\r\n    //    this.applySpecialYearsFiltering(pivotGridOptions.settings.reducedDataSource.selectedYearAfter);\r\n    //}\r\n\r\n    setTimeout(() => {\r\n      this.saveStateEnabled = true;\r\n    }, 1);\r\n  }\r\n\r\n  returnSpecialSumamryField(fieldOriginal: PivotGridField) {\r\n    if (fieldOriginal.summaryType === 'range') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption || '';\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.dataField = fieldOriginal.dataField || '';\r\n      fieldNew.calculateCustomSummary = (e: any) =>\r\n        this.calculateSummaryValueRange(e, fieldOriginal);\r\n      fieldNew.customizeText = (e: any) => this.customizeRangeText(e);\r\n      fieldNew.isCalculated = true;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.range;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else if (fieldOriginal.summaryType === 'sumCdOd') {\r\n      let fieldNew = new PivotGridField();\r\n      fieldNew.summaryType = 'custom';\r\n      fieldNew.caption = fieldOriginal.caption;\r\n      fieldNew.calculateCustomSummary = (options: any) =>\r\n        this.calculateSummaryValueCdOd(options, fieldOriginal);\r\n      fieldNew.isMeasure = true;\r\n      fieldNew.area = 'data';\r\n      fieldNew.visible = true;\r\n      fieldNew.isCalculated = false;\r\n      fieldNew.calculatedFieldType = CalculatedFieldType.none;\r\n      fieldNew.dataFieldType = fieldOriginal.dataFieldType;\r\n      fieldNew.width = fieldOriginal.width;\r\n      return fieldNew;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueRange(e: any, field: PivotGridField) {\r\n    const valueNearZero = Number.EPSILON;\r\n    switch (e.summaryProcess) {\r\n      case 'start':\r\n        e.totalValue = 0;\r\n        e.values = [0, 0];\r\n        break;\r\n      case 'calculate':\r\n        if (e.value != -1.7976931348623157e308) {\r\n          if (!e.values[0] || !e.values[1]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value < e.values[0]) {\r\n            e.values[0] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n          if (e.value > e.values[1]) {\r\n            e.values[1] = e.value === 0 ? valueNearZero : e.value;\r\n          }\r\n        }\r\n        break;\r\n      case 'finalize':\r\n        let min = e.values[0]\r\n          ? (Math.round((e.values[0] + valueNearZero) * 100) / 100).toFixed(\r\n            field.format?.precision\r\n          )\r\n          : 0;\r\n        let max = e.values[1]\r\n          ? (Math.round((e.values[1] + valueNearZero) * 100) / 100).toFixed(\r\n            field.format?.precision\r\n          )\r\n          : 0;\r\n        // if (\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find(\r\n        //     (v) => v === Number(min)\r\n        //   ) ||\r\n        //   GlobalSettings.SpecialValueForSqlMoney.find((v) => v === Number(max))\r\n        // ) {\r\n        //   ErrorHelper.informAdministrator(\r\n        //     this.appCommonDataService,\r\n        //     'Unhandled range value - (' +\r\n        //       min +\r\n        //       ')(' +\r\n        //       max +\r\n        //       ') ' +\r\n        //       Common.objToString(this.requestedView) +\r\n        //       'Environment: ' +\r\n        //       Common.objToString(\r\n        //         this.appEnvironmentData.getEnvironmentSettings()\r\n        //       ) +\r\n        //       ' User: ' +\r\n        //       Common.objToString(this.sharedService.getUserData())\r\n        //   );\r\n        // }\r\n        if (min === max) {\r\n          e.totalValue = min;\r\n        } else if (!min) {\r\n          e.totalValue = max;\r\n        } else {\r\n          e.totalValue = min + ' - ' + max;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  customizeRangeText(e: any) {\r\n    if (e.value === undefined) {\r\n      return SpecialValueType?.EmDash;\r\n    } else {\r\n      return e.value;\r\n    }\r\n  }\r\n\r\n  calculateSummaryValueCdOd(options: any, field: PivotGridField) {\r\n    switch (options.summaryProcess) {\r\n      case 'start':\r\n        options.totalValue = {\r\n          value: 0,\r\n          hasCd: false,\r\n          valueOf() {\r\n            return this.value;\r\n          },\r\n          toString() {\r\n            return this.value.toString();\r\n          },\r\n          indexOf() {\r\n            const stringValue = this.toString();\r\n            return stringValue.indexOf.apply(this, arguments);\r\n          },\r\n        };\r\n        break;\r\n      case 'calculate':\r\n        options.totalValue.value += options.value[field.dataField] || 0;\r\n        options.totalValue.hasCd =\r\n          options.totalValue.hasCd || options.value.DataType === 'cd';\r\n        break;\r\n      case 'finalize':\r\n        let totalValue = options.totalValue;\r\n        totalValue.value = (totalValue.value as number)\r\n          .toFixed(field.format?.precision)\r\n          .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n        options.totalValue = totalValue;\r\n        break;\r\n    }\r\n  }\r\n\r\n  applySortingRolesByYear() {\r\n    this.yearDataFieldName = 'Year';\r\n    setTimeout(() => {\r\n      const pivotGridDataSource: any = this.pivotGrid?.instance.getDataSource();\r\n      const columnFields = pivotGridDataSource?._fields.filter(\r\n        (f: any) => f.area === 'column'\r\n      );\r\n      const datafields = pivotGridDataSource?._fields.filter(\r\n        (f: any) => f.area === 'data'\r\n      );\r\n      const yearFieldOnFirstPositon = columnFields?.filter(\r\n        (f: any) => f.areaIndex === 0 && f.dataField === this.yearDataFieldName\r\n      );\r\n\r\n      // apply this role only in case, year field is on first column position\r\n      if (yearFieldOnFirstPositon && yearFieldOnFirstPositon.length) {\r\n        const rowFields = pivotGridDataSource._fields.filter(\r\n          (f: any) => f.area === 'row'\r\n        );\r\n        const selectedYear = this.currentYear;\r\n        // const selectedYear = this.stateData\r\n        //   ? this.stateData.settings.selectedYear.PeriodKey\r\n        //   : 2021;\r\n        if (selectedYear) {\r\n          for (const field of rowFields) {\r\n            pivotGridDataSource.field(field.dataField, {\r\n              sortBySummaryField: datafields\r\n                ? datafields.filter((f: any) => f.areaIndex === 0)[0].dataField\r\n                : undefined,\r\n              sortBySummaryPath: [selectedYear],\r\n              sortOrder: 'desc',\r\n            });\r\n          }\r\n          pivotGridDataSource.load();\r\n        }\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  setCalculatedFieldFromTopMenu(value: any) {\r\n    const type = value.itemName;\r\n    const dataField = value.dataField;\r\n    switch (type) {\r\n      case CalculatedFieldType.percentOfTotal:\r\n        this.isPercentOfTotalPopup = true;\r\n        this.pivotSummaryDisplayModesSubtotals[0].id =\r\n          this.stateData?.settings.dataFieldArea === DataFieldArea.column\r\n            ? 'percentOfColumnTotal'\r\n            : 'percentOfRowTotal';\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.percentOfTotalState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.changePercent:\r\n        this.isPercentOfChangePopup = true;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.changePercentState.dataField = dataField;\r\n        }\r\n        break;\r\n      case CalculatedFieldType.cagr:\r\n        this.isCagrPopup = true;\r\n        // this.stateData?.settings.cagrState.dataField = dataField;\r\n        if (typeof this.stateData !== 'undefined') {\r\n          this.stateData.settings.cagrState.dataField = dataField;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  // %of totals\r\n  summaryDisplayModeItems: any;\r\n  percentOfTotalBasedOn: string = 'Subtotals';\r\n  percentInDirection: string = '';\r\n  onBasedOnChange(isInit: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.basedOn =\r\n        this.percentOfTotalBasedOn;\r\n    }\r\n\r\n    this.summaryDisplayModeItems =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? this.pivotSummaryDisplayModesSubtotals\r\n        : this.pivotSummaryDisplayModesGrandTotals;\r\n    if (isInit === false && typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode = '';\r\n    }\r\n  }\r\n\r\n  percentOfChangeComputeType: string = '';\r\n  onComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.changePercentState.computingType =\r\n        this.percentOfChangeComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.changePercentState.computingType =\r\n    //     ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  cagrComputeType: string = '';\r\n  onCagrComputeTypeChange(isInit: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.computingType = this.cagrComputeType;\r\n    }\r\n    // if (isInit === false && this.stateData) {\r\n    //   this.stateData.settings.cagrState.computingType = ComputingType.FirstYear;\r\n    // }\r\n  }\r\n\r\n  addPercentOfTotalsToPivot(iSCallFromFillPivot: boolean) {\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.summaryDisplayMode =\r\n        this.percentInDirection;\r\n    }\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addPercentOfTotalsToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addPercentOfTotalsToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotArray(iSCallFromFillPivot: boolean) {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of total exists\r\n      const percentOfTotal = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) =>\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfTotal ||\r\n          f.calculatedFieldType === CalculatedFieldType.percentOfGrandTotal\r\n      );\r\n\r\n      if (percentOfTotal && this.pivotGridDataSource) {\r\n        fieldId = percentOfTotal.id;\r\n        percentOfTotal.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        percentOfTotal.caption = this.getCaptionForPercentOfTotal();\r\n        percentOfTotal.dataField = this.dataField;\r\n        percentOfTotal.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridDataSource.field(percentOfTotal.id, {\r\n          summaryDisplayMode: percentOfTotal.summaryDisplayMode,\r\n          caption: percentOfTotal.caption,\r\n          calculatedFieldType: percentOfTotal.calculatedFieldType,\r\n          dataField: this.dataField,\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        // CommonHelper.updatePlaceholders(\r\n        //   this.pivotGridDataSource,\r\n        //   this.stateData\r\n        // );\r\n      } else {\r\n        this.firstAvailableId =\r\n          this.pivotGridOptions?.pivotGridSource.fields.length || 0;\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfTotal();\r\n        field.dataField = this.dataField;\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = undefined;\r\n        field.summaryDisplayMode =\r\n          this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            1,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType =\r\n          this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n            ? CalculatedFieldType.percentOfTotal\r\n            : CalculatedFieldType.percentOfGrandTotal;\r\n\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n\r\n        if (\r\n          !iSCallFromFillPivot &&\r\n          typeof this.pivotGridOptions !== 'undefined'\r\n        ) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfTotalPopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.percentOfTotalState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  addPercentOfTotalsToPivotCube(iSCallFromFillPivot: boolean) {\r\n    this.removeAllHiddenCalculatedFields();\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForPercentOfTotal();\r\n    field.dataField = this.dataField;\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = undefined;\r\n    field.summaryDisplayMode =\r\n      this.stateData?.settings.percentOfTotalState.summaryDisplayMode || '';\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType =\r\n      this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n        ? CalculatedFieldType.percentOfTotal\r\n        : CalculatedFieldType.percentOfGrandTotal;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isPercentOfTotalPopup = false;\r\n    if (typeof this.stateData !== 'undefined') {\r\n      this.stateData.settings.percentOfTotalState.isSet = true;\r\n    }\r\n    //if (!iSCallFromFillPivot) {\r\n    //  this.readPivotDataFromApi();\r\n    //}\r\n  }\r\n\r\n  removeAllHiddenCalculatedFields() {\r\n    if (this.stateData?.state && this.pivotGridDataSource) {\r\n      this.stateData.state.fields = this.stateData.state.fields.filter(\r\n        (a: any) => a.area !== undefined\r\n      );\r\n      this.pivotGridDataSource.state(this.stateData.state);\r\n    }\r\n  }\r\n\r\n  getCaptionForPercentOfTotal(): string {\r\n    let caption = '';\r\n    //check if exist 2 or more datafields\r\n    if (\r\n      typeof this.pivotGridOptions !== 'undefined' &&\r\n      this.pivotGridOptions?.pivotGridSource.fields.filter(\r\n        (f: any) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfTotaldatafield = this.dataField;\r\n      let currentDatafieldCaption = '';\r\n      if (this.pivotGridOptions.settings.isCube) {\r\n        currentDatafieldCaption =\r\n          // this.pivotGridOptions.pivotGridSource.fields.find(\r\n          //   (f) => f.dataField === percentOfTotaldatafield\r\n          // ).caption;\r\n          'Cube Caption';\r\n      } else {\r\n        if (typeof this.pivotGridOptions !== 'undefined') {\r\n          const fieldCaption =\r\n            this.pivotGridOptions.pivotGridSource.fields.find(\r\n              (f: any) => f.dataFieldType === percentOfTotaldatafield\r\n            );\r\n          if (fieldCaption) {\r\n            currentDatafieldCaption = fieldCaption.caption;\r\n          }\r\n        }\r\n      }\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal + ' ' + currentDatafieldCaption\r\n          : CalculatedFieldType.percentOfGrandTotal +\r\n          ' ' +\r\n          currentDatafieldCaption;\r\n    } else {\r\n      caption =\r\n        this.stateData?.settings.percentOfTotalState.basedOn === 'Subtotals'\r\n          ? CalculatedFieldType.percentOfTotal\r\n          : CalculatedFieldType.percentOfGrandTotal;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addPrecentOfChangeToPivot(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case % of change exists\r\n      const percentOfChange =\r\n        this.pivotGridOptions?.pivotGridSource.fields.find(\r\n          (f) => f.calculatedFieldType === CalculatedFieldType.changePercent\r\n        );\r\n      if (percentOfChange && this.pivotGridDataSource) {\r\n        fieldId = percentOfChange.id;\r\n        this.pivotGridDataSource.field(percentOfChange.id, {\r\n          caption: this.getCaptionForPercentOfChange(),\r\n          dataField: this.dataField,\r\n          calculateSummaryValue: (e: any) =>\r\n            this.calculateSummaryValuePercentOfChange(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForPercentOfChange();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField = this.dataField;\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValuePercentOfChange(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.changePercent;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isPercentOfChangePopup = false;\r\n      if (typeof this.stateData !== 'undefined') {\r\n        this.stateData.settings.changePercentState.isSet = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateSummaryValuePercentOfChange(e: any): any {\r\n    if (e.parent('column')) {\r\n      let base;\r\n      if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n      } else if (\r\n        this.stateData?.settings.changePercentState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        let yearIndex = 0;\r\n        for (const index in e.parent('column').children()) {\r\n          if (\r\n            e\r\n              .parent('column')\r\n              .children()\r\n            [index].value(this.yearDataFieldName) ===\r\n            e.value(this.yearDataFieldName)\r\n          ) {\r\n            yearIndex = parseInt(index);\r\n            break;\r\n          }\r\n        }\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const returnValue = e.value() / base.value() - 1;\r\n      return isNaN(returnValue) ||\r\n        (returnValue && returnValue.toString() === 'Infinity')\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getCaptionForPercentOfChange() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const percentOfChangeDataField =\r\n        this.stateData?.settings.changePercentState.dataField;\r\n\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f: any) => f.dataFieldType === percentOfChangeDataField\r\n      );\r\n\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n\r\n      switch (percentOfChangeDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption =\r\n            CalculatedFieldType.changePercent + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.changePercent;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.changePercent;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  addCAGRToPivot(iSCallFromFillPivot: boolean): void {\r\n    if (this.pivotGridOptions?.settings.isCube) {\r\n      this.addCAGRToPivotCube(iSCallFromFillPivot);\r\n    } else {\r\n      this.addCAGRToPivotArray(iSCallFromFillPivot);\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotArray(iSCallFromFillPivot: boolean): void {\r\n    let fieldId = undefined;\r\n    if (this.previewData) {\r\n      this.removeAllHiddenCalculatedFields();\r\n      // in case cagr exists, remove and recreate it (case for edit)\r\n      const cagr = this.pivotGridOptions?.pivotGridSource.fields.find(\r\n        (f) => f.calculatedFieldType === CalculatedFieldType.cagr\r\n      );\r\n      if (cagr && this.pivotGridDataSource) {\r\n        fieldId = cagr.id;\r\n        this.pivotGridDataSource.field(cagr.id, {\r\n          dataField: this.dataField,\r\n          caption: this.getCaptionForCagr(),\r\n          calculateSummaryValue: (e: any) => this.calculateSummaryValueCagr(e),\r\n        });\r\n        this.pivotGridDataSource.load();\r\n        CommonHelper.updatePlaceholders(\r\n          this.pivotGridDataSource,\r\n          this.stateData\r\n        );\r\n      } else {\r\n        const field = new PivotGridField();\r\n        // reserve id for this calculated field\r\n        field.id = this.firstAvailableId;\r\n        field.caption = this.getCaptionForCagr();\r\n        field.width = 120;\r\n        field.dataType = 'number';\r\n        field.summaryType = 'sum';\r\n        field.area = 'data';\r\n        field.dataField = this.dataField;\r\n        field.isMeasure = true;\r\n        field.visible = true;\r\n        field.calculateSummaryValue = (e: any) =>\r\n          this.calculateSummaryValueCagr(e);\r\n        let format = new Format();\r\n        format = {\r\n          type: 'percent',\r\n          precision:\r\n            this.pivotGridOptions?.settings.calculatedFields.formatPrecision ||\r\n            0,\r\n        };\r\n        field.format = format;\r\n        field.isCalculated = true;\r\n        field.calculatedFieldType = CalculatedFieldType.cagr;\r\n        this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n        this.firstAvailableId++;\r\n        if (!iSCallFromFillPivot && this.pivotGridOptions) {\r\n          this.fillPivot(this.pivotGridOptions, this.previewData);\r\n        }\r\n        fieldId = field.id;\r\n      }\r\n      this.isCagrPopup = false;\r\n      if (this.stateData) this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n  }\r\n\r\n  addCAGRToPivotCube(iSCallFromFillPivot: boolean): void {\r\n    const field = new PivotGridField();\r\n    // reserve id for this calculated field\r\n    field.id = this.firstAvailableId;\r\n    field.caption = this.getCaptionForCagr();\r\n    field.width = 120;\r\n    field.dataType = 'number';\r\n    field.summaryType = 'sum';\r\n    field.area = 'data';\r\n    field.dataField = this.dataField;\r\n    field.isMeasure = true;\r\n    field.visible = true;\r\n    field.calculateSummaryValue = (e: any) => this.calculateSummaryValueCagr(e);\r\n    let format = new Format();\r\n    format = {\r\n      type: 'percent',\r\n      precision:\r\n        this.pivotGridOptions?.settings.calculatedFields.formatPrecision || 0,\r\n    };\r\n    field.format = format;\r\n    field.isCalculated = true;\r\n    field.calculatedFieldType = CalculatedFieldType.cagr;\r\n    this.pivotGridOptions?.pivotGridSource.fields.push(field);\r\n    this.firstAvailableId++;\r\n    this.isCagrPopup = false;\r\n    if (this.stateData) {\r\n      this.stateData.settings.cagrState.isSet = true;\r\n    }\r\n    //if (!iSCallFromFillPivot) {\r\n    //  this.readPivotDataFromApi();\r\n    //}\r\n  }\r\n\r\n  getCaptionForCagr() {\r\n    let caption = '';\r\n    if (\r\n      this.pivotGridOptions &&\r\n      this.pivotGridOptions.pivotGridSource.fields.filter(\r\n        (f) =>\r\n          (<any>Object)\r\n            .values(PivotGridDataFieldType)\r\n            .includes(f.dataFieldType) && f.isCalculated === false\r\n      ).length >= 2\r\n    ) {\r\n      const cagrDataField = this.stateData?.settings.cagrState.dataField;\r\n      const fieldCaption = this.pivotGridOptions.pivotGridSource.fields.find(\r\n        (f) => f.dataField === cagrDataField\r\n      );\r\n      const currentDatafieldCaption = fieldCaption?.caption;\r\n      switch (cagrDataField) {\r\n        case PivotGridDataFieldType.Value:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        case PivotGridDataFieldType.Volume:\r\n          caption = CalculatedFieldType.cagr + ', ' + currentDatafieldCaption;\r\n          break;\r\n        default:\r\n          caption = CalculatedFieldType.cagr;\r\n          break;\r\n      }\r\n    } else {\r\n      caption = CalculatedFieldType.cagr;\r\n    }\r\n    return caption;\r\n  }\r\n\r\n  calculateSummaryValueCagr(e: any) {\r\n    const shownYearsInPivot = this.shownYears;\r\n    if (e.parent('column') && shownYearsInPivot) {\r\n      let base;\r\n      let yearIndex = 0;\r\n      let prevYearIndex = 0;\r\n      for (const index in e.parent('column').children()) {\r\n        if (\r\n          e.parent('column').children()[index].value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName)\r\n        ) {\r\n          yearIndex = parseInt(index);\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.FirstYear\r\n      ) {\r\n        base = e.parent('column').children()[0];\r\n        prevYearIndex = 0;\r\n      } else if (\r\n        this.stateData?.settings.cagrState.computingType ===\r\n        ComputingType.PreviousYear\r\n      ) {\r\n        base = e.parent('column').children()[\r\n          yearIndex > 0 ? yearIndex - 1 : yearIndex\r\n        ];\r\n        prevYearIndex = yearIndex > 0 ? yearIndex - 1 : yearIndex;\r\n      }\r\n      if (\r\n        !base ||\r\n        (base &&\r\n          base.value(this.yearDataFieldName) ===\r\n          e.value(this.yearDataFieldName))\r\n      ) {\r\n        return null;\r\n      }\r\n      const changeInValue = base.value() === 0 ? 1 : e.value() / base.value();\r\n      const yearSpan =\r\n        shownYearsInPivot[yearIndex] - shownYearsInPivot[prevYearIndex];\r\n      const returnValue = Math.pow(changeInValue, 1 / yearSpan) - 1;\r\n      return isNaN(returnValue) || returnValue.toString() === 'Infinity'\r\n        ? SpecialValueType.EmDash\r\n        : returnValue;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onChangeAutoSaveStatus(statusValue: boolean) {\r\n    if (this.stateData) {\r\n      this.stateData.settings.rememberLatestState = statusValue;\r\n    }\r\n    if (statusValue == false) {\r\n      this.alertService.info('The system will remember this state!');\r\n    } else {\r\n      this.alertService.info('The system will remember the last used state!');\r\n    }\r\n    this.canCallSaveState = true;\r\n    this.customSaveState(this.stateData?.state, true);\r\n  }\r\n}\r\n","<dx-button\r\n  *ngIf=\"userDetail.IsAdmin\"\r\n  stylingMode=\"outlined\"\r\n  type=\"default\"\r\n  text=\"{{\r\n    isDefaultStateMode\r\n      ? 'Switch OFF Settings of Default State'\r\n      : 'Switch ON Settings of Default State'\r\n  }}\"\r\n  (onClick)=\"isDefaultStateMode = !isDefaultStateMode\"\r\n>\r\n</dx-button>\r\n\r\n<pivot-grid-preview-top-menu\r\n  *ngIf=\"pivotGridOptions && currencyDropdownSelected\"\r\n  [setSelectedCurrency]=\"currencyDropdownSelected\"\r\n  [setSelectedMassUnit]=\"unitOfMassDropdownSelected\"\r\n  [setCurrency]=\"currencyDropdown\"\r\n  [setVolumeUnits]=\"unitsDropdown\"\r\n  [pivotGridOptions]=\"pivotGridOptions\"\r\n  [setStudySetup]=\"studySetup\"\r\n  (currencySelectionChanged)=\"currencySelectionChanged($event)\"\r\n  (currencyConversionSelectionChanged)=\"\r\n    currencyConversionSelectionChanged($event)\r\n  \"\r\n  (massUnitSelectionChanged)=\"massUnitSelectionChanged($event)\"\r\n  (onExportToExcel)=\"exportToExcel()\"\r\n  (onExportToCvs)=\"exportToCvs()\"\r\n  (onExportSnapshot)=\"exportToShanptshot()\"\r\n  (calculatedFieldItemSelected)=\"setCalculatedFieldFromTopMenu($event)\"\r\n  (onChangeAutoSaveStatus)=\"onChangeAutoSaveStatus($event)\"\r\n>\r\n</pivot-grid-preview-top-menu>\r\n\r\n<dx-pivot-grid\r\n  id=\"pivotGrid\"\r\n  #pivotGrid\r\n  [style]=\"isDefaultStateMode ? 'outline: 5px solid #ff9e92' : ''\"\r\n  [allowSortingBySummary]=\"true\"\r\n  (onContextMenuPreparing)=\"onContextMenuPreparing($event)\"\r\n  (onOptionChanged)=\"onOptionChanged($event)\"\r\n  (onInitialized)=\"onInitialized($event)\"\r\n  (onContentReady)=\"onContentReady($event)\"\r\n  (onCellPrepared)=\"cellPrepared($event)\"\r\n  [allowSorting]=\"true\"\r\n  showTotalsPrior=\"none\"\r\n  [dataSource]=\"pivotGridDataSource\"\r\n  [fieldPanel]=\"{\r\n    showColumnFields: true,\r\n    showDataFields: true,\r\n    showFilterFields: true,\r\n    showRowFields: true,\r\n    allowFieldDragging: true,\r\n    visible: true\r\n  }\"\r\n  [fieldChooser]=\"{ enabled: true }\"\r\n  [allowFiltering]=\"pivotGridOptions?.settings?.allowFiltering || false\"\r\n  [allowExpandAll]=\"pivotGridOptions?.settings?.allowExpandAll || false\"\r\n  [showBorders]=\"pivotGridOptions?.settings?.showBorders || false\"\r\n  [showColumnGrandTotals]=\"\r\n    pivotGridOptions?.settings?.showColumnGrandTotals || false\r\n  \"\r\n  [showRowGrandTotals]=\"pivotGridOptions?.settings?.showRowGrandTotals || false\"\r\n  [showRowTotals]=\"pivotGridOptions?.settings?.showRowTotals || false\"\r\n  [showColumnTotals]=\"pivotGridOptions?.settings?.showColumnTotals || false\"\r\n  [showTotalsPrior]=\"pivotGridOptions?.settings?.showTotalsPrior || ''\"\r\n  [dataFieldArea]=\"stateData?.settings?.dataFieldArea || ''\"\r\n>\r\n  <dxo-field-chooser [allowSearch]=\"true\"></dxo-field-chooser>\r\n  <dxo-header-filter\r\n    [allowSearch]=\"true\"\r\n    [showRelevantValues]=\"true\"\r\n  ></dxo-header-filter>\r\n  <dxo-state-storing\r\n    [enabled]=\"saveStateEnabled\"\r\n    type=\"custom\"\r\n    [customSave]=\"customSaveState\"\r\n    [customLoad]=\"customLoadState\"\r\n    [savingTimeout]=\"300\"\r\n  >\r\n  </dxo-state-storing>\r\n</dx-pivot-grid>\r\n\r\n<!-- popup for % of total -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"250\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfTotalPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute '% Of Total':</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\">Based on</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"['Subtotals', 'Grand Totals']\"\r\n                [(value)]=\"percentOfTotalBasedOn\"\r\n                (onValueChanged)=\"onBasedOnChange(false)\"\r\n                (onInitialized)=\"onBasedOnChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"summaryDisplayModeItems\" class=\"dx-field\">\r\n            <div class=\"dx-field-label\">In Direction</div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-select-box\r\n                [items]=\"summaryDisplayModeItems\"\r\n                displayExpr=\"name\"\r\n                valueExpr=\"id\"\r\n                [(value)]=\"percentInDirection\"\r\n              >\r\n              </dx-select-box>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                [disabled]=\"false\"\r\n                (onClick)=\"addPercentOfTotalsToPivot(false)\"\r\n              >\r\n              </dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for % of change -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isPercentOfChangePopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute change, %:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"percentOfChangeComputeType\"\r\n                (onValueChanged)=\"onComputeTypeChange(false)\"\r\n                (onInitialized)=\"onComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addPrecentOfChangeToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n\r\n<!-- popup for CAGR -->\r\n<div *ngIf=\"pivotGridOptions\">\r\n  <dx-popup\r\n    class=\"popup\"\r\n    [width]=\"400\"\r\n    [height]=\"200\"\r\n    [showTitle]=\"false\"\r\n    [dragEnabled]=\"false\"\r\n    [closeOnOutsideClick]=\"true\"\r\n    [(visible)]=\"isCagrPopup\"\r\n  >\r\n    <div *dxTemplate=\"let data of 'content'\">\r\n      <div class=\"form\">\r\n        <div class=\"dx-fieldset\">\r\n          <h6>Compute CAGR:</h6>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-radio-group\r\n                [items]=\"[computingType.FirstYear, computingType.PreviousYear]\"\r\n                [(value)]=\"cagrComputeType\"\r\n                (onValueChanged)=\"onCagrComputeTypeChange(false)\"\r\n                (onInitialized)=\"onCagrComputeTypeChange(true)\"\r\n              >\r\n              </dx-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"dx-field\">\r\n            <div class=\"dx-field-label\"></div>\r\n            <div class=\"dx-field-value\">\r\n              <dx-button\r\n                stylingMode=\"contained\"\r\n                type=\"normal\"\r\n                text=\"Compute\"\r\n                [width]=\"120\"\r\n                (onClick)=\"addCAGRToPivot(false)\"\r\n              ></dx-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </dx-popup>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\nimport { AgGridComponent } from './ag-grid/ag-grid.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HandsontableComponent } from './handsontable/handsontable.component';\r\nimport { HotTableModule } from '@handsontable/angular';\r\nimport { HandsonTableComponent } from './handson-table/handson-table.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport {\r\n  DxDataGridModule,\r\n  DxPivotGridModule,\r\n  DxSelectBoxModule,\r\n  DxButtonModule,\r\n  DxPopupModule,\r\n  DxTabPanelModule,\r\n  DxTemplateModule,\r\n  DxTooltipModule,\r\n  DxTextBoxModule,\r\n  DxTextAreaModule,\r\n  DxSliderModule,\r\n  DxNumberBoxModule,\r\n  DxListModule,\r\n  DxLoadIndicatorModule,\r\n  DxRadioGroupModule,\r\n  DxFormModule,\r\n  DxTreeViewModule,\r\n  DxDropDownBoxModule,\r\n  DxDropDownButtonModule,\r\n  DxScrollViewModule,\r\n} from 'devextreme-angular';\r\nimport { CommentsComponent } from './handson-table/components/comments/comments.component';\r\nimport { DisableStudyEditingComponent } from './disable-study-editing/disable-study-editing.component';\r\nimport { StudyCommentsComponent } from './handson-table/components/study-comments/study-comments.component';\r\nimport { ConfirmNavigationComponent } from './confirm-navigation/confirm-navigation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    AgGridModule,\r\n    HttpClientModule,\r\n    HotTableModule,\r\n    DxDataGridModule,\r\n    DxPivotGridModule,\r\n    DxSelectBoxModule,\r\n    DxButtonModule,\r\n    DxPopupModule,\r\n    DxTabPanelModule,\r\n    DxTemplateModule,\r\n    DxTooltipModule,\r\n    DxTextBoxModule,\r\n    DxTextAreaModule,\r\n    DxSliderModule,\r\n    DxNumberBoxModule,\r\n    DxListModule,\r\n    DxLoadIndicatorModule,\r\n    DxRadioGroupModule,\r\n    DxFormModule,\r\n    DxTreeViewModule,\r\n    NgSelectModule,\r\n    DxDropDownBoxModule,\r\n    DxDropDownButtonModule,\r\n    DxScrollViewModule,\r\n  ],\r\n  declarations: [\r\n    HeaderComponent,\r\n    AgGridComponent,\r\n    HandsontableComponent,\r\n    HandsonTableComponent,\r\n    CommentsComponent,\r\n    DisableStudyEditingComponent,\r\n    StudyCommentsComponent,\r\n    ConfirmNavigationComponent\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    AgGridComponent,\r\n    HandsontableComponent,\r\n    HandsonTableComponent,\r\n    DisableStudyEditingComponent,\r\n    ConfirmNavigationComponent\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","export class Common {\r\n  // function returns index of objects array by atribute and value\r\n  findWithAttr(array: any, attr: any, value: any): any {\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (array[i][attr] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  // sort array of object by property\r\n  // usage http://stackoverflow.com/questions/979256/sorting-an-array-of-javascript-objects\r\n  // example number format this.dataSource.sort(this.common.sortByProp(\"MarketShare\", false, parseFloat));\r\n  // example string format this.dataSource.sort(this.common.sortByProp('area', false, function(a){return a.toUpperCase()}));\r\n  sortByProp(field: string, reverse: boolean, primer: any): any {\r\n    let key = function (x: any) {\r\n      return primer ? primer(x[field]) : x[field];\r\n    };\r\n\r\n    return function (a: any, b: any) {\r\n      let A = key(a),\r\n        B = key(b);\r\n      return (A < B ? -1 : A > B ? 1 : 0) * [-1, 1][+!!reverse];\r\n    };\r\n  }\r\n\r\n  // put object on the end of list if property contain id\r\n  moveOnTheEndByPropValue(arr: any, property: string, idNum: number): any {\r\n    let rememberObj;\r\n    for (let arrItem of arr) {\r\n      if (arrItem[property] === idNum) {\r\n        rememberObj = arrItem;\r\n      }\r\n    }\r\n    if (rememberObj) {\r\n      arr.push(arr.splice(arr.indexOf(rememberObj), 1)[0]);\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  // get object from array by prop value\r\n  searchByValue(propName: string, keyValue: any, arr: any): any {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][propName] === keyValue) {\r\n        return arr[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  // get index of obj in array by prop value\r\n  searchIndexByValue(propName: string, keyValue: any, arr: any): any {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][propName] === keyValue) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  // function returns number in string format 100,000,000.00\r\n  largeNumberFormat(number: number): string {\r\n    number = this.round(number, 2);\r\n    if (this.isInt(number)) {\r\n      return number.toLocaleString() + '.0';\r\n    } else {\r\n      return number.toLocaleString();\r\n    }\r\n  }\r\n\r\n  round(value: number, precision: number) {\r\n    var multiplier = Math.pow(10, precision || 0);\r\n    return Math.round(value * multiplier) / multiplier;\r\n  }\r\n\r\n  isInt(value: any) {\r\n    return (\r\n      !isNaN(value) &&\r\n      (function (x) {\r\n        return (x | 0) === x;\r\n      })(parseFloat(value))\r\n    );\r\n  }\r\n\r\n  static getBrowser() {\r\n    var ua = navigator.userAgent,\r\n      tem,\r\n      M =\r\n        ua.match(\r\n          /(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i\r\n        ) || [];\r\n    if (/trident/i.test(M[1])) {\r\n      tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n      return 'IE ' + (tem[1] || '');\r\n    }\r\n    if (M[1] === 'Chrome') {\r\n      tem = ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\r\n      if (tem != null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\r\n    }\r\n    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\r\n    if ((tem = ua.match(/version\\/(\\d+)/i)) != null) M.splice(1, 1, tem[1]);\r\n    return M.join(' ');\r\n  }\r\n\r\n  static objToString(obj: any): string {\r\n    let str = '';\r\n    for (var p in obj) {\r\n      if (obj.hasOwnProperty(p)) {\r\n        str += p + '::' + obj[p] + '\\n';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  // this function merge two objects\r\n  static realMerge(to: any, from: any) {\r\n    for (let n in from) {\r\n      if (typeof to[n] != 'object') {\r\n        to[n] = from[n];\r\n      } else if (typeof from[n] == 'object') {\r\n        to[n] = this.realMerge(to[n], from[n]);\r\n      }\r\n    }\r\n    return to;\r\n  }\r\n\r\n  static removeAllSpaces(textWithSpaces: string) {\r\n    let textWithOutSpaces = textWithSpaces.replace(' ', '');\r\n    return textWithOutSpaces;\r\n  }\r\n\r\n  static getAlphabetFromNo(columnNumber: number) {\r\n    // To store result (Excel column name)\r\n    let columnName = [];\r\n\r\n    while (columnNumber > 0) {\r\n      // Find remainder\r\n      let rem = columnNumber % 26;\r\n\r\n      // If remainder is 0, then a\r\n      // 'Z' must be there in output\r\n      if (rem == 0) {\r\n        columnName.push('Z');\r\n        columnNumber = Math.floor(columnNumber / 26) - 1;\r\n      } // If remainder is non-zero\r\n      else {\r\n        columnName.push(String.fromCharCode(rem - 1 + 'A'.charCodeAt(0)));\r\n        columnNumber = Math.floor(columnNumber / 26);\r\n      }\r\n    }\r\n\r\n    return columnName.reverse().join('');\r\n  }\r\n\r\n  static replaceAll(str: string, mapObj: any) {\r\n    var re = new RegExp(Object.keys(mapObj).join('|'), 'gi');\r\n\r\n    return str.replace(re, function (matched) {\r\n      return mapObj[matched];\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { UserData } from 'src/model/userData.model';\r\nimport { UserDetail } from 'src/model/userDetail.model';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private localStorageService: LocalStorageService\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const currentUser = this.localStorageService.getData(\r\n      Constants.userDataKey\r\n    ) as UserData;\r\n\r\n    if (typeof currentUser.idToken !== 'undefined') {\r\n      // loggedIn so return true\r\n      const currentUserDetail: UserDetail = this.localStorageService.getData(\r\n        Constants.userDetailKey\r\n      );\r\n      const userRole = currentUserDetail.IsManager ? 'MANAGER' : 'ANALYST';\r\n      if (route.data['role'] && route.data['role'].indexOf(userRole) === -1) {\r\n        // console.log('call here');\r\n        this.router.navigate(['study-summary']);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      // not logged in so redirect to login page\r\n      // console.log('call here 123');\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { PivotGridDataFieldType } from 'src/model/enums/pivotGridDataFieldType.enum';\r\n\r\nexport class CommonHelper {\r\n  public static updatePlaceholders(pivotGridDataSource: any, stateData: any) {\r\n    // set additional fiels operation\r\n    for (let field of pivotGridDataSource._fields) {\r\n      if (!field.captionWithPlaceholder) {\r\n        field.captionWithPlaceholder = field.caption;\r\n      }\r\n      // in case of grouped fields, caption is missing\r\n      if (field.caption) {\r\n        // replace placeholder in fileds caption\r\n        if (field.captionWithPlaceholder.indexOf(\"<XTS>\") > -1) {\r\n          field.caption = field.caption.replace(\"<XTS>\", stateData.settings.currency.Code);\r\n        }\r\n        if (field.captionWithPlaceholder.indexOf(\"<UNIT>\") > -1) {\r\n          field.caption = field.caption.replace(\"<UNIT>\", stateData.settings.unitOfMass.Name);\r\n        }\r\n        if (field.captionWithPlaceholder.indexOf(\"<UNIT-VOLUME>\") > -1) {\r\n          field.caption = field.caption.replace(\"<UNIT-VOLUME>\", stateData.settings.unitOfVolume.Name);\r\n        }\r\n        // in case field is data field do not allow drop other kind of fields to data area or data area field to row, col. or filter area\r\n        if ((<any>Object).values(PivotGridDataFieldType).includes(field.dataFieldType) || field.isMeasure) {\r\n          field.isMeasure = true;\r\n        }\r\n        else {\r\n          field.isMeasure = false;\r\n        }\r\n      }\r\n      else {\r\n        field.isMeasure = false;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private route: Router,private localStorageService: LocalStorageService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    this.localStorageService.setData(this.route.url,\"URL\");\r\n    return next.handle(request).pipe(\r\n      catchError((err) => {\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          //   location.reload();\r\n          this.route.navigate(['login']);\r\n        }\r\n\r\n        // const error = err.error.Message || err.statusText;\r\n        return throwError(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalStorageService } from 'src/services/localStorage.service';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { UserData } from 'src/model/userData.model';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private localStorageService: LocalStorageService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    const currentUserData = this.localStorageService.getData(\r\n      Constants.userDataKey\r\n    ) as UserData;\r\n\r\n    if (currentUserData) {\r\n      if (request.url.indexOf(Constants.serverEndpoint) !== -1) {\r\n        request = request.clone({\r\n          setHeaders: {\r\n            Authorization: `Bearer ${currentUserData.idToken}`,\r\n          },\r\n        });\r\n      }\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","export class DataGridConfiguration {\r\n  basicSettings: BasicSettings = new BasicSettings();\r\n  handontableSettings: HandsOnTableSettings = new HandsOnTableSettings();\r\n  fields: Field[] = [new Field()];\r\n}\r\n\r\nexport class BasicSettings {\r\n  title: string = '';\r\n}\r\n\r\nexport class HandsOnTableSettings {\r\n  dropdownMenu: boolean = false;\r\n  filters: boolean = false;\r\n  columnSorting: boolean = false;\r\n  copyPaste: boolean = false;\r\n  decimalPlaces: number = 2;\r\n}\r\n\r\nexport class Field {\r\n  isVisible: boolean = true;\r\n  isYearValue: boolean = false;\r\n  caption: string = '';\r\n  dataField: string = '';\r\n  width: number = 150;\r\n  formula: string = '';\r\n  isValue: boolean = false;\r\n  dataType: string = '';\r\n  fieldType: string = '';\r\n  readOnly: boolean = false;\r\n  yearType: string[] = [];\r\n  isVisibleToAddRow: boolean = true;\r\n  isVolumeYear: boolean = false;\r\n  isYearWiseVolume: boolean = false;\r\n  isForecastVolume: boolean = false;\r\n  isEditable: boolean = true;\r\n}\r\n","export class DataGridState {\r\n  isPercentOfTotal: boolean = false;\r\n  isChangePercent: boolean = false;\r\n  isCagr: boolean = false;\r\n  filters: any[] = [];\r\n  sorting: any[] = [];\r\n  columnResize: any = [];\r\n}\r\n","import { DataGridConfiguration } from './dataGridConfiguration.model';\r\nimport { InitialSetup } from './initialSetup.model';\r\n\r\nexport class DataSourceResponse {\r\n  HttpStatusCode: number = 200;\r\n  Data: DataSourceData = new DataSourceData();\r\n}\r\n\r\nexport class DataSourceData {\r\n  MarketYearCategoryId: number = 0;\r\n  StudySetup: InitialSetup = new InitialSetup();\r\n  HasAttribute: boolean = false;\r\n  Settings: DataGridConfiguration = new DataGridConfiguration();\r\n  UnitOfValues: UnitOfValues[] = [];\r\n  ColumnList: ColumnList[] = [new ColumnList()];\r\n  YearsList: YearsList[] = [new YearsList()];\r\n  DataList: DataList[] = [];\r\n}\r\n\r\nexport class UnitOfValues {\r\n  Title: string = '';\r\n  Unit: string = '';\r\n  Id: number = 0;\r\n}\r\n\r\nexport class ColumnList {\r\n  Title: string = '';\r\n  Index: number = 0;\r\n  IsVisible: boolean = true;\r\n}\r\n\r\nexport class YearsList {\r\n  Year: string = '';\r\n  Type: string = '';\r\n  Index: number = 0;\r\n  AttributeList: AttributeList[] = [];\r\n}\r\n\r\nexport class AttributeList {\r\n  Title: string = '';\r\n  Index: number = 0;\r\n}\r\n\r\nexport class DataList {\r\n  ColumnsData: any[] = [];\r\n  YearsData: any[] = [];\r\n  DataRowId: string = '';\r\n  ChangeLog: any = null;\r\n  IsNewRow: boolean = false;\r\n}\r\n","export class DropdownCurrency {\r\n  Id: number;\r\n  IsActive: boolean;\r\n  Name: string;\r\n  CurrencyCode: string;\r\n  Rate: number;\r\n}\r\n","export class DropdownUnits {\r\n  Id: number;\r\n  IsActive: boolean;\r\n  Name: string;\r\n  Rate: string;\r\n}\r\n","export enum CalculatedFieldType {\r\n    none = \"none\",\r\n    percentOfTotal = \"% Of Total\",\r\n    percentOfGrandTotal = \"% Of Grand Total\",\r\n    changePercent = \"Change, %\",\r\n    cagr = \"CAGR\",\r\n    range = \"range\"\r\n}","export enum ComputingType {\r\n    FirstYear = \"First (Shown) Year\",\r\n    PreviousYear = \"Previous (Shown) Year\",\r\n}","export enum CurrencyConversionTypeEnum {\r\n    Current = 2,\r\n    Constant = 1\r\n}","export enum DataFieldArea {\r\n    row = \"row\",\r\n    column = \"column\",\r\n}","export enum DataRelationsEnum {\r\n  EngineOilType = 'EngineOilType',\r\n  SubProduct = 'SubProduct',\r\n  MarketSegment = 'MarketSegment',\r\n  ProductCategory = 'ProductCategory',\r\n  ViscosityGrade = 'ViscosityGrade',\r\n  VehicleType = 'VehicleType',\r\n  Segment = 'Segment',\r\n  SyntheticType = 'SyntheticType',\r\n  Supplier = 'Supplier',\r\n  ServiceCategory = 'ServiceCategory',\r\n  SourceType = 'SourceType',\r\n  EngineType = 'EngineType',\r\n  DosageForm = 'DosageForm',\r\n  ExcipientCategory = 'ExcipientCategory',\r\n  ExcipientGroup = 'ExcipientGroup',\r\n  Excipient = 'Excipient',\r\n  Company = 'Company',\r\n  Brand = 'Brand',\r\n  Channel = 'Channel',\r\n  ProductType = 'ProductType',\r\n  Service = 'Service',\r\n  Outlet = 'Outlet',\r\n  ProductClassification = 'ProductClassification',\r\n  Channels = 'Channels',\r\n  CustomerTypes = 'CustomerTypes',\r\n  ProductTypes = 'ProductTypes',\r\n  Sectors = 'Sectors',\r\n  Suppliers = 'Suppliers',\r\n  Segments = 'Segments',\r\n  DosageForms = 'DosageForms',\r\n  Functionality = 'Functionality',\r\n  MasterBrand = 'MasterBrand',\r\n  CustomerType = 'CustomerType',\r\n  Sector = 'Sector',\r\n  Polymer = 'Polymer',\r\n  LubricantDemand = 'LubricantDemand',\r\n  SupplierMarketShare = 'SupplierMarketShare',\r\n  SyntheticPenetration = 'Synthetic Penetration',\r\n  VehicleParcStatistics = 'Vehicle Parc Statistics',\r\n  ServiceCategoryConsumption = 'Service Category Consumption',\r\n  OSDFPharmaSales = 'OSDF-Pharma-Sales',\r\n  ParenteralPharmaSales = 'Parenteral-Pharma-Sales',\r\n  TopicalPharmaSales = 'Topical-Pharma-Sales',\r\n  OSDFNutraceuticalsSales = 'OSDF-Nutraceuticals-Sales',\r\n  ProductSales = \"ProductSales\",\r\n  Product = 'Product',\r\n  ProductForm = 'ProductForm',\r\n  ActiveIngredient = \"ActiveIngredient\",\r\n  ProductComposition = \"ProductComposition\",\r\n\r\n}\r\n","export enum PivotGridDataFieldType {\r\n    Value = \"Value\",\r\n    Volume = \"Volume\",\r\n    Unit = \"Unit\",\r\n    AvgPrice = \"AvgPrice\",\r\n    AvgPrice100PercentBasis = \"AvgPrice100PercentBasis\",\r\n    Concentration = \"Concentration\",\r\n    Mass = \"Mass\",\r\n    MeasuresProjectedTransactionCount = \"MeasuresProjectedTransactionCount\",\r\n    MeasuresProjectedRevenue = \"MeasuresProjectedRevenue\",\r\n    AvgPrice100PercentActive = \"AvgPrice100PercentActive\"\r\n}","export enum SpecialValueType {\r\n    Null = \"\",\r\n    NegativeZero = \"-0\",\r\n    Infinity = \"∞\",\r\n    NegativeInfinity = \"-∞\",\r\n    NotANumber = \"NaN\",\r\n    Error = \"Error\",\r\n    NA = \"N/A\",\r\n    Disparate = \"...[+]\",\r\n    Insignificant = \"Insignificant\",\r\n    Marginal = \"Marginal\",\r\n    Minor = \"Minor\",\r\n    Bullet = \"•\",\r\n    Ellipsis = \"…\",\r\n    EmDash = \"—\",\r\n    DashDashDash = \"---\",\r\n    ReservedValue1 = \"Reserved Value 1\",\r\n    ReservedValue2 = \"Reserved Value 2\"\r\n}","export enum StudyDataUrlEnum {\r\n  SHC_PT_SALES = '/SHCProductTypeSales/ProductTypeSales',\r\n  SHC_CB_SALES = '/SHCCompanyBrandSales/CompanyBrandSales',\r\n  SHC_FC_SALES = '/SHCForecastSales/ForecastSales',\r\n  SHC_IR_SALES = '/SHCIndustryRevenues/IndustryRevenues',\r\n  SHC_OS_SALES = '/SHCOutletSales/OutletSales',\r\n  SHC_PC_SALES = '/SHCProductClassificationSales/ProductClassificationSales',\r\n  SHC_SC_SALES = '/SHCSalonCount/SalonCount',\r\n\r\n  IVM_SALES = '/IVMProductSales/IVMProductSales',\r\n  IVM_MarketConsumption = '/IVMProductComposition/IVMProductComposition',\r\n\r\n  EHC_SALES = '/SalesEHC/Sales',\r\n  EHC_MC = '/MarketConsumptionEHC/MarketConsumption',\r\n\r\n  Lubesnet_LD = '/LubricantDemand/LubricantDemand',\r\n  Lubesnet_SMS = '/SupplierMarketShare/SupplierMarketShare',\r\n  Lubesnet_SP = '/SyntheticPenetration/SyntheticPenetration',\r\n  Lubesnet_VPS = '/VehicleParc/VehicleParc',\r\n  Lubesnet_SCC = '/ServiceCategoryConsumption/ServiceCategoryConsumption',\r\n\r\n  SE_SALES = '/SpecialtyExcipientSales/SpecialtyExcipients',\r\n  SE_AVG_PRICE = '/SpecialtyExcipientAvgPrice/SpecialtyExcipientAvgPrice',\r\n\r\n  PNC_PT_SALES = '/PNCProductType/ProductTypeSales',\r\n}\r\n","export class InitialSetup {\r\n  public AnalystId?: number;\r\n  public CreatedBy?: number;\r\n  public CreatedOn?: string;\r\n  public Description?: string;\r\n  public Id?: number;\r\n  public IsActive?: boolean;\r\n  public MarketId?: number;\r\n  public ModifiedBy?: string;\r\n  public ModifiedOn?: string;\r\n  public Name?: string;\r\n  public ProjectLeadId?: number;\r\n  public StudyDataSetId?: number;\r\n  public StudyProjectId?: number;\r\n  public StudyYear?: number;\r\n  public StudyDataSetName?: string;\r\n  public ProjectName?: string;\r\n  public AnalystName?: string;\r\n  public ProjectLead?: string;\r\n  public MarketName?: string;\r\n  public PrefillFromId?: string;\r\n  public IsSignOff?: boolean;\r\n  public IsMidYear?: boolean;\r\n  public StudyAreaId?: number;\r\n  public StudyAreaName?: string;\r\n\r\n  public AnalystIdList?: number[];\r\n  public AnalystNameList?: string[];\r\n  public CSVAnalystIds?: string;\r\n  public CSVAnalystNames?: string;\r\n  public LockedForEditBy?: number;\r\n  public LockedForEditByName?: string | null;\r\n\r\n  public CalculatorId?: number;\r\n  public ViewId: number;\r\n\r\n  deserialize(input: any): this {\r\n    Object.assign(this, input);\r\n    return this;\r\n  }\r\n}\r\n","import { CurrencyConversionTypeEnum } from './enums/currencyConversionType.enum';\r\nimport { PivotGridDataFieldType } from './enums/pivotGridDataFieldType.enum';\r\nimport { CalculatedFieldType } from './enums/calculatedFieldType.enum';\r\nimport * as Moment from 'moment';\r\nimport { HiddenFilterType } from './enums/hiddenFilterType.enum';\r\nimport { SEDataEntry } from './dataEntrySE.model';\r\n\r\nexport class PivotGridOptions {\r\n  viewId: number = 0;\r\n  databaseId: number = 0;\r\n  industryId: number = 0;\r\n  settings: Settings = new Settings();\r\n  pivotGridSource: PivotGridSource = new PivotGridSource();\r\n  pivotGridDefaultValues: DefaultPivotValues = new DefaultPivotValues();\r\n  canSaveUserState: boolean = true;\r\n  canSaveDefaultStateAndOptions: boolean = false;\r\n}\r\n\r\nexport class Settings {\r\n  pivotGridTextKeys: PivotGridTextKeys = new PivotGridTextKeys();\r\n  fieldPanelSettings: FieldPanelSettings = new FieldPanelSettings();\r\n  export: Export = new Export();\r\n  charts: Charts = new Charts();\r\n  calculatedFields: CalculatedFields = new CalculatedFields();\r\n  allowSorting: boolean = true;\r\n  allowSortingBySummary: boolean = true;\r\n  allowFiltering: boolean = true;\r\n  allowExpandAll: boolean = true;\r\n  showBorders: boolean = true;\r\n  showColumnGrandTotals: boolean = true;\r\n  showRowGrandTotals: boolean = true;\r\n  showRowTotals: boolean = true;\r\n  showColumnTotals: boolean = true;\r\n  fieldChooser: boolean = true;\r\n  showTotalsPrior: string = 'both';\r\n  scroolingMode: string = 'virtual';\r\n  useNative: boolean = false;\r\n  scrollByContent: boolean = false;\r\n  menuSettings: MenuSettings = new MenuSettings();\r\n  specialSorting: SpecialSorting[] = [];\r\n  rowHeaderLayout: string = 'standard';\r\n  isLatestAccessibleYearUsed: boolean = true;\r\n  showRangeInYearSelectionButton: boolean = false;\r\n  reducedDataSource: ReducedDataSource = new ReducedDataSource();\r\n  useDefaultSorting: boolean = false;\r\n  isCube: boolean = false;\r\n  cubeSettings: CubeSettings = new CubeSettings();\r\n  groupedFields: GroupedField[] = [];\r\n}\r\n\r\nexport class PivotGridTextKeys {\r\n  pivotHeader: string = '';\r\n  pivotDescription: string = '';\r\n  pivotCurrencyHeader: string = 'KEY_PivotGrid_DefaultText_Currency';\r\n  pivotConversionHeader: string =\r\n    'KEY_PivotGrid_DefaultText_CurrencyConversionType';\r\n  pivotUnitsOfVolumeHeader: string = 'KEY_PivotGrid_DefaultText_UnitsOfVolume';\r\n  pivotUnitsOfMassHeader: string = 'KEY_PivotGrid_DefaultText_UnitsOfMass';\r\n  pivotParametersHeader: string = 'KEY_PivotGrid_DefaultText_Parameters';\r\n  pivotYearsHeader: string = 'KEY_PivotGrid_DefaultText_BasePeriod';\r\n  pivotNoDataMessage: string = 'KEY_PivotGrid_DefaultText_MissingData';\r\n}\r\n\r\nexport class SpecialSorting {\r\n  fieldName: string = '';\r\n  beginningWith: string = '';\r\n}\r\n\r\nexport class ReducedDataSource {\r\n  isReducedDataSource = false;\r\n  selectedYearAfter = 5;\r\n}\r\n\r\nexport class FieldPanelSettings {\r\n  visible: boolean = true;\r\n  showColumnFields: boolean = true;\r\n  showDataFields: boolean = true;\r\n  showFilterFields: boolean = true;\r\n  showRowFields: boolean = true;\r\n  allowFieldDragging: boolean = true;\r\n}\r\n\r\nexport class Export {\r\n  enabled: boolean = true;\r\n  ignoreExcelErrors: boolean = true;\r\n  fileName: string = 'KlineExcelExport';\r\n}\r\n\r\nexport class CalculatedFields {\r\n  formatPrecision: number = 1;\r\n  isPercentOfTotal: boolean = true;\r\n  isPercentOfChange: boolean = true;\r\n  isCagr: boolean = true;\r\n}\r\n\r\nexport class Charts {\r\n  isVisible: boolean = false;\r\n  isRotated: boolean = false;\r\n  inverted: boolean = false;\r\n  alternateDataFields: boolean = true;\r\n  putDataFieldsInto: string = 'series';\r\n}\r\n\r\nexport class PivotGridSource {\r\n  fields: Field[] = [];\r\n  store: any = null;\r\n}\r\n\r\nexport class Format {\r\n  type: string = '';\r\n  precision: number = 0;\r\n}\r\n\r\nexport class Field {\r\n  id: number = 0;\r\n  visible = true;\r\n  caption: string = '';\r\n  captionWithPlaceholder = '';\r\n  width: number = 0;\r\n  dataField: string = '';\r\n  dataFieldType: PivotGridDataFieldType | undefined;\r\n  area: string = '';\r\n  dataType: string = '';\r\n  summaryType: string = '';\r\n  summaryDisplayMode: string = '';\r\n  format: Format | undefined;\r\n  sortOrder: any;\r\n  sortingMethod: any;\r\n  calculateCustomSummary: any = undefined;\r\n  calculateSummaryValue: any = undefined;\r\n  customizeText: any;\r\n  isMeasure: boolean = false;\r\n  isCalculated = false;\r\n  calculatedFieldType: CalculatedFieldType = CalculatedFieldType.none;\r\n  groupName: string | undefined;\r\n  groupIndex: number | undefined;\r\n  filterValues: string[] | undefined;\r\n  hiddenFilterType: HiddenFilterType | undefined = undefined;\r\n}\r\n\r\nexport class GroupedField {\r\n  groupName: string = '';\r\n  area: string = '';\r\n}\r\n\r\nexport class DefaultPivotValues {\r\n  currency: any = {\r\n    Id: 27,\r\n    IsActive: false,\r\n    Name: 'USD',\r\n    CurrencyCode: 'USD',\r\n    CurrencyName: 'USD',\r\n    Code: 'USD',\r\n  };\r\n  currencyConversionType: CurrencyConversionTypeEnum =\r\n    CurrencyConversionTypeEnum.Constant;\r\n  // latest accessible year and unit of measure must load from the database\r\n}\r\n\r\nexport class MenuSettings {\r\n  isChart: boolean = true;\r\n  isCurrencySelection: boolean = true;\r\n  isCurrencyConversion: boolean = true;\r\n  isUnitsOfVolume: boolean = false;\r\n  isUnitsOfMass: boolean = true;\r\n  isYear: boolean = true;\r\n  isCalculatedFieldsSelection: boolean = true;\r\n  isParametersSelection: boolean = false;\r\n}\r\n\r\nexport class CubeSettings {\r\n  catalog: string = 'KlinePro_US_Test';\r\n  cube: string = 'RetailProjected';\r\n}\r\n","export class StudyAreaSummary {\r\n  public DataSetId?: number;\r\n  public DataSetName?: string;\r\n  public MarketId?: number;\r\n  public MarketName?: string;\r\n  public StudyName?: string;\r\n  public StudyAreaId?: number;\r\n  public StudyAreaName?: string;\r\n  public Total?: number;\r\n  public LastComment?: string;\r\n  public LastModified?: any;\r\n  public ModifiedBy?: string;\r\n  public Error?: string;\r\n  public MarketYearCategoryId?: number;\r\n  public StudyProjectMarketYearId?: number;\r\n  public DataItemCategoryId?: number;\r\n  public IsChanged: boolean = false;\r\n  public IsSignOff: boolean = false;\r\n  public IsLatestStudy: boolean = false;\r\n  public IsProjectLead: boolean = false;\r\n  public ProjectLeadId: number = 0;\r\n  public LockedForEditBy: number = 0;\r\n\r\n  deserialize(input: any): this {\r\n    Object.assign(this, input);\r\n    return this;\r\n  }\r\n}\r\n","export class UserDetail {\r\n  public EmailAddress?: string;\r\n  public Id?: number;\r\n  public IsActive?: boolean;\r\n  public Name?: string;\r\n  public UserName?: string;\r\n  public UserTypeId?: number;\r\n  public IsManager?: boolean;\r\n  public IsAdmin?: boolean;\r\n\r\n  deserialize(input: any): this {\r\n    Object.assign(this, input);\r\n    return this;\r\n  }\r\n}\r\n","import { SEDataEntry } from './dataEntrySE.model';\r\nimport { ComputingType } from './enums/computingType.enum';\r\nimport { CurrencyConversionTypeEnum } from './enums/currencyConversionType.enum';\r\n// import { UnitDropdown } from \"./unitDropdown.model\";\r\n// import { ComputingType } from \"../enums/computingType.enum\";\r\nimport { PivotGridDataFieldType } from './enums/pivotGridDataFieldType.enum';\r\n// import { BasePeriodDropdown } from './basePeriodDropdown.model';\r\n\r\nexport class UserStateAndSetttings {\r\n  settings: UserSettings = new UserSettings();\r\n  state: any;\r\n}\r\n\r\nexport class UserChartSetting {\r\n  dataFieldsDisplayMode: string = 'singleAxis';\r\n  chartType: string = 'Column';\r\n}\r\n\r\nexport class UserSettings {\r\n  currency: CurrencyDropdown | undefined;\r\n  currencyConversionType: CurrencyConversionTypeEnum | undefined = undefined;\r\n  unitOfMass: UnitDropdown | undefined;\r\n  unitOfMeasure: UnitDropdown | undefined;\r\n  unitOfVolume: UnitDropdown | undefined;\r\n  selectedYear: any = undefined;\r\n  percentOfTotalState: PercentOfTotalState = new PercentOfTotalState();\r\n  changePercentState: ChangePercentState = new ChangePercentState();\r\n  cagrState: CagrState = new CagrState();\r\n  dataFieldArea: string = 'column';\r\n  userChartSetting: UserChartSetting = new UserChartSetting();\r\n  latestAcessibleYear: any;\r\n  isReducedDataSource = false;\r\n  rememberLatestState: any = undefined;\r\n}\r\n\r\nexport class CurrencyDropdown {\r\n  Id: number = 0;\r\n  Code: string = '';\r\n  Name: string = '';\r\n}\r\n\r\nexport class UnitDropdown {\r\n  Id: number;\r\n  Name: string;\r\n}\r\n\r\nexport class PercentOfTotalState {\r\n  isSet: boolean = false;\r\n  dataField: PivotGridDataFieldType | undefined;\r\n  basedOn: string = 'Subtotals';\r\n  summaryDisplayMode: string = 'percentOfColumnTotal';\r\n}\r\n\r\nexport class ChangePercentState {\r\n  isSet: boolean = false;\r\n  dataField: PivotGridDataFieldType | undefined;\r\n  computingType: string = ComputingType.FirstYear;\r\n}\r\n\r\nexport class CagrState {\r\n  isSet: boolean = false;\r\n  dataField: PivotGridDataFieldType | undefined;\r\n  computingType: string = ComputingType.FirstYear;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Constants } from 'src/app/Constant';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CalculatorService {\r\n  apiEndpoint: string = '';\r\n  constructor(private http: HttpClient) {\r\n    this.apiEndpoint = Constants.apiEndpoint;\r\n  }\r\n\r\n  getAllInputsByCalculatorId(calculatorId: number): Observable<any[]> {\r\n    return this.http.get<any>(\r\n      this.apiEndpoint +\r\n        '/Calculator/GetAllInputsByCalculatorId/' +\r\n        calculatorId +\r\n        '/'\r\n    );\r\n  }\r\n\r\n  getCalculatorDataById(calculatorId: number): Observable<any[]> {\r\n    return this.http.get<any>(\r\n      this.apiEndpoint +\r\n        '/Calculator/getCalculatorDataById/' +\r\n        calculatorId +\r\n        '/'\r\n    );\r\n  }\r\n\r\n  getComputedDefaultValues(inputs: any, pageNumber: number): Observable<any[]> {\r\n    let inp = {\r\n      calculatorInputs: inputs,\r\n      pageNumber: pageNumber,\r\n      type: 'precalculated',\r\n    };\r\n    return this.http.post<any>(this.apiEndpoint + '/Calculator/', inp);\r\n  }\r\n\r\n  getComponentDataByInputs(\r\n    inputs: any,\r\n    totalVolume: number,\r\n    totalSales: number\r\n  ): Observable<any[]> {\r\n    let inp = {\r\n      calculatorInputs: inputs,\r\n      pageNumber: 0,\r\n      type: 'final',\r\n      totalVolume: totalVolume,\r\n      totalSalesPrice: totalSales,\r\n    };\r\n    return this.http.post<any>(this.apiEndpoint + '/Calculator/', inp);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Constants } from 'src/app/Constant';\r\nimport { CalculatedFieldType } from 'src/model/enums/calculatedFieldType.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonService {\r\n  apiEndpoint: string = '';\r\n  constructor(private http: HttpClient) {\r\n    this.apiEndpoint = Constants.apiEndpoint;\r\n  }\r\n\r\n  getCalculatorFields() {\r\n    return [\r\n      {\r\n        name: CalculatedFieldType.percentOfTotal,\r\n        value: 'percentOfTotal',\r\n        isCheck: false,\r\n        icon: '',\r\n        formula:\r\n          '=CONCATENATE(IF(SUM(colStaticColName1: colStaticColNameTOTAL_ROWS), ROUND((colStaticColNameROW_NO / SUM(colStaticColName1: colStaticColNameTOTAL_ROWS)) * 100, 1), 0))',\r\n      },\r\n      {\r\n        name: CalculatedFieldType.changePercent,\r\n        value: 'changePercent',\r\n        isCheck: false,\r\n        icon: '',\r\n        formula:\r\n          '=CONCATENATE(IF(AND(colStaticColNameROW_NO > 0, COL_PREVIOUS_VALUEROW_NO > 0), ROUND(((colStaticColNameROW_NO - COL_PREVIOUS_VALUEROW_NO) / COL_PREVIOUS_VALUEROW_NO) * 100, 1), 0))',\r\n      },\r\n      {\r\n        name: CalculatedFieldType.cagr,\r\n        value: 'cagr',\r\n        isCheck: false,\r\n        icon: '',\r\n        formula:\r\n          '=CONCATENATE(IF(AND(colStaticColNameROW_NO > 0, COL_PREVIOUS_VALUEROW_NO > 0), ROUND((POWER(colStaticColNameROW_NO / COL_PREVIOUS_VALUEROW_NO, 1 / NO_YEAR) - 1) * 100, 1), 0))',\r\n      },\r\n    ];\r\n  }\r\n\r\n  getResetToDefaultOptions() {\r\n    return [\r\n      {\r\n        name: \"Reset All\",\r\n        value: 'ResetAll',\r\n      },\r\n      {\r\n        name: \"Reset Data\",\r\n        value: 'ResetData',\r\n      },\r\n      {\r\n        name: \"Reset State\",\r\n        value: 'ResetState',\r\n      },\r\n      {\r\n        name: \"Reset Calculated Fields\",\r\n        value: 'ResetCalculatedFields',\r\n      },\r\n    ];\r\n  }\r\n\r\n  getColumnReferences() {\r\n    return [\r\n      'A',\r\n      'B',\r\n      'C',\r\n      'D',\r\n      'E',\r\n      'F',\r\n      'G',\r\n      'H',\r\n      'I',\r\n      'J',\r\n      'K',\r\n      'L',\r\n      'M',\r\n      'N',\r\n      'O',\r\n      'P',\r\n      'Q',\r\n      'R',\r\n      'S',\r\n      'T',\r\n      'U',\r\n      'V',\r\n      'W',\r\n      'X',\r\n      'Y',\r\n      'Z',\r\n      'AA',\r\n      'AB',\r\n      'AC',\r\n      'AD',\r\n      'AE',\r\n      'AF',\r\n      'AG',\r\n      'AH',\r\n      'AI',\r\n      'AJ',\r\n      'AK',\r\n      'AL',\r\n      'AM',\r\n      'AN',\r\n      'AO',\r\n      'AP',\r\n      'AQ',\r\n      'AR',\r\n      'AS',\r\n      'AT',\r\n      'AU',\r\n      'AV',\r\n      'AW',\r\n      'AX',\r\n      'AY',\r\n      'AZ',\r\n      'BA',\r\n      'BB',\r\n      'BC',\r\n      'BD',\r\n      'BE',\r\n      'BF',\r\n      'BG',\r\n      'BH',\r\n      'BI',\r\n      'BJ',\r\n      'BK',\r\n      'BL',\r\n      'BM',\r\n      'BN',\r\n      'BO',\r\n      'BP',\r\n      'BQ',\r\n      'BR',\r\n      'BS',\r\n      'BT',\r\n      'BU',\r\n      'BV',\r\n      'BW',\r\n      'BX',\r\n      'BY',\r\n      'BZ',\r\n    ];\r\n  }\r\n\r\n  calculateCAGRPercentage(startValue: number, endValue: number, year: number) {\r\n    let cargPer = '';\r\n    if (startValue && endValue && year) {\r\n      const cagr = Math.pow(endValue / startValue, 1 / year) - 1;\r\n      cargPer = (cagr * 100).toFixed(1);\r\n    }\r\n    return +cargPer;\r\n  }\r\n\r\n  calculateTotalPercentage(total: number, value: number) {\r\n    return value > 0 && total > 0 ? +((value / total) * 100).toFixed(1) : 0;\r\n  }\r\n\r\n  calculatePercentageChange(startValue: number, endValue: number) {\r\n    let perChange = 0;\r\n    if (startValue && endValue) {\r\n      perChange = +(((endValue - startValue) / startValue) * 100).toFixed(1);\r\n    }\r\n    return +perChange;\r\n  }\r\n  checkDuplicateRow(list: any, columns: any, newRow: any) {\r\n    let duplicateCount: number = 0;\r\n    let duplicateRow: boolean = false;\r\n    list.forEach((node: any) => {\r\n      duplicateCount = 0;\r\n      let columnData = node['ColumnsData'];\r\n      let newRowColumnData = newRow['ColumnsData'];\r\n      columns.forEach((item: any) => {\r\n        if (columnData[item] === newRowColumnData[item]) {\r\n          duplicateCount++;\r\n        }\r\n      });\r\n      if (duplicateCount == columns.length) {\r\n        duplicateRow = true;\r\n        return;\r\n      }\r\n    });\r\n    if (duplicateRow) {\r\n      return columns;\r\n    }\r\n    else {\r\n      return;\r\n    }\r\n  }\r\n  getDataViewOptions() {\r\n    return [\r\n      {\r\n        name: \"Display Values\",\r\n        value: 'DisplayValues',\r\n      },\r\n      {\r\n        name: \"Display Formula\",\r\n        value: 'DisplayFormula',\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class LocalStorageService {\r\n  constructor() {}\r\n\r\n  setData(data: any, key: string): void {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(data));\r\n    } catch {}\r\n  }\r\n  getData(key: string): any {\r\n    try {\r\n      return JSON.parse(localStorage.getItem(key) || '{}');\r\n    } catch {}\r\n  }\r\n  deleteData(key: string): any {\r\n    try {\r\n      return localStorage.removeItem(key);\r\n    } catch {}\r\n  }\r\n  clearLocalStorage(): any {\r\n    try {\r\n      return localStorage.clear();\r\n    } catch {}\r\n  }\r\n  getAllLocalStorageData(): any {\r\n    try {\r\n      return localStorage;\r\n    } catch {}\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanDeactivate} from '@angular/router';\r\n\r\n\r\nimport {Observable, of} from 'rxjs';\r\nimport {first} from 'rxjs/operators';\r\nimport { ComponentCanDeactivate } from 'src/model/study-deactivate';\r\n\r\n\r\n\r\nimport { PendingChangesService } from './pending-changes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PendingChangesGuard implements CanDeactivate<ComponentCanDeactivate> {\r\n  constructor(private service: PendingChangesService) {\r\n  }\r\n\r\n  canDeactivate(component: ComponentCanDeactivate): Observable<boolean> {\r\n    if (!!component.canDeactivate()) {\r\n      this.service.closeConfirmation();\r\n      return of(true);\r\n    }\r\n\r\n    this.service.openConfirmation();\r\n\r\n    return this.service.confirmed$.pipe(\r\n      first(v => v !== null)\r\n    ) as Observable<boolean>;\r\n  }\r\n\r\n}","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class PendingChangesService {\r\n  confirmed$: BehaviorSubject<boolean | null> = new BehaviorSubject<boolean | null>(null);\r\n  askForConfirmation$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  pendingChanges:boolean = false;\r\n  openConfirmation(): void {\r\n    // cancel possible previous confirmation states\r\n    this.confirmed$.next(null);\r\n    // trigger opening dialog\r\n    this.askForConfirmation$.next(true);\r\n  }\r\n\r\n  closeConfirmation(): void {\r\n    // cancel possible previous confirmation states\r\n    this.confirmed$.next(null);\r\n    // close dialog\r\n    this.askForConfirmation$.next(false);\r\n  }\r\n\r\n  confirm(): void {\r\n    // confirm navigation\r\n    this.confirmed$.next(true);\r\n    // close dialog\r\n    this.askForConfirmation$.next(false);\r\n    this.pendingChanges = false;\r\n  }\r\n\r\n  setPendingChanges(pendingChange:boolean){\r\n    this.pendingChanges = pendingChange;\r\n  }\r\n  getTableDirtyFlag(){\r\n    return this.pendingChanges;\r\n  }\r\n\r\n  cancel(): void {\r\n    // cancel navigation\r\n    this.confirmed$.next(false);\r\n    // close dialog\r\n    this.askForConfirmation$.next(false);\r\n  }\r\n  ngOnDestroy(){\r\n    this.pendingChanges = false;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SettingsService {\r\n  apiEndpoint: string = '';\r\n  constructor(private http: HttpClient) {\r\n    this.apiEndpoint = Constants.apiEndpoint;\r\n  }\r\n\r\n  getDataGridSettings(dataItemCategoryId: number): Observable<ApiResponse> {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/Configuration/GetDataGridSettings?dataItemCategoryId=${dataItemCategoryId}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  }\r\n\r\n  getStudyDatasetAndCategories(): Observable<ApiResponse> {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/Configuration/GetStudyDatasetAndCategories`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  }\r\n  \r\n  saveDataGridSettings(dataItemCategoryId: number, dataJson: string): Observable<ApiResponse> {\r\n    const body = {\r\n      dataJson,\r\n      dataItemCategoryId\r\n    }\r\n    return this.http\r\n      .put<ApiResponse>(`${this.apiEndpoint}/Configuration/Configuration`, body, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SharedService {\r\n  apiEndpoint: string = '';\r\n  constructor(private http: HttpClient) {\r\n    this.apiEndpoint = Constants.apiEndpoint;\r\n  }\r\n\r\n  getStudyArea() {\r\n    return this.http.get<ApiResponse>(`${this.apiEndpoint}/StudyDataSet`).pipe(\r\n      map((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getStudyAreaCategory(dataSetId: number) {\r\n    const params = new HttpParams().append('DataSetId', dataSetId);\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/StudyArea/StudyArea`, {\r\n        params,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getProject(dataSetId: number, year: number) {\r\n    const params = new HttpParams()\r\n      .append('DataSetId', dataSetId)\r\n      .append('studyYear', year);\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/Project`, {\r\n        params,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getProjectLead() {\r\n    return this.http.get<ApiResponse>(`${this.apiEndpoint}/ProjectLead`).pipe(\r\n      map((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMarket(dataSetId: number, year: number) {\r\n    const params = new HttpParams()\r\n      .append('DataSetId', dataSetId)\r\n      .append('BaseTimeYear', year);\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/Market`, { params })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAnalyst() {\r\n    return this.http.get<ApiResponse>(`${this.apiEndpoint}/Analysts`).pipe(\r\n      map((data) => {\r\n        return data;\r\n      })\r\n    );\r\n  }\r\n\r\n  getInitialSetupByMarketId(marketId: number, studyArea: number) {\r\n    const params = new HttpParams()\r\n      .append('marketId', marketId)\r\n      .append('DataItemCategoryId', studyArea);\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/InitialSetup/InitialSetupByMarketId`,\r\n        {\r\n          params,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getInitialSetupById(Id: any, studyAreaId: number) {\r\n    const params = new HttpParams().append('DataItemCategoryId', studyAreaId);\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/InitialSetup/InitialSetupById/${Id}`,\r\n        {\r\n          params,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getStudyAreaSummaryByStudyMarketYearId(marketYearId: any) {\r\n    const params = new HttpParams().append('studyMarketYearId', marketYearId);\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/StudyArea/GetSummary`, {\r\n        params,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getStudyAreaSummary() {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/StudyArea/Summary`)\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  setLockUnlockStudy(marketYearCategoryDataId: number, isLocked: boolean) {\r\n    const formData = {\r\n      marketYearCategoryDataId: marketYearCategoryDataId,\r\n      acquireLock: isLocked,\r\n    };\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/MarketYearCategoryData/LockForEdit`,\r\n        formData\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForUnlockStudy(marketYearCategoryDataId: number, formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/MarketYearCategoryData/SendEmailToRevokeEditLock?MarketYearCategoryDataId=${marketYearCategoryDataId}`,\r\n        formData\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  migrateDataFromAnotherMarket(\r\n    MarketYearCategoryDataId: number,\r\n    TargetMarketId: number\r\n  ) {\r\n    const formData = {};\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/MarketYearCategoryData/MigrateData?MarketYearCategoryDataId=${MarketYearCategoryDataId}&TargetMarketId=${TargetMarketId}`,\r\n        formData\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  removeStudyAreaMaster(\r\n    dataSetId: number,\r\n    dataItemCategoryId: number,\r\n    marketYearDataCategoryId: number,\r\n    studyAreaId: number\r\n  ) {\r\n    const params = new HttpParams()\r\n      .append('DataSetId', dataSetId)\r\n      .append('DataItemCategoryId', dataItemCategoryId)\r\n      .append('MarketYearCategoryDataId', marketYearDataCategoryId)\r\n      .append('StudyAreaId', studyAreaId);\r\n\r\n    return this.http\r\n      .delete<ApiResponse>(`${this.apiEndpoint}/MasterDataEntry/MasterStudy`, {\r\n        params,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  removeStudyDataRow(\r\n    dataSetId: number,\r\n    dataItemCategoryId: number,\r\n    marketYearDataCategoryId: number,\r\n    dataRowId: string\r\n  ) {\r\n    const params = new HttpParams()\r\n      .append('DataSetId', dataSetId)\r\n      .append('DataItemCategoryId', dataItemCategoryId)\r\n      .append('MarketYearCategoryDataId', marketYearDataCategoryId)\r\n      .append('DataRowId', dataRowId.toString());\r\n\r\n    return this.http\r\n      .delete<ApiResponse>(\r\n        `${this.apiEndpoint}/MasterDataEntry/MasterDataRow`,\r\n        {\r\n          params,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getMarketSegment() {\r\n    return this.getDataEntryData('MarketSegments');\r\n  }\r\n\r\n  getSupplier() {\r\n    return this.getDataEntryData('Suppliers');\r\n  }\r\n\r\n  getProductCategories() {\r\n    return this.getDataEntryData('ProductCategories');\r\n  }\r\n\r\n  getSubProducts() {\r\n    return this.getDataEntryData('SubProducts');\r\n  }\r\n\r\n  getViscosityGrades() {\r\n    return this.getDataEntryData('ViscosityGrades');\r\n  }\r\n\r\n  saveInitialSetupData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/InitialSetup/InitialSetup`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getSPSegments(MarketId: number) {\r\n    return this.getDataEntryData('Segments', [\r\n      { key: 'MarketId', value: MarketId },\r\n    ]);\r\n  }\r\n\r\n  getSyntheticType() {\r\n    return this.getDataEntryData('SyntheticType');\r\n  }\r\n\r\n  getVehicleTypes() {\r\n    return this.getDataEntryData('VehicleType');\r\n  }\r\n\r\n  getDataEntryData(type: string, params: any = []) {\r\n    let _params = new HttpParams();\r\n    if (params.length > 0) {\r\n      params.map((item: any) => {\r\n        _params = _params.append(item.key, item.value);\r\n      });\r\n    }\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/DataEntry/${type}`, {\r\n        params: _params,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAllEngineOilType() {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/DataEntry/SCSSEngineOilTypeProductCategory`\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getSEDataEntryData(type: string, params: any = []) {\r\n    let _params = new HttpParams();\r\n    if (params.length > 0) {\r\n      params.map((item: any) => {\r\n        _params = _params.append(item.key, item.value);\r\n      });\r\n    }\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipient/DataEntrySEAP/${type}`,\r\n        {\r\n          params: _params,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getPSCDataEntryData(type: string, params: any = []) {\r\n    let _params = new HttpParams();\r\n    if (params.length > 0) {\r\n      params.map((item: any) => {\r\n        _params = _params.append(item.key, item.value);\r\n      });\r\n    }\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/DataEntryPSC/${type}`, {\r\n        params: _params,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getSHCDataEntryData(type: string, params: any = []) {\r\n    let _params = new HttpParams();\r\n    if (params.length > 0) {\r\n      params.map((item: any) => {\r\n        _params = _params.append(item.key, item.value);\r\n      });\r\n    }\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/DataEntrySHC/${type}`, {\r\n        params: _params,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDataRelationsData() {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/MasterDataEntry/DataRelations`)\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveNewDataEntry(dataRelationId: number, newName: string) {\r\n    const formData = {\r\n      dataRelationId,\r\n      newName,\r\n    };\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/MasterDataEntry/NewDataEntry`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getEuropeanCountryLists() {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/Market/EuropeanCountries`)\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getPivotSettings(viewId: number) {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/MasterDataEntry/PivotGridSettings?ViewId=${viewId}`\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getDataEntryDropDowns(dataRelationId: number) {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/MasterDataEntry/DataEntryDropDowns?DataRelationId=${dataRelationId}`,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUnitOfMeasure() {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/MasterDataEntry/UnitOfMeasures`)\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getVolumeUnits(dataSetId: number): Observable<ApiResponse> {\r\n    return this.http.get<ApiResponse>(`${this.apiEndpoint}/Common/VolumeUnits?DataSetId=${dataSetId}`)\r\n  }\r\n\r\n  getCurrencies(dataSetId: number): Observable<ApiResponse> {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/Common/Currencies?DataSetId=${dataSetId}`)\r\n  }\r\n\r\n  getSubMarketDropDowns(datasetId: number, marketId: number) {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint} /Market/SubMarkets ? DataSetId = ${datasetId}& MarketId=${marketId} `,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getSubMarkets(datasetId: number, marketId: number) {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint} /Market/SubMarkets ? DataSetId = ${datasetId}& MarketId=${marketId} `\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getUnitsOfMeasureDropDowns() {\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint} /MasterDataEntry/UnitOfMeasures`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getPivotState(\r\n    viewId: number,\r\n    isDataEntryGrid: boolean = false\r\n  ): Observable<any> {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/PivotState?viewId=${viewId}&IsDataEntryGrid=${isDataEntryGrid}`\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  setPivotState(\r\n    viewId: number,\r\n    userId: number,\r\n    isDefault: boolean,\r\n    viewState: string,\r\n    isDataEntryGrid: boolean = false\r\n  ): Observable<boolean> {\r\n    let headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    let url: string = this.apiEndpoint + '/PivotState/SaveState';\r\n    let body = {\r\n      userId: userId,\r\n      viewId: viewId,\r\n      isDefault: isDefault,\r\n      StateData: viewState,\r\n      isDataEntryGrid: isDataEntryGrid,\r\n    };\r\n    return this.http.post<boolean>(url, body, { headers });\r\n  }\r\n\r\n  deletePivotState(\r\n    viewId: number,\r\n    pivotStateId: number,\r\n    userId: number = 0\r\n  ): Observable<string> {\r\n    let headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    const params = new HttpParams()\r\n      .append('viewId', viewId)\r\n      .append('pivotStateId', pivotStateId);\r\n    return this.http.delete<any>(`${this.apiEndpoint}/PivotState/DeleteState`, {\r\n      params,\r\n      headers,\r\n    });\r\n  }\r\n\r\n\r\n  getState(\r\n    viewId: number,\r\n    marketYearCategoryId: number,\r\n    isDataEntryGrid: boolean = false\r\n  ): Observable<any> {\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/PivotState?viewId=${viewId}&marketYearCategoryId=${marketYearCategoryId}&IsDataEntryGrid=${isDataEntryGrid}`\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  setState(\r\n    viewId: number,\r\n    marketYearCategoryId: number,\r\n    userId: number,\r\n    isDefault: boolean,\r\n    viewState: string,\r\n    isDataEntryGrid: boolean = false\r\n  ): Observable<boolean> {\r\n    let headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    let url: string = this.apiEndpoint + '/PivotState/SaveState';\r\n    let body = {\r\n      userId: userId,\r\n      viewId: viewId,\r\n      marketYearCategoryId: marketYearCategoryId,\r\n      isDefault: isDefault,\r\n      StateData: viewState,\r\n      isDataEntryGrid: isDataEntryGrid,\r\n    };\r\n    return this.http.post<boolean>(url, body, { headers });\r\n  }\r\n\r\n  deleteState(\r\n    viewId: number,\r\n    marketYearCategoryId: number,\r\n    pivotStateId: number,\r\n    userId: number = 0\r\n  ): Observable<string> {\r\n    let headers = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    const params = new HttpParams()\r\n      .append('viewId', viewId)\r\n      .append('marketYearCategoryId', marketYearCategoryId)\r\n      .append('pivotStateId', pivotStateId);\r\n    return this.http.delete<any>(`${this.apiEndpoint}/PivotState/DeleteState`, {\r\n      params,\r\n      headers,\r\n    });\r\n  }\r\n\r\n  getDependentDataEntryDropDowns(dataRelationId: number, dependentField: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/MasterDataEntry/DataEntryDependentDropDowns?dataRelationId=${dataRelationId}`,\r\n        dependentField,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Constants } from 'src/app/Constant';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { throwError, Observable, BehaviorSubject } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { ApiResponse } from 'src/model/apiResponse.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class StudyService {\r\n  apiEndpoint: string = '';\r\n\r\n  private excelLoading = new BehaviorSubject<boolean>(false);\r\n  constructor(private http: HttpClient) {\r\n    this.apiEndpoint = Constants.apiEndpoint;\r\n  }\r\n\r\n  getLubricantDemandData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/LubricantDemand/LubricantDemand`, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveLubricantData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/LubricantDemand/LubricantDemand`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffLubricationData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/LubricantDemand/SignOffLubricantDemand`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForChangeLubricationData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/LubricantDemand/RequestForChange`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForSignOffLubricationData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/LubricantDemand/RequestForSignOff`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Supplier Market Share  */\r\n  getSupplierMarketShareData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/SupplierMarketShare/SupplierMarketShare`,\r\n        {\r\n          params: qParams,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveSupplierMarketShareData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SupplierMarketShare/SupplierMarketShare`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForSignOffSupplierMarketShareData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/SupplierMarketShare/RequestForSignOff`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForChangeSupplierMarketShareData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/SupplierMarketShare/RequestForChange`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffSupplierMarketShareData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SupplierMarketShare/SignOffSupplierMarketShare`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Synthetic Penetration */\r\n  getSPData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/SyntheticPenetration/SyntheticPenetration`,\r\n        {\r\n          params: qParams,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveSPData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SyntheticPenetration/SyntheticPenetration`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForSignOffSPData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/SyntheticPenetration/RequestForSignOff`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForChangeSPData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/SyntheticPenetration/RequestForChange`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffSPData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SyntheticPenetration/SignOffSyntheticPenetration`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Vehicle Parc Statistics */\r\n  getVPSData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(`${this.apiEndpoint}/VehicleParc/VehicleParc`, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveVPData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/VehicleParc/VehicleParc`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForSignOffVPData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/VehicleParc/RequestForSignOff`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForChangeVPData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/VehicleParc/RequestForChange`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffVPData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/VehicleParc/SignOffVehicleParc`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Service Category Consumption  */\r\n  getSCCData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/ServiceCategoryConsumption/ServiceCategoryConsumption`,\r\n        {\r\n          params: qParams,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveSCCData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/ServiceCategoryConsumption/ServiceCategoryConsumption`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForSignOffSCCData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/ServiceCategoryConsumption/RequestForSignOff`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForChangeSCCData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/ServiceCategoryConsumption/RequestForChange`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffSCCData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/ServiceCategoryConsumption/SignOffServiceCategoryConsumption`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Specialty Excipient Avg. Price  */\r\n  getSEAPData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipientAvgPrice/SpecialtyExcipientAvgPrice`,\r\n        {\r\n          params: qParams,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  saveSEAPData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipientAvgPrice/SpecialtyExcipientAvgPrice`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForSignOffSEAPData(formData: any) {\r\n    return this.requestForSignOffData(formData);\r\n    // return this.http\r\n    //   .post<ApiResponse>(\r\n    //     `${this.apiEndpoint}/ChangeRequest/RequestForSignOff`,\r\n    //     formData,\r\n    //     {\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //       },\r\n    //     }\r\n    //   )\r\n    //   .pipe(\r\n    //     map((data) => {\r\n    //       return data;\r\n    //     })\r\n    //   );\r\n  }\r\n\r\n  requestForChangeSEAPData(formData: any) {\r\n    return this.requestForChangeData(formData);\r\n    // return this.http\r\n    //   .post<ApiResponse>(\r\n    //     `${this.apiEndpoint}/ChangeRequest/RequestForChange`,\r\n    //     formData,\r\n    //     {\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //       },\r\n    //     }\r\n    //   )\r\n    //   .pipe(\r\n    //     map((data) => {\r\n    //       return data;\r\n    //     })\r\n    //   );\r\n  }\r\n\r\n  signOffSEAPData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipientAvgPrice/SignOffSpecialtyExcipientAvgPrice`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Specialty Excipient Sales  */\r\n  getSalesData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    return this.http\r\n      .get<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipientSales/SpecialtyExcipients`,\r\n        {\r\n          params: qParams,\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveSESData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipientSales/SpecialtyExcipients`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffSESData(formData: any) {\r\n    return this.http\r\n      .put<ApiResponse>(\r\n        `${this.apiEndpoint}/SpecialtyExcipientSales/SignOffSpecialtyExcipient`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** PSC - Personal Skin Care */\r\n\r\n  getPscStudyData(\r\n    type: string,\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    let URL = this.apiEndpoint;\r\n    if (type == 'ProductTypeSales') {\r\n      URL = URL + '/PSCProductType/ProductTypeSales';\r\n    } else if (type == 'BrandSales') {\r\n      URL = URL + '/PSCBrandSales/BrandSales';\r\n    } else if (type == 'SegmentSales') {\r\n      URL = URL + '/PSCSegmentSales/SegmentSales';\r\n    } else if (type == 'EuropeanCountriesSales') {\r\n      URL = URL + '/PSCEuropeanCountriesSales/EuropeanCountriesSales';\r\n    }\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Product Type Sales */\r\n\r\n  getPscPTData(marketYearCategoryId: number, studyProjectMarketYearId: number) {\r\n    return this.getPscStudyData(\r\n      'ProductTypeSales',\r\n      marketYearCategoryId,\r\n      studyProjectMarketYearId\r\n    );\r\n    // const qParams = new HttpParams()\r\n    //   .set('MarketYearCategoryId', marketYearCategoryId)\r\n    //   .set('StudyProjectMarketYearId', studyProjectMarketYearId);\r\n\r\n    // return this.http\r\n    //   .get<ApiResponse>(`${this.apiEndpoint}/PSCProductType/ProductTypeSales`, {\r\n    //     params: qParams,\r\n    //   })\r\n    //   .pipe(\r\n    //     map((data) => {\r\n    //       return data;\r\n    //     })\r\n    //   );\r\n  }\r\n\r\n  savePSCData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'ProductTypeSales') {\r\n      apiURL = apiURL + '/PSCProductType/ProductTypeSales';\r\n    } else if (type == 'BrandSales') {\r\n      apiURL = apiURL + '/PSCBrandSales/BrandSales';\r\n    } else if (type == 'SegmentSales') {\r\n      apiURL = apiURL + '/PSCSegmentSales/SegmentSales';\r\n    } else if (type == 'EuropeanCountriesSales') {\r\n      apiURL = apiURL + '/PSCEuropeanCountriesSales/EuropeanCountriesSales';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffPSCData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'ProductTypeSales') {\r\n      apiURL = apiURL + '/PSCProductType/SignOffProductTypeSales';\r\n    } else if (type == 'BrandSales') {\r\n      apiURL = apiURL + '/PSCBrandSales/SignOffBrandSales';\r\n    } else if (type == 'SegmentSales') {\r\n      apiURL = apiURL + '/PSCSegmentSales/SignOffSegmentSales';\r\n    } else if (type == 'EuropeanCountriesSales') {\r\n      apiURL =\r\n        apiURL + '/PSCEuropeanCountriesSales/SignOffEuropeanCountriesSales';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Product Type Sales END */\r\n\r\n  /** PSC - END */\r\n\r\n  requestForSignOffData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/ChangeRequest/RequestForSignOff`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  requestForChangeData(formData: any) {\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${this.apiEndpoint}/ChangeRequest/RequestForChange`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Solon Hair Care */\r\n  getShcStudyData(\r\n    type: string,\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    let URL = this.apiEndpoint;\r\n    if (type == 'ProductTypeSales') {\r\n      URL = URL + '/SHCProductTypeSales/ProductTypeSales';\r\n    } else if (type == 'CompanyBrandSales') {\r\n      URL = URL + '/SHCCompanyBrandSales/CompanyBrandSales';\r\n    } else if (type == 'ForecastSales') {\r\n      URL = URL + '/SHCForecastSales/ForecastSales';\r\n    } else if (type == 'IndustryRevenues') {\r\n      URL = URL + '/SHCIndustryRevenues/IndustryRevenues';\r\n    } else if (type == 'OutletSales') {\r\n      URL = URL + '/SHCOutletSales/OutletSales';\r\n    } else if (type == 'ProductClassificationSales') {\r\n      URL = URL + '/SHCProductClassificationSales/ProductClassificationSales';\r\n    } else if (type == 'SalonCount') {\r\n      URL = URL + '/SHCSalonCount/SalonCount';\r\n    }\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveSHCData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'ProductTypeSales') {\r\n      apiURL = apiURL + '/SHCProductTypeSales/ProductTypeSales';\r\n    } else if (type == 'CompanyBrandSales') {\r\n      apiURL = apiURL + '/SHCCompanyBrandSales/CompanyBrandSales';\r\n    } else if (type == 'ForecastSales') {\r\n      apiURL = apiURL + '/SHCForecastSales/ForecastSales';\r\n    } else if (type == 'IndustryRevenues') {\r\n      apiURL = apiURL + '/SHCIndustryRevenues/IndustryRevenues';\r\n    } else if (type == 'OutletSales') {\r\n      apiURL = apiURL + '/SHCOutletSales/OutletSales';\r\n    } else if (type == 'ProductClassificationSales') {\r\n      apiURL =\r\n        apiURL + '/SHCProductClassificationSales/ProductClassificationSales';\r\n    } else if (type == 'SalonCount') {\r\n      apiURL = apiURL + '/SHCSalonCount/SalonCount';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffSHCData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'ProductTypeSales') {\r\n      apiURL = apiURL + '/SHCProductTypeSales/SignOffProductTypeSales';\r\n    } else if (type == 'BrandSales') {\r\n      apiURL = apiURL + '/SHCCompanyBrandSales/SignOffCompanyBrandSales';\r\n    } else if (type == 'ForecastSales') {\r\n      apiURL = apiURL + '/SHCForecastSales/SignOffForecastSales';\r\n    } else if (type == 'IndustryRevenues') {\r\n      apiURL = apiURL + '/SHCIndustryRevenues/SignOffIndustryRevenues';\r\n    } else if (type == 'OutletSales') {\r\n      apiURL = apiURL + '/SHCOutletSales/SignOffOutletSales';\r\n    } else if (type == 'ProductClassificationSales') {\r\n      apiURL =\r\n        apiURL +\r\n        '/SHCProductClassificationSales/SignOffProductClassificationSales';\r\n    } else if (type == 'SalonCount') {\r\n      apiURL = apiURL + '/SHCSalonCount/SignOffSalonCount';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  /** END SCH */\r\n\r\n  /** Solon Hair Care */\r\n  getEHCStudyData(\r\n    type: string,\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    let URL = this.apiEndpoint;\r\n    if (type == 'Sales') {\r\n      URL = URL + '/SalesEHC/Sales';\r\n    } else if (type == 'MarketConsumption') {\r\n      URL = URL + '/MarketConsumptionEHC/MarketConsumption';\r\n    }\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveEHCData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'Sales') {\r\n      apiURL = apiURL + '/SalesEHC/Sales';\r\n    } else if (type == 'MarketConsumption') {\r\n      apiURL = apiURL + '/MarketConsumptionEHC/MarketConsumption';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffEHCData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'Sales') {\r\n      apiURL = apiURL + '/SalesEHC/SignOffSales';\r\n    } else if (type == 'MarketConsumption') {\r\n      apiURL = apiURL + '/MarketConsumptionEHC/SignOffMarketConsumption';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  /** END SCH */\r\n\r\n  /*EHC Market Consumption*/\r\n  getMarketConsumptionStudyData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId);\r\n\r\n    let URL = this.apiEndpoint + '/MarketConsumptionEHC/MarketConsumption';\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveMaketConsumptionData(formData: any) {\r\n    let apiURL = this.apiEndpoint + '/MarketConsumptionEHC/MarketConsumption';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffMaketConsumptionData(formData: any) {\r\n    let apiURL =\r\n      this.apiEndpoint + '/MarketConsumptionEHC/SignOffMarketConsumption';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getEHCSalesSegment(sectorId: any) {\r\n    let apiURL =\r\n      this.apiEndpoint + '/EHCDataEntry/Segments?SectorId=' + sectorId;\r\n\r\n    return this.http\r\n      .get<ApiResponse>(apiURL, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /** Industrial Vegetation Management */\r\n  getIVMStudyData(\r\n    type: string,\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    let URL = this.apiEndpoint;\r\n    if (type == 'Sales') {\r\n      URL = URL + '/IVMProductSales/IVMProductSales';\r\n    } else if (type == 'MarketConsumption') {\r\n      URL = URL + '/MarketConsumptionEHC/MarketConsumption';\r\n    }\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveIVMData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'Sales') {\r\n      apiURL = apiURL + '/IVMProductSales/IVMProductSales';\r\n    } else if (type == 'MarketConsumption') {\r\n      apiURL = apiURL + '/MarketConsumptionEHC/MarketConsumption';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffIVMData(type: string, formData: any) {\r\n    let apiURL = this.apiEndpoint;\r\n    if (type == 'Sales') {\r\n      apiURL = apiURL + '/IVMProductSales/SignOffIVMProductSales';\r\n    } else if (type == 'MarketConsumption') {\r\n      apiURL = apiURL + '/MarketConsumptionEHC/SignOffMarketConsumption';\r\n    }\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  /** END SCH */\r\n\r\n  /*IVM Product Composition*/\r\n  getIVMProductCompositionStudyData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId);\r\n\r\n    let URL = this.apiEndpoint + '/IVMProductComposition/IVMProductComposition';\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveIVMProductCompositionData(formData: any) {\r\n    let apiURL =\r\n      this.apiEndpoint + '/IVMProductComposition/IVMProductComposition';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffIVMProductCompositionData(formData: any) {\r\n    let apiURL =\r\n      this.apiEndpoint + '/IVMProductComposition/SignOffIVMProductComposition';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  /*PNC Product Type Sales*/\r\n  getPNCProductTypeSalesStudyData(\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId);\r\n\r\n    let URL = this.apiEndpoint + '/PNCProductType/ProductTypeSales';\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  savePNCProductTypeSalesData(formData: any) {\r\n    let apiURL = this.apiEndpoint + '/PNCProductType/ProductTypeSales';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffPNCProductTypeSalesData(formData: any) {\r\n    let apiURL = this.apiEndpoint + '/PNCProductType/SignOffProductTypeSales';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(apiURL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  exportToExcel(\r\n    data: any,\r\n    state: any,\r\n    settings: any,\r\n    title: string,\r\n    userMenuSettings: any,\r\n    viewId: number = 0\r\n  ) {\r\n    let url: string = this.apiEndpoint + '/PivotToExcelConvert';\r\n    const pivotData = JSON.stringify(data);\r\n    const userState = JSON.stringify(state);\r\n    const userSettings = JSON.stringify(settings);\r\n    const menuSettings = JSON.stringify(userMenuSettings);\r\n\r\n    const headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/json')\r\n      .set('Cache-control', 'no-store')\r\n      .set('Cache-control', 'no-store')\r\n      .set('Pragma', 'no-cache')\r\n      .set('Expires', '0');\r\n\r\n    return this.http.post(\r\n      url,\r\n      { pivotData, userState, userSettings, title, menuSettings, viewId },\r\n      { headers, responseType: 'blob' }\r\n    );\r\n  }\r\n\r\n  exportToCsv(data: any[], filename = 'data') {\r\n    let columns = Object.keys(data[0]);\r\n    columns = columns.filter((item) => item !== 'DataType');\r\n    let csvData = this.convertToCSV(data, columns);\r\n    let blob = new Blob(['\\ufeff' + csvData], {\r\n      type: 'text/csv;charset=utf-8;',\r\n    });\r\n    let dwldLink = document.createElement('a');\r\n    let url = URL.createObjectURL(blob);\r\n    let isSafariBrowser =\r\n      navigator.userAgent.indexOf('Safari') != -1 &&\r\n      navigator.userAgent.indexOf('Chrome') == -1;\r\n    if (isSafariBrowser) {\r\n      //if Safari open in new window to save file with random filename.\r\n      dwldLink.setAttribute('target', '_blank');\r\n    }\r\n    dwldLink.setAttribute('href', url);\r\n    dwldLink.setAttribute('download', filename + '.csv');\r\n    dwldLink.style.visibility = 'hidden';\r\n    document.body.appendChild(dwldLink);\r\n    dwldLink.click();\r\n    document.body.removeChild(dwldLink);\r\n    this.changeExcelLoading(false);\r\n  }\r\n\r\n  convertToCSV(objArray: any, headerList: any) {\r\n    let array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray;\r\n    let str = '';\r\n    let row = '';\r\n\r\n    for (let index in headerList) {\r\n      row += headerList[index] + ',';\r\n    }\r\n    row = row.slice(0, -1);\r\n    str += row + '\\r\\n';\r\n    for (let i = 0; i < array.length; i++) {\r\n      let line = '';\r\n      for (let index in headerList) {\r\n        let head = headerList[index];\r\n        let val: string = String(array[i][head]);\r\n        if (val.includes(',')) {\r\n          line += ',\"' + array[i][head] + '\"';\r\n        } else {\r\n          line += ',' + array[i][head];\r\n        }\r\n      }\r\n      str += line.substring(1) + '\\r\\n';\r\n    }\r\n    return str;\r\n  }\r\n\r\n  public changeExcelLoading(state: any) {\r\n    this.excelLoading.next(state);\r\n  }\r\n\r\n  getPreviewStudyData(\r\n    StudyUrl: string,\r\n    marketYearCategoryId: number,\r\n    studyProjectMarketYearId: number,\r\n    currencyId: number = 0,\r\n    volumeUnitId: number = 0,\r\n    currencyConversionType: number = 0\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId)\r\n      .set('CurrencyId', currencyId)\r\n      .set('VolumeUnitId', volumeUnitId)\r\n      .set('CurrencyConversionType', currencyConversionType);\r\n\r\n    let URL = this.apiEndpoint + StudyUrl;\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  // Generic Study APIs\r\n  getStudyData(marketYearCategoryId: number, studyProjectMarketYearId: number) {\r\n    const qParams = new HttpParams()\r\n      .set('MarketYearCategoryId', marketYearCategoryId)\r\n      .set('StudyProjectMarketYearId', studyProjectMarketYearId);\r\n\r\n    let URL = this.apiEndpoint + '/Generic';\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  saveStudyData(formData: any) {\r\n    let URL = this.apiEndpoint + '/Generic';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(URL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  signOffStudyData(formData: any) {\r\n    let URL = this.apiEndpoint + '/Generic/SignOff';\r\n\r\n    return this.http\r\n      .put<ApiResponse>(URL, formData, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  // Comment Section\r\n  addCommentForCell(formData: any) {\r\n    let qParams: any[] = [];\r\n\r\n    Object.keys(formData).map((key: string) => {\r\n      qParams.push(`${key}=${formData[key]}`);\r\n    });\r\n\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${\r\n          this.apiEndpoint\r\n        }/CellLevelComments/SaveCellLevelComment?${qParams.join('&')}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getAllCommentsForStudy(\r\n    dataItemCategoryId: number,\r\n    marketYearCategoryDataId: number\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('dataItemCategoryId', dataItemCategoryId)\r\n      .set('marketYearCategoryDataId', marketYearCategoryDataId);\r\n\r\n    let URL = `${this.apiEndpoint}/CellLevelComments/GetAllCellLevelCommentsOfAStudy`;\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  getCellCommentsForStudy(\r\n    dataItemCategoryId: number,\r\n    marketYearCategoryDataId: number,\r\n    draftDataRowId: string,\r\n    columnName: string,\r\n    attributeType: string = ''\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('dataItemCategoryId', dataItemCategoryId)\r\n      .set('marketYearCategoryDataId', marketYearCategoryDataId)\r\n      .set('draftDataRowId', draftDataRowId)\r\n      .set('columnName', columnName)\r\n      .set('attributeType', attributeType);\r\n\r\n    let URL = `${this.apiEndpoint}/CellLevelComments/GetCellLevelComments`;\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteCellComment(\r\n    marketYearCategoryDataId: number,\r\n    draftDataRowId: string,\r\n    columnName: string,\r\n    cellNotesId: number\r\n  ) {\r\n    const params = new HttpParams()\r\n      .append('marketYearCategoryDataId', marketYearCategoryDataId)\r\n      .append('draftDataRowId', draftDataRowId)\r\n      .append('columnName', columnName)\r\n      .append('cellNotesId', cellNotesId);\r\n\r\n    return this.http\r\n      .delete<ApiResponse>(\r\n        `${this.apiEndpoint}/CellLevelComments/DeleteCellLevelComment`,\r\n        {\r\n          params,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  //end\r\n  getCurrencyConversionFactor(\r\n    year: number,\r\n    inputCurrencyId: number,\r\n    outputCurrencyId: number,\r\n    currencyConversionType: number\r\n  ): Observable<ApiResponse> {\r\n    return this.http.get<ApiResponse>(\r\n      `${this.apiEndpoint}/Common/CurrencyConversionFactor?year=${year}&inputCurrencyId=${inputCurrencyId}&outputCurrencyId=${outputCurrencyId}&currencyConversionType=${currencyConversionType}`\r\n    );\r\n  }\r\n\r\n  getVolumeConversionFactor(\r\n    inputVolumeUnitId: number,\r\n    outputVolumeUnitId: number,\r\n    dataSetId: number\r\n  ): Observable<ApiResponse> {\r\n    return this.http.get<ApiResponse>(\r\n      `${this.apiEndpoint}/Common/VolumeConversionFactor?inputVolumeUnitId=${inputVolumeUnitId}&outputVolumeUnitId=${outputVolumeUnitId}&dataSetId=${dataSetId}`\r\n    );\r\n  }\r\n\r\n  getAllStudyNotes(\r\n    dataItemCategoryId: number,\r\n    marketYearCategoryDataId: number\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('dataItemCategoryId', dataItemCategoryId)\r\n      .set('marketYearCategoryDataId', marketYearCategoryDataId);\r\n\r\n    let URL = `${this.apiEndpoint}/StudyNotes/StudyNotes`;\r\n\r\n    return this.http\r\n      .get<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  \r\n  deleteStudyNotes(\r\n    studyNoteLogId: number,\r\n    marketYearCategoryDataId: number\r\n  ) {\r\n    const qParams = new HttpParams()\r\n      .set('marketYearCategoryDataId', marketYearCategoryDataId)\r\n      .set('studyNoteLogId', studyNoteLogId);\r\n\r\n    let URL = `${this.apiEndpoint}/StudyNotes/StudyNote`;\r\n    return this.http\r\n      .delete<ApiResponse>(URL, {\r\n        params: qParams,\r\n      })\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n  \r\n  saveStudyNote(formData:any) {\r\n    let qParams: any[] = [];\r\n\r\n    Object.keys(formData).map((key: string) => {\r\n      qParams.push(`${key}=${formData[key]}`);\r\n    });\r\n\r\n    return this.http\r\n      .post<ApiResponse>(\r\n        `${\r\n          this.apiEndpoint\r\n        }/StudyNotes/StudyNote?${qParams.join('&')}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .pipe(\r\n        map((data) => {\r\n          return data;\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Constants } from 'src/app/Constant';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { throwError, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiResponse } from 'src/model/apiResponse.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  apiEndpoint: string = '';\n  constructor(private http: HttpClient) {\n    this.apiEndpoint = Constants.apiEndpoint;\n  }\n\n  getUserDetail(emailAddress: string) {\n    const params = JSON.stringify(emailAddress);\n    return this.http\n      .post<ApiResponse>(`${this.apiEndpoint}/UserDetails/UserDetail`, params, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n      .pipe(\n        map((data) => {\n          return data;\n        })\n      );\n  }\n}\n","var map = {\n\t\"./af\": 58685,\n\t\"./af.js\": 58685,\n\t\"./ar\": 254,\n\t\"./ar-dz\": 4312,\n\t\"./ar-dz.js\": 4312,\n\t\"./ar-kw\": 32614,\n\t\"./ar-kw.js\": 32614,\n\t\"./ar-ly\": 18630,\n\t\"./ar-ly.js\": 18630,\n\t\"./ar-ma\": 28674,\n\t\"./ar-ma.js\": 28674,\n\t\"./ar-sa\": 49032,\n\t\"./ar-sa.js\": 49032,\n\t\"./ar-tn\": 24730,\n\t\"./ar-tn.js\": 24730,\n\t\"./ar.js\": 254,\n\t\"./az\": 53052,\n\t\"./az.js\": 53052,\n\t\"./be\": 60150,\n\t\"./be.js\": 60150,\n\t\"./bg\": 38080,\n\t\"./bg.js\": 38080,\n\t\"./bm\": 13466,\n\t\"./bm.js\": 13466,\n\t\"./bn\": 18516,\n\t\"./bn-bd\": 90557,\n\t\"./bn-bd.js\": 90557,\n\t\"./bn.js\": 18516,\n\t\"./bo\": 26273,\n\t\"./bo.js\": 26273,\n\t\"./br\": 9588,\n\t\"./br.js\": 9588,\n\t\"./bs\": 19815,\n\t\"./bs.js\": 19815,\n\t\"./ca\": 83331,\n\t\"./ca.js\": 83331,\n\t\"./cs\": 21320,\n\t\"./cs.js\": 21320,\n\t\"./cv\": 72219,\n\t\"./cv.js\": 72219,\n\t\"./cy\": 68266,\n\t\"./cy.js\": 68266,\n\t\"./da\": 66427,\n\t\"./da.js\": 66427,\n\t\"./de\": 67435,\n\t\"./de-at\": 52871,\n\t\"./de-at.js\": 52871,\n\t\"./de-ch\": 12994,\n\t\"./de-ch.js\": 12994,\n\t\"./de.js\": 67435,\n\t\"./dv\": 82357,\n\t\"./dv.js\": 82357,\n\t\"./el\": 95649,\n\t\"./el.js\": 95649,\n\t\"./en-au\": 59961,\n\t\"./en-au.js\": 59961,\n\t\"./en-ca\": 19878,\n\t\"./en-ca.js\": 19878,\n\t\"./en-gb\": 67570,\n\t\"./en-gb.js\": 67570,\n\t\"./en-ie\": 70864,\n\t\"./en-ie.js\": 70864,\n\t\"./en-il\": 91579,\n\t\"./en-il.js\": 91579,\n\t\"./en-in\": 30940,\n\t\"./en-in.js\": 30940,\n\t\"./en-nz\": 16181,\n\t\"./en-nz.js\": 16181,\n\t\"./en-sg\": 44301,\n\t\"./en-sg.js\": 44301,\n\t\"./eo\": 85291,\n\t\"./eo.js\": 85291,\n\t\"./es\": 54529,\n\t\"./es-do\": 53764,\n\t\"./es-do.js\": 53764,\n\t\"./es-mx\": 12584,\n\t\"./es-mx.js\": 12584,\n\t\"./es-us\": 63425,\n\t\"./es-us.js\": 63425,\n\t\"./es.js\": 54529,\n\t\"./et\": 35203,\n\t\"./et.js\": 35203,\n\t\"./eu\": 70678,\n\t\"./eu.js\": 70678,\n\t\"./fa\": 83483,\n\t\"./fa.js\": 83483,\n\t\"./fi\": 96262,\n\t\"./fi.js\": 96262,\n\t\"./fil\": 52521,\n\t\"./fil.js\": 52521,\n\t\"./fo\": 34555,\n\t\"./fo.js\": 34555,\n\t\"./fr\": 63131,\n\t\"./fr-ca\": 88239,\n\t\"./fr-ca.js\": 88239,\n\t\"./fr-ch\": 21702,\n\t\"./fr-ch.js\": 21702,\n\t\"./fr.js\": 63131,\n\t\"./fy\": 267,\n\t\"./fy.js\": 267,\n\t\"./ga\": 23821,\n\t\"./ga.js\": 23821,\n\t\"./gd\": 71753,\n\t\"./gd.js\": 71753,\n\t\"./gl\": 4074,\n\t\"./gl.js\": 4074,\n\t\"./gom-deva\": 92762,\n\t\"./gom-deva.js\": 92762,\n\t\"./gom-latn\": 5969,\n\t\"./gom-latn.js\": 5969,\n\t\"./gu\": 82809,\n\t\"./gu.js\": 82809,\n\t\"./he\": 45402,\n\t\"./he.js\": 45402,\n\t\"./hi\": 315,\n\t\"./hi.js\": 315,\n\t\"./hr\": 10410,\n\t\"./hr.js\": 10410,\n\t\"./hu\": 38288,\n\t\"./hu.js\": 38288,\n\t\"./hy-am\": 67928,\n\t\"./hy-am.js\": 67928,\n\t\"./id\": 71334,\n\t\"./id.js\": 71334,\n\t\"./is\": 86959,\n\t\"./is.js\": 86959,\n\t\"./it\": 34864,\n\t\"./it-ch\": 51124,\n\t\"./it-ch.js\": 51124,\n\t\"./it.js\": 34864,\n\t\"./ja\": 36141,\n\t\"./ja.js\": 36141,\n\t\"./jv\": 29187,\n\t\"./jv.js\": 29187,\n\t\"./ka\": 42136,\n\t\"./ka.js\": 42136,\n\t\"./kk\": 94332,\n\t\"./kk.js\": 94332,\n\t\"./km\": 18607,\n\t\"./km.js\": 18607,\n\t\"./kn\": 84305,\n\t\"./kn.js\": 84305,\n\t\"./ko\": 70234,\n\t\"./ko.js\": 70234,\n\t\"./ku\": 16003,\n\t\"./ku.js\": 16003,\n\t\"./ky\": 75061,\n\t\"./ky.js\": 75061,\n\t\"./lb\": 32786,\n\t\"./lb.js\": 32786,\n\t\"./lo\": 66183,\n\t\"./lo.js\": 66183,\n\t\"./lt\": 50029,\n\t\"./lt.js\": 50029,\n\t\"./lv\": 24169,\n\t\"./lv.js\": 24169,\n\t\"./me\": 68577,\n\t\"./me.js\": 68577,\n\t\"./mi\": 68177,\n\t\"./mi.js\": 68177,\n\t\"./mk\": 50337,\n\t\"./mk.js\": 50337,\n\t\"./ml\": 65260,\n\t\"./ml.js\": 65260,\n\t\"./mn\": 52325,\n\t\"./mn.js\": 52325,\n\t\"./mr\": 14695,\n\t\"./mr.js\": 14695,\n\t\"./ms\": 75334,\n\t\"./ms-my\": 37151,\n\t\"./ms-my.js\": 37151,\n\t\"./ms.js\": 75334,\n\t\"./mt\": 63570,\n\t\"./mt.js\": 63570,\n\t\"./my\": 97963,\n\t\"./my.js\": 97963,\n\t\"./nb\": 88028,\n\t\"./nb.js\": 88028,\n\t\"./ne\": 86638,\n\t\"./ne.js\": 86638,\n\t\"./nl\": 50302,\n\t\"./nl-be\": 66782,\n\t\"./nl-be.js\": 66782,\n\t\"./nl.js\": 50302,\n\t\"./nn\": 33501,\n\t\"./nn.js\": 33501,\n\t\"./oc-lnc\": 50563,\n\t\"./oc-lnc.js\": 50563,\n\t\"./pa-in\": 50869,\n\t\"./pa-in.js\": 50869,\n\t\"./pl\": 65302,\n\t\"./pl.js\": 65302,\n\t\"./pt\": 49687,\n\t\"./pt-br\": 74884,\n\t\"./pt-br.js\": 74884,\n\t\"./pt.js\": 49687,\n\t\"./ro\": 79107,\n\t\"./ro.js\": 79107,\n\t\"./ru\": 33627,\n\t\"./ru.js\": 33627,\n\t\"./sd\": 30355,\n\t\"./sd.js\": 30355,\n\t\"./se\": 83427,\n\t\"./se.js\": 83427,\n\t\"./si\": 11848,\n\t\"./si.js\": 11848,\n\t\"./sk\": 54590,\n\t\"./sk.js\": 54590,\n\t\"./sl\": 20184,\n\t\"./sl.js\": 20184,\n\t\"./sq\": 56361,\n\t\"./sq.js\": 56361,\n\t\"./sr\": 78965,\n\t\"./sr-cyrl\": 81287,\n\t\"./sr-cyrl.js\": 81287,\n\t\"./sr.js\": 78965,\n\t\"./ss\": 25456,\n\t\"./ss.js\": 25456,\n\t\"./sv\": 70451,\n\t\"./sv.js\": 70451,\n\t\"./sw\": 77558,\n\t\"./sw.js\": 77558,\n\t\"./ta\": 51356,\n\t\"./ta.js\": 51356,\n\t\"./te\": 73693,\n\t\"./te.js\": 73693,\n\t\"./tet\": 21243,\n\t\"./tet.js\": 21243,\n\t\"./tg\": 42500,\n\t\"./tg.js\": 42500,\n\t\"./th\": 55768,\n\t\"./th.js\": 55768,\n\t\"./tk\": 77761,\n\t\"./tk.js\": 77761,\n\t\"./tl-ph\": 35780,\n\t\"./tl-ph.js\": 35780,\n\t\"./tlh\": 29590,\n\t\"./tlh.js\": 29590,\n\t\"./tr\": 33807,\n\t\"./tr.js\": 33807,\n\t\"./tzl\": 93857,\n\t\"./tzl.js\": 93857,\n\t\"./tzm\": 60654,\n\t\"./tzm-latn\": 8806,\n\t\"./tzm-latn.js\": 8806,\n\t\"./tzm.js\": 60654,\n\t\"./ug-cn\": 30845,\n\t\"./ug-cn.js\": 30845,\n\t\"./uk\": 19232,\n\t\"./uk.js\": 19232,\n\t\"./ur\": 47052,\n\t\"./ur.js\": 47052,\n\t\"./uz\": 77967,\n\t\"./uz-latn\": 32233,\n\t\"./uz-latn.js\": 32233,\n\t\"./uz.js\": 77967,\n\t\"./vi\": 98615,\n\t\"./vi.js\": 98615,\n\t\"./x-pseudo\": 12320,\n\t\"./x-pseudo.js\": 12320,\n\t\"./yo\": 31313,\n\t\"./yo.js\": 31313,\n\t\"./zh-cn\": 64490,\n\t\"./zh-cn.js\": 64490,\n\t\"./zh-hk\": 55910,\n\t\"./zh-hk.js\": 55910,\n\t\"./zh-mo\": 98262,\n\t\"./zh-mo.js\": 98262,\n\t\"./zh-tw\": 44223,\n\t\"./zh-tw.js\": 44223\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["UserDetail","Constants","i0","AppComponent","constructor","authService","localStorageService","route","userService","isLoadingService","ngOnInit","setTimeout","isLoading","isLoading$","currentUser","getData","userDataKey","currentUserData","userDetailKey","idToken","EmailAddress","instance","handleRedirectPromise","then","res","account","setActiveAccount","setData","userName","username","token","accessToken","getUserDetail","navigate","isLoggedIn","getActiveAccount","login","loginRedirect","logout","emailAddress","subscribe","HttpStatusCode","userDetail","deserialize","Data","err","console","log","selectors","decls","vars","consts","template","DxPivotGridComponent","PivotGridDataSource","Workbook","lodash","saveAs","CalculatedFieldType","DataFieldArea","PivotGridDataFieldType","Field","PivotGridField","Format","PivotGridOptions","PivotGridSource","UserStateAndSetttings","SpecialValueType","exportPivotGrid","CommonHelper","Subject","Common","ComputingType","ctx_r6","ctx_r11","ctx_r12","ctx_r13","ctx_r4","ctx_r1","ctx_r20","ctx_r21","ctx_r22","ctx_r16","ctx_r2","ctx_r29","ctx_r30","ctx_r31","ctx_r25","ctx_r3","BrandSalesPreviewComponent","studyService","alertService","sharedService","Id","IsActive","Name","id","undefined","name","pivotGridDataSource","params","snapshot","marketYearCategoryId","studyProjectMarketYearId","studyAreaId","customSaveState","bind","customLoadState","pivotGridOptions","setPreviewData","data","previewData","setGridFields","gridFields","setPreviewGridKey","previewGridKey","setSelectedCurrency","selectedCurrency","CurrencyId","CurrencyName","CurrencyCode","currencyDropdownSelected","setStudyType","studyType","setVolumeYears","volumeYears","setViewId","viewId","getPivotSettings","getPivotState","pivotGridSource","fields","store","ngOnChanges","changes","getPreviewData","studyData","map","item","previousYears","year","push","Channel","Company","Brand","Year","Value","field","currentYear","CurrentYear","getGridFields","dataField","area","caption","dataType","visible","isCalculated","calculatedFieldType","dataFieldType","width","summaryType","summaryDisplayMode","format","type","precision","stateData","stateRes","realMerge","JSON","parse","StateData","pivotStateId","PivotStateId","directDatasourceRenderPivot","settings","isCube","currency","pivotGridDefaultValues","currencyConversionType","selectedYear","_a","PeriodKey","unitOfMass","length","invisibleFields","filter","f","firstAvailableId","invisibleField","forEach","obj","fillPivot","readPivotDataFromApi","isChangeAutoSaveStatus","clearTimeout","saveStateToDbTimeout","canCallSaveState","state","stateChange","next","yearField","yearDataFieldName","hasCagrOrChange","cagrState","isSet","changePercentState","pivotGridInstance","pivotGrid","pivotFridDataSource","getDataSource","areaIndex","uniqArrByText","uniqBy","_dataController","_columnsInfo","shownYears","t","parseInt","text","sortOrder","load","isEqual","shownYearsPrev","rememberLatestState","canSaveUserState","setPivotState","isAdmin","stringify","canSaveDefaultStateAndOptions","info","saveSettings","error","Error","deleteCustomState","adminSetNewState","deletePivotState","currentlySelectedViewId","optionsDataSource","saveResult","optionsDataSourceTemp","add","getPscStudyData","unitOfMassDropdownSelected","currencyConversionTypeSelected","studyDataObj","index","i","d","remove","danger","errorShow","getDataFieldName","fieldName","onOptionChanged","e","onInitialized","cellPrepared","shownYearsInPivot","cell","startsWith","changePercent","years","path","computingType","FirstYear","_b","PreviousYear","yearIndex","indexOf","prevYearIndex","toString","cellElement","textContent","cagr","_c","_d","value","hasCd","classList","onContentReady","calculatedFields","percentOfTotal","percentOfGrandTotal","calculatedField","addCloseButtonToCalculatedField","noDataElement","component","element","querySelector","pivotGridNoDataMessage","onContextMenuPreparing","customizeContextMenu","updateDefaultContextMenuTextsAndIcons","enabledInContextMenu","items","beginGroup","icon","onItemClick","fieldToDelete","percentOfTotalState","deleteCalculatedField","isPercentOfTotalPopup","pivotSummaryDisplayModesSubtotals","dataFieldArea","column","isPercentOfChangePopup","isCagrPopup","openMenuItems","menuSettings","isCurrencySelection","eventsCustomAction","isCurrencyConversion","isUnitsOfVolume","isUnitsOfMass","calculatedFieldsItems","_e","isPercentOfTotal","_f","isPercentOfChange","_g","isCagr","Object","values","includes","dataFieldsHeaders","_h","row","fieldId","splice","m","rowName","rowCaption","rowFields","columnFields","expandAll","find","collapseAll","fieldChooser","exportToExcel","sorts","sort","AvgPrice","datafieldType","calculatedFieldObj","$","append","removeAllSpaces","parent","css","children","off","on","currencySelectionChanged","currencyConversionSelectionChanged","massUnitSelectionChanged","getUserSettings","userSettings","Code","unitOfMeasure","unitOfVolume","basedOn","userChartSetting","dataFieldsDisplayMode","chartType","isReducedDataSource","changeExcelLoading","title","pivotFields","finalData","hasOwnProperty","a","b","fileName","split","join","file","Blob","fileURL","URL","createObjectURL","document","createElement","body","appendChild","style","display","href","target","download","click","exportToCvs","exportToCsv","exportToShanptshot","workbook","worksheet","addWorksheet","customizeCell","options","excelCell","font","size","alignment","horizontal","vertical","xlsx","writeBuffer","buffer","pivotData","saveStateEnabled","addPercentOfTotalsToPivot","addPrecentOfChangeToPivot","addCAGRToPivot","sourceCopy","cloneDeep","useDefaultSorting","specialSorting","orderAray","rowData","Unit","some","r","valueSum","beginningWith","sortingField","sortingMethod","localeCompare","applySortingRolesByYear","dispose","DataType","allDatafields","newField","returnSpecialSumamryField","groupName","groupIndex","groupedFields","groupedField","source","getFieldValues","isHeaderFilterLoading","that","apply","arguments","always","updatePlaceholders","isChart","charts","isVisible","fieldOriginal","fieldNew","isMeasure","calculateCustomSummary","calculateSummaryValueRange","customizeText","customizeRangeText","range","calculateSummaryValueCdOd","none","valueNearZero","Number","EPSILON","summaryProcess","totalValue","min","Math","round","toFixed","max","EmDash","valueOf","stringValue","replace","_fields","datafields","yearFieldOnFirstPositon","sortBySummaryField","sortBySummaryPath","setCalculatedFieldFromTopMenu","itemName","onBasedOnChange","isInit","percentOfTotalBasedOn","summaryDisplayModeItems","pivotSummaryDisplayModesGrandTotals","onComputeTypeChange","percentOfChangeComputeType","onCagrComputeTypeChange","cagrComputeType","iSCallFromFillPivot","percentInDirection","addPercentOfTotalsToPivotCube","addPercentOfTotalsToPivotArray","removeAllHiddenCalculatedFields","getCaptionForPercentOfTotal","calculateSummaryValue","_j","formatPrecision","_k","_l","percentOfTotaldatafield","currentDatafieldCaption","fieldCaption","percentOfChange","getCaptionForPercentOfChange","calculateSummaryValuePercentOfChange","base","returnValue","isNaN","percentOfChangeDataField","Volume","addCAGRToPivotCube","addCAGRToPivotArray","getCaptionForCagr","calculateSummaryValueCagr","cagrDataField","changeInValue","yearSpan","pow","onChangeAutoSaveStatus","statusValue","viewQuery","ctx","EuropeanCountrySalesPreviewComponent","Market","ProductTypeSalePreviewComponent","ProductType","foreCastYears","SegmentSalesPreviewComponent","Segment","StudyDataUrlEnum","ShcPreviewComponent","setIsLubesnetStudy","isLubesnetStudy","getPreviewStudyData","studyDataUrlEnum","SHC_PT_SALES","SHC_FC_SALES","SHC_PC_SALES","SHC_CB_SALES","SHC_OS_SALES","SHC_IR_SALES","SHC_SC_SALES","EventEmitter","HotTableRegisterer","Handsontable","HyperFormula","DataGridConfiguration","DataSourceResponse","FormControl","FormGroup","Validators","DataRelationsEnum","DataGridState","toUpper","UUID","ctx_r14","ctx_r18","ctx_r26","ctx_r27","ctx_r28","ctx_r33","ctx_r35","ctx_r42","ctx_r40","rowItem_r37","rowItem_r47","ctx_r49","ctx_r55","HandsonTableComponent","formBuilder","commonService","pendingChangeService","buildEmpty","licenseKey","handsontableLicenseKey","columns","indicators","copyPasteEnabled","isRenderAllRows","askForConfirmation$","col","dataSetId","isManager","IsManager","newNoteForm","group","note","required","calculatorContextMenuItems","getCalculatorFields","resetMenuItems","getResetToDefaultOptions","columnReferences","getColumnReferences","viewMenuItems","getDataViewOptions","selectedView","formulas","engine","setDataSource","isEmpty","dataSource","getAllColumnsComments","newRowNumberBoxFormat","Settings","handontableSettings","decimalPlaces","setCurrency","currencyDropdown","setVolumeUnits","unitsDropdown","setDataRelations","dataRelations","hotSettings","afterChange","prop","oldValue","newValue","hotRegisterer","getInstance","propToCol","pendingChange","isFormulaAllowed","countOfFormulasInDatagrid","setDataAtRowProp","expressionOneDecimal","expressionTwoDecimals","reg","test","newValueRounded","loadData","dataSourceData","emitDatasourceForPreviewAndUpdateNoFormulasSource","setTableChanges","viewportColumnRenderingOffset","afterViewRender","renderingFinishedTimeout","isRenderingFinished","afterScrollVertically","isCheck","getSourceData","render","addNewRowForm","isLockedStudy","setPendingChanges","dataState","dataGridState","newState","isResetDataRequired","dataSourceDataCopy","countOfColumnsData","keys","ColumnsData","datasourceRowCounter","datasourceRow","yearsData","YearsData","yearsDataCounter","yearData","realCellValue","getValueByYearsDataPosition","countOfYearProperties","sourceRow","dataSourceDataChanged","emit","dataSourceDataNoFormulas","rowIndex","yearsDataIndex","realData","requestedRowData","getAllCommentsForStudy","allColsComments","processDataSource","DataList","dataSettings","studySummary","StudySetup","ProjectLeadId","studyTitle","StudyDataSetName","StudyYear","MarketName","isStudyEditable","IsSignOff","LockedForEditBy","unitOfValues","UnitOfValues","Title","currentCurrency","columnLists","nestedColumnList","columnBinding","staticColumns","ColumnList","list","colSetting","readOnly","IsVisible","isColumnData","filterableColumns","Index","hiddenColumns","fixedColumnsLeft","YearsList","nestedcColSetting","yearWiseFieldList","forecastFieldList","AttributeList","attr","isYearValue","yearType","Type","allowEmpty","label","colspan","filters","isDeleteRowCell","colHeaders","HasAttribute","valueColsIndexes","h","nestedHeaders","ChangeLog","changeLogObj","change","changeObj","ChangeLogObj","date","attrType","dataRowId","rowComments","single","DraftDataRowId","DataRowId","ColumnName","AttributeType","assign","j","attribute","isDataRowNull","disabledSignOffButton","onContextMenuPrepare","IsDeleted","showCellReferences","getState","checkNewRow","updateSettings","columnSorting","sortEmptyCells","cells","cellProperties","cellProps","getSourceDataAtRow","showFormula","renderer","cellRendererData","afterOnCellMouseDown","event","coords","TD","totalCols","countCols","logicalRow","toPhysicalRow","currentRow","onDeleteRowClicked","afterSelection","row2","column2","preventScrolling","selectionLayerLevel","getSourceDataAtCell","meta","getCellMeta","currentColumn","selectedCell","selectedCellValue","disableFormulaBar","beforeCopy","coord","startRow","endRow","startCol","endCol","afterFilter","conditionsStack","saveState","afterColumnSort","currentSortConfig","destinationSortConfigs","sorting","afterColumnResize","newSize","isDoubleClick","columnResize","setUpCalculatedFieldsFromSatedata","textBoxValueChanged","setDataAtCell","td","renderers","NumericRenderer","visiblerows","rowIndexMapper","getNotTrimmedIndexes","logicalRowNum","getDataAtRow","visibleIndex","x","IsNewRow","cellValue","innerHTML","rowChangeLogData","yearChangeLogData","commentHtml","commentData","div","className","colCount","calculatedFiled","valueProp","currentValue","valueColsIndex","currentValueIndex","findIndex","colStaticColName","getAlphabetFromNo","previousValueIndex","previousValue","colStaticColPreviousValue","replaceValue","COL_PREVIOUS_VALUE","TOTAL_ROWS","countRows","ROW_NO","NO_YEAR","colFormula","formula","replaceAll","numericFormat","pattern","getvisibleRows","visibleRows","filterRows","filterRow","recalculateColumns","onRequestForSignOffClickedEvent","onRequestForSignOffClicked","onRequestForChangeClickedEvent","onRequestForChangeClicked","onDeleteRow","deletedRows","reduce","curr","stored","success","setUpUserState","unlockStudyClickedEvent","onUnlockStudyClicked","onSaveDataClickedEvent","validateCells","valid","onSaveDataClicked","onSignOffClickedEvent","onSignOffClicked","addNewRow","isAddNewRowPopup","createNewRowObj","bindRowFormObjectToHandsontableData","dropdownchange","rowItem","dropDownValue","newRowFormObj","bindDependentDropdown","dependentField","IsDependent","DependingAttributes","dependentItem","dependent","dependentPropertyName","dependentPropertyValue","loadDependentDropdown","isVisibleToAddRow","existingRowData","rowObj","isColumnsData","isEditable","existingColumn","yearsList","columnsList","createForm","getDataEntryDropDown","columnsData","yearDataField","newDataSourceData","toUpperCase","duplicateColumns","checkDuplicateRow","setErrors","duplicate","unshift","stateFiltersTemp","applyStateFilters","visualRow","toVisualRow","moveIndexes","contextMenu","copy","hidden","getActiveEditor","cut","sp","comment_custom","callback","key","selection","clickEvent","currentSelected","getSelectedLast","cellMeta","cellValueProp","cellValuePropObj","cellColYear","selectedCommentCellData","colValue","currentCell","currentRowData","colCaption","viewNotePopup","onCommentBoxHidden","onCommentAdded","allComments","onCommentEmpty","onResetIemClick","itemData","resetCalculatedFields","onCalculatedItemClick","addCalculatedItem","myCols","colStaticColNo","valueColIndex","isFirstCol","nestedHeader","colItem","nestedCol","cols","colObj","newCols","wordWrap","placeholder","isCalculatedField","pop","replaceCellReferences","applyStateSort","applyStateColumnResize","isChangePercent","datasourceRowIndex","reference","regFullReference","RegExp","regColumnReference","str","matchArr","match","columnsDataReferenceCount","yearsDataReferenceCount","yearDataPropCount","matchedReferenceIndex","newReference","getNewReference","replacedMatch","indexPositionInYearsData","newHeaderRow","nestedHeaderRow","s","headersArray","header","afterGetColHeader","TH","cp","afterGetColumnHeaderRenderers","createNewDataEntry","dataRelationData","TableName","saveNewDataEntry","DataRelationId","loadDataEntry","getDataEntryDropDowns","bindDropdownToModel","getDependentDataEntryDropDowns","val","dataItem","dropdownName","ViewId","setState","isDefaultStateMode","deleteState","form","filterPlugins","getPlugin","filterItem","conditions","condition","addCondition","args","operation","columnSortingPlugin","colResize","setManualSize","updatePlugin","addComment","viewStudyComments","closeAddComment","showHelpTextPopup","showHelpText","closeHelpTextPopup","isVisibleToAddRowCount","isAddNewRowVisible","onViewChange","updateViewOnClick","inputs","outputs","hasPendingChanges","CurrencyDropdown","UnitDropdown","DropdownUnits","ctx_r8","ctx_r10","ctx_r15","ctx_r19","ctx_r24","ctx_r17","ctx_r34","ctx_r43","ctx_r44","ctx_r38","ctx_r5","PivotGridPreviewComponent","studySetup","setStudySetup","setMarketYearCategoryId","setCurrentCurrency","setCurrentVolumeUnit","StudyAreaId","unitDropdown","currentCurrencyId","changedCurrency","currencyConversionId","refreshCurrencyInPreview","getCurrencyConversionFactor","conversionfactor","dataRow","currentUnitOfMassId","changedUnitOfMassId","refreshMassUnitInPreview","currentMassUnitId","changedMassUnitId","getVolumeConversionFactor","StudyDataSetId"],"sourceRoot":"webpack:///"}